[   0.000][v][cplayer] Command line options: '--force-window' '/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4'
[   0.000][v][cplayer] mpv v0.40.0 Copyright ¬© 2000-2025 mpv/MPlayer/mplayer2 projects
[   0.000][v][cplayer]  built on Mar 25 2025 23:33:17
[   0.000][v][cplayer] libplacebo version: v7.349.0
[   0.000][v][cplayer] FFmpeg version: n7.1
[   0.000][v][cplayer] FFmpeg library versions:
[   0.000][v][cplayer]    libavcodec      61.19.100
[   0.000][v][cplayer]    libavdevice     61.3.100
[   0.000][v][cplayer]    libavfilter     10.4.100
[   0.000][v][cplayer]    libavformat     61.7.100
[   0.000][v][cplayer]    libavutil       59.39.100
[   0.000][v][cplayer]    libswresample   5.3.100
[   0.000][v][cplayer]    libswscale      8.3.100
[   0.000][v][cplayer] Configuration: -Db_pie=true -Dpython.bytecompile=1 -Dlibmpv=true -Dgl-x11=enabled -Dcaca=disabled -Dcdda=enabled -Ddrm=enabled -Ddvbin=enabled -Ddvdnav=enabled -Dlibarchive=enabled -Dopenal=enabled -Dprefix=/usr -Dlibexecdir=lib -Dsbindir=bin -Dauto_features=auto -Dbuildtype=plain -Dwrap_mode=nodownload
[   0.000][v][cplayer] List of enabled features: alsa build-date cdda cplugins cuda-hwaccel cuda-interop dmabuf-interop-gl dmabuf-wayland drm dvbin dvdnav egl egl-drm egl-wayland egl-x11 ffmpeg ffnvcodec gbm gl gl-x11 glibc-thread-name glob glob-posix gpl iconv jack javascript jpeg lcms2 libarchive libass libavdevice libbluray libdl libplacebo linux-fstatfs luajit memfd-create memrchr openal pipewire posix posix-shm ppoll pthread-condattr-setclock pulse rubberband rubberband-3 sixel uchardet vaapi vaapi-drm vaapi-wayland vaapi-x11 vapoursynth vdpau vdpau-gl-x11 vector vk-khr-display vt.h vulkan wayland wayland-protocols-1-32 wayland-protocols-1-38 wayland-protocols-1-39 wayland-protocols-1-41 x11 xv zimg zimg-st428 zlib
[   0.000][d][global] home path: '' -> '/home/zen/.config/mpv'
[   0.000][d][global] user path: '~~home/' -> '/home/zen/.config/mpv'
[   0.000][d][global] user path: '~~old_home/' -> '/home/zen/.mpv'
[   0.000][d][global] config path: 'encoding-profiles.conf' -/-> '/home/zen/.config/mpv/encoding-profiles.conf'
[   0.000][d][global] config path: 'encoding-profiles.conf' -/-> '/home/zen/.mpv/encoding-profiles.conf'
[   0.000][d][global] config path: 'encoding-profiles.conf' -> '/etc/mpv/encoding-profiles.conf'
[   0.000][v][cplayer] Reading config file /etc/mpv/encoding-profiles.conf
[   0.000][v][ifo_dvdnav] Opening /etc/mpv/encoding-profiles.conf
[   0.000][v][bdmv/bluray] Opening /etc/mpv/encoding-profiles.conf
[   0.000][v][file] Opening /etc/mpv/encoding-profiles.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][cplayer] Applying profile 'default'...
[   0.000][d][global] config path: 'mpv.conf' -> '/home/zen/.config/mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/home/zen/.config/mpv/config'
[   0.000][d][global] config path: 'mpv.conf' -/-> '/home/zen/.mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/home/zen/.mpv/config'
[   0.000][d][global] config path: 'mpv.conf' -/-> '/etc/mpv/mpv.conf'
[   0.000][d][global] config path: 'config' -/-> '/etc/mpv/config'
[   0.000][v][cplayer] Reading config file /home/zen/.config/mpv/mpv.conf
[   0.000][v][ifo_dvdnav] Opening /home/zen/.config/mpv/mpv.conf
[   0.000][v][bdmv/bluray] Opening /home/zen/.config/mpv/mpv.conf
[   0.000][v][file] Opening /home/zen/.config/mpv/mpv.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][cplayer] Applying profile 'default'...
[   0.000][v][cplayer] Setting option 'sub-auto' = 'fuzzy' (flags = 4)
[   0.000][v][cplayer] Setting option 'fullscreen' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'volume-max' = '200' (flags = 4)
[   0.000][v][cplayer] Setting option 'volume' = '180' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-font' = 'Noto Sans CJK JP Thin' (flags = 4)
[   0.000][v][cplayer] Setting option 'slang' = 'Jpn,ja,jp,jpn,jap,Japanese,en,eng,English,en,eng,English' (flags = 4)
[   0.000][v][cplayer] Setting option 'alang' = 'Jpn,ja,jp,jpn,jap,Japanese,en,eng,English' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-blur' = '0.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-font-size' = '36' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-color' = '#FFFFFFFF' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-border-color' = '#FF262626' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-border-size' = '1.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-shadow-offset' = '1' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-shadow-color' = '#33000000' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-spacing' = '0.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-ass-override' = 'force' (flags = 4)
[   0.000][v][cplayer] Setting option 'blend-subtitles' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'vo' = 'gpu-next' (flags = 4)
[   0.000][v][cplayer] Setting option 'gpu-api' = 'vulkan' (flags = 4)
[   0.000][v][cplayer] Setting option 'hwdec' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'title' = '${?pause==yes:‚è∏}${?mute==yes:üîá}${?ontop==yes:üìå}${?demuxer-via-network==yes:${media-title}}${?demuxer-via-network==no:${filename}}' (flags = 4)
[   0.000][v][cplayer] Setting option 'osc' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'title-bar' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'autofit-smaller' = '40%x30%' (flags = 4)
[   0.000][v][cplayer] Setting option 'idle' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'log-file' = '~~/files/mpv.log' (flags = 4)
[   0.000][v][cplayer] Setting option 'ontop' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'snap-window' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'hr-seek' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'hr-seek-framedrop' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'save-position-on-quit' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'write-filename-in-watch-later-config' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'resume-playback-check-mtime' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'watch-later-dir' = '~~/cache/watch_later' (flags = 4)
[   0.000][v][cplayer] Setting option 'watch-later-options' = 'start,vid,aid,sid' (flags = 4)
[   0.000][v][cplayer] Setting option 'reset-on-next-file' = 'vid,aid,sid,secondary-sid,vf,af,loop-file,deinterlace,contrast,brightness,gamma,saturation,hue,video-zoom,video-rotate,video-pan-x,video-pan-y,panscan,speed,audio-delay,sub-pos,sub-scale,sub-delay,sub-speed,sub-visibility,secondary-sub-visibility' (flags = 4)
[   0.000][v][cplayer] Setting option 'input-ipc-server' = '/tmp/mpvsocket' (flags = 4)
[   0.000][v][cplayer] Setting option 'directory-mode' = 'ignore' (flags = 4)
[   0.000][v][cplayer] Setting option 'metadata-codepage' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'msg-level' = 'all=info' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-bar' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-on-seek' = 'msg-bar' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-bar-w' = '100' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-bar-h' = '2' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-bar-align-y' = '-1' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-font' = 'Noto Emoji' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-font-size' = '24' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-color' = '#FFFFFFFF' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-outline-size' = '1.0' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-outline-color' = '#FF000000' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-shadow-offset' = '0.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-shadow-color' = '#FF000000' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-border-style' = 'outline-and-shadow' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-playlist-entry' = 'filename' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-status-msg' = '${playback-time/full} / ${duration/full} (${percent-pos}%)\nframe: ${estimated-frame-number} / ${estimated-frame-count}' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-fractions' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'osd-duration' = '2000' (flags = 4)
[   0.000][v][cplayer] Setting option 'audio-device' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'audio-channels' = '7.1,5.1,stereo' (flags = 4)
[   0.000][v][cplayer] Setting option 'ao' = 'alsa' (flags = 4)
[   0.000][v][cplayer] Setting option 'gapless-audio' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'audio-file-auto' = 'fuzzy' (flags = 4)
[   0.000][v][cplayer] Setting option 'audio-file-paths' = 'audio;audios;**' (flags = 4)
[   0.000][v][cplayer] Setting option 'alang' = 'english,eng,en,german,ger,de,deu,japanese,jpn,jap,ja,jp,chs,sc,zh-CN,zh-Hans,cht,tc,zh-Hant,zh-HK,zh-TW,chi,zho,zh' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-codepage' = 'gb18030' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-auto' = 'fuzzy' (flags = 4)
[   0.000][v][cplayer] Setting option 'sub-file-paths' = '**' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-format' = 'webp' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-webp-quality' = '85' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-webp-compression' = '6' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-tag-colorspace' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'screenshot-template' = '~~/files/screen/%{media-title}-%P-%n' (flags = 4)
[   0.000][v][cplayer] Setting option 'gpu-shader-cache-dir' = '~~/cache/shaders_cache' (flags = 4)
[   0.000][v][cplayer] Setting option 'input-default-bindings' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'libplacebo-opts' = 'tone_map_metadata=cie_y' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'Target' (flags = 4)
[   0.000][v][cplayer] Applying profile 'Target'...
[   0.000][v][cplayer] Setting option 'icc-profile' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'icc-profile-auto' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'target-prim' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'target-trc' = 'gamma2.2' (flags = 4)
[   0.000][v][cplayer] Setting option 'target-contrast' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'target-peak' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'Dither' (flags = 4)
[   0.000][v][cplayer] Applying profile 'Dither'...
[   0.000][v][cplayer] Setting option 'dither-depth' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'dither' = 'fruit' (flags = 4)
[   0.000][v][cplayer] Setting option 'dither-size-fruit' = '6' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'Tscale' (flags = 4)
[   0.000][v][cplayer] Applying profile 'Tscale'...
[   0.000][v][cplayer] Setting option 'video-sync' = 'display-resample' (flags = 4)
[   0.000][v][cplayer] Setting option 'interpolation' = '' (flags = 4)
[   0.000][v][cplayer] Setting option 'tscale' = 'oversample' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'HQ' (flags = 4)
[   0.000][v][cplayer] Applying profile 'HQ'...
[   0.000][v][cplayer] Setting option 'scale' = 'ewa_hanning' (flags = 4)
[   0.000][v][cplayer] Setting option 'cscale' = 'bilinear' (flags = 4)
[   0.000][v][cplayer] Setting option 'dscale' = 'catmull_rom' (flags = 4)
[   0.000][v][cplayer] Setting option 'scale-antiring' = '0.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'dscale-antiring' = '0.5' (flags = 4)
[   0.000][v][cplayer] Setting option 'linear-upscaling' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'sigmoid-upscaling' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'correct-downscaling' = 'yes' (flags = 4)
[   0.000][v][cplayer] Setting option 'linear-downscaling' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'deband' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'DeBand-low' (flags = 4)
[   0.000][v][cplayer] Applying profile 'DeBand-low'...
[   0.000][v][cplayer] Setting option 'deband-iterations' = '1' (flags = 4)
[   0.000][v][cplayer] Setting option 'deband-threshold' = '48' (flags = 4)
[   0.000][v][cplayer] Setting option 'deband-range' = '16' (flags = 4)
[   0.000][v][cplayer] Setting option 'deband-grain' = '16' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'HDR2SDR' (flags = 4)
[   0.000][v][cplayer] Applying profile 'HDR2SDR'...
[   0.000][v][cplayer] Setting option 'target-colorspace-hint' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'tone-mapping' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'gamut-mapping-mode' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-contrast-recovery' = '0.30' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-compute-peak' = 'auto' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-peak-percentile' = '99.995' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-peak-decay-rate' = '20' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-scene-threshold-low' = '1.0' (flags = 4)
[   0.000][v][cplayer] Setting option 'hdr-scene-threshold-high' = '3.0' (flags = 4)
[   0.000][v][cplayer] Setting option 'allow-delayed-peak-detect' = 'no' (flags = 4)
[   0.000][v][cplayer] Setting option 'profile' = 'AMD-FSR_EASU' (flags = 4)
[   0.000][v][cplayer] Applying profile 'AMD-FSR_EASU'...
[   0.000][v][cplayer] Setting option 'glsl-shaders' = '~~/shaders/igv/KrigBilateral.glsl:~~/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl:~~/shaders/igv/SSimDownscaler.glsl' (flags = 4)
[   0.000][v][cplayer] Setting option 'force-window' = '' (flags = 8)
[   0.000][d][global] config path: 'input.conf' -> '/home/zen/.config/mpv/input.conf'
[   0.000][d][global] config path: 'input.conf' -/-> '/home/zen/.mpv/input.conf'
[   0.000][d][global] config path: 'input.conf' -/-> '/etc/mpv/input.conf'
[   0.000][v][ifo_dvdnav] Opening /home/zen/.config/mpv/input.conf
[   0.000][v][bdmv/bluray] Opening /home/zen/.config/mpv/input.conf
[   0.000][v][file] Opening /home/zen/.config/mpv/input.conf
[   0.000][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.000][d][file] Stream opened successfully.
[   0.000][v][input] Parsing input config file /home/zen/.config/mpv/input.conf
[   0.000][v][input] Input config file /home/zen/.config/mpv/input.conf parsed: 228 binds
[   0.000][d][global] config path: 'files/mpv.log' -> '/home/zen/.config/mpv/files/mpv.log'
[   0.000][d][global] user path: '~~/files/mpv.log' -> '/home/zen/.config/mpv/files/mpv.log'
[   0.005][v][cplayer] mpv v0.40.0 Copyright ¬© 2000-2025 mpv/MPlayer/mplayer2 projects
[   0.005][v][cplayer]  built on Mar 25 2025 23:33:17
[   0.005][v][cplayer] libplacebo version: v7.349.0
[   0.005][v][cplayer] FFmpeg version: n7.1
[   0.005][v][cplayer] FFmpeg library versions:
[   0.005][v][cplayer]    libavcodec      61.19.100
[   0.005][v][cplayer]    libavdevice     61.3.100
[   0.005][v][cplayer]    libavfilter     10.4.100
[   0.005][v][cplayer]    libavformat     61.7.100
[   0.005][v][cplayer]    libavutil       59.39.100
[   0.005][v][cplayer]    libswresample   5.3.100
[   0.005][v][cplayer]    libswscale      8.3.100
[   0.005][v][cplayer] Configuration: -Db_pie=true -Dpython.bytecompile=1 -Dlibmpv=true -Dgl-x11=enabled -Dcaca=disabled -Dcdda=enabled -Ddrm=enabled -Ddvbin=enabled -Ddvdnav=enabled -Dlibarchive=enabled -Dopenal=enabled -Dprefix=/usr -Dlibexecdir=lib -Dsbindir=bin -Dauto_features=auto -Dbuildtype=plain -Dwrap_mode=nodownload
[   0.005][v][cplayer] List of enabled features: alsa build-date cdda cplugins cuda-hwaccel cuda-interop dmabuf-interop-gl dmabuf-wayland drm dvbin dvdnav egl egl-drm egl-wayland egl-x11 ffmpeg ffnvcodec gbm gl gl-x11 glibc-thread-name glob glob-posix gpl iconv jack javascript jpeg lcms2 libarchive libass libavdevice libbluray libdl libplacebo linux-fstatfs luajit memfd-create memrchr openal pipewire posix posix-shm ppoll pthread-condattr-setclock pulse rubberband rubberband-3 sixel uchardet vaapi vaapi-drm vaapi-wayland vaapi-x11 vapoursynth vdpau vdpau-gl-x11 vector vk-khr-display vt.h vulkan wayland wayland-protocols-1-32 wayland-protocols-1-38 wayland-protocols-1-39 wayland-protocols-1-41 x11 xv zimg zimg-st428 zlib
[   0.005][d][ytdl_hook] Loading lua script @ytdl_hook.lua...
[   0.005][d][stats] Loading lua script @stats.lua...
[   0.005][d][console] Loading lua script @console.lua...
[   0.005][d][auto_profiles] Loading lua script @auto_profiles.lua...
[   0.005][d][select] Loading lua script @select.lua...
[   0.005][d][ytdl_hook] loading mp.defaults
[   0.005][d][stats] loading mp.defaults
[   0.005][d][positioning] Loading lua script @positioning.lua...
[   0.005][d][console] loading mp.defaults
[   0.006][d][commands] Loading lua script @commands.lua...
[   0.006][d][auto_profiles] loading mp.defaults
[   0.006][d][select] loading mp.defaults
[   0.007][d][positioning] loading mp.defaults
[   0.007][d][commands] loading mp.defaults
[   0.007][v][clipboard/wayland] Registered interface wl_seat at version 8
[   0.007][v][clipboard/wayland] Compositor doesn't support the ext_data_control_manager_v1 protocol!
[   0.007][v][clipboard/wayland] Deregistering seat 0x1
[   0.007][v][clipboard] Initialized vo clipboard backend.
[   0.007][d][global] config path: 'scripts' -> '/home/zen/.config/mpv/scripts'
[   0.007][d][global] config path: 'scripts' -/-> '/home/zen/.mpv/scripts'
[   0.007][d][global] config path: 'scripts' -> '/etc/mpv/scripts'
[   0.007][d][mpris] Loading cplugin script /etc/mpv/scripts/mpris.so...
[   0.007][d][ytdl_hook] loading @ytdl_hook.lua
[   0.007][d][stats] loading @stats.lua
[   0.007][v][ipc] Starting IPC master
[   0.007][d][auto_profiles] loading @auto_profiles.lua
[   0.007][v][ipc] Listening to IPC socket.
[   0.007][d][console] loading @console.lua
[   0.007][d][select] loading @select.lua
[   0.007][d][positioning] loading @positioning.lua
[   0.007][d][commands] loading @commands.lua
[   0.007][d][positioning] reading options for positioning
[   0.007][d][global] config path: 'script-opts/positioning.conf' -/-> '/home/zen/.config/mpv/script-opts/positioning.conf'
[   0.007][d][global] config path: 'script-opts/positioning.conf' -/-> '/home/zen/.mpv/script-opts/positioning.conf'
[   0.007][d][global] config path: 'script-opts/positioning.conf' -/-> '/etc/mpv/script-opts/positioning.conf'
[   0.007][d][positioning] script-opts/positioning.conf not found.
[   0.007][d][global] config path: 'lua-settings/positioning.conf' -/-> '/home/zen/.config/mpv/lua-settings/positioning.conf'
[   0.007][d][global] config path: 'lua-settings/positioning.conf' -/-> '/home/zen/.mpv/lua-settings/positioning.conf'
[   0.007][d][global] config path: 'lua-settings/positioning.conf' -/-> '/etc/mpv/lua-settings/positioning.conf'
[   0.007][d][positioning] lua-settings/positioning.conf not found.
[   0.007][d][fuzzydir] Loading lua script /home/zen/.config/mpv/scripts/fuzzydir.lua...
[   0.007][d][select] reading options for select
[   0.007][d][global] config path: 'script-opts/select.conf' -> '/home/zen/.config/mpv/script-opts/select.conf'
[   0.007][v][select] Opened config file script-opts/select.conf.
[   0.007][d][ytdl_hook] reading options for ytdl_hook
[   0.007][d][global] config path: 'script-opts/ytdl_hook.conf' -> '/home/zen/.config/mpv/script-opts/ytdl_hook.conf'
[   0.007][v][ytdl_hook] Opened config file script-opts/ytdl_hook.conf.
[   0.008][d][simplehistory] Loading lua script /home/zen/.config/mpv/scripts/simplehistory.lua...
[   0.008][d][evafast] Loading lua script /home/zen/.config/mpv/scripts/evafast.lua...
[   0.008][d][fuzzydir] loading mp.defaults
[   0.008][d][command_palette] Loading lua script /home/zen/.config/mpv/scripts/command_palette.lua...
[   0.008][d][playlistmanager] Loading lua script /home/zen/.config/mpv/scripts/playlistmanager.lua...
[   0.008][d][simplehistory] loading mp.defaults
[   0.008][d][stats] reading options for stats
[   0.008][d][evafast] loading mp.defaults
[   0.008][d][delete_current_file] Loading lua script /home/zen/.config/mpv/scripts/delete-current-file.lua...
[   0.008][d][global] config path: 'script-opts/stats.conf' -> '/home/zen/.config/mpv/script-opts/stats.conf'
[   0.008][v][stats] Opened config file script-opts/stats.conf.
[   0.008][d][command_palette] loading mp.defaults
[   0.009][d][autosubsync] Loading lua script /home/zen/.config/mpv/scripts/autosubsync/main.lua...
[   0.009][d][persist_properties] Loading lua script /home/zen/.config/mpv/scripts/persist_properties.lua...
[   0.009][d][playlistmanager] loading mp.defaults
[   0.009][d][blacklist_extensions] Loading lua script /home/zen/.config/mpv/scripts/blacklist-extensions.lua...
[   0.009][d][chapter_make_read] Loading lua script /home/zen/.config/mpv/scripts/chapter-make-read.lua...
[   0.009][d][delete_current_file] loading mp.defaults
[   0.009][d][manager] Loading lua script /home/zen/.config/mpv/scripts/manager.lua...
[   0.009][d][blacklist_extensions] loading mp.defaults
[   0.009][d][command_palette] loading file /home/zen/.config/mpv/scripts/command_palette.lua
[   0.009][d][autosubsync] loading mp.defaults
[   0.009][d][evafast] loading file /home/zen/.config/mpv/scripts/evafast.lua
[   0.009][d][chapter_make_read] loading mp.defaults
[   0.009][d][fuzzydir] loading file /home/zen/.config/mpv/scripts/fuzzydir.lua
[   0.009][d][playlistmanager] loading file /home/zen/.config/mpv/scripts/playlistmanager.lua
[   0.009][d][open_dialog] Loading lua script /home/zen/.config/mpv/scripts/open_dialog.lua...
[   0.009][d][simplehistory] loading file /home/zen/.config/mpv/scripts/simplehistory.lua
[   0.009][d][persist_properties] loading mp.defaults
[   0.009][d][thumbfast] Loading lua script /home/zen/.config/mpv/scripts/thumbfast.lua...
[   0.009][d][evafast] reading options for evafast
[   0.009][d][global] config path: 'script-opts/evafast.conf' -> '/home/zen/.config/mpv/script-opts/evafast.conf'
[   0.009][d][blacklist_extensions] loading file /home/zen/.config/mpv/scripts/blacklist-extensions.lua
[   0.009][v][evafast] Opened config file script-opts/evafast.conf.
[   0.009][d][chapter_make_read] loading file /home/zen/.config/mpv/scripts/chapter-make-read.lua
[   0.009][d][manager] loading mp.defaults
[   0.009][d][autosubsync] loading file /home/zen/.config/mpv/scripts/autosubsync/main.lua
[   0.009][d][fuzzydir] reading options for fuzzydir
[   0.009][d][blacklist_extensions] reading options for blacklist_extensions
[   0.009][d][global] config path: 'script-opts/fuzzydir.conf' -> '/home/zen/.config/mpv/script-opts/fuzzydir.conf'
[   0.009][d][global] config path: 'script-opts/blacklist_extensions.conf' -> '/home/zen/.config/mpv/script-opts/blacklist_extensions.conf'
[   0.009][v][fuzzydir] Opened config file script-opts/fuzzydir.conf.
[   0.009][v][blacklist_extensions] Opened config file script-opts/blacklist_extensions.conf.
[   0.010][d][chapterskip] Loading lua script /home/zen/.config/mpv/scripts/chapterskip.lua...
[   0.010][d][mpv_torrserver] Loading lua script /home/zen/.config/mpv/scripts/mpv-torrserver.lua...
[   0.010][d][open_dialog] loading mp.defaults
[   0.010][d][manager] loading file /home/zen/.config/mpv/scripts/manager.lua
[   0.010][d][chapterskip] loading mp.defaults
[   0.010][d][delete_current_file] loading file /home/zen/.config/mpv/scripts/delete-current-file.lua
[   0.010][d][chapterskip] loading file /home/zen/.config/mpv/scripts/chapterskip.lua
[   0.010][d][mpv_torrserver] loading mp.defaults
[   0.010][d][open_dialog] loading file /home/zen/.config/mpv/scripts/open_dialog.lua
[   0.011][d][autoload] Loading lua script /home/zen/.config/mpv/scripts/autoload.lua...
[   0.011][d][persist_properties] loading file /home/zen/.config/mpv/scripts/persist_properties.lua
[   0.011][d][auto_save_state] Loading lua script /home/zen/.config/mpv/scripts/auto-save-state.lua...
[   0.011][d][smartcopypaste_II] Loading lua script /home/zen/.config/mpv/scripts/smartcopypaste_II.lua...
[   0.012][d][display_name] Loading lua script /home/zen/.config/mpv/scripts/display-name.lua...
[   0.012][d][autoload] loading mp.defaults
[   0.012][d][open_dialog] reading options for open_dialog
[   0.012][d][inputevent] Loading lua script /home/zen/.config/mpv/scripts/inputevent.lua...
[   0.012][d][global] config path: 'script-opts/open_dialog.conf' -> '/home/zen/.config/mpv/script-opts/open_dialog.conf'
[   0.012][v][open_dialog] Opened config file script-opts/open_dialog.conf.
[   0.012][d][quality_menu] Loading lua script /home/zen/.config/mpv/scripts/quality-menu.lua...
[   0.012][d][chapter_make_read] reading options for chapter_make_read
[   0.012][d][global] config path: 'script-opts/chapter_make_read.conf' -> '/home/zen/.config/mpv/script-opts/chapter_make_read.conf'
[   0.012][d][skiptosilence] Loading lua script /home/zen/.config/mpv/scripts/skiptosilence.lua...
[   0.012][v][chapter_make_read] Opened config file script-opts/chapter_make_read.conf.
[   0.012][d][auto_save_state] loading mp.defaults
[   0.012][d][persist_properties] reading options for persist_properties
[   0.012][d][global] config path: 'script-opts/persist_properties.conf' -> '/home/zen/.config/mpv/script-opts/persist_properties.conf'
[   0.012][v][persist_properties] Opened config file script-opts/persist_properties.conf.
[   0.012][d][display_name] loading mp.defaults
[   0.012][d][thumbfast] loading mp.defaults
[   0.012][d][mpv_torrserver] loading file /home/zen/.config/mpv/scripts/mpv-torrserver.lua
[   0.012][d][autosubsync] reading options for autosubsync
[   0.012][d][global] config path: 'script-opts/autosubsync.conf' -> '/home/zen/.config/mpv/script-opts/autosubsync.conf'
[   0.012][v][autosubsync] Opened config file script-opts/autosubsync.conf.
[   0.012][d][uosc] Loading lua script /home/zen/.config/mpv/scripts/uosc/main.lua...
[   0.012][d][playlistmanager] reading options for playlistmanager
[   0.012][d][global] config path: 'script-opts/playlistmanager.conf' -> '/home/zen/.config/mpv/script-opts/playlistmanager.conf'
[   0.012][v][playlistmanager] Opened config file script-opts/playlistmanager.conf.
[   0.012][d][inputevent] loading mp.defaults
[   0.012][d][quality_menu] loading mp.defaults
[   0.012][d][simplebookmark] Loading lua script /home/zen/.config/mpv/scripts/simplebookmark.lua...
[   0.012][d][slicing_copy] Loading lua script /home/zen/.config/mpv/scripts/slicing_copy.lua...
[   0.012][d][smartcopypaste_II] loading mp.defaults
[   0.012][d][sub_fastwhisper] Loading lua script /home/zen/.config/mpv/scripts/sub-fastwhisper.lua...
[   0.012][d][undoredo] Loading lua script /home/zen/.config/mpv/scripts/undoredo.lua...
[   0.012][d][autoload] loading file /home/zen/.config/mpv/scripts/autoload.lua
[   0.013][d][trakt_scrobble] Loading lua script /home/zen/.config/mpv/scripts/trakt-scrobble/main.lua...
[   0.013][d][mpv_animated] Loading lua script /home/zen/.config/mpv/scripts/mpv-animated.lua...
[   0.013][d][recentmenu] Loading lua script /home/zen/.config/mpv/scripts/recentmenu.lua...
[   0.013][d][undoredo] loading mp.defaults
[   0.013][d][mpv_torrserver] reading options for mpv_torrserver
[   0.013][d][global] config path: 'script-opts/mpv_torrserver.conf' -> '/home/zen/.config/mpv/script-opts/mpv_torrserver.conf'
[   0.013][d][auto_save_state] loading file /home/zen/.config/mpv/scripts/auto-save-state.lua
[   0.013][v][mpv_torrserver] Opened config file script-opts/mpv_torrserver.conf.
[   0.013][d][uosc] loading mp.defaults
[   0.013][d][mpv_animated] loading mp.defaults
[   0.013][d][sub_fastwhisper] loading mp.defaults
[   0.013][d][auto_save_state] reading options for auto_save_state
[   0.013][d][trakt_scrobble] loading mp.defaults
[   0.013][d][skiptosilence] loading mp.defaults
[   0.013][d][global] config path: 'script-opts/auto_save_state.conf' -> '/home/zen/.config/mpv/script-opts/auto_save_state.conf'
[   0.013][d][uosc] loading file /home/zen/.config/mpv/scripts/uosc/main.lua
[   0.013][v][auto_save_state] Opened config file script-opts/auto_save_state.conf.
[   0.013][d][autoload] reading options for autoload
[   0.013][d][global] config path: 'script-opts/autoload.conf' -> '/home/zen/.config/mpv/script-opts/autoload.conf'
[   0.013][v][autoload] Opened config file script-opts/autoload.conf.
[   0.013][d][mpv_animated] loading file /home/zen/.config/mpv/scripts/mpv-animated.lua
[   0.013][d][command_palette] reading options for command_palette
[   0.013][d][quality_menu] loading file /home/zen/.config/mpv/scripts/quality-menu.lua
[   0.014][d][global] config path: 'script-opts/command_palette.conf' -> '/home/zen/.config/mpv/script-opts/command_palette.conf'
[   0.014][v][command_palette] Opened config file script-opts/command_palette.conf.
[   0.014][d][slicing_copy] loading mp.defaults
[   0.014][d][recentmenu] loading mp.defaults
[   0.014][d][sub_fastwhisper] loading file /home/zen/.config/mpv/scripts/sub-fastwhisper.lua
[   0.014][d][thumbfast] loading file /home/zen/.config/mpv/scripts/thumbfast.lua
[   0.014][d][smartcopypaste_II] loading file /home/zen/.config/mpv/scripts/smartcopypaste_II.lua
[   0.014][d][inputevent] loading file /home/zen/.config/mpv/scripts/inputevent.lua
[   0.014][d][skiptosilence] loading file /home/zen/.config/mpv/scripts/skiptosilence.lua
[   0.014][d][trakt_scrobble] loading file /home/zen/.config/mpv/scripts/trakt-scrobble/main.lua
[   0.014][d][undoredo] loading file /home/zen/.config/mpv/scripts/undoredo.lua
[   0.014][d][mpv_animated] reading options for mpv_animated
[   0.014][d][display_name] loading file /home/zen/.config/mpv/scripts/display-name.lua
[   0.014][d][global] config path: 'script-opts/mpv_animated.conf' -> '/home/zen/.config/mpv/script-opts/mpv_animated.conf'
[   0.014][v][mpv_animated] Opened config file script-opts/mpv_animated.conf.
[   0.014][d][simplehistory] reading options for simplehistory
[   0.014][d][global] config path: 'script-opts/simplehistory.conf' -> '/home/zen/.config/mpv/script-opts/simplehistory.conf'
[   0.014][v][simplehistory] Opened config file script-opts/simplehistory.conf.
[   0.014][d][simplebookmark] loading mp.defaults
[   0.014][d][cycle_commands] Loading lua script /home/zen/.config/mpv/scripts/cycle-commands.lua...
[   0.014][v][cplayer] Waiting for scripts...
[   0.014][d][slicing_copy] loading file /home/zen/.config/mpv/scripts/slicing_copy.lua
[   0.014][d][recentmenu] loading file /home/zen/.config/mpv/scripts/recentmenu.lua
[   0.015][d][commands] reading options for commands
[   0.015][d][global] config path: 'script-opts/commands.conf' -/-> '/home/zen/.config/mpv/script-opts/commands.conf'
[   0.015][d][global] config path: 'script-opts/commands.conf' -/-> '/home/zen/.mpv/script-opts/commands.conf'
[   0.015][d][global] config path: 'script-opts/commands.conf' -/-> '/etc/mpv/script-opts/commands.conf'
[   0.015][d][commands] script-opts/commands.conf not found.
[   0.015][d][global] config path: 'lua-settings/commands.conf' -/-> '/home/zen/.config/mpv/lua-settings/commands.conf'
[   0.015][d][global] config path: 'lua-settings/commands.conf' -/-> '/home/zen/.mpv/lua-settings/commands.conf'
[   0.015][d][global] config path: 'lua-settings/commands.conf' -/-> '/etc/mpv/lua-settings/commands.conf'
[   0.015][d][commands] lua-settings/commands.conf not found.
[   0.016][d][global] config path: 'files/chapters' -> '/home/zen/.config/mpv/files/chapters'
[   0.016][d][global] user path: '~~/files/chapters' -> '/home/zen/.config/mpv/files/chapters'
[   0.016][d][fuzzydir] PowerShell version -1
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_manager", contents="", flags="default"]
[   0.016][d][cplayer] Run command: enable-section, flags=64, args=[name="input_manager", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_manager", contents="", flags="force"]
[   0.016][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_manager", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.016][d][sub_fastwhisper] reading options for sub_fastwhisper
[   0.016][d][global] config path: 'script-opts/sub_fastwhisper.conf' -> '/home/zen/.config/mpv/script-opts/sub_fastwhisper.conf'
[   0.016][v][sub_fastwhisper] Opened config file script-opts/sub_fastwhisper.conf.
[   0.016][d][global] config path: '.' -> '/home/zen/.config/mpv/.'
[   0.016][d][global] config path: 'files/animated' -> '/home/zen/.config/mpv/files/animated'
[   0.016][d][global] user path: '~~/files/animated' -> '/home/zen/.config/mpv/files/animated'
[   0.016][d][simplebookmark] loading file /home/zen/.config/mpv/scripts/simplebookmark.lua
[   0.016][d][skiptosilence] reading options for skiptosilence
[   0.016][d][global] config path: 'script-opts/skiptosilence.conf' -> '/home/zen/.config/mpv/script-opts/skiptosilence.conf'
[   0.016][v][skiptosilence] Opened config file script-opts/skiptosilence.conf.
[   0.016][d][thumbfast] reading options for thumbfast
[   0.016][d][global] config path: 'script-opts/thumbfast.conf' -> '/home/zen/.config/mpv/script-opts/thumbfast.conf'
[   0.016][v][thumbfast] Opened config file script-opts/thumbfast.conf.
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_mpv_animated", contents="w nonscalable script-binding mpv_animated/set_animated_start\nW nonscalable script-binding mpv_animated/set_animated_end\nCtrl+w nonscalable script-binding mpv_animated/make_animated\nCtrl+W nonscalable script-binding mpv_animated/make_animated_with_subtitles\n", flags="default"]
[   0.016][d][slicing_copy] reading options for slicing_copy
[   0.016][d][global] config path: 'script-opts/slicing_copy.conf' -> '/home/zen/.config/mpv/script-opts/slicing_copy.conf'
[   0.016][v][slicing_copy] Opened config file script-opts/slicing_copy.conf.
[   0.016][d][trakt_scrobble] reading options for trakt_scrobble
[   0.016][d][global] config path: 'script-opts/trakt_scrobble.conf' -> '/home/zen/.config/mpv/script-opts/trakt_scrobble.conf'
[   0.016][v][trakt_scrobble] Opened config file script-opts/trakt_scrobble.conf.
[   0.016][d][inputevent] reading options for inputevent
[   0.016][d][cplayer] Run command: enable-section, flags=64, args=[name="input_mpv_animated", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.016][d][chapterskip] reading options for chapterskip
[   0.016][d][global] config path: 'script-opts/chapterskip.conf' -> '/home/zen/.config/mpv/script-opts/chapterskip.conf'
[   0.016][v][chapterskip] Opened config file script-opts/chapterskip.conf.
[   0.016][d][console] reading options for console
[   0.016][d][global] config path: 'script-opts/console.conf' -> '/home/zen/.config/mpv/script-opts/console.conf'
[   0.016][v][console] Opened config file script-opts/console.conf.
[   0.016][d][global] config path: 'script-opts/inputevent.conf' -> '/home/zen/.config/mpv/script-opts/inputevent.conf'
[   0.016][v][inputevent] Opened config file script-opts/inputevent.conf.
[   0.016][w][console] script-opts/console.conf:31 unknown key 'persist_history', ignoring
[   0.016][w][console] script-opts/console.conf:33 unknown key 'history_path', ignoring
[   0.016][d][cycle_commands] loading mp.defaults
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_undoredo", contents="ctrl+z nonscalable script-binding undoredo/undo\nctrl+Z nonscalable script-binding undoredo/undoCaps\nctrl+y nonscalable script-binding undoredo/redo\nctrl+Y nonscalable script-binding undoredo/redoCaps\nctrl+alt+z nonscalable script-binding undoredo/undoLoop\nctrl+alt+Z nonscalable script-binding undoredo/undoLoopCaps\n", flags="default"]
[   0.016][d][cplayer] Run command: define-section, flags=64, args=[name="input_commands", contents="", flags="default"]
[   0.016][d][recentmenu] reading options for recentmenu
[   0.016][d][global] config path: 'script-opts/recentmenu.conf' -> '/home/zen/.config/mpv/script-opts/recentmenu.conf'
[   0.016][v][recentmenu] Opened config file script-opts/recentmenu.conf.
[   0.017][d][quality_menu] reading options for quality-menu
[   0.017][d][global] config path: 'script-opts/quality-menu.conf' -> '/home/zen/.config/mpv/script-opts/quality-menu.conf'
[   0.017][v][quality_menu] Opened config file script-opts/quality-menu.conf.
[   0.017][d][cycle_commands] loading file /home/zen/.config/mpv/scripts/cycle-commands.lua
[   0.017][v][cplayer] Set property: volume=184 -> 1
[   0.017][d][cplayer] Run command: define-section, flags=64, args=[name="input_skiptosilence", contents="", flags="default"]
[   0.017][d][cplayer] Run command: script-message, flags=64, args=[args="command-palette-version", args="1"]
[   0.017][d][global] config path: 'files/cutfragments' -> '/home/zen/.config/mpv/files/cutfragments'
[   0.017][d][global] user path: '~~/files/cutfragments' -> '/home/zen/.config/mpv/files/cutfragments'
[   0.017][d][cplayer] Run command: enable-section, flags=64, args=[name="input_undoredo", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.017][d][cplayer] Run command: define-section, flags=64, args=[name="input_select", contents="", flags="default"]
[   0.017][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_mpv_animated", contents="", flags="force"]
[   0.018][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="get-version", args="evafast"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_autosubsync", contents="n nonscalable script-binding autosubsync/autosubsync-menu\n", flags="default"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_stats", contents="", flags="default"]
[   0.018][d][cplayer] Run command: script-message, flags=64, args=[args="uosc-version", args="5.8.0"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_autosubsync", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_undoredo", contents="", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_commands", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][global] config path: 'files/trakt_history.json' -/-> '/home/zen/.config/mpv/files/trakt_history.json'
[   0.018][d][global] config path: 'files/trakt_history.json' -/-> '/home/zen/.mpv/files/trakt_history.json'
[   0.018][d][global] config path: 'files/trakt_history.json' -/-> '/etc/mpv/files/trakt_history.json'
[   0.018][d][global] user path: '~~/files/trakt_history.json' -> '/home/zen/.config/mpv/files/trakt_history.json'
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_console", contents="", flags="default"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_evafast", contents="RIGHT nonscalable script-binding evafast/evafast\n", flags="default"]
[   0.018][v][cplayer] Set property: user-data/display_name="" -> 1
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_stats", contents="", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_mpv_animated", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_evafast", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_stats", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][v][cplayer] Set property: user-data/simplehistory/menu-open="no" -> 1
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_evafast", contents="", flags="force"]
[   0.018][d][global] config path: '.' -> '/home/zen/.config/mpv/.'
[   0.018][v][cplayer] Set property: osc="no" -> 1
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_undoredo", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_commands", contents="", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_skiptosilence", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_skiptosilence", contents="", flags="force"]
[   0.018][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_skiptosilence", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_console", contents="", flags="force"]
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_autosubsync", contents="", flags="force"]
[   0.018][d][global] config path: 'input.conf' -> '/home/zen/.config/mpv/input.conf'
[   0.018][d][global] user path: '~~/input.conf' -> '/home/zen/.config/mpv/input.conf'
[   0.018][d][global] config path: 'files/recent.json' -> '/home/zen/.config/mpv/files/recent.json'
[   0.018][d][global] user path: '~~/files/recent.json' -> '/home/zen/.config/mpv/files/recent.json'
[   0.018][d][cplayer] Run command: define-section, flags=64, args=[name="input_positioning", contents="", flags="default"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_select", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_console", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplehistory", contents="", flags="default"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_commands", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][global] config path: 'inputevent_key.conf' -> '/home/zen/.config/mpv/inputevent_key.conf'
[   0.019][d][global] user path: '~~/inputevent_key.conf' -> '/home/zen/.config/mpv/inputevent_key.conf'
[   0.019][d][simplebookmark] reading options for simplebookmark
[   0.019][d][global] config path: 'files/cutfragments' -> '/home/zen/.config/mpv/files/cutfragments'
[   0.019][d][global] user path: '~~/files/cutfragments' -> '/home/zen/.config/mpv/files/cutfragments'
[   0.019][d][global] config path: 'script-opts/simplebookmark.conf' -> '/home/zen/.config/mpv/script-opts/simplebookmark.conf'
[   0.019][v][simplebookmark] Opened config file script-opts/simplebookmark.conf.
[   0.019][v][cplayer] Set property: user-data/command-palette/version=1 -> 1
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_recentmenu", contents="", flags="default"]
[   0.019][d][smartcopypaste_II] reading options for smartcopypaste_II
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][global] config path: 'script-opts/smartcopypaste_II.conf' -> '/home/zen/.config/mpv/script-opts/smartcopypaste_II.conf'
[   0.019][v][smartcopypaste_II] Opened config file script-opts/smartcopypaste_II.conf.
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_select", contents="", flags="force"]
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplehistory", contents="", flags="force"]
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_slicing_copy", contents="c nonscalable script-binding slicing_copy/slicing_mark\na nonscalable script-binding slicing_copy/slicing_audio\nC nonscalable script-binding slicing_copy/clear_slicing_mark\n", flags="default"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_select", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_autosubsync", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_slicing_copy", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_recentmenu", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_slicing_copy", contents="", flags="force"]
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_slicing_copy", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_recentmenu", contents="", flags="force"]
[   0.019][v][playlistmanager] updating options
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_evafast", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][d][global] config path: 'script-modules/?.lua;' -/-> '/home/zen/.config/mpv/script-modules/?.lua;'
[   0.019][d][global] config path: 'script-modules/?.lua;' -/-> '/home/zen/.mpv/script-modules/?.lua;'
[   0.019][d][global] config path: 'script-modules/?.lua;' -/-> '/etc/mpv/script-modules/?.lua;'
[   0.019][d][global] user path: '~~/script-modules/?.lua;' -> '/home/zen/.config/mpv/script-modules/?.lua;'
[   0.019][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_recentmenu", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.019][v][cplayer] Set property: user-data/simplebookmark/menu-open="no" -> 1
[   0.019][d][global] config path: '.' -> '/home/zen/.config/mpv/.'
[   0.019][d][uosc] reading options for uosc
[   0.019][d][global] config path: 'script-opts/uosc.conf' -> '/home/zen/.config/mpv/script-opts/uosc.conf'
[   0.019][v][uosc] Opened config file script-opts/uosc.conf.
[   0.020][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="get-version", args="quality_menu"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_playlistmanager", contents="", flags="default"]
[   0.020][v][cplayer] Set property: user-data/smartcopypaste/menu-open="no" -> 1
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_playlistmanager", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][global] config path: '.' -> '/home/zen/.config/mpv/.'
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_positioning", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplebookmark", contents="", flags="default"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_positioning", contents="", flags="force"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_playlistmanager", contents="", flags="force"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_positioning", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_playlistmanager", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="vformats", args="0"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplebookmark", contents="", flags="force"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="aformats", args="0"]
[   0.020][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="overwrite-binding", args="stream-quality", args="script-binding quality_menu/video_formats_toggle"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_quality_menu", contents="", flags="default"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_quality_menu", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_inputevent", contents="", flags="default"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_quality_menu", contents="", flags="force"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_quality_menu", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_inputevent", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.020][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_inputevent", contents="PGDWN nonscalable script-binding inputevent/PGDWN\nTAB nonscalable script-binding inputevent/TAB\nRIGHT nonscalable script-binding inputevent/RIGHT\nMBTN_LEFT nonscalable script-binding inputevent/MBTN_LEFT\nSPACE nonscalable script-binding inputevent/SPACE\nPGUP nonscalable script-binding inputevent/PGUP\n", flags="force"]
[   0.020][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_inputevent", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.021][d][cplayer] Run command: define-section, flags=64, args=[name="input_inputevent", contents="", flags="default"]
[   0.021][d][cplayer] Run command: enable-section, flags=64, args=[name="input_inputevent", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.021][v][auto_profiles] Re-evaluating auto profile media-title
[   0.021][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_inputevent", contents="PGDWN nonscalable script-binding inputevent/PGDWN\nTAB nonscalable script-binding inputevent/TAB\nRIGHT nonscalable script-binding inputevent/RIGHT\nMBTN_LEFT nonscalable script-binding inputevent/MBTN_LEFT\nSPACE nonscalable script-binding inputevent/SPACE\nPGUP nonscalable script-binding inputevent/PGUP\n", flags="force"]
[   0.021][v][auto_profiles] Profile condition error on evaluating: [string "profile media-title condition"]:1: attempt to index global 'path' (a nil value)
[   0.021][v][auto_profiles] Re-evaluating auto profile end
[   0.021][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_inputevent", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.021][v][auto_profiles] Re-evaluating auto profile minimized
[   0.021][v][auto_profiles] Re-evaluating auto profile maximized
[   0.022][v][auto_profiles] Re-evaluating auto profile pause
[   0.022][v][auto_profiles] Re-evaluating auto profile pgs-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile pgs-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile 8k-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile 8k-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile fps-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile video-sync
[   0.022][v][auto_profiles] Re-evaluating auto profile SDR-Gamut
[   0.022][v][auto_profiles] Re-evaluating auto profile HDR
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile HDR condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile hdr-2390
[   0.022][v][auto_profiles] Re-evaluating auto profile Deband
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile Deband condition"]:1: attempt to compare nil with number
[   0.022][d][cplayer] Run command: define-section, flags=64, args=[name="input_smartcopypaste_II", contents="", flags="default"]
[   0.022][d][cplayer] Run command: enable-section, flags=64, args=[name="input_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.022][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_smartcopypaste_II", contents="", flags="force"]
[   0.022][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.022][v][auto_profiles] Re-evaluating auto profile media-title
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile media-title condition"]:1: attempt to index global 'path' (a nil value)
[   0.022][v][auto_profiles] Re-evaluating auto profile end
[   0.022][v][auto_profiles] Re-evaluating auto profile minimized
[   0.022][v][auto_profiles] Re-evaluating auto profile maximized
[   0.022][v][auto_profiles] Re-evaluating auto profile pause
[   0.022][v][auto_profiles] Re-evaluating auto profile pgs-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile pgs-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile 8k-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile 8k-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile fps-fix
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile video-sync
[   0.022][v][auto_profiles] Re-evaluating auto profile SDR-Gamut
[   0.022][v][auto_profiles] Re-evaluating auto profile HDR
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile HDR condition"]:1: attempt to compare number with nil
[   0.022][v][auto_profiles] Re-evaluating auto profile hdr-2390
[   0.022][v][auto_profiles] Re-evaluating auto profile Deband
[   0.022][v][auto_profiles] Profile condition error on evaluating: [string "profile Deband condition"]:1: attempt to compare nil with number
[   0.022][d][cplayer] Run command: define-section, flags=64, args=[name="mbtn_left", contents="mbtn_left script-binding uosc/__keybinding1\nalt+mbtn_left script-binding uosc/__keybinding2\nalt+ctrl+mbtn_left script-binding uosc/__keybinding3\nalt+shift+mbtn_left script-binding uosc/__keybinding4\nalt+ctrl+shift+mbtn_left script-binding uosc/__keybinding5\nctrl+mbtn_left script-binding uosc/__keybinding6\nctrl+shift+mbtn_left script-binding uosc/__keybinding7\nshift+mbtn_left script-binding uosc/__keybinding8\n", flags="force"]
[   0.022][d][cplayer] Run command: define-section, flags=64, args=[name="mbtn_left_dbl", contents="mbtn_left_dbl ignore\n", flags="force"]
[   0.023][d][cplayer] Run command: define-section, flags=64, args=[name="mbtn_right", contents="mbtn_right script-binding uosc/__keybinding9\n", flags="force"]
[   0.023][d][cplayer] Run command: define-section, flags=64, args=[name="wheel", contents="wheel_up script-binding uosc/__keybinding10\nwheel_down script-binding uosc/__keybinding11\n", flags="force"]
[   0.032][v][cplayer] Done loading scripts.
[   0.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[   0.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[   0.032][v][cplayer] Running hook: auto_profiles/on_before_start_file
[   0.033][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[   0.033][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[   0.033][v][cplayer] Running hook: mpv_torrserver/on_load
[   0.034][v][auto_profiles] Re-evaluating auto profile media-title
[   0.034][v][auto_profiles] Re-evaluating auto profile video-sync
[   0.034][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="vformats", args="0"]
[   0.034][d][cplayer] Run command: define-section, flags=64, args=[name="input_uosc", contents="", flags="default"]
[   0.034][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="aformats", args="0"]
[   0.035][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.035][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.035][v][osd/libass] libass API version: 0x1703000
[   0.035][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.035][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.035][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.035][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.035][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.035][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.035][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.035][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.035][v][osd/libass] Setting up fonts...
[   0.036][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.036][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.037][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.038][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.042][v][osd/libass] Using font provider fontconfig
[   0.042][v][osd/libass] Done.
[   0.042][d][cplayer] Run command: enable-section, flags=64, args=[name="input_uosc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.042][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[   0.042][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_uosc", contents="", flags="force"]
[   0.042][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_uosc", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.042][v][cplayer] Running hook: auto_profiles/on_load
[   0.042][v][cplayer] Running hook: quality_menu/on_load
[   0.043][v][cplayer] Running hook: ytdl_hook/on_load
[   0.043][v][cplayer] Running hook: ytdl_hook/on_load
[   0.043][v][ytdl_hook] playlist hook
[   0.043][v][cplayer] Running hook: fuzzydir/on_load
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep07.480p.x264-[D-Addicts].mp4
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep06.480p.x264-[D-Addicts].mp4
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep05.480p.x264-[D-Addicts].mp4
[   0.043][d][fuzzydir] max_search_depth = 1, discovery_threshold = 10
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep04.480p.x264-[D-Addicts].mp4
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep03.480p.x264-[D-Addicts].mp4
[   0.043][d][fuzzydir] search_path = /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep02.480p.x264-[D-Addicts].mp4
[   0.043][d][fuzzydir] audio-file-paths: audio;audios;**
[   0.043][v][autoload] Prepending /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep01.450p.x264-[D-Addicts].mp4
[   0.043][d][fuzzydir] Adding to audio-file-paths: audio;audios;**
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep01.450p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][v][cplayer] Set property: options/audio-file-paths=["audio;audios;**"] -> 1
[   0.043][v][fuzzydir] Done expanding audio-file-paths
[   0.043][d][fuzzydir] sub-file-paths: **
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep02.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep03.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][fuzzydir] Adding to sub-file-paths: Subs
[   0.043][v][cplayer] Set property: options/sub-file-paths=["Subs"] -> 1
[   0.043][v][fuzzydir] Done expanding sub-file-paths
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep04.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][fuzzydir] Done expanding paths
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep05.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep06.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep07.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][d][cplayer] Run command: playlist-move, flags=64, args=[index1="0", index2="8"]
[   0.043][v][autoload] Adding /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][v][autoload] Adding /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep10.480p.x264-[D-Addicts].mp4
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep10.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][v][autoload] Adding /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep11.480p.x264-[D-Addicts].mp4
[   0.043][d][cplayer] Run command: loadfile, flags=64, args=[url="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep11.480p.x264-[D-Addicts].mp4", flags="append", index="-1", options=""]
[   0.043][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4
[   0.043][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4
[   0.043][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4
[   0.043][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.043][d][file] Stream opened successfully.
[   0.043][v][demux] Trying demuxers for level=normal.
[   0.043][d][demux] Trying demuxer: directory (force-level: normal)
[   0.043][d][demux] Trying demuxer: disc (force-level: normal)
[   0.043][d][demux] Trying demuxer: edl (force-level: normal)
[   0.043][d][demux] Trying demuxer: cue (force-level: normal)
[   0.043][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   0.043][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   0.043][d][demux] Trying demuxer: mkv (force-level: normal)
[   0.043][d][demux] Trying demuxer: libarchive (force-level: normal)
[   0.044][d][demux] Trying demuxer: lavf (force-level: normal)
[   0.046][v][lavf] Found 'mov,mp4,m4a,3gp,3g2,mj2' at score=100 size=2048.
[   0.084][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[   0.085][d][ffmpeg] AVIOContext: Statistics: 1616337 bytes read, 2 seeks
[   0.085][v][file] stream level seek from 1681818 to 253905347
[   0.085][v][demux] Detected file format: mov,mp4,m4a,3gp,3g2,mj2 (libavformat)
[   0.085][v][cplayer] Opening done: /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4
[   0.086][v][find_files] Loading external files in /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/
[   0.086][v][find_files] Loading external files in /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs
[   0.086][d][global] config path: 'sub' -/-> '/home/zen/.config/mpv/sub'
[   0.086][d][global] config path: 'sub' -/-> '/home/zen/.mpv/sub'
[   0.086][d][global] config path: 'sub' -/-> '/etc/mpv/sub'
[   0.086][d][global] config path: 'audio' -/-> '/home/zen/.config/mpv/audio'
[   0.086][d][global] config path: 'audio' -/-> '/home/zen/.mpv/audio'
[   0.086][d][global] config path: 'audio' -/-> '/etc/mpv/audio'
[   0.086][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].srt
[   0.086][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].srt
[   0.086][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].srt
[   0.086][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.086][d][file] Stream opened successfully.
[   0.086][v][demux] Trying demuxers for level=normal.
[   0.086][d][demux] Trying demuxer: directory (force-level: normal)
[   0.122][d][demux] Trying demuxer: disc (force-level: normal)
[   0.122][d][demux] Trying demuxer: edl (force-level: normal)
[   0.122][d][demux] Trying demuxer: cue (force-level: normal)
[   0.122][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   0.122][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   0.122][d][demux] Trying demuxer: mkv (force-level: normal)
[   0.122][d][demux] Trying demuxer: libarchive (force-level: normal)
[   0.122][d][demux] Trying demuxer: lavf (force-level: normal)
[   0.124][v][lavf] Found 'srt' at score=100 size=2048.
[   0.124][v][lavf] Data looks like UTF-8, ignoring user-provided charset.
[   0.125][v][lavf] avformat_find_stream_info() finished after 65201 bytes.
[   0.125][v][lavf] demuxer read all data; closing stream
[   0.125][v][demux] Detected file format: srt (libavformat)
[   0.125][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].jp.srt
[   0.125][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].jp.srt
[   0.125][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].jp.srt
[   0.125][d][file] resize stream to 131072 bytes, drop 0 bytes
[   0.125][d][file] Stream opened successfully.
[   0.125][v][demux] Trying demuxers for level=normal.
[   0.125][d][demux] Trying demuxer: directory (force-level: normal)
[   0.126][d][demux] Trying demuxer: disc (force-level: normal)
[   0.126][d][demux] Trying demuxer: edl (force-level: normal)
[   0.126][d][demux] Trying demuxer: cue (force-level: normal)
[   0.126][d][demux] Trying demuxer: rawaudio (force-level: normal)
[   0.126][d][demux] Trying demuxer: rawvideo (force-level: normal)
[   0.126][d][demux] Trying demuxer: mkv (force-level: normal)
[   0.126][d][demux] Trying demuxer: libarchive (force-level: normal)
[   0.126][d][demux] Trying demuxer: lavf (force-level: normal)
[   0.127][v][lavf] Found 'srt' at score=100 size=2048.
[   0.127][v][lavf] Data has a BOM, assuming utf-8 as charset.
[   0.128][v][lavf] avformat_find_stream_info() finished after 76867 bytes.
[   0.128][v][lavf] demuxer read all data; closing stream
[   0.128][v][demux] Detected file format: srt (libavformat)
[   0.128][v][cplayer] Running hook: auto_profiles/on_preloaded
[   0.128][v][cplayer] Running hook: ytdl_hook/on_preloaded
[   0.128][v][cplayer] Running hook: chapter_make_read/on_preloaded
[   0.128][v][lavf] select track 0
[   0.128][v][lavf] select track 1
[   0.128][v][lavf] select track 0
[   0.128][v][lavf] refresh track 0 (sub)
[   0.128][v][lavf] refresh seek to -10.000000
[   0.128][i][cplayer]  ‚óè Video  --vid=1              (h264 848x480 29.97 fps) [default]
[   0.128][i][cplayer]  ‚óè Audio  --aid=1              (aac 2ch 48000 Hz 128 kbps) [default]
[   0.128][i][cplayer]  ‚óã Subs   --sid=1              'srt' (subrip) [external]
[   0.128][i][cplayer]  ‚óè Subs   --sid=2  --slang=jp  'jp.srt' (subrip) [external]
[   0.128][v][vo/gpu-next] Probing for best GPU context.
[   0.128][v][vo/gpu-next/vulkan] Initializing GPU context 'waylandvk'
[   0.128][v][vo/gpu-next/libplacebo] Initialized libplacebo v7.349.0 (API v349)
[   0.128][d][vo/gpu-next/libplacebo] Available instance version: 1.4.309
[   0.128][d][vo/gpu-next/libplacebo] Spent 0.116 ms enumerating instance layers
[   0.128][d][vo/gpu-next/libplacebo] Available layers:
[   0.128][d][vo/gpu-next/libplacebo]     VK_LAYER_NV_optimus (v1.4.303)
[   0.190][v][vo/gpu-next/libplacebo] Spent 61.114 ms enumerating instance extensions
[   0.190][d][vo/gpu-next/libplacebo] Available instance extensions:
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_device_group_creation
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_display
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_external_fence_capabilities
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_external_memory_capabilities
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_external_semaphore_capabilities
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_get_display_properties2
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_get_physical_device_properties2
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_get_surface_capabilities2
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_surface
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_surface_protected_capabilities
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_wayland_surface
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_xcb_surface
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_xlib_surface
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_acquire_drm_display
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_acquire_xlib_display
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_debug_report
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_debug_utils
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_direct_mode_display
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_display_surface_counter
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_surface_maintenance1
[   0.190][d][vo/gpu-next/libplacebo]     VK_EXT_swapchain_colorspace
[   0.190][d][vo/gpu-next/libplacebo]     VK_NV_display_stereo
[   0.190][d][vo/gpu-next/libplacebo]     VK_KHR_portability_enumeration
[   0.190][d][vo/gpu-next/libplacebo]     VK_LUNARG_direct_driver_loading
[   0.190][v][vo/gpu-next/libplacebo] Creating vulkan instance with extensions:
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_get_physical_device_properties2
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_surface
[   0.190][v][vo/gpu-next/libplacebo]     VK_EXT_swapchain_colorspace
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_external_memory_capabilities
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_external_semaphore_capabilities
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_get_surface_capabilities2
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_portability_enumeration
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_surface
[   0.190][v][vo/gpu-next/libplacebo]     VK_KHR_wayland_surface
[   0.199][d][vo/gpu-next/libplacebo] Spent 9.196 ms creating vulkan instance
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_seat at version 8
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_data_device_manager at version 3
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_compositor at version 6
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_subcompositor at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_shm at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_viewporter at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_fractional_scale_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_cursor_shape_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface zwp_idle_inhibit_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface zxdg_decoration_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface zwp_text_input_manager_v3 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface xdg_activation_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_presentation at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface xdg_wm_base at version 6
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_single_pixel_buffer_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_content_type_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface wp_color_manager_v1 at version 1
[   0.199][v][vo/gpu-next/wayland] Registered interface zwp_linux_dmabuf_v1 at version 4
[   0.199][v][vo/gpu-next/wayland] Registered interface wl_output at version 4
[   0.201][v][vo/gpu-next/wayland] Compositor supports parametric image description creator.
[   0.201][v][vo/gpu-next/wayland] Compositor supports setting primaries.
[   0.201][v][vo/gpu-next/wayland] Compositor supports setting luminances.
[   0.201][d][vo/gpu-next/wayland] Querying available drm format and modifier pairs from tranche on device '57856'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB24(00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB24(00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R8  (00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG88(00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'R16 (00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000606015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08013)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08014)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(0300000000e08015)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG32(00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'UYVY(00ffffffffffffff)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606010)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606011)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606012)'
[   0.201][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR12(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB12(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA12(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA12(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR15(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB15(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX15(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX15(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000606015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08012)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08013)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08014)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(0300000000e08015)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR15(00ffffffffffffff)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606010)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606011)'
[   0.202][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB15(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA15(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA15(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB4H(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB4H(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR24(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR24(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RGB8(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG16(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG16(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'RG24(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'BG24(00ffffffffffffff)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000606015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08010)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08011)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08012)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08013)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08014)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(0300000000e08015)'
[   0.203][d][vo/gpu-next/wayland] Compositor supports drm format: 'AR30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX24(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX24(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA24(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA24(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XR30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'XB30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RX30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BX30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'RA30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'BA30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R101(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'R100(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'AB30(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B101(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000606015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08010)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08011)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08012)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08013)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08014)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(0300000000e08015)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'B100(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'YU12(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'NV12(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'NV21(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'NV16(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'NV24(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'P010(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'P210(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'P012(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'HD01(00ffffffffffffff)'
[   0.204][d][vo/gpu-next/wayland] Compositor supports drm format: 'UHD0(00ffffffffffffff)'
[   0.204][v][vo/gpu-next/wayland] Registered output EDR EGM24F100H (0x37):
[   0.204][v][vo/gpu-next/wayland] 	x: 0px, y: 0px
[   0.204][v][vo/gpu-next/wayland] 	w: 1920px (530mm), h: 1080px (300mm)
[   0.204][v][vo/gpu-next/wayland] 	scale: 1.000000
[   0.204][v][vo/gpu-next/wayland] 	Hz: 100.000000
[   0.204][v][vo/gpu-next/wayland] Enabling server decorations
[   0.204][v][vo/gpu-next/wayland] Enabling server decorations
[   0.204][v][vo/gpu-next/wayland] Compositor does not support ICC profiles!
[   0.204][v][vo/gpu-next/libplacebo] Probing for vulkan devices:
[   0.204][d][vo/gpu-next/libplacebo] Spent 0.029 ms enumerating physical devices
[   0.204][v][vo/gpu-next/libplacebo]     GPU 0: NVIDIA GeForce GTX 1660 SUPER v1.4.303 (discrete)
[   0.204][v][vo/gpu-next/libplacebo]            uuid: CE:46:DC:1F:47:D2:95:59:78:E7:A6:20:5E:82:E7:0C
[   0.204][v][vo/gpu-next/libplacebo] Vulkan device properties:
[   0.204][v][vo/gpu-next/libplacebo]     Device Name: NVIDIA GeForce GTX 1660 SUPER
[   0.204][v][vo/gpu-next/libplacebo]     Device ID: 10de:21c4
[   0.204][v][vo/gpu-next/libplacebo]     Device UUID: CE:46:DC:1F:47:D2:95:59:78:E7:A6:20:5E:82:E7:0C
[   0.204][v][vo/gpu-next/libplacebo]     Driver version: 8ea141c0
[   0.204][v][vo/gpu-next/libplacebo]     API version: 1.4.303
[   0.204][d][vo/gpu-next/libplacebo] Queue families supported by device:
[   0.204][d][vo/gpu-next/libplacebo]     0: flags 0xf num 16
[   0.204][d][vo/gpu-next/libplacebo]     1: flags 0xc num 2
[   0.204][d][vo/gpu-next/libplacebo]     2: flags 0xe num 8
[   0.204][d][vo/gpu-next/libplacebo]     3: flags 0x2c num 1
[   0.204][d][vo/gpu-next/libplacebo]     4: flags 0x4c num 1
[   0.204][d][vo/gpu-next/libplacebo] Using graphics queue 0
[   0.204][v][vo/gpu-next/libplacebo] Using async transfer (queue 1)
[   0.204][v][vo/gpu-next/libplacebo] Using async compute (queue 2)
[   0.204][d][vo/gpu-next/libplacebo] Spent 0.012 ms enumerating device extensions
[   0.204][d][vo/gpu-next/libplacebo] Available device extensions:
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_16bit_storage
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_8bit_storage
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_acceleration_structure
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_bind_memory2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_buffer_device_address
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_calibrated_timestamps
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_compute_shader_derivatives
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_copy_commands2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_create_renderpass2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_dedicated_allocation
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_deferred_host_operations
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_depth_stencil_resolve
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_descriptor_update_template
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_device_group
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_draw_indirect_count
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_driver_properties
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_dynamic_rendering
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_dynamic_rendering_local_read
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_fence
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_fence_fd
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_memory
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_memory_fd
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_semaphore
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_external_semaphore_fd
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_format_feature_flags2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_fragment_shader_barycentric
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_fragment_shading_rate
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_get_memory_requirements2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_global_priority
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_image_format_list
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_imageless_framebuffer
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_incremental_present
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_index_type_uint8
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_line_rasterization
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_load_store_op_none
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance1
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance3
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance4
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance5
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance6
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_maintenance7
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_map_memory2
[   0.204][d][vo/gpu-next/libplacebo]     VK_KHR_multiview
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_pipeline_binary
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_pipeline_executable_properties
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_pipeline_library
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_present_id
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_present_wait
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_push_descriptor
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_ray_tracing_maintenance1
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_ray_tracing_pipeline
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_relaxed_block_layout
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_sampler_mirror_clamp_to_edge
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_sampler_ycbcr_conversion
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_separate_depth_stencil_layouts
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_atomic_int64
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_clock
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_draw_parameters
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_expect_assume
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_float16_int8
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_float_controls
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_float_controls2
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_integer_dot_product
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_maximal_reconvergence
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_non_semantic_info
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_quad_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_relaxed_extended_instruction
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_subgroup_extended_types
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_subgroup_rotate
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_subgroup_uniform_control_flow
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shader_terminate_invocation
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_shared_presentable_image
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_spirv_1_4
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_storage_buffer_storage_class
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_swapchain
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_swapchain_mutable_format
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_synchronization2
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_timeline_semaphore
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_uniform_buffer_standard_layout
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_variable_pointers
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_vertex_attribute_divisor
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_decode_h264
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_decode_h265
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_decode_queue
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_encode_h264
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_encode_h265
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_encode_queue
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_maintenance1
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_video_queue
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_vulkan_memory_model
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_workgroup_memory_explicit_layout
[   0.205][d][vo/gpu-next/libplacebo]     VK_KHR_zero_initialize_workgroup_memory
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_4444_formats
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_attachment_feedback_loop_dynamic_state
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_attachment_feedback_loop_layout
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_blend_operation_advanced
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_border_color_swizzle
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_buffer_device_address
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_calibrated_timestamps
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_color_write_enable
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_conditional_rendering
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_conservative_rasterization
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_custom_border_color
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_bias_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_clamp_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_clamp_zero_one
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_clip_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_clip_enable
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_depth_range_unrestricted
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_descriptor_buffer
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_descriptor_indexing
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_device_fault
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_device_generated_commands
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_discard_rectangles
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_display_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_dynamic_rendering_unused_attachments
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_extended_dynamic_state
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_extended_dynamic_state2
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_extended_dynamic_state3
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_external_memory_dma_buf
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_external_memory_host
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_fragment_shader_interlock
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_global_priority
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_global_priority_query
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_graphics_pipeline_library
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_host_image_copy
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_host_query_reset
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_image_2d_view_of_3d
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_image_drm_format_modifier
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_image_robustness
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_image_sliced_view_of_3d
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_image_view_min_lod
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_index_type_uint8
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_inline_uniform_block
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_legacy_vertex_attributes
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_line_rasterization
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_load_store_op_none
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_map_memory_placed
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_memory_budget
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_memory_priority
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_mesh_shader
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_multi_draw
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_mutable_descriptor_type
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_nested_command_buffer
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_non_seamless_cube_map
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pageable_device_local_memory
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pci_bus_info
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_physical_device_drm
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pipeline_creation_cache_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pipeline_creation_feedback
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pipeline_library_group_handles
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_pipeline_robustness
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_post_depth_coverage
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_primitive_topology_list_restart
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_primitives_generated_query
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_private_data
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_provoking_vertex
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_queue_family_foreign
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_robustness2
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_sample_locations
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_sampler_filter_minmax
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_scalar_block_layout
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_separate_stencil_usage
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_atomic_float
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_demote_to_helper_invocation
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_image_atomic_int64
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_module_identifier
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_object
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_replicated_composites
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_subgroup_ballot
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_subgroup_vote
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_shader_viewport_index_layer
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_subgroup_size_control
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_swapchain_maintenance1
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_texel_buffer_alignment
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_tooling_info
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_transform_feedback
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_vertex_attribute_divisor
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_vertex_input_dynamic_state
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_ycbcr_2plane_444_formats
[   0.205][d][vo/gpu-next/libplacebo]     VK_EXT_ycbcr_image_arrays
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_clip_space_w_scaling
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_compute_shader_derivatives
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_copy_memory_indirect
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_corner_sampled_image
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_coverage_reduction_mode
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_cuda_kernel_launch
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_dedicated_allocation
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_dedicated_allocation_image_aliasing
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_descriptor_pool_overallocation
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_device_diagnostic_checkpoints
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_device_diagnostics_config
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_device_generated_commands
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_device_generated_commands_compute
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_extended_sparse_address_space
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_fill_rectangle
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_fragment_coverage_to_color
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_fragment_shader_barycentric
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_fragment_shading_rate_enums
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_framebuffer_mixed_samples
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_geometry_shader_passthrough
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_inherited_viewport_scissor
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_linear_color_attachment
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_low_latency
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_low_latency2
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_memory_decompression
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_mesh_shader
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_present_metering
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_raw_access_chains
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_ray_tracing
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_ray_tracing_invocation_reorder
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_representative_fragment_test
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_sample_mask_override_coverage
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_scissor_exclusive
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_shader_atomic_float16_vector
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_shader_image_footprint
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_shader_sm_builtins
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_shader_subgroup_partitioned
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_shading_rate_image
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_viewport_array2
[   0.205][d][vo/gpu-next/libplacebo]     VK_NV_viewport_swizzle
[   0.205][d][vo/gpu-next/libplacebo]     VK_NVX_binary_import
[   0.205][d][vo/gpu-next/libplacebo]     VK_NVX_image_view_handle
[   0.205][d][vo/gpu-next/libplacebo]     VK_NVX_multiview_per_view_attributes
[   0.205][d][vo/gpu-next/libplacebo]     VK_AMD_buffer_marker
[   0.205][d][vo/gpu-next/libplacebo]     VK_GOOGLE_user_type
[   0.205][v][vo/gpu-next/libplacebo] Creating vulkan device with extensions:
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_swapchain
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_swapchain
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_external_memory_fd
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_external_memory_dma_buf
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_external_memory_host
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_external_semaphore_fd
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_pci_bus_info
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_image_drm_format_modifier
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_descriptor_buffer
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_shader_atomic_float
[   0.205][v][vo/gpu-next/libplacebo]     VK_EXT_shader_object
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_video_decode_queue
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_video_decode_h264
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_video_decode_h265
[   0.205][v][vo/gpu-next/libplacebo]     VK_KHR_video_queue
[   0.806][v][vo/gpu-next/libplacebo] Spent 601.024 ms creating vulkan device (slow!)
[   0.806][d][vo/gpu-next/libplacebo] Restricting QF 0 from 16 queues to 1
[   0.806][d][vo/gpu-next/libplacebo] Restricting QF 1 from 2 queues to 1
[   0.806][d][vo/gpu-next/libplacebo] Restricting QF 2 from 8 queues to 1
[   0.806][v][vo/gpu-next/libplacebo] Memory heaps supported by device:
[   0.806][v][vo/gpu-next/libplacebo]     0: flags 0x1 size 6144M
[   0.806][v][vo/gpu-next/libplacebo]     1: flags 0x0 size   11G
[   0.806][v][vo/gpu-next/libplacebo]     2: flags 0x1 size  246M
[   0.806][d][vo/gpu-next/libplacebo] Memory types supported by device:
[   0.806][d][vo/gpu-next/libplacebo]     0: flags 0x0 heap 1
[   0.806][d][vo/gpu-next/libplacebo]     1: flags 0x1 heap 0
[   0.806][d][vo/gpu-next/libplacebo]     2: flags 0x1 heap 0
[   0.806][d][vo/gpu-next/libplacebo]     3: flags 0x6 heap 1
[   0.806][d][vo/gpu-next/libplacebo]     4: flags 0xe heap 1
[   0.806][d][vo/gpu-next/libplacebo]     5: flags 0x7 heap 2
[   0.806][v][vo/gpu-next/libplacebo] Memory summary:     0 used     0 res     0 alloc, efficiency 100.00%, utilization 100.00%, max page:  384M
[   0.806][v][vo/gpu-next/libplacebo] shaderc SPIR-V version 1.6 rev 1
[   0.806][v][vo/gpu-next/libplacebo] Initialized SPIR-V compiler 'shaderc'
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format r8 supports fewer caps (0x1dc03) than optimal tiling (0x1dd83), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format rg8 supports fewer caps (0x1dc03) than optimal tiling (0x1dd83), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format rgba8 supports fewer caps (0x1dc03) than optimal tiling (0x1dd83), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format rgba16hf supports fewer caps (0x1dc07) than optimal tiling (0x1dd87), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format rgba16f supports fewer caps (0x1dc07) than optimal tiling (0x1dd87), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format bgra8 supports fewer caps (0x1dc03) than optimal tiling (0x1dd83), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format bgr565 supports fewer caps (0x1dc01) than optimal tiling (0x1dd81), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format bgr5a1 supports fewer caps (0x1dc01) than optimal tiling (0x1dd81), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format rgb10a2 supports fewer caps (0x1dc03) than optimal tiling (0x1dd83), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] DRM format modifier LINEAR of format bgr10a2 supports fewer caps (0x1dc01) than optimal tiling (0x1dd81), may result in limited capability!
[   0.806][d][vo/gpu-next/libplacebo] Minimum texel alignment: 48
[   0.806][v][vo/gpu-next/libplacebo] GPU information:
[   0.806][v][vo/gpu-next/libplacebo]     GLSL version: 450 (vulkan)
[   0.806][v][vo/gpu-next/libplacebo]       max_shmem_size:            49152
[   0.806][v][vo/gpu-next/libplacebo]       max_group_threads:         1024
[   0.806][v][vo/gpu-next/libplacebo]       max_group_size[0]:         1024
[   0.806][v][vo/gpu-next/libplacebo]       max_group_size[1]:         1024
[   0.806][v][vo/gpu-next/libplacebo]       max_group_size[2]:         64
[   0.806][v][vo/gpu-next/libplacebo]       subgroup_size:             32
[   0.806][v][vo/gpu-next/libplacebo]       min_gather_offset:         -32
[   0.806][v][vo/gpu-next/libplacebo]       max_gather_offset:         31
[   0.806][v][vo/gpu-next/libplacebo]     Limits:
[   0.806][v][vo/gpu-next/libplacebo]       thread_safe:               1
[   0.806][v][vo/gpu-next/libplacebo]       callbacks:                 1
[   0.806][v][vo/gpu-next/libplacebo]       max_buf_size:              12467976192
[   0.806][v][vo/gpu-next/libplacebo]       max_ubo_size:              65536
[   0.806][v][vo/gpu-next/libplacebo]       max_ssbo_size:             4294967295
[   0.806][v][vo/gpu-next/libplacebo]       max_vbo_size:              6442450944
[   0.806][v][vo/gpu-next/libplacebo]       max_mapped_size:           12467976192
[   0.806][v][vo/gpu-next/libplacebo]       max_buffer_texels:         134217728
[   0.806][v][vo/gpu-next/libplacebo]       align_host_ptr:            4096
[   0.806][v][vo/gpu-next/libplacebo]       host_cached:               1
[   0.806][v][vo/gpu-next/libplacebo]       max_tex_1d_dim:            32768
[   0.806][v][vo/gpu-next/libplacebo]       max_tex_2d_dim:            32768
[   0.806][v][vo/gpu-next/libplacebo]       max_tex_3d_dim:            16384
[   0.806][v][vo/gpu-next/libplacebo]       blittable_1d_3d:           1
[   0.806][v][vo/gpu-next/libplacebo]       buf_transfer:              1
[   0.806][v][vo/gpu-next/libplacebo]       align_tex_xfer_pitch:      1
[   0.806][v][vo/gpu-next/libplacebo]       align_tex_xfer_offset:     4
[   0.806][v][vo/gpu-next/libplacebo]       max_variable_comps:        0
[   0.806][v][vo/gpu-next/libplacebo]       max_constants:             18446744073709551615
[   0.806][v][vo/gpu-next/libplacebo]       max_pushc_size:            256
[   0.806][v][vo/gpu-next/libplacebo]       align_vertex_stride:       1
[   0.806][v][vo/gpu-next/libplacebo]       max_dispatch[0]:           2147483647
[   0.806][v][vo/gpu-next/libplacebo]       max_dispatch[1]:           65535
[   0.806][v][vo/gpu-next/libplacebo]       max_dispatch[2]:           65535
[   0.806][v][vo/gpu-next/libplacebo]       fragment_queues:           1
[   0.806][v][vo/gpu-next/libplacebo]       compute_queues:            1
[   0.806][v][vo/gpu-next/libplacebo]     External API interop:
[   0.806][v][vo/gpu-next/libplacebo]       UUID: CE:46:DC:1F:47:D2:95:59:78:E7:A6:20:5E:82:E7:0C
[   0.806][v][vo/gpu-next/libplacebo]       PCI: 0000:01:00:0
[   0.806][v][vo/gpu-next/libplacebo]       buf export caps: 0x19
[   0.806][v][vo/gpu-next/libplacebo]       buf import caps: 0x19
[   0.806][v][vo/gpu-next/libplacebo]       tex export caps: 0x19
[   0.806][v][vo/gpu-next/libplacebo]       tex import caps: 0x19
[   0.806][v][vo/gpu-next/libplacebo]       sync export caps: 0x1
[   0.806][v][vo/gpu-next/libplacebo]       sync import caps: 0x0
[   0.806][d][vo/gpu-next/libplacebo] GPU texture formats:
[   0.806][d][vo/gpu-next/libplacebo]     NAME                 TYPE   SIZE COMP CAPS         EMU DEPTH         HOST_BITS     GLSL_TYPE  GLSL_FMT   FOURCC
[   0.806][d][vo/gpu-next/libplacebo]     r8                   UNORM  1    R    SsLRbBVutHWG n   {8  0  0  0 } {8  0  0  0 } float      r8         R8    
[   0.806][d][vo/gpu-next/libplacebo]     r8s                  SNORM  1    R    SsLRbBVutHWG n   {8  0  0  0 } {8  0  0  0 } float      r8_snorm         
[   0.806][d][vo/gpu-next/libplacebo]     rg8                  UNORM  2    RG   SsLRbBVutHWG n   {8  8  0  0 } {8  8  0  0 } vec2       rg8        GR88  
[   0.806][d][vo/gpu-next/libplacebo]     rg8s                 SNORM  2    RG   SsLRbBVutHWG n   {8  8  0  0 } {8  8  0  0 } vec2       rg8_snorm        
[   0.806][d][vo/gpu-next/libplacebo]     rgba8                UNORM  4    RGBA SsLRbBVutHWG n   {8  8  8  8 } {8  8  8  8 } vec4       rgba8      AB24  
[   0.806][d][vo/gpu-next/libplacebo]     rgba8s               SNORM  4    RGBA SsLRbBVutHWG n   {8  8  8  8 } {8  8  8  8 } vec4       rgba8_snorm       
[   0.806][d][vo/gpu-next/libplacebo]     bgra8                UNORM  4    BGRA SsLRbBVutHWG n   {8  8  8  8 } {8  8  8  8 } vec4       rgba8      AR24  
[   0.806][d][vo/gpu-next/libplacebo]     rgb10a2              UNORM  4    RGBA SsLRbBVutHWG n   {10 10 10 2 } {10 10 10 2 } vec4       rgb10_a2   AB30  
[   0.806][d][vo/gpu-next/libplacebo]     r16                  UNORM  2    R    SsLRbBVutHWG n   {16 0  0  0 } {16 0  0  0 } float      r16        R16   
[   0.806][d][vo/gpu-next/libplacebo]     r16hf                FLOAT  2    R    SsLRbBVutHWG n   {16 0  0  0 } {16 0  0  0 } float      r16f             
[   0.806][d][vo/gpu-next/libplacebo]     r16s                 SNORM  2    R    SsLRbBVutHWG n   {16 0  0  0 } {16 0  0  0 } float      r16_snorm        
[   0.806][d][vo/gpu-next/libplacebo]     rg16                 UNORM  4    RG   SsLRbBVutHWG n   {16 16 0  0 } {16 16 0  0 } vec2       rg16       GR32  
[   0.806][d][vo/gpu-next/libplacebo]     rg16hf               FLOAT  4    RG   SsLRbBVutHWG n   {16 16 0  0 } {16 16 0  0 } vec2       rg16f            
[   0.806][d][vo/gpu-next/libplacebo]     rg16s                SNORM  4    RG   SsLRbBVutHWG n   {16 16 0  0 } {16 16 0  0 } vec2       rg16_snorm       
[   0.806][d][vo/gpu-next/libplacebo]     rgba16               UNORM  8    RGBA SsLRbBVutHWG n   {16 16 16 16} {16 16 16 16} vec4       rgba16     AB48  
[   0.806][d][vo/gpu-next/libplacebo]     rgba16hf             FLOAT  8    RGBA SsLRbBVutHWG n   {16 16 16 16} {16 16 16 16} vec4       rgba16f    AB4H  
[   0.806][d][vo/gpu-next/libplacebo]     rgba16s              SNORM  8    RGBA SsLRbBVutHWG n   {16 16 16 16} {16 16 16 16} vec4       rgba16_snorm       
[   0.806][d][vo/gpu-next/libplacebo]     r32f                 FLOAT  4    R    SsLRbBVutHWG n   {32 0  0  0 } {32 0  0  0 } float      r32f             
[   0.806][d][vo/gpu-next/libplacebo]     rg32f                FLOAT  8    RG   SsLRbBVutHWG n   {32 32 0  0 } {32 32 0  0 } vec2       rg32f            
[   0.806][d][vo/gpu-next/libplacebo]     rgba32f              FLOAT  16   RGBA SsLRbBVutHWG n   {32 32 32 32} {32 32 32 32} vec4       rgba32f          
[   0.806][d][vo/gpu-next/libplacebo]     bgr5a1               UNORM  2    BGRA S-LRbB-u-H-G n   {5  5  5  1 } {5  5  5  1 } vec4                  AR15  
[   0.806][d][vo/gpu-next/libplacebo]     bgr565               UNORM  2    BGR  S-LRbB-u-H-G n   {5  6  5  0 } {5  6  5  0 } vec3                  RG16  
[   0.806][d][vo/gpu-next/libplacebo]     bgr10a2              UNORM  4    BGRA S-LRbBVu-H-G n   {10 10 10 2 } {10 10 10 2 } vec4                  AR30  
[   0.806][d][vo/gpu-next/libplacebo]     r8i                  SINT   1    R    Ss-R-BVutHWG n   {8  0  0  0 } {8  0  0  0 } int        r8i              
[   0.806][d][vo/gpu-next/libplacebo]     r8u                  UINT   1    R    Ss-R-BVutHWG n   {8  0  0  0 } {8  0  0  0 } uint       r8ui             
[   0.806][d][vo/gpu-next/libplacebo]     rg8i                 SINT   2    RG   Ss-R-BVutHWG n   {8  8  0  0 } {8  8  0  0 } ivec2      rg8i             
[   0.806][d][vo/gpu-next/libplacebo]     rg8u                 UINT   2    RG   Ss-R-BVutHWG n   {8  8  0  0 } {8  8  0  0 } uvec2      rg8ui            
[   0.806][d][vo/gpu-next/libplacebo]     rgba8i               SINT   4    RGBA Ss-R-BVutHWG n   {8  8  8  8 } {8  8  8  8 } ivec4      rgba8i           
[   0.806][d][vo/gpu-next/libplacebo]     rgba8u               UINT   4    RGBA Ss-R-BVutHWG n   {8  8  8  8 } {8  8  8  8 } uvec4      rgba8ui          
[   0.806][d][vo/gpu-next/libplacebo]     rgb10a2u             UINT   4    RGBA Ss-R-BVutHWG n   {10 10 10 2 } {10 10 10 2 } uvec4      rgb10_a2ui       
[   0.806][d][vo/gpu-next/libplacebo]     r16i                 SINT   2    R    Ss-R-BVutHWG n   {16 0  0  0 } {16 0  0  0 } int        r16i             
[   0.806][d][vo/gpu-next/libplacebo]     r16u                 UINT   2    R    Ss-R-BVutHWG n   {16 0  0  0 } {16 0  0  0 } uint       r16ui            
[   0.806][d][vo/gpu-next/libplacebo]     rg16i                SINT   4    RG   Ss-R-BVutHWG n   {16 16 0  0 } {16 16 0  0 } ivec2      rg16i            
[   0.806][d][vo/gpu-next/libplacebo]     rg16u                UINT   4    RG   Ss-R-BVutHWG n   {16 16 0  0 } {16 16 0  0 } uvec2      rg16ui           
[   0.806][d][vo/gpu-next/libplacebo]     rgba16i              SINT   8    RGBA Ss-R-BVutHWG n   {16 16 16 16} {16 16 16 16} ivec4      rgba16i          
[   0.806][d][vo/gpu-next/libplacebo]     rgba16u              UINT   8    RGBA Ss-R-BVutHWG n   {16 16 16 16} {16 16 16 16} uvec4      rgba16ui         
[   0.806][d][vo/gpu-next/libplacebo]     r32i                 SINT   4    R    Ss-R-BVutHWG n   {32 0  0  0 } {32 0  0  0 } int        r32i             
[   0.806][d][vo/gpu-next/libplacebo]     r32u                 UINT   4    R    Ss-R-BVutHWG n   {32 0  0  0 } {32 0  0  0 } uint       r32ui            
[   0.806][d][vo/gpu-next/libplacebo]     rg32i                SINT   8    RG   Ss-R-BVutHWG n   {32 32 0  0 } {32 32 0  0 } ivec2      rg32i            
[   0.806][d][vo/gpu-next/libplacebo]     rg32u                UINT   8    RG   Ss-R-BVutHWG n   {32 32 0  0 } {32 32 0  0 } uvec2      rg32ui           
[   0.806][d][vo/gpu-next/libplacebo]     rgba32i              SINT   16   RGBA Ss-R-BVutHWG n   {32 32 32 32} {32 32 32 32} ivec4      rgba32i          
[   0.806][d][vo/gpu-next/libplacebo]     rgba32u              UINT   16   RGBA Ss-R-BVutHWG n   {32 32 32 32} {32 32 32 32} uvec4      rgba32ui         
[   0.806][d][vo/gpu-next/libplacebo]     a1rgb5               UNORM  2    ARGB S-L----u-H-G n   {1  5  5  5 } {1  5  5  5 } vec4                  BA15  
[   0.806][d][vo/gpu-next/libplacebo]     a1bgr5               UNORM  2    ABGR S-L----u-H-G n   {1  5  5  5 } {1  5  5  5 } vec4                  RA15  
[   0.806][d][vo/gpu-next/libplacebo]     gr4                  UNORM  1    GR   S-L----u-H-G n   {4  4  0  0 } {4  4  0  0 } vec2                        
[   0.806][d][vo/gpu-next/libplacebo]     argb4                UNORM  2    ARGB S-L----u-H-G n   {4  4  4  4 } {4  4  4  4 } vec4                  BA12  
[   0.806][d][vo/gpu-next/libplacebo]     abgr4                UNORM  2    ABGR S-L----u-H-G n   {4  4  4  4 } {4  4  4  4 } vec4                  RA12  
[   0.806][d][vo/gpu-next/libplacebo]     rgb565               UNORM  2    RGB  S-L----u-H-G n   {5  6  5  0 } {5  6  5  0 } vec3                  BG16  
[   0.806][d][vo/gpu-next/libplacebo]     rx10                 UNORM  2    R    S-L------H-G n   {10 0  0  0 } {16 0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     rxgx10               UNORM  4    RG   S-L------H-G n   {10 10 0  0 } {16 16 0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     rx12                 UNORM  2    R    S-L------H-G n   {12 0  0  0 } {16 0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     rxgx12               UNORM  4    RG   S-L------H-G n   {12 12 0  0 } {16 16 0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     bgra8i               SINT   4    BGRA S-----Vu-H-G n   {8  8  8  8 } {8  8  8  8 } ivec4                       
[   0.806][d][vo/gpu-next/libplacebo]     bgra8u               UINT   4    BGRA S-----Vu-H-G n   {8  8  8  8 } {8  8  8  8 } uvec4                       
[   0.806][d][vo/gpu-next/libplacebo]     bgr10a2u             UINT   4    BGRA S-----Vu-H-G n   {10 10 10 2 } {10 10 10 2 } uvec4                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb8i                SINT   3    RGB  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } ivec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb8s                SNORM  3    RGB  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } vec3                        
[   0.806][d][vo/gpu-next/libplacebo]     rgb8u                UINT   3    RGB  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } uvec3                       
[   0.806][d][vo/gpu-next/libplacebo]     bgr8                 UNORM  3    BGR  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } vec3                  RG24  
[   0.806][d][vo/gpu-next/libplacebo]     bgr8i                SINT   3    BGR  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } ivec3                       
[   0.806][d][vo/gpu-next/libplacebo]     bgr8u                UINT   3    BGR  ------V--H-- n   {8  8  8  0 } {8  8  8  0 } uvec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb10a2i             SINT   4    RGBA ------V--H-- n   {10 10 10 2 } {10 10 10 2 } ivec4                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb10a2s             SNORM  4    RGBA ------V--H-- n   {10 10 10 2 } {10 10 10 2 } vec4                        
[   0.806][d][vo/gpu-next/libplacebo]     bgr10a2i             SINT   4    BGRA ------V--H-- n   {10 10 10 2 } {10 10 10 2 } ivec4                       
[   0.806][d][vo/gpu-next/libplacebo]     bgr10a2s             SNORM  4    BGRA ------V--H-- n   {10 10 10 2 } {10 10 10 2 } vec4                        
[   0.806][d][vo/gpu-next/libplacebo]     rgb16hf              FLOAT  6    RGB  ------V--H-- n   {16 16 16 0 } {16 16 16 0 } vec3                        
[   0.806][d][vo/gpu-next/libplacebo]     rgb16i               SINT   6    RGB  ------V--H-- n   {16 16 16 0 } {16 16 16 0 } ivec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb16s               SNORM  6    RGB  ------V--H-- n   {16 16 16 0 } {16 16 16 0 } vec3                        
[   0.806][d][vo/gpu-next/libplacebo]     rgb16u               UINT   6    RGB  ------V--H-- n   {16 16 16 0 } {16 16 16 0 } uvec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb32f               FLOAT  12   RGB  ------Vu-H-- n   {32 32 32 0 } {32 32 32 0 } vec3                        
[   0.806][d][vo/gpu-next/libplacebo]     rgb32i               SINT   12   RGB  ------Vu-H-- n   {32 32 32 0 } {32 32 32 0 } ivec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb32u               UINT   12   RGB  ------Vu-H-- n   {32 32 32 0 } {32 32 32 0 } uvec3                       
[   0.806][d][vo/gpu-next/libplacebo]     rgb8                 UNORM  3    RGB  SsLRbBV--HWG y   {8  8  8  0 } {8  8  8  0 } vec3       rgba8      BG24  
[   0.806][d][vo/gpu-next/libplacebo]     rgb16                UNORM  6    RGB  SsLRbBV--HWG y   {16 16 16 0 } {16 16 16 0 } vec3       rgba16           
[   0.806][d][vo/gpu-next/libplacebo]     r16f                 FLOAT  4    R    SsLRbB---HWG y   {16 0  0  0 } {32 0  0  0 }            r16f             
[   0.806][d][vo/gpu-next/libplacebo]     rg16f                FLOAT  8    RG   SsLRbB---HWG y   {16 16 0  0 } {32 32 0  0 }            rg16f            
[   0.806][d][vo/gpu-next/libplacebo]     rgba16f              FLOAT  16   RGBA SsLRbB---HWG y   {16 16 16 16} {32 32 32 32}            rgba16f          
[   0.806][d][vo/gpu-next/libplacebo]     rgb16f               FLOAT  12   RGB  ---------H-- y   {16 16 16 0 } {32 32 32 0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g8_b8_r8_420         UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       YU12  
[   0.806][d][vo/gpu-next/libplacebo]     g8_b8_r8_422         UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       YU16  
[   0.806][d][vo/gpu-next/libplacebo]     g8_b8_r8_444         UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       YU24  
[   0.806][d][vo/gpu-next/libplacebo]     g8_br8_420           UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       NV12  
[   0.806][d][vo/gpu-next/libplacebo]     g8_br8_422           UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       NV16  
[   0.806][d][vo/gpu-next/libplacebo]     g8_br8_444           UNORM  0         ------------ n   {8  8  8  0 } {0  0  0  0 }                       NV24  
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bx10_rx10_420   UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bx10_rx10_422   UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bx10_rx10_444   UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                       Q410  
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bxrx10_420      UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                       P010  
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bxrx10_422      UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                       P210  
[   0.806][d][vo/gpu-next/libplacebo]     gx10_bxrx10_444      UNORM  0         ------------ n   {10 10 10 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bx12_rx12_420   UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bx12_rx12_422   UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bx12_rx12_444   UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bxrx12_420      UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                       P012  
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bxrx12_422      UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     gx12_bxrx12_444      UNORM  0         ------------ n   {12 12 12 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g16_b16_r16_420      UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g16_b16_r16_422      UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g16_b16_r16_444      UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g16_br16_420         UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                       P016  
[   0.806][d][vo/gpu-next/libplacebo]     g16_br16_422         UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                             
[   0.806][d][vo/gpu-next/libplacebo]     g16_br16_444         UNORM  0         ------------ n   {16 16 16 0 } {0  0  0  0 }                             
[   0.806][v][vo/gpu-next/libplacebo] Available surface configurations:
[   0.806][v][vo/gpu-next/libplacebo]     0: VK_FORMAT_R8G8B8A8_SRGB                  VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     1: VK_FORMAT_R8G8B8A8_UNORM                 VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     2: VK_FORMAT_R16G16B16A16_SFLOAT            VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     3: VK_FORMAT_B8G8R8A8_SRGB                  VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     4: VK_FORMAT_B8G8R8A8_UNORM                 VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     5: VK_FORMAT_A2R10G10B10_UNORM_PACK32       VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo]     6: VK_FORMAT_A2B10G10R10_UNORM_PACK32       VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][v][vo/gpu-next/libplacebo] Picked surface configuration 5: VK_FORMAT_A2R10G10B10_UNORM_PACK32 + VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
[   0.806][d][global] config path: 'cache/shaders_cache' -> '/home/zen/.config/mpv/cache/shaders_cache'
[   0.806][d][global] user path: '~~/cache/shaders_cache' -> '/home/zen/.config/mpv/cache/shaders_cache'
[   0.806][d][global] cache path: '' -> '/home/zen/.cache/mpv'
[   0.810][d][global] config path: 'shaders/igv/KrigBilateral.glsl' -> '/home/zen/.config/mpv/shaders/igv/KrigBilateral.glsl'
[   0.810][d][global] user path: '~~/shaders/igv/KrigBilateral.glsl' -> '/home/zen/.config/mpv/shaders/igv/KrigBilateral.glsl'
[   0.810][v][vo/gpu-next/libplacebo] Registering hook pass: KrigBilateral Downscaling Y pass 1
[   0.810][v][vo/gpu-next/libplacebo] Registering hook pass: KrigBilateral Downscaling Y pass 2
[   0.810][v][vo/gpu-next/libplacebo] Registering hook pass: KrigBilateral Upscaling UV
[   0.810][d][vo/gpu-next/libplacebo] Loaded user shader:
[   0.810][d][vo/gpu-next/libplacebo] [  1] // KrigBilateral by Shiandow
[   0.810][d][vo/gpu-next/libplacebo] [  2] //
[   0.810][d][vo/gpu-next/libplacebo] [  3] // This library is free software; you can redistribute it and/or
[   0.810][d][vo/gpu-next/libplacebo] [  4] // modify it under the terms of the GNU Lesser General Public
[   0.810][d][vo/gpu-next/libplacebo] [  5] // License as published by the Free Software Foundation; either
[   0.810][d][vo/gpu-next/libplacebo] [  6] // version 3.0 of the License, or (at your option) any later version.
[   0.810][d][vo/gpu-next/libplacebo] [  7] // 
[   0.810][d][vo/gpu-next/libplacebo] [  8] // This library is distributed in the hope that it will be useful,
[   0.810][d][vo/gpu-next/libplacebo] [  9] // but WITHOUT ANY WARRANTY; without even the implied warranty of
[   0.810][d][vo/gpu-next/libplacebo] [ 10] // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
[   0.810][d][vo/gpu-next/libplacebo] [ 11] // Lesser General Public License for more details.
[   0.810][d][vo/gpu-next/libplacebo] [ 12] // 
[   0.810][d][vo/gpu-next/libplacebo] [ 13] // You should have received a copy of the GNU Lesser General Public
[   0.810][d][vo/gpu-next/libplacebo] [ 14] // License along with this library.
[   0.810][d][vo/gpu-next/libplacebo] [ 15] 
[   0.810][d][vo/gpu-next/libplacebo] [ 16] //!HOOK CHROMA
[   0.810][d][vo/gpu-next/libplacebo] [ 17] //!BIND LUMA
[   0.810][d][vo/gpu-next/libplacebo] [ 18] //!BIND HOOKED
[   0.810][d][vo/gpu-next/libplacebo] [ 19] //!SAVE LOWRES_Y
[   0.810][d][vo/gpu-next/libplacebo] [ 20] //!WIDTH LUMA.w
[   0.810][d][vo/gpu-next/libplacebo] [ 21] //!WHEN CHROMA.w LUMA.w <
[   0.810][d][vo/gpu-next/libplacebo] [ 22] //!DESC KrigBilateral Downscaling Y pass 1
[   0.810][d][vo/gpu-next/libplacebo] [ 23] 
[   0.810][d][vo/gpu-next/libplacebo] [ 24] #define offset      vec2(0)
[   0.810][d][vo/gpu-next/libplacebo] [ 25] 
[   0.810][d][vo/gpu-next/libplacebo] [ 26] #define axis        1
[   0.810][d][vo/gpu-next/libplacebo] [ 27] 
[   0.810][d][vo/gpu-next/libplacebo] [ 28] #define Kernel(x)   dot(vec3(0.42659, -0.49656, 0.076849), cos(vec3(0, 1, 2) * acos(-1.) * (x + 1.)))
[   0.810][d][vo/gpu-next/libplacebo] [ 29] 
[   0.810][d][vo/gpu-next/libplacebo] [ 30] vec4 hook() {
[   0.810][d][vo/gpu-next/libplacebo] [ 31]     // Calculate bounds
[   0.810][d][vo/gpu-next/libplacebo] [ 32]     float low  = ceil((LUMA_pos - CHROMA_pt) * LUMA_size - offset - 0.5)[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 33]     float high = floor((LUMA_pos + CHROMA_pt) * LUMA_size - offset - 0.5)[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 34] 
[   0.810][d][vo/gpu-next/libplacebo] [ 35]     float W = 0.0;
[   0.810][d][vo/gpu-next/libplacebo] [ 36]     vec4 avg = vec4(0);
[   0.810][d][vo/gpu-next/libplacebo] [ 37]     vec2 pos = LUMA_pos;
[   0.810][d][vo/gpu-next/libplacebo] [ 38] 
[   0.810][d][vo/gpu-next/libplacebo] [ 39]     for (float k = low; k <= high; k++) {
[   0.810][d][vo/gpu-next/libplacebo] [ 40]         pos[axis] = LUMA_pt[axis] * (k - offset[axis] + 0.5);
[   0.810][d][vo/gpu-next/libplacebo] [ 41]         float rel = (pos[axis] - LUMA_pos[axis])*CHROMA_size[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 42]         float w = Kernel(rel);
[   0.810][d][vo/gpu-next/libplacebo] [ 43] 
[   0.810][d][vo/gpu-next/libplacebo] [ 44]         vec4 y = textureGrad(LUMA_raw, pos, vec2(0.0), vec2(0.0)).xxxx * LUMA_mul;
[   0.810][d][vo/gpu-next/libplacebo] [ 45]         y.y *= y.y;
[   0.810][d][vo/gpu-next/libplacebo] [ 46]         avg += w * y;
[   0.810][d][vo/gpu-next/libplacebo] [ 47]         W += w;
[   0.810][d][vo/gpu-next/libplacebo] [ 48]     }
[   0.810][d][vo/gpu-next/libplacebo] [ 49]     avg /= W;
[   0.810][d][vo/gpu-next/libplacebo] [ 50]     avg.y = abs(avg.y - avg.x * avg.x);
[   0.810][d][vo/gpu-next/libplacebo] [ 51]     return avg;
[   0.810][d][vo/gpu-next/libplacebo] [ 52] }
[   0.810][d][vo/gpu-next/libplacebo] [ 53] 
[   0.810][d][vo/gpu-next/libplacebo] [ 54] //!HOOK CHROMA
[   0.810][d][vo/gpu-next/libplacebo] [ 55] //!BIND LOWRES_Y
[   0.810][d][vo/gpu-next/libplacebo] [ 56] //!BIND HOOKED
[   0.810][d][vo/gpu-next/libplacebo] [ 57] //!SAVE LOWRES_Y
[   0.810][d][vo/gpu-next/libplacebo] [ 58] //!WHEN CHROMA.w LUMA.w <
[   0.810][d][vo/gpu-next/libplacebo] [ 59] //!DESC KrigBilateral Downscaling Y pass 2
[   0.810][d][vo/gpu-next/libplacebo] [ 60] 
[   0.810][d][vo/gpu-next/libplacebo] [ 61] #define offset      vec2(0)
[   0.810][d][vo/gpu-next/libplacebo] [ 62] 
[   0.810][d][vo/gpu-next/libplacebo] [ 63] #define axis        0
[   0.810][d][vo/gpu-next/libplacebo] [ 64] 
[   0.810][d][vo/gpu-next/libplacebo] [ 65] #define Kernel(x)   dot(vec3(0.42659, -0.49656, 0.076849), cos(vec3(0, 1, 2) * acos(-1.) * (x + 1.)))
[   0.810][d][vo/gpu-next/libplacebo] [ 66] 
[   0.810][d][vo/gpu-next/libplacebo] [ 67] vec4 hook() {
[   0.810][d][vo/gpu-next/libplacebo] [ 68]     // Calculate bounds
[   0.810][d][vo/gpu-next/libplacebo] [ 69]     float low  = ceil((LOWRES_Y_pos - CHROMA_pt) * LOWRES_Y_size - offset - 0.5)[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 70]     float high = floor((LOWRES_Y_pos + CHROMA_pt) * LOWRES_Y_size - offset - 0.5)[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 71] 
[   0.810][d][vo/gpu-next/libplacebo] [ 72]     float W = 0.0;
[   0.810][d][vo/gpu-next/libplacebo] [ 73]     vec4 avg = vec4(0);
[   0.810][d][vo/gpu-next/libplacebo] [ 74]     vec2 pos = LOWRES_Y_pos;
[   0.810][d][vo/gpu-next/libplacebo] [ 75] 
[   0.810][d][vo/gpu-next/libplacebo] [ 76]     for (float k = low; k <= high; k++) {
[   0.810][d][vo/gpu-next/libplacebo] [ 77]         pos[axis] = LOWRES_Y_pt[axis] * (k - offset[axis] + 0.5);
[   0.810][d][vo/gpu-next/libplacebo] [ 78]         float rel = (pos[axis] - LOWRES_Y_pos[axis])*CHROMA_size[axis];
[   0.810][d][vo/gpu-next/libplacebo] [ 79]         float w = Kernel(rel);
[   0.810][d][vo/gpu-next/libplacebo] [ 80] 
[   0.810][d][vo/gpu-next/libplacebo] [ 81]         vec4 y = textureGrad(LOWRES_Y_raw, pos, vec2(0.0), vec2(0.0)).xxxx * LOWRES_Y_mul;
[   0.810][d][vo/gpu-next/libplacebo] [ 82]         y.y *= y.y;
[   0.810][d][vo/gpu-next/libplacebo] [ 83]         avg += w * y;
[   0.810][d][vo/gpu-next/libplacebo] [ 84]         W += w;
[   0.810][d][vo/gpu-next/libplacebo] [ 85]     }
[   0.810][d][vo/gpu-next/libplacebo] [ 86]     avg /= W;
[   0.810][d][vo/gpu-next/libplacebo] [ 87]     avg.y = abs(avg.y - avg.x * avg.x) + LOWRES_Y_texOff(0).y;
[   0.810][d][vo/gpu-next/libplacebo] [ 88]     return avg;
[   0.810][d][vo/gpu-next/libplacebo] [ 89] }
[   0.810][d][vo/gpu-next/libplacebo] [ 90] 
[   0.810][d][vo/gpu-next/libplacebo] [ 91] //!HOOK CHROMA
[   0.810][d][vo/gpu-next/libplacebo] [ 92] //!BIND HOOKED
[   0.810][d][vo/gpu-next/libplacebo] [ 93] //!BIND LUMA
[   0.810][d][vo/gpu-next/libplacebo] [ 94] //!BIND LOWRES_Y
[   0.810][d][vo/gpu-next/libplacebo] [ 95] //!WIDTH LUMA.w
[   0.810][d][vo/gpu-next/libplacebo] [ 96] //!HEIGHT LUMA.h
[   0.810][d][vo/gpu-next/libplacebo] [ 97] //!WHEN CHROMA.w LUMA.w <
[   0.810][d][vo/gpu-next/libplacebo] [ 98] //!OFFSET ALIGN
[   0.810][d][vo/gpu-next/libplacebo] [ 99] //!DESC KrigBilateral Upscaling UV
[   0.810][d][vo/gpu-next/libplacebo] [100] 
[   0.810][d][vo/gpu-next/libplacebo] [101] #define sigma_nsq   256.0/(255.0*255.0)
[   0.810][d][vo/gpu-next/libplacebo] [102] #define N           8
[   0.810][d][vo/gpu-next/libplacebo] [103] #define sqr(x)      dot(x,x)
[   0.810][d][vo/gpu-next/libplacebo] [104] 
[   0.810][d][vo/gpu-next/libplacebo] [105] #define M(i,j)      Mx[min(i,j)*N + max(i,j) - (min(i,j)*(min(i,j)+1))/2]
[   0.810][d][vo/gpu-next/libplacebo] [106] 
[   0.810][d][vo/gpu-next/libplacebo] [107] #define C(i,j)      (inversesqrt(1.0 + (X[i].y + X[j].y) / Var) * exp(-0.5 * (sqr(X[i].x - X[j].x) / (localVar + X[i].y + X[j].y) + sqr((coords[i] - coords[j]) / radius))) /*+ (X[i].x - y) * (X[j].x - y) / Var*/)  // commented out part works well only on test patterns
[   0.810][d][vo/gpu-next/libplacebo] [108] #define c(i)        (inversesqrt(1.0 + X[i].y / Var) * exp(-0.5 * (sqr(X[i].x - y) / (localVar + X[i].y) + sqr((coords[i] - offset) / radius))))
[   0.810][d][vo/gpu-next/libplacebo] [109] 
[   0.810][d][vo/gpu-next/libplacebo] [110] #define getnsum(i)  X[i] = vec4(LOWRES_Y_tex(LOWRES_Y_pt*(pos+coords[i]+vec2(0.5))).xy, \
[   0.810][d][vo/gpu-next/libplacebo] [111]                                 CHROMA_tex(CHROMA_pt*(pos+coords[i]+vec2(0.5))).xy); \
[   0.810][d][vo/gpu-next/libplacebo] [112]                     w = clamp(1.5 - abs(coords[i]), 0.0, 1.0); \
[   0.810][d][vo/gpu-next/libplacebo] [113]                     total += w.x*w.y*vec4(X[i].x, X[i].x * X[i].x, X[i].y, 1.0);
[   0.810][d][vo/gpu-next/libplacebo] [114] 
[   0.810][d][vo/gpu-next/libplacebo] [115] #define I3(f, n)    f(n) f(n+1) f(n+2)
[   0.810][d][vo/gpu-next/libplacebo] [116] #define I9(f, n)    I3(f, n) I3(f, n+3) I3(f, n+6)
[   0.810][d][vo/gpu-next/libplacebo] [117] 
[   0.810][d][vo/gpu-next/libplacebo] [118] vec4 hook() {
[   0.810][d][vo/gpu-next/libplacebo] [119]     vec2 pos = CHROMA_pos * HOOKED_size - vec2(0.5);
[   0.810][d][vo/gpu-next/libplacebo] [120]     vec2 offset = pos - round(pos);
[   0.810][d][vo/gpu-next/libplacebo] [121]     pos -= offset;
[   0.810][d][vo/gpu-next/libplacebo] [122] 
[   0.810][d][vo/gpu-next/libplacebo] [123]     vec2 coords[N+1];
[   0.810][d][vo/gpu-next/libplacebo] [124]     vec4 X[N+1];
[   0.810][d][vo/gpu-next/libplacebo] [125]     vec2 w;
[   0.810][d][vo/gpu-next/libplacebo] [126]     vec4 total = vec4(0);
[   0.810][d][vo/gpu-next/libplacebo] [127] 
[   0.810][d][vo/gpu-next/libplacebo] [128]     coords[0] = vec2(-1,-1); coords[1] = vec2(-1, 0); coords[2] = vec2(-1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [129]     coords[3] = vec2( 0,-1); coords[4] = vec2( 0, 1); coords[5] = vec2( 1,-1);
[   0.810][d][vo/gpu-next/libplacebo] [130]     coords[6] = vec2( 1, 0); coords[7] = vec2( 1, 1); coords[8] = vec2( 0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [131] 
[   0.810][d][vo/gpu-next/libplacebo] [132]     I9(getnsum, 0)
[   0.810][d][vo/gpu-next/libplacebo] [133] 
[   0.810][d][vo/gpu-next/libplacebo] [134]     total.xyz /= total.w;
[   0.810][d][vo/gpu-next/libplacebo] [135]     float localVar = abs(total.y - total.x * total.x) + sigma_nsq;
[   0.810][d][vo/gpu-next/libplacebo] [136]     float Var = localVar + total.z;
[   0.810][d][vo/gpu-next/libplacebo] [137]     float radius = 1.5;  // mix(1.5, 1.0, sigma_nsq / Var);
[   0.810][d][vo/gpu-next/libplacebo] [138] 
[   0.810][d][vo/gpu-next/libplacebo] [139]     float y = LUMA_texOff(0).x;
[   0.810][d][vo/gpu-next/libplacebo] [140]     float Mx[(N*(N+1))/2];
[   0.810][d][vo/gpu-next/libplacebo] [141]     float b[N];
[   0.810][d][vo/gpu-next/libplacebo] [142]     vec2 interp = X[N].zw;
[   0.810][d][vo/gpu-next/libplacebo] [143] 
[   0.810][d][vo/gpu-next/libplacebo] [144]     b[0] = c(0) - c(N) - C(0,N) + C(N,N); M(0, 0) = C(0,0) - C(0,N) - C(0,N) + C(N,N); M(0, 1) = C(0,1) - C(1,N) - C(0,N) + C(N,N); M(0, 2) = C(0,2) - C(2,N) - C(0,N) + C(N,N); M(0, 3) = C(0,3) - C(3,N) - C(0,N) + C(N,N); M(0, 4) = C(0,4) - C(4,N) - C(0,N) + C(N,N); M(0, 5) = C(0,5) - C(5,N) - C(0,N) + C(N,N); M(0, 6) = C(0,6) - C(6,N) - C(0,N) + C(N,N); M(0, 7) = C(0,7) - C(7,N) - C(0,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [145]     b[1] = c(1) - c(N) - C(1,N) + C(N,N); M(1, 1) = C(1,1) - C(1,N) - C(1,N) + C(N,N); M(1, 2) = C(1,2) - C(2,N) - C(1,N) + C(N,N); M(1, 3) = C(1,3) - C(3,N) - C(1,N) + C(N,N); M(1, 4) = C(1,4) - C(4,N) - C(1,N) + C(N,N); M(1, 5) = C(1,5) - C(5,N) - C(1,N) + C(N,N); M(1, 6) = C(1,6) - C(6,N) - C(1,N) + C(N,N); M(1, 7) = C(1,7) - C(7,N) - C(1,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [146]     b[2] = c(2) - c(N) - C(2,N) + C(N,N); M(2, 2) = C(2,2) - C(2,N) - C(2,N) + C(N,N); M(2, 3) = C(2,3) - C(3,N) - C(2,N) + C(N,N); M(2, 4) = C(2,4) - C(4,N) - C(2,N) + C(N,N); M(2, 5) = C(2,5) - C(5,N) - C(2,N) + C(N,N); M(2, 6) = C(2,6) - C(6,N) - C(2,N) + C(N,N); M(2, 7) = C(2,7) - C(7,N) - C(2,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [147]     b[3] = c(3) - c(N) - C(3,N) + C(N,N); M(3, 3) = C(3,3) - C(3,N) - C(3,N) + C(N,N); M(3, 4) = C(3,4) - C(4,N) - C(3,N) + C(N,N); M(3, 5) = C(3,5) - C(5,N) - C(3,N) + C(N,N); M(3, 6) = C(3,6) - C(6,N) - C(3,N) + C(N,N); M(3, 7) = C(3,7) - C(7,N) - C(3,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [148]     b[4] = c(4) - c(N) - C(4,N) + C(N,N); M(4, 4) = C(4,4) - C(4,N) - C(4,N) + C(N,N); M(4, 5) = C(4,5) - C(5,N) - C(4,N) + C(N,N); M(4, 6) = C(4,6) - C(6,N) - C(4,N) + C(N,N); M(4, 7) = C(4,7) - C(7,N) - C(4,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [149]     b[5] = c(5) - c(N) - C(5,N) + C(N,N); M(5, 5) = C(5,5) - C(5,N) - C(5,N) + C(N,N); M(5, 6) = C(5,6) - C(6,N) - C(5,N) + C(N,N); M(5, 7) = C(5,7) - C(7,N) - C(5,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [150]     b[6] = c(6) - c(N) - C(6,N) + C(N,N); M(6, 6) = C(6,6) - C(6,N) - C(6,N) + C(N,N); M(6, 7) = C(6,7) - C(7,N) - C(6,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [151]     b[7] = c(7) - c(N) - C(7,N) + C(N,N); M(7, 7) = C(7,7) - C(7,N) - C(7,N) + C(N,N);
[   0.810][d][vo/gpu-next/libplacebo] [152] 
[   0.810][d][vo/gpu-next/libplacebo] [153]     b[1] -= b[0] * M(0, 1) / M(0, 0); M(1, 1) -= M(0, 1) * M(0, 1) / M(0, 0); M(1, 2) -= M(0, 2) * M(0, 1) / M(0, 0); M(1, 3) -= M(0, 3) * M(0, 1) / M(0, 0); M(1, 4) -= M(0, 4) * M(0, 1) / M(0, 0); M(1, 5) -= M(0, 5) * M(0, 1) / M(0, 0); M(1, 6) -= M(0, 6) * M(0, 1) / M(0, 0); M(1, 7) -= M(0, 7) * M(0, 1) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [154]     b[2] -= b[0] * M(0, 2) / M(0, 0); M(2, 2) -= M(0, 2) * M(0, 2) / M(0, 0); M(2, 3) -= M(0, 3) * M(0, 2) / M(0, 0); M(2, 4) -= M(0, 4) * M(0, 2) / M(0, 0); M(2, 5) -= M(0, 5) * M(0, 2) / M(0, 0); M(2, 6) -= M(0, 6) * M(0, 2) / M(0, 0); M(2, 7) -= M(0, 7) * M(0, 2) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [155]     b[3] -= b[0] * M(0, 3) / M(0, 0); M(3, 3) -= M(0, 3) * M(0, 3) / M(0, 0); M(3, 4) -= M(0, 4) * M(0, 3) / M(0, 0); M(3, 5) -= M(0, 5) * M(0, 3) / M(0, 0); M(3, 6) -= M(0, 6) * M(0, 3) / M(0, 0); M(3, 7) -= M(0, 7) * M(0, 3) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [156]     b[4] -= b[0] * M(0, 4) / M(0, 0); M(4, 4) -= M(0, 4) * M(0, 4) / M(0, 0); M(4, 5) -= M(0, 5) * M(0, 4) / M(0, 0); M(4, 6) -= M(0, 6) * M(0, 4) / M(0, 0); M(4, 7) -= M(0, 7) * M(0, 4) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [157]     b[5] -= b[0] * M(0, 5) / M(0, 0); M(5, 5) -= M(0, 5) * M(0, 5) / M(0, 0); M(5, 6) -= M(0, 6) * M(0, 5) / M(0, 0); M(5, 7) -= M(0, 7) * M(0, 5) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [158]     b[6] -= b[0] * M(0, 6) / M(0, 0); M(6, 6) -= M(0, 6) * M(0, 6) / M(0, 0); M(6, 7) -= M(0, 7) * M(0, 6) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [159]     b[7] -= b[0] * M(0, 7) / M(0, 0); M(7, 7) -= M(0, 7) * M(0, 7) / M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [160] 
[   0.810][d][vo/gpu-next/libplacebo] [161]     b[2] -= b[1] * M(1, 2) / M(1, 1); M(2, 2) -= M(1, 2) * M(1, 2) / M(1, 1); M(2, 3) -= M(1, 3) * M(1, 2) / M(1, 1); M(2, 4) -= M(1, 4) * M(1, 2) / M(1, 1); M(2, 5) -= M(1, 5) * M(1, 2) / M(1, 1); M(2, 6) -= M(1, 6) * M(1, 2) / M(1, 1); M(2, 7) -= M(1, 7) * M(1, 2) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [162]     b[3] -= b[1] * M(1, 3) / M(1, 1); M(3, 3) -= M(1, 3) * M(1, 3) / M(1, 1); M(3, 4) -= M(1, 4) * M(1, 3) / M(1, 1); M(3, 5) -= M(1, 5) * M(1, 3) / M(1, 1); M(3, 6) -= M(1, 6) * M(1, 3) / M(1, 1); M(3, 7) -= M(1, 7) * M(1, 3) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [163]     b[4] -= b[1] * M(1, 4) / M(1, 1); M(4, 4) -= M(1, 4) * M(1, 4) / M(1, 1); M(4, 5) -= M(1, 5) * M(1, 4) / M(1, 1); M(4, 6) -= M(1, 6) * M(1, 4) / M(1, 1); M(4, 7) -= M(1, 7) * M(1, 4) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [164]     b[5] -= b[1] * M(1, 5) / M(1, 1); M(5, 5) -= M(1, 5) * M(1, 5) / M(1, 1); M(5, 6) -= M(1, 6) * M(1, 5) / M(1, 1); M(5, 7) -= M(1, 7) * M(1, 5) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [165]     b[6] -= b[1] * M(1, 6) / M(1, 1); M(6, 6) -= M(1, 6) * M(1, 6) / M(1, 1); M(6, 7) -= M(1, 7) * M(1, 6) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [166]     b[7] -= b[1] * M(1, 7) / M(1, 1); M(7, 7) -= M(1, 7) * M(1, 7) / M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [167] 
[   0.810][d][vo/gpu-next/libplacebo] [168]     b[3] -= b[2] * M(2, 3) / M(2, 2); M(3, 3) -= M(2, 3) * M(2, 3) / M(2, 2); M(3, 4) -= M(2, 4) * M(2, 3) / M(2, 2); M(3, 5) -= M(2, 5) * M(2, 3) / M(2, 2); M(3, 6) -= M(2, 6) * M(2, 3) / M(2, 2); M(3, 7) -= M(2, 7) * M(2, 3) / M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [169]     b[4] -= b[2] * M(2, 4) / M(2, 2); M(4, 4) -= M(2, 4) * M(2, 4) / M(2, 2); M(4, 5) -= M(2, 5) * M(2, 4) / M(2, 2); M(4, 6) -= M(2, 6) * M(2, 4) / M(2, 2); M(4, 7) -= M(2, 7) * M(2, 4) / M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [170]     b[5] -= b[2] * M(2, 5) / M(2, 2); M(5, 5) -= M(2, 5) * M(2, 5) / M(2, 2); M(5, 6) -= M(2, 6) * M(2, 5) / M(2, 2); M(5, 7) -= M(2, 7) * M(2, 5) / M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [171]     b[6] -= b[2] * M(2, 6) / M(2, 2); M(6, 6) -= M(2, 6) * M(2, 6) / M(2, 2); M(6, 7) -= M(2, 7) * M(2, 6) / M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [172]     b[7] -= b[2] * M(2, 7) / M(2, 2); M(7, 7) -= M(2, 7) * M(2, 7) / M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [173] 
[   0.810][d][vo/gpu-next/libplacebo] [174]     b[4] -= b[3] * M(3, 4) / M(3, 3); M(4, 4) -= M(3, 4) * M(3, 4) / M(3, 3); M(4, 5) -= M(3, 5) * M(3, 4) / M(3, 3); M(4, 6) -= M(3, 6) * M(3, 4) / M(3, 3); M(4, 7) -= M(3, 7) * M(3, 4) / M(3, 3);
[   0.810][d][vo/gpu-next/libplacebo] [175]     b[5] -= b[3] * M(3, 5) / M(3, 3); M(5, 5) -= M(3, 5) * M(3, 5) / M(3, 3); M(5, 6) -= M(3, 6) * M(3, 5) / M(3, 3); M(5, 7) -= M(3, 7) * M(3, 5) / M(3, 3);
[   0.810][d][vo/gpu-next/libplacebo] [176]     b[6] -= b[3] * M(3, 6) / M(3, 3); M(6, 6) -= M(3, 6) * M(3, 6) / M(3, 3); M(6, 7) -= M(3, 7) * M(3, 6) / M(3, 3);
[   0.810][d][vo/gpu-next/libplacebo] [177]     b[7] -= b[3] * M(3, 7) / M(3, 3); M(7, 7) -= M(3, 7) * M(3, 7) / M(3, 3);
[   0.810][d][vo/gpu-next/libplacebo] [178] 
[   0.810][d][vo/gpu-next/libplacebo] [179]     b[5] -= b[4] * M(4, 5) / M(4, 4); M(5, 5) -= M(4, 5) * M(4, 5) / M(4, 4); M(5, 6) -= M(4, 6) * M(4, 5) / M(4, 4); M(5, 7) -= M(4, 7) * M(4, 5) / M(4, 4);
[   0.810][d][vo/gpu-next/libplacebo] [180]     b[6] -= b[4] * M(4, 6) / M(4, 4); M(6, 6) -= M(4, 6) * M(4, 6) / M(4, 4); M(6, 7) -= M(4, 7) * M(4, 6) / M(4, 4);
[   0.810][d][vo/gpu-next/libplacebo] [181]     b[7] -= b[4] * M(4, 7) / M(4, 4); M(7, 7) -= M(4, 7) * M(4, 7) / M(4, 4);
[   0.810][d][vo/gpu-next/libplacebo] [182] 
[   0.810][d][vo/gpu-next/libplacebo] [183]     b[6] -= b[5] * M(5, 6) / M(5, 5); M(6, 6) -= M(5, 6) * M(5, 6) / M(5, 5); M(6, 7) -= M(5, 7) * M(5, 6) / M(5, 5);
[   0.810][d][vo/gpu-next/libplacebo] [184]     b[7] -= b[5] * M(5, 7) / M(5, 5); M(7, 7) -= M(5, 7) * M(5, 7) / M(5, 5);
[   0.810][d][vo/gpu-next/libplacebo] [185] 
[   0.810][d][vo/gpu-next/libplacebo] [186]     b[7] -= b[6] * M(6, 7) / M(6, 6); M(7, 7) -= M(6, 7) * M(6, 7) / M(6, 6);
[   0.810][d][vo/gpu-next/libplacebo] [187] 
[   0.810][d][vo/gpu-next/libplacebo] [188]     b[7] /= M(7, 7);
[   0.810][d][vo/gpu-next/libplacebo] [189]     interp += b[7] * (X[7] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [190] 
[   0.810][d][vo/gpu-next/libplacebo] [191]     b[6] -= M(6, 7) * b[7]; b[6] /= M(6, 6);
[   0.810][d][vo/gpu-next/libplacebo] [192]     interp += b[6] * (X[6] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [193] 
[   0.810][d][vo/gpu-next/libplacebo] [194]     b[5] -= M(5, 6) * b[6]; b[5] -= M(5, 7) * b[7]; b[5] /= M(5, 5);
[   0.810][d][vo/gpu-next/libplacebo] [195]     interp += b[5] * (X[5] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [196] 
[   0.810][d][vo/gpu-next/libplacebo] [197]     b[4] -= M(4, 5) * b[5]; b[4] -= M(4, 6) * b[6]; b[4] -= M(4, 7) * b[7]; b[4] /= M(4, 4);
[   0.810][d][vo/gpu-next/libplacebo] [198]     interp += b[4] * (X[4] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [199] 
[   0.810][d][vo/gpu-next/libplacebo] [200]     b[3] -= M(3, 4) * b[4]; b[3] -= M(3, 5) * b[5]; b[3] -= M(3, 6) * b[6]; b[3] -= M(3, 7) * b[7]; b[3] /= M(3, 3);
[   0.810][d][vo/gpu-next/libplacebo] [201]     interp += b[3] * (X[3] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [202] 
[   0.810][d][vo/gpu-next/libplacebo] [203]     b[2] -= M(2, 3) * b[3]; b[2] -= M(2, 4) * b[4]; b[2] -= M(2, 5) * b[5]; b[2] -= M(2, 6) * b[6]; b[2] -= M(2, 7) * b[7]; b[2] /= M(2, 2);
[   0.810][d][vo/gpu-next/libplacebo] [204]     interp += b[2] * (X[2] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [205] 
[   0.810][d][vo/gpu-next/libplacebo] [206]     b[1] -= M(1, 2) * b[2]; b[1] -= M(1, 3) * b[3]; b[1] -= M(1, 4) * b[4]; b[1] -= M(1, 5) * b[5]; b[1] -= M(1, 6) * b[6]; b[1] -= M(1, 7) * b[7]; b[1] /= M(1, 1);
[   0.810][d][vo/gpu-next/libplacebo] [207]     interp += b[1] * (X[1] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [208] 
[   0.810][d][vo/gpu-next/libplacebo] [209]     b[0] -= M(0, 1) * b[1]; b[0] -= M(0, 2) * b[2]; b[0] -= M(0, 3) * b[3]; b[0] -= M(0, 4) * b[4]; b[0] -= M(0, 5) * b[5]; b[0] -= M(0, 6) * b[6]; b[0] -= M(0, 7) * b[7]; b[0] /= M(0, 0);
[   0.810][d][vo/gpu-next/libplacebo] [210]     interp += b[0] * (X[0] - X[N]).zw;
[   0.810][d][vo/gpu-next/libplacebo] [211] 
[   0.810][d][vo/gpu-next/libplacebo] [212]     return interp.xyxy;
[   0.810][d][vo/gpu-next/libplacebo] [213] }
[   0.810][d][global] config path: 'shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl' -> '/home/zen/.config/mpv/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl'
[   0.810][d][global] user path: '~~/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl' -> '/home/zen/.config/mpv/shaders/AMD-FSR/AMD-FSR-EASU_rgb.glsl'
[   0.810][v][vo/gpu-next/libplacebo] Registering hook pass: AMD-FSR-EASU_rgb
[   0.810][d][vo/gpu-next/libplacebo] Loaded user shader:
[   0.810][d][vo/gpu-next/libplacebo] [  1] // Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
[   0.810][d][vo/gpu-next/libplacebo] [  2] //
[   0.810][d][vo/gpu-next/libplacebo] [  3] // Permission is hereby granted, free of charge, to any person obtaining a copy
[   0.810][d][vo/gpu-next/libplacebo] [  4] // of this software and associated documentation files (the "Software"), to deal
[   0.810][d][vo/gpu-next/libplacebo] [  5] // in the Software without restriction, including without limitation the rights
[   0.810][d][vo/gpu-next/libplacebo] [  6] // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
[   0.810][d][vo/gpu-next/libplacebo] [  7] // copies of the Software, and to permit persons to whom the Software is
[   0.810][d][vo/gpu-next/libplacebo] [  8] // furnished to do so, subject to the following conditions:
[   0.810][d][vo/gpu-next/libplacebo] [  9] //
[   0.810][d][vo/gpu-next/libplacebo] [ 10] // The above copyright notice and this permission notice shall be included in
[   0.810][d][vo/gpu-next/libplacebo] [ 11] // all copies or substantial portions of the Software.
[   0.810][d][vo/gpu-next/libplacebo] [ 12] //
[   0.810][d][vo/gpu-next/libplacebo] [ 13] // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
[   0.810][d][vo/gpu-next/libplacebo] [ 14] // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
[   0.810][d][vo/gpu-next/libplacebo] [ 15] // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
[   0.810][d][vo/gpu-next/libplacebo] [ 16] // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
[   0.810][d][vo/gpu-next/libplacebo] [ 17] // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
[   0.810][d][vo/gpu-next/libplacebo] [ 18] // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
[   0.810][d][vo/gpu-next/libplacebo] [ 19] // THE SOFTWARE.
[   0.810][d][vo/gpu-next/libplacebo] [ 20] 
[   0.810][d][vo/gpu-next/libplacebo] [ 21] // Mod of AMD-FSR.glsl
[   0.810][d][vo/gpu-next/libplacebo] [ 22] 
[   0.810][d][vo/gpu-next/libplacebo] [ 23] //!HOOK MAIN
[   0.810][d][vo/gpu-next/libplacebo] [ 24] //!BIND HOOKED
[   0.810][d][vo/gpu-next/libplacebo] [ 25] //!DESC AMD-FSR-EASU_rgb
[   0.810][d][vo/gpu-next/libplacebo] [ 26] //!WHEN OUTPUT.w OUTPUT.h * MAIN.w MAIN.h * / 1.0 >
[   0.810][d][vo/gpu-next/libplacebo] [ 27] //!WIDTH OUTPUT.w
[   0.810][d][vo/gpu-next/libplacebo] [ 28] //!HEIGHT OUTPUT.h
[   0.810][d][vo/gpu-next/libplacebo] [ 29] 
[   0.810][d][vo/gpu-next/libplacebo] [ 30] // User variables
[   0.810][d][vo/gpu-next/libplacebo] [ 31] #define FSR_EASU_PASSTHROUGH_ALPHA 1 // If set to 1, preserves transparency in the image. Can be disabled for more performance. 0 or 1.
[   0.810][d][vo/gpu-next/libplacebo] [ 32] 
[   0.810][d][vo/gpu-next/libplacebo] [ 33] // Shader code
[   0.810][d][vo/gpu-next/libplacebo] [ 34] 
[   0.810][d][vo/gpu-next/libplacebo] [ 35] float APrxLoRcpF1(float a) {
[   0.810][d][vo/gpu-next/libplacebo] [ 36] 	return uintBitsToFloat(uint(0x7ef07ebb) - floatBitsToUint(a));
[   0.810][d][vo/gpu-next/libplacebo] [ 37] }
[   0.810][d][vo/gpu-next/libplacebo] [ 38] 
[   0.810][d][vo/gpu-next/libplacebo] [ 39] float APrxLoRsqF1(float a) {
[   0.810][d][vo/gpu-next/libplacebo] [ 40] 	return uintBitsToFloat(uint(0x5f347d74) - (floatBitsToUint(a) >> uint(1)));
[   0.810][d][vo/gpu-next/libplacebo] [ 41] }
[   0.810][d][vo/gpu-next/libplacebo] [ 42] 
[   0.810][d][vo/gpu-next/libplacebo] [ 43] vec3 AMin3F3(vec3 x, vec3 y, vec3 z) {
[   0.810][d][vo/gpu-next/libplacebo] [ 44] 	return min(x, min(y, z));
[   0.810][d][vo/gpu-next/libplacebo] [ 45] }
[   0.810][d][vo/gpu-next/libplacebo] [ 46] 
[   0.810][d][vo/gpu-next/libplacebo] [ 47] vec3 AMax3F3(vec3 x, vec3 y, vec3 z) {
[   0.810][d][vo/gpu-next/libplacebo] [ 48] 	return max(x, max(y, z));
[   0.810][d][vo/gpu-next/libplacebo] [ 49] }
[   0.810][d][vo/gpu-next/libplacebo] [ 50] 
[   0.810][d][vo/gpu-next/libplacebo] [ 51]  // Filtering for a given tap for the scalar.
[   0.810][d][vo/gpu-next/libplacebo] [ 52]  void FsrEasuTap(
[   0.810][d][vo/gpu-next/libplacebo] [ 53] 	inout vec3 aC,  // Accumulated color, with negative lobe.
[   0.810][d][vo/gpu-next/libplacebo] [ 54] 	inout float aW, // Accumulated weight.
[   0.810][d][vo/gpu-next/libplacebo] [ 55] 	vec2 off,       // Pixel offset from resolve position to tap.
[   0.810][d][vo/gpu-next/libplacebo] [ 56] 	vec2 dir,       // Gradient direction.
[   0.810][d][vo/gpu-next/libplacebo] [ 57] 	vec2 len,       // Length.
[   0.810][d][vo/gpu-next/libplacebo] [ 58] 	float lob,      // Negative lobe strength.
[   0.810][d][vo/gpu-next/libplacebo] [ 59] 	float clp,      // Clipping point.
[   0.810][d][vo/gpu-next/libplacebo] [ 60] 	vec3 c){        // Tap color.
[   0.810][d][vo/gpu-next/libplacebo] [ 61] 	// Rotate offset by direction.
[   0.810][d][vo/gpu-next/libplacebo] [ 62] 	vec2 v;
[   0.810][d][vo/gpu-next/libplacebo] [ 63] 	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
[   0.810][d][vo/gpu-next/libplacebo] [ 64] 	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
[   0.810][d][vo/gpu-next/libplacebo] [ 65] 	// Anisotropy.
[   0.810][d][vo/gpu-next/libplacebo] [ 66] 	v *= len;
[   0.810][d][vo/gpu-next/libplacebo] [ 67] 	// Compute distance^2.
[   0.810][d][vo/gpu-next/libplacebo] [ 68] 	float d2 = v.x * v.x + v.y * v.y;
[   0.810][d][vo/gpu-next/libplacebo] [ 69] 	// Limit to the window as at corner, 2 taps can easily be outside.
[   0.810][d][vo/gpu-next/libplacebo] [ 70] 	d2 = min(d2, clp);
[   0.810][d][vo/gpu-next/libplacebo] [ 71] 	// Approximation of lancos2 without sin() or rcp(), or sqrt() to get x.
[   0.810][d][vo/gpu-next/libplacebo] [ 72] 	//  (25/16 * (2/5 * x^2 - 1)^2 - (25/16 - 1)) * (1/4 * x^2 - 1)^2
[   0.810][d][vo/gpu-next/libplacebo] [ 73] 	//  |_______________________________________|   |_______________|
[   0.810][d][vo/gpu-next/libplacebo] [ 74] 	//                   base                             window
[   0.810][d][vo/gpu-next/libplacebo] [ 75] 	// The general form of the 'base' is,
[   0.810][d][vo/gpu-next/libplacebo] [ 76] 	//  (a*(b*x^2-1)^2-(a-1))
[   0.810][d][vo/gpu-next/libplacebo] [ 77] 	// Where 'a=1/(2*b-b^2)' and 'b' moves around the negative lobe.
[   0.810][d][vo/gpu-next/libplacebo] [ 78] 	float wB = float(2.0 / 5.0) * d2 + float(-1.0);
[   0.810][d][vo/gpu-next/libplacebo] [ 79] 	float wA = lob * d2 + float(-1.0);
[   0.810][d][vo/gpu-next/libplacebo] [ 80] 	wB *= wB;
[   0.810][d][vo/gpu-next/libplacebo] [ 81] 	wA *= wA;
[   0.810][d][vo/gpu-next/libplacebo] [ 82] 	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
[   0.810][d][vo/gpu-next/libplacebo] [ 83] 	float w = wB * wA;
[   0.810][d][vo/gpu-next/libplacebo] [ 84] 	// Do weighted average.
[   0.810][d][vo/gpu-next/libplacebo] [ 85] 	aC += c * w;
[   0.810][d][vo/gpu-next/libplacebo] [ 86] 	aW += w;
[   0.810][d][vo/gpu-next/libplacebo] [ 87] }
[   0.810][d][vo/gpu-next/libplacebo] [ 88] 
[   0.810][d][vo/gpu-next/libplacebo] [ 89] // Accumulate direction and length.
[   0.810][d][vo/gpu-next/libplacebo] [ 90] void FsrEasuSet(
[   0.810][d][vo/gpu-next/libplacebo] [ 91] 	inout vec2 dir,
[   0.810][d][vo/gpu-next/libplacebo] [ 92] 	inout float len,
[   0.810][d][vo/gpu-next/libplacebo] [ 93] 	vec2 pp,
[   0.810][d][vo/gpu-next/libplacebo] [ 94] 	bool biS, bool biT, bool biU, bool biV,
[   0.810][d][vo/gpu-next/libplacebo] [ 95] 	float lA, float lB, float lC, float lD, float lE){
[   0.810][d][vo/gpu-next/libplacebo] [ 96] 	// Compute bilinear weight, branches factor out as predicates are compiler time immediates.
[   0.810][d][vo/gpu-next/libplacebo] [ 97] 	//  s t
[   0.810][d][vo/gpu-next/libplacebo] [ 98] 	//  u v
[   0.810][d][vo/gpu-next/libplacebo] [ 99] 	float w = float(0.0);
[   0.810][d][vo/gpu-next/libplacebo] [100] 	if(biS) w = (float(1.0) - pp.x) * (float(1.0) - pp.y);
[   0.810][d][vo/gpu-next/libplacebo] [101] 	if(biT) w = pp.x * (float(1.0) - pp.y);
[   0.810][d][vo/gpu-next/libplacebo] [102] 	if(biU) w = (float(1.0) - pp.x) * pp.y;
[   0.810][d][vo/gpu-next/libplacebo] [103] 	if(biV) w = pp.x * pp.y;
[   0.810][d][vo/gpu-next/libplacebo] [104] 	// Direction is the '+' diff.
[   0.810][d][vo/gpu-next/libplacebo] [105] 	//    a
[   0.810][d][vo/gpu-next/libplacebo] [106] 	//  b c d
[   0.810][d][vo/gpu-next/libplacebo] [107] 	//    e
[   0.810][d][vo/gpu-next/libplacebo] [108] 	// Then takes magnitude from abs average of both sides of 'c'.
[   0.810][d][vo/gpu-next/libplacebo] [109] 	// Length converts gradient reversal to 0, smoothly to non-reversal at 1, shaped, then adding horz and vert terms.
[   0.810][d][vo/gpu-next/libplacebo] [110] 	float dc = lD - lC;
[   0.810][d][vo/gpu-next/libplacebo] [111] 	float cb = lC - lB;
[   0.810][d][vo/gpu-next/libplacebo] [112] 	float lenX = max(abs(dc), abs(cb));
[   0.810][d][vo/gpu-next/libplacebo] [113] 	lenX = APrxLoRcpF1(lenX);
[   0.810][d][vo/gpu-next/libplacebo] [114] 	float dirX = lD - lB;
[   0.810][d][vo/gpu-next/libplacebo] [115] 	dir.x += dirX * w;
[   0.810][d][vo/gpu-next/libplacebo] [116] 	lenX = clamp(abs(dirX) * lenX, float(0.0), float(1.0));
[   0.810][d][vo/gpu-next/libplacebo] [117] 	lenX *= lenX;
[   0.810][d][vo/gpu-next/libplacebo] [118] 	len += lenX * w;
[   0.810][d][vo/gpu-next/libplacebo] [119] 	// Repeat for the y axis.
[   0.810][d][vo/gpu-next/libplacebo] [120] 	float ec = lE - lC;
[   0.810][d][vo/gpu-next/libplacebo] [121] 	float ca = lC - lA;
[   0.810][d][vo/gpu-next/libplacebo] [122] 	float lenY = max(abs(ec), abs(ca));
[   0.811][d][vo/gpu-next/libplacebo] [123] 	lenY = APrxLoRcpF1(lenY);
[   0.811][d][vo/gpu-next/libplacebo] [124] 	float dirY = lE - lA;
[   0.811][d][vo/gpu-next/libplacebo] [125] 	dir.y += dirY * w;
[   0.811][d][vo/gpu-next/libplacebo] [126] 	lenY = clamp(abs(dirY) * lenY, float(0.0), float(1.0));
[   0.811][d][vo/gpu-next/libplacebo] [127] 	lenY *= lenY;
[   0.811][d][vo/gpu-next/libplacebo] [128] 	len += lenY * w;
[   0.811][d][vo/gpu-next/libplacebo] [129] }
[   0.811][d][vo/gpu-next/libplacebo] [130] 
[   0.811][d][vo/gpu-next/libplacebo] [131] vec4 hook() {
[   0.811][d][vo/gpu-next/libplacebo] [132] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [133] 	// Get position of 'f'.
[   0.811][d][vo/gpu-next/libplacebo] [134] 	vec2 pp = HOOKED_pos * HOOKED_size - vec2(0.5);
[   0.811][d][vo/gpu-next/libplacebo] [135] 	vec2 fp = floor(pp);
[   0.811][d][vo/gpu-next/libplacebo] [136] 	pp -= fp;
[   0.811][d][vo/gpu-next/libplacebo] [137] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [138] 	// 12-tap kernel.
[   0.811][d][vo/gpu-next/libplacebo] [139] 	//    b c
[   0.811][d][vo/gpu-next/libplacebo] [140] 	//  e f g h
[   0.811][d][vo/gpu-next/libplacebo] [141] 	//  i j k l
[   0.811][d][vo/gpu-next/libplacebo] [142] 	//    n o
[   0.811][d][vo/gpu-next/libplacebo] [143] 	// Gather 4 ordering.
[   0.811][d][vo/gpu-next/libplacebo] [144] 	//  a b
[   0.811][d][vo/gpu-next/libplacebo] [145] 	//  r g
[   0.811][d][vo/gpu-next/libplacebo] [146] 	// For packed FP16, need either {rg} or {ab} so using the following setup for gather in all versions,
[   0.811][d][vo/gpu-next/libplacebo] [147] 	//    a b    <- unused (z)
[   0.811][d][vo/gpu-next/libplacebo] [148] 	//    r g
[   0.811][d][vo/gpu-next/libplacebo] [149] 	//  a b a b
[   0.811][d][vo/gpu-next/libplacebo] [150] 	//  r g r g
[   0.811][d][vo/gpu-next/libplacebo] [151] 	//    a b
[   0.811][d][vo/gpu-next/libplacebo] [152] 	//    r g    <- unused (z)
[   0.811][d][vo/gpu-next/libplacebo] [153] 	// Allowing dead-code removal to remove the 'z's.
[   0.811][d][vo/gpu-next/libplacebo] [154] 	
[   0.811][d][vo/gpu-next/libplacebo] [155]  #if (defined(HOOKED_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
[   0.811][d][vo/gpu-next/libplacebo] [156] 	vec4 bczzR = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 0);
[   0.811][d][vo/gpu-next/libplacebo] [157] 	vec4 bczzG = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 1);
[   0.811][d][vo/gpu-next/libplacebo] [158] 	vec4 bczzB = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 2);
[   0.811][d][vo/gpu-next/libplacebo] [159] 	
[   0.811][d][vo/gpu-next/libplacebo] [160] 	vec4 ijfeR = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 0);
[   0.811][d][vo/gpu-next/libplacebo] [161] 	vec4 ijfeG = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 1);
[   0.811][d][vo/gpu-next/libplacebo] [162] 	vec4 ijfeB = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 2);
[   0.811][d][vo/gpu-next/libplacebo] [163] 	
[   0.811][d][vo/gpu-next/libplacebo] [164] 	vec4 klhgR = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 0);
[   0.811][d][vo/gpu-next/libplacebo] [165] 	vec4 klhgG = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 1);
[   0.811][d][vo/gpu-next/libplacebo] [166] 	vec4 klhgB = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 2);
[   0.811][d][vo/gpu-next/libplacebo] [167] 	
[   0.811][d][vo/gpu-next/libplacebo] [168] 	vec4 zzonR = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 0);
[   0.811][d][vo/gpu-next/libplacebo] [169] 	vec4 zzonG = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 1);
[   0.811][d][vo/gpu-next/libplacebo] [170] 	vec4 zzonB = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 2);
[   0.811][d][vo/gpu-next/libplacebo] [171] #else
[   0.811][d][vo/gpu-next/libplacebo] [172] 	// pre-OpenGL 4.0 compatibility
[   0.811][d][vo/gpu-next/libplacebo] [173] 	vec3 b = HOOKED_tex(vec2((fp + vec2(0.5, -0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [174] 	vec3 c = HOOKED_tex(vec2((fp + vec2(1.5, -0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [175] 	
[   0.811][d][vo/gpu-next/libplacebo] [176] 	vec3 e = HOOKED_tex(vec2((fp + vec2(-0.5, 0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [177] 	vec3 f = HOOKED_tex(vec2((fp + vec2( 0.5, 0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [178] 	vec3 g = HOOKED_tex(vec2((fp + vec2( 1.5, 0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [179] 	vec3 h = HOOKED_tex(vec2((fp + vec2( 2.5, 0.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [180] 	
[   0.811][d][vo/gpu-next/libplacebo] [181] 	vec3 i = HOOKED_tex(vec2((fp + vec2(-0.5, 1.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [182] 	vec3 j = HOOKED_tex(vec2((fp + vec2( 0.5, 1.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [183] 	vec3 k = HOOKED_tex(vec2((fp + vec2( 1.5, 1.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [184] 	vec3 l = HOOKED_tex(vec2((fp + vec2( 2.5, 1.5)) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [185] 	
[   0.811][d][vo/gpu-next/libplacebo] [186] 	vec3 n = HOOKED_tex(vec2((fp + vec2(0.5, 2.5) ) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [187] 	vec3 o = HOOKED_tex(vec2((fp + vec2(1.5, 2.5) ) * HOOKED_pt)).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [188] 
[   0.811][d][vo/gpu-next/libplacebo] [189] 	vec4 bczzR = vec4(b.r, c.r, 0.0, 0.0);
[   0.811][d][vo/gpu-next/libplacebo] [190] 	vec4 bczzG = vec4(b.g, c.g, 0.0, 0.0);
[   0.811][d][vo/gpu-next/libplacebo] [191] 	vec4 bczzB = vec4(b.b, c.b, 0.0, 0.0);
[   0.811][d][vo/gpu-next/libplacebo] [192] 	
[   0.811][d][vo/gpu-next/libplacebo] [193] 	vec4 ijfeR = vec4(i.r, j.r, f.r, e.r);
[   0.811][d][vo/gpu-next/libplacebo] [194] 	vec4 ijfeG = vec4(i.g, j.g, f.g, e.g);
[   0.811][d][vo/gpu-next/libplacebo] [195] 	vec4 ijfeB = vec4(i.b, j.b, f.b, e.b);
[   0.811][d][vo/gpu-next/libplacebo] [196] 	
[   0.811][d][vo/gpu-next/libplacebo] [197] 	vec4 klhgR = vec4(k.r, l.r, h.r, g.r);
[   0.811][d][vo/gpu-next/libplacebo] [198] 	vec4 klhgG = vec4(k.g, l.g, h.g, g.g);
[   0.811][d][vo/gpu-next/libplacebo] [199] 	vec4 klhgB = vec4(k.b, l.b, h.b, g.b);
[   0.811][d][vo/gpu-next/libplacebo] [200] 	
[   0.811][d][vo/gpu-next/libplacebo] [201] 	vec4 zzonR = vec4(0.0, 0.0, o.r, n.r);
[   0.811][d][vo/gpu-next/libplacebo] [202] 	vec4 zzonG = vec4(0.0, 0.0, o.g, n.g);
[   0.811][d][vo/gpu-next/libplacebo] [203] 	vec4 zzonB = vec4(0.0, 0.0, o.b, n.b);
[   0.811][d][vo/gpu-next/libplacebo] [204] #endif
[   0.811][d][vo/gpu-next/libplacebo] [205] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [206] 	// Simplest multi-channel approximate luma possible (luma times 2, in 2 FMA/MAD).
[   0.811][d][vo/gpu-next/libplacebo] [207] 	vec4 bczzL = bczzB * vec4(0.5) + (bczzR * vec4(0.5) + bczzG);
[   0.811][d][vo/gpu-next/libplacebo] [208] 	vec4 ijfeL = ijfeB * vec4(0.5) + (ijfeR * vec4(0.5) + ijfeG);
[   0.811][d][vo/gpu-next/libplacebo] [209] 	vec4 klhgL = klhgB * vec4(0.5) + (klhgR * vec4(0.5) + klhgG);
[   0.811][d][vo/gpu-next/libplacebo] [210] 	vec4 zzonL = zzonB * vec4(0.5) + (zzonR * vec4(0.5) + zzonG);
[   0.811][d][vo/gpu-next/libplacebo] [211] 	// Rename.
[   0.811][d][vo/gpu-next/libplacebo] [212] 	float bL = bczzL.x;
[   0.811][d][vo/gpu-next/libplacebo] [213] 	float cL = bczzL.y;
[   0.811][d][vo/gpu-next/libplacebo] [214] 	float iL = ijfeL.x;
[   0.811][d][vo/gpu-next/libplacebo] [215] 	float jL = ijfeL.y;
[   0.811][d][vo/gpu-next/libplacebo] [216] 	float fL = ijfeL.z;
[   0.811][d][vo/gpu-next/libplacebo] [217] 	float eL = ijfeL.w;
[   0.811][d][vo/gpu-next/libplacebo] [218] 	float kL = klhgL.x;
[   0.811][d][vo/gpu-next/libplacebo] [219] 	float lL = klhgL.y;
[   0.811][d][vo/gpu-next/libplacebo] [220] 	float hL = klhgL.z;
[   0.811][d][vo/gpu-next/libplacebo] [221] 	float gL = klhgL.w;
[   0.811][d][vo/gpu-next/libplacebo] [222] 	float oL = zzonL.z;
[   0.811][d][vo/gpu-next/libplacebo] [223] 	float nL = zzonL.w;
[   0.811][d][vo/gpu-next/libplacebo] [224] 	// Accumulate for bilinear interpolation.
[   0.811][d][vo/gpu-next/libplacebo] [225] 	vec2 dir = vec2(0.0);
[   0.811][d][vo/gpu-next/libplacebo] [226] 	float len = float(0.0);
[   0.811][d][vo/gpu-next/libplacebo] [227] 	FsrEasuSet(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
[   0.811][d][vo/gpu-next/libplacebo] [228] 	FsrEasuSet(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
[   0.811][d][vo/gpu-next/libplacebo] [229] 	FsrEasuSet(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
[   0.811][d][vo/gpu-next/libplacebo] [230] 	FsrEasuSet(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
[   0.811][d][vo/gpu-next/libplacebo] [231] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [232] 	// Normalize with approximation, and cleanup close to zero.
[   0.811][d][vo/gpu-next/libplacebo] [233] 	vec2 dir2 = dir * dir;
[   0.811][d][vo/gpu-next/libplacebo] [234] 	float dirR = dir2.x + dir2.y;
[   0.811][d][vo/gpu-next/libplacebo] [235] 	bool zro = dirR < float(1.0 / 32768.0);
[   0.811][d][vo/gpu-next/libplacebo] [236] 	dirR = APrxLoRsqF1(dirR);
[   0.811][d][vo/gpu-next/libplacebo] [237] 	dirR = zro ? float(1.0) : dirR;
[   0.811][d][vo/gpu-next/libplacebo] [238] 	dir.x = zro ? float(1.0) : dir.x;
[   0.811][d][vo/gpu-next/libplacebo] [239] 	dir *= vec2(dirR);
[   0.811][d][vo/gpu-next/libplacebo] [240] 	// Transform from {0 to 2} to {0 to 1} range, and shape with square.
[   0.811][d][vo/gpu-next/libplacebo] [241] 	len = len * float(0.5);
[   0.811][d][vo/gpu-next/libplacebo] [242] 	len *= len;
[   0.811][d][vo/gpu-next/libplacebo] [243] 	// Stretch kernel {1.0 vert|horz, to sqrt(2.0) on diagonal}.
[   0.811][d][vo/gpu-next/libplacebo] [244] 	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
[   0.811][d][vo/gpu-next/libplacebo] [245] 	// Anisotropic length after rotation,
[   0.811][d][vo/gpu-next/libplacebo] [246] 	//  x := 1.0 lerp to 'stretch' on edges
[   0.811][d][vo/gpu-next/libplacebo] [247] 	//  y := 1.0 lerp to 2x on edges
[   0.811][d][vo/gpu-next/libplacebo] [248] 	vec2 len2 = vec2(float(1.0) + (stretch - float(1.0)) * len, float(1.0) + float(-0.5) * len);
[   0.811][d][vo/gpu-next/libplacebo] [249] 	// Based on the amount of 'edge',
[   0.811][d][vo/gpu-next/libplacebo] [250] 	// the window shifts from +/-{sqrt(2.0) to slightly beyond 2.0}.
[   0.811][d][vo/gpu-next/libplacebo] [251] 	float lob = float(0.5) + float((1.0 / 4.0 - 0.04) - 0.5) * len;
[   0.811][d][vo/gpu-next/libplacebo] [252] 	// Set distance^2 clipping point to the end of the adjustable window.
[   0.811][d][vo/gpu-next/libplacebo] [253] 	float clp = APrxLoRcpF1(lob);
[   0.811][d][vo/gpu-next/libplacebo] [254] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [255] 	// Accumulation mixed with min/max of 4 nearest.
[   0.811][d][vo/gpu-next/libplacebo] [256] 	//    b c
[   0.811][d][vo/gpu-next/libplacebo] [257] 	//  e f g h
[   0.811][d][vo/gpu-next/libplacebo] [258] 	//  i j k l
[   0.811][d][vo/gpu-next/libplacebo] [259] 	//    n o
[   0.811][d][vo/gpu-next/libplacebo] [260] 	vec3 min4 = min(AMin3F3(vec3(ijfeR.z, ijfeG.z, ijfeB.z), vec3(klhgR.w, klhgG.w, klhgB.w), vec3(ijfeR.y, ijfeG.y, ijfeB.y)), vec3(klhgR.x, klhgG.x, klhgB.x));
[   0.811][d][vo/gpu-next/libplacebo] [261] 	vec3 max4 = max(AMax3F3(vec3(ijfeR.z, ijfeG.z, ijfeB.z), vec3(klhgR.w, klhgG.w, klhgB.w), vec3(ijfeR.y, ijfeG.y, ijfeB.y)), vec3(klhgR.x, klhgG.x, klhgB.x));
[   0.811][d][vo/gpu-next/libplacebo] [262] 
[   0.811][d][vo/gpu-next/libplacebo] [263] 	// Accumulation.
[   0.811][d][vo/gpu-next/libplacebo] [264] 	vec3 aC = vec3(0.0);
[   0.811][d][vo/gpu-next/libplacebo] [265] 	float aW = float(0.0);
[   0.811][d][vo/gpu-next/libplacebo] [266] 	FsrEasuTap(aC, aW, vec2( 0.0,-1.0) - pp,dir, len2, lob, clp, vec3(bczzR.x, bczzG.x, bczzB.x)); // b
[   0.811][d][vo/gpu-next/libplacebo] [267] 	FsrEasuTap(aC, aW, vec2( 1.0,-1.0) - pp,dir, len2, lob, clp, vec3(bczzR.y, bczzG.y, bczzB.y)); // c
[   0.811][d][vo/gpu-next/libplacebo] [268] 	FsrEasuTap(aC, aW, vec2(-1.0, 1.0) - pp,dir, len2, lob, clp, vec3(ijfeR.x, ijfeG.x, ijfeB.x)); // i
[   0.811][d][vo/gpu-next/libplacebo] [269] 	FsrEasuTap(aC, aW, vec2( 0.0, 1.0) - pp,dir, len2, lob, clp, vec3(ijfeR.y, ijfeG.y, ijfeB.y)); // j
[   0.811][d][vo/gpu-next/libplacebo] [270] 	FsrEasuTap(aC, aW, vec2( 0.0, 0.0) - pp,dir, len2, lob, clp, vec3(ijfeR.z, ijfeG.z, ijfeB.z)); // f
[   0.811][d][vo/gpu-next/libplacebo] [271] 	FsrEasuTap(aC, aW, vec2(-1.0, 0.0) - pp,dir, len2, lob, clp, vec3(ijfeR.w, ijfeG.w, ijfeB.w)); // e
[   0.811][d][vo/gpu-next/libplacebo] [272] 	FsrEasuTap(aC, aW, vec2( 1.0, 1.0) - pp,dir, len2, lob, clp, vec3(klhgR.x, klhgG.x, klhgB.x)); // k
[   0.811][d][vo/gpu-next/libplacebo] [273] 	FsrEasuTap(aC, aW, vec2( 2.0, 1.0) - pp,dir, len2, lob, clp, vec3(klhgR.y, klhgG.y, klhgB.y)); // l
[   0.811][d][vo/gpu-next/libplacebo] [274] 	FsrEasuTap(aC, aW, vec2( 2.0, 0.0) - pp,dir, len2, lob, clp, vec3(klhgR.z, klhgG.z, klhgB.z)); // h
[   0.811][d][vo/gpu-next/libplacebo] [275] 	FsrEasuTap(aC, aW, vec2( 1.0, 0.0) - pp,dir, len2, lob, clp, vec3(klhgR.w, klhgG.w, klhgB.w)); // g
[   0.811][d][vo/gpu-next/libplacebo] [276] 	FsrEasuTap(aC, aW, vec2( 1.0, 2.0) - pp,dir, len2, lob, clp, vec3(zzonR.z, zzonG.z, zzonB.z)); // o
[   0.811][d][vo/gpu-next/libplacebo] [277] 	FsrEasuTap(aC, aW, vec2( 0.0, 2.0) - pp,dir, len2, lob, clp, vec3(zzonR.w, zzonG.w, zzonB.w)); // n
[   0.811][d][vo/gpu-next/libplacebo] [278] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.811][d][vo/gpu-next/libplacebo] [279] 	// Normalize and dering.
[   0.811][d][vo/gpu-next/libplacebo] [280] 	vec4 pix;
[   0.811][d][vo/gpu-next/libplacebo] [281] 	pix.rgb = min(max4, max(min4, aC * vec3(1.0 / aW)));
[   0.811][d][vo/gpu-next/libplacebo] [282] 
[   0.811][d][vo/gpu-next/libplacebo] [283] 	#if (FSR_EASU_PASSTHROUGH_ALPHA == 1)
[   0.811][d][vo/gpu-next/libplacebo] [284] 		pix.a = HOOKED_tex(HOOKED_pos).a;
[   0.811][d][vo/gpu-next/libplacebo] [285] 	#else
[   0.811][d][vo/gpu-next/libplacebo] [286] 		pix.a = float(1.0);
[   0.811][d][vo/gpu-next/libplacebo] [287] 	#endif
[   0.811][d][vo/gpu-next/libplacebo] [288] 	return pix;
[   0.811][d][vo/gpu-next/libplacebo] [289] }
[   0.811][d][vo/gpu-next/libplacebo] [290] 
[   0.811][d][global] config path: 'shaders/igv/SSimDownscaler.glsl' -> '/home/zen/.config/mpv/shaders/igv/SSimDownscaler.glsl'
[   0.811][d][global] user path: '~~/shaders/igv/SSimDownscaler.glsl' -> '/home/zen/.config/mpv/shaders/igv/SSimDownscaler.glsl'
[   0.811][v][vo/gpu-next/libplacebo] Registering hook pass: SSimDownscaler L2 pass 1
[   0.811][v][vo/gpu-next/libplacebo] Registering hook pass: SSimDownscaler L2 pass 2
[   0.811][v][vo/gpu-next/libplacebo] Registering hook pass: SSimDownscaler mean & R
[   0.811][v][vo/gpu-next/libplacebo] Registering hook pass: SSimDownscaler final pass
[   0.811][d][vo/gpu-next/libplacebo] Loaded user shader:
[   0.811][d][vo/gpu-next/libplacebo] [  1] // This library is free software; you can redistribute it and/or
[   0.811][d][vo/gpu-next/libplacebo] [  2] // modify it under the terms of the GNU Lesser General Public
[   0.811][d][vo/gpu-next/libplacebo] [  3] // License as published by the Free Software Foundation; either
[   0.811][d][vo/gpu-next/libplacebo] [  4] // version 3.0 of the License, or (at your option) any later version.
[   0.811][d][vo/gpu-next/libplacebo] [  5] // 
[   0.811][d][vo/gpu-next/libplacebo] [  6] // This library is distributed in the hope that it will be useful,
[   0.811][d][vo/gpu-next/libplacebo] [  7] // but WITHOUT ANY WARRANTY; without even the implied warranty of
[   0.811][d][vo/gpu-next/libplacebo] [  8] // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
[   0.811][d][vo/gpu-next/libplacebo] [  9] // Lesser General Public License for more details.
[   0.811][d][vo/gpu-next/libplacebo] [ 10] // 
[   0.811][d][vo/gpu-next/libplacebo] [ 11] // You should have received a copy of the GNU Lesser General Public
[   0.811][d][vo/gpu-next/libplacebo] [ 12] // License along with this library.
[   0.811][d][vo/gpu-next/libplacebo] [ 13] 
[   0.811][d][vo/gpu-next/libplacebo] [ 14] //!HOOK POSTKERNEL
[   0.811][d][vo/gpu-next/libplacebo] [ 15] //!BIND PREKERNEL
[   0.811][d][vo/gpu-next/libplacebo] [ 16] //!BIND HOOKED
[   0.811][d][vo/gpu-next/libplacebo] [ 17] //!SAVE L2
[   0.811][d][vo/gpu-next/libplacebo] [ 18] //!WIDTH NATIVE_CROPPED.w
[   0.811][d][vo/gpu-next/libplacebo] [ 19] //!WHEN NATIVE_CROPPED.h POSTKERNEL.h >
[   0.811][d][vo/gpu-next/libplacebo] [ 20] //!COMPONENTS 3
[   0.811][d][vo/gpu-next/libplacebo] [ 21] //!DESC SSimDownscaler L2 pass 1
[   0.811][d][vo/gpu-next/libplacebo] [ 22] 
[   0.811][d][vo/gpu-next/libplacebo] [ 23] #define axis 1
[   0.811][d][vo/gpu-next/libplacebo] [ 24] 
[   0.811][d][vo/gpu-next/libplacebo] [ 25] #define offset      vec2(0,0)
[   0.811][d][vo/gpu-next/libplacebo] [ 26] 
[   0.811][d][vo/gpu-next/libplacebo] [ 27] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[   0.811][d][vo/gpu-next/libplacebo] [ 28] #define Kernel(x)   MN(.0, .5, abs(x))
[   0.811][d][vo/gpu-next/libplacebo] [ 29] #define taps        2.0
[   0.811][d][vo/gpu-next/libplacebo] [ 30] 
[   0.811][d][vo/gpu-next/libplacebo] [ 31] vec4 hook() {
[   0.811][d][vo/gpu-next/libplacebo] [ 32]     vec2 base = PREKERNEL_pt * (PREKERNEL_pos * input_size + tex_offset);
[   0.811][d][vo/gpu-next/libplacebo] [ 33] 
[   0.811][d][vo/gpu-next/libplacebo] [ 34]     float low  = ceil((PREKERNEL_pos - taps*POSTKERNEL_pt) * input_size - offset + tex_offset - 0.5)[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 35]     float high = floor((PREKERNEL_pos + taps*POSTKERNEL_pt) * input_size - offset + tex_offset - 0.5)[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 36] 
[   0.811][d][vo/gpu-next/libplacebo] [ 37]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [ 38]     vec4 avg = vec4(0);
[   0.811][d][vo/gpu-next/libplacebo] [ 39]     vec2 pos = base;
[   0.811][d][vo/gpu-next/libplacebo] [ 40] 
[   0.811][d][vo/gpu-next/libplacebo] [ 41]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [ 42]         pos[axis] = PREKERNEL_pt[axis] * (k - offset[axis] + 0.5);
[   0.811][d][vo/gpu-next/libplacebo] [ 43]         float rel = (pos[axis] - base[axis])*POSTKERNEL_size[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 44]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [ 45] 
[   0.811][d][vo/gpu-next/libplacebo] [ 46]         vec4 tex = textureLod(PREKERNEL_raw, pos, 0.0) * PREKERNEL_mul;
[   0.811][d][vo/gpu-next/libplacebo] [ 47]         avg += w * tex * tex;
[   0.811][d][vo/gpu-next/libplacebo] [ 48]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [ 49]     }
[   0.811][d][vo/gpu-next/libplacebo] [ 50]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [ 51] 
[   0.811][d][vo/gpu-next/libplacebo] [ 52]     return avg;
[   0.811][d][vo/gpu-next/libplacebo] [ 53] }
[   0.811][d][vo/gpu-next/libplacebo] [ 54] 
[   0.811][d][vo/gpu-next/libplacebo] [ 55] //!HOOK POSTKERNEL
[   0.811][d][vo/gpu-next/libplacebo] [ 56] //!BIND L2
[   0.811][d][vo/gpu-next/libplacebo] [ 57] //!BIND HOOKED
[   0.811][d][vo/gpu-next/libplacebo] [ 58] //!SAVE L2
[   0.811][d][vo/gpu-next/libplacebo] [ 59] //!WHEN NATIVE_CROPPED.w POSTKERNEL.w >
[   0.811][d][vo/gpu-next/libplacebo] [ 60] //!COMPONENTS 3
[   0.811][d][vo/gpu-next/libplacebo] [ 61] //!DESC SSimDownscaler L2 pass 2
[   0.811][d][vo/gpu-next/libplacebo] [ 62] 
[   0.811][d][vo/gpu-next/libplacebo] [ 63] #define axis 0
[   0.811][d][vo/gpu-next/libplacebo] [ 64] 
[   0.811][d][vo/gpu-next/libplacebo] [ 65] #define offset      vec2(0,0)
[   0.811][d][vo/gpu-next/libplacebo] [ 66] 
[   0.811][d][vo/gpu-next/libplacebo] [ 67] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[   0.811][d][vo/gpu-next/libplacebo] [ 68] #define Kernel(x)   MN(.0, .5, abs(x))
[   0.811][d][vo/gpu-next/libplacebo] [ 69] #define taps        2.0
[   0.811][d][vo/gpu-next/libplacebo] [ 70] 
[   0.811][d][vo/gpu-next/libplacebo] [ 71] vec4 hook() {
[   0.811][d][vo/gpu-next/libplacebo] [ 72]     float low  = ceil((L2_pos - taps*POSTKERNEL_pt) * L2_size - offset - 0.5)[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 73]     float high = floor((L2_pos + taps*POSTKERNEL_pt) * L2_size - offset - 0.5)[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 74] 
[   0.811][d][vo/gpu-next/libplacebo] [ 75]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [ 76]     vec4 avg = vec4(0);
[   0.811][d][vo/gpu-next/libplacebo] [ 77]     vec2 pos = L2_pos;
[   0.811][d][vo/gpu-next/libplacebo] [ 78] 
[   0.811][d][vo/gpu-next/libplacebo] [ 79]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [ 80]         pos[axis] = L2_pt[axis] * (k - offset[axis] + 0.5);
[   0.811][d][vo/gpu-next/libplacebo] [ 81]         float rel = (pos[axis] - L2_pos[axis])*POSTKERNEL_size[axis];
[   0.811][d][vo/gpu-next/libplacebo] [ 82]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [ 83] 
[   0.811][d][vo/gpu-next/libplacebo] [ 84]         avg += w * textureLod(L2_raw, pos, 0.0) * L2_mul;
[   0.811][d][vo/gpu-next/libplacebo] [ 85]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [ 86]     }
[   0.811][d][vo/gpu-next/libplacebo] [ 87]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [ 88] 
[   0.811][d][vo/gpu-next/libplacebo] [ 89]     return avg;
[   0.811][d][vo/gpu-next/libplacebo] [ 90] }
[   0.811][d][vo/gpu-next/libplacebo] [ 91] 
[   0.811][d][vo/gpu-next/libplacebo] [ 92] //!HOOK POSTKERNEL
[   0.811][d][vo/gpu-next/libplacebo] [ 93] //!BIND HOOKED
[   0.811][d][vo/gpu-next/libplacebo] [ 94] //!BIND L2
[   0.811][d][vo/gpu-next/libplacebo] [ 95] //!SAVE MR
[   0.811][d][vo/gpu-next/libplacebo] [ 96] //!WHEN NATIVE_CROPPED.h POSTKERNEL.h >
[   0.811][d][vo/gpu-next/libplacebo] [ 97] //!COMPONENTS 4
[   0.811][d][vo/gpu-next/libplacebo] [ 98] //!DESC SSimDownscaler mean & R
[   0.811][d][vo/gpu-next/libplacebo] [ 99] 
[   0.811][d][vo/gpu-next/libplacebo] [100] #define oversharp   0.0
[   0.811][d][vo/gpu-next/libplacebo] [101] 
[   0.811][d][vo/gpu-next/libplacebo] [102] #define sigma_nsq   10. / (255.*255.)
[   0.811][d][vo/gpu-next/libplacebo] [103] #define locality    2.0
[   0.811][d][vo/gpu-next/libplacebo] [104] 
[   0.811][d][vo/gpu-next/libplacebo] [105] #define offset      vec2(0,0)
[   0.811][d][vo/gpu-next/libplacebo] [106] 
[   0.811][d][vo/gpu-next/libplacebo] [107] #define Kernel(x)   pow(1.0 / locality, abs(x))
[   0.811][d][vo/gpu-next/libplacebo] [108] #define taps        3.0
[   0.811][d][vo/gpu-next/libplacebo] [109] 
[   0.811][d][vo/gpu-next/libplacebo] [110] #define Luma(rgb)   ( dot(rgb, vec3(0.2126, 0.7152, 0.0722)) )
[   0.811][d][vo/gpu-next/libplacebo] [111] 
[   0.811][d][vo/gpu-next/libplacebo] [112] mat3x3 ScaleH(vec2 pos) {
[   0.811][d][vo/gpu-next/libplacebo] [113]     float low  = ceil(-0.5*taps - offset)[0];
[   0.811][d][vo/gpu-next/libplacebo] [114]     float high = floor(0.5*taps - offset)[0];
[   0.811][d][vo/gpu-next/libplacebo] [115] 
[   0.811][d][vo/gpu-next/libplacebo] [116]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [117]     mat3x3 avg = mat3x3(0);
[   0.811][d][vo/gpu-next/libplacebo] [118] 
[   0.811][d][vo/gpu-next/libplacebo] [119]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [120]         pos[0] = HOOKED_pos[0] + HOOKED_pt[0] * k;
[   0.811][d][vo/gpu-next/libplacebo] [121]         float rel = k + offset[0];
[   0.811][d][vo/gpu-next/libplacebo] [122]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [123] 
[   0.811][d][vo/gpu-next/libplacebo] [124]         vec3 L = POSTKERNEL_tex(pos).rgb;
[   0.811][d][vo/gpu-next/libplacebo] [125]         avg += w * mat3x3(L, L*L, L2_tex(pos).rgb);
[   0.811][d][vo/gpu-next/libplacebo] [126]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [127]     }
[   0.811][d][vo/gpu-next/libplacebo] [128]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [129] 
[   0.811][d][vo/gpu-next/libplacebo] [130]     return avg;
[   0.811][d][vo/gpu-next/libplacebo] [131] }
[   0.811][d][vo/gpu-next/libplacebo] [132] 
[   0.811][d][vo/gpu-next/libplacebo] [133] vec4 hook() {
[   0.811][d][vo/gpu-next/libplacebo] [134]     vec2 pos = HOOKED_pos;
[   0.811][d][vo/gpu-next/libplacebo] [135] 
[   0.811][d][vo/gpu-next/libplacebo] [136]     float low  = ceil(-0.5*taps - offset)[1];
[   0.811][d][vo/gpu-next/libplacebo] [137]     float high = floor(0.5*taps - offset)[1];
[   0.811][d][vo/gpu-next/libplacebo] [138] 
[   0.811][d][vo/gpu-next/libplacebo] [139]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [140]     mat3x3 avg = mat3x3(0);
[   0.811][d][vo/gpu-next/libplacebo] [141] 
[   0.811][d][vo/gpu-next/libplacebo] [142]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [143]         pos[1] = HOOKED_pos[1] + HOOKED_pt[1] * k;
[   0.811][d][vo/gpu-next/libplacebo] [144]         float rel = k + offset[1];
[   0.811][d][vo/gpu-next/libplacebo] [145]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [146] 
[   0.811][d][vo/gpu-next/libplacebo] [147]         avg += w * ScaleH(pos);
[   0.811][d][vo/gpu-next/libplacebo] [148]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [149]     }
[   0.811][d][vo/gpu-next/libplacebo] [150]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [151] 
[   0.811][d][vo/gpu-next/libplacebo] [152]     float Sl = Luma(max(avg[1] - avg[0] * avg[0], 0.));
[   0.811][d][vo/gpu-next/libplacebo] [153]     float Sh = Luma(max(avg[2] - avg[0] * avg[0], 0.));
[   0.811][d][vo/gpu-next/libplacebo] [154]     return vec4(avg[0], mix(sqrt((Sh + sigma_nsq) / (Sl + sigma_nsq)) * (1. + oversharp), clamp(Sh / Sl, 0., 1.), float(Sl > Sh)));
[   0.811][d][vo/gpu-next/libplacebo] [155] }
[   0.811][d][vo/gpu-next/libplacebo] [156] 
[   0.811][d][vo/gpu-next/libplacebo] [157] //!HOOK POSTKERNEL
[   0.811][d][vo/gpu-next/libplacebo] [158] //!BIND HOOKED
[   0.811][d][vo/gpu-next/libplacebo] [159] //!BIND MR
[   0.811][d][vo/gpu-next/libplacebo] [160] //!WHEN NATIVE_CROPPED.h POSTKERNEL.h >
[   0.811][d][vo/gpu-next/libplacebo] [161] //!DESC SSimDownscaler final pass
[   0.811][d][vo/gpu-next/libplacebo] [162] 
[   0.811][d][vo/gpu-next/libplacebo] [163] #define locality    2.0
[   0.811][d][vo/gpu-next/libplacebo] [164] 
[   0.811][d][vo/gpu-next/libplacebo] [165] #define offset      vec2(0,0)
[   0.811][d][vo/gpu-next/libplacebo] [166] 
[   0.811][d][vo/gpu-next/libplacebo] [167] #define Kernel(x)   pow(1.0 / locality, abs(x))
[   0.811][d][vo/gpu-next/libplacebo] [168] #define taps        3.0
[   0.811][d][vo/gpu-next/libplacebo] [169] 
[   0.811][d][vo/gpu-next/libplacebo] [170] #define Gamma(x)    ( pow(x, vec3(1.0/2.0)) )
[   0.811][d][vo/gpu-next/libplacebo] [171] #define GammaInv(x) ( pow(clamp(x, 0.0, 1.0), vec3(2.0)) )
[   0.811][d][vo/gpu-next/libplacebo] [172] 
[   0.811][d][vo/gpu-next/libplacebo] [173] mat3x3 ScaleH(vec2 pos) {
[   0.811][d][vo/gpu-next/libplacebo] [174]     float low  = ceil(-0.5*taps - offset)[0];
[   0.811][d][vo/gpu-next/libplacebo] [175]     float high = floor(0.5*taps - offset)[0];
[   0.811][d][vo/gpu-next/libplacebo] [176] 
[   0.811][d][vo/gpu-next/libplacebo] [177]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [178]     mat3x3 avg = mat3x3(0);
[   0.811][d][vo/gpu-next/libplacebo] [179] 
[   0.811][d][vo/gpu-next/libplacebo] [180]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [181]         pos[0] = HOOKED_pos[0] + HOOKED_pt[0] * k;
[   0.811][d][vo/gpu-next/libplacebo] [182]         float rel = k + offset[0];
[   0.811][d][vo/gpu-next/libplacebo] [183]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [184] 
[   0.811][d][vo/gpu-next/libplacebo] [185]         vec4 MR = MR_tex(pos);
[   0.811][d][vo/gpu-next/libplacebo] [186]         avg += w * mat3x3(MR.a*MR.rgb, MR.rgb, MR.aaa);
[   0.811][d][vo/gpu-next/libplacebo] [187]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [188]     }
[   0.811][d][vo/gpu-next/libplacebo] [189]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [190] 
[   0.811][d][vo/gpu-next/libplacebo] [191]     return avg;
[   0.811][d][vo/gpu-next/libplacebo] [192] }
[   0.811][d][vo/gpu-next/libplacebo] [193] 
[   0.811][d][vo/gpu-next/libplacebo] [194] vec4 hook() {
[   0.811][d][vo/gpu-next/libplacebo] [195]     vec2 pos = HOOKED_pos;
[   0.811][d][vo/gpu-next/libplacebo] [196] 
[   0.811][d][vo/gpu-next/libplacebo] [197]     float low  = ceil(-0.5*taps - offset)[1];
[   0.811][d][vo/gpu-next/libplacebo] [198]     float high = floor(0.5*taps - offset)[1];
[   0.811][d][vo/gpu-next/libplacebo] [199] 
[   0.811][d][vo/gpu-next/libplacebo] [200]     float W = 0.0;
[   0.811][d][vo/gpu-next/libplacebo] [201]     mat3x3 avg = mat3x3(0);
[   0.811][d][vo/gpu-next/libplacebo] [202] 
[   0.811][d][vo/gpu-next/libplacebo] [203]     for (float k = low; k <= high; k++) {
[   0.811][d][vo/gpu-next/libplacebo] [204]         pos[1] = HOOKED_pos[1] + HOOKED_pt[1] * k;
[   0.811][d][vo/gpu-next/libplacebo] [205]         float rel = k + offset[1];
[   0.811][d][vo/gpu-next/libplacebo] [206]         float w = Kernel(rel);
[   0.811][d][vo/gpu-next/libplacebo] [207] 
[   0.811][d][vo/gpu-next/libplacebo] [208]         avg += w * ScaleH(pos);
[   0.811][d][vo/gpu-next/libplacebo] [209]         W += w;
[   0.811][d][vo/gpu-next/libplacebo] [210]     }
[   0.811][d][vo/gpu-next/libplacebo] [211]     avg /= W;
[   0.811][d][vo/gpu-next/libplacebo] [212]     vec4 L = POSTKERNEL_texOff(0);
[   0.811][d][vo/gpu-next/libplacebo] [213]     return vec4(avg[1] + avg[2] * L.rgb - avg[0], L.a);
[   0.811][d][vo/gpu-next/libplacebo] [214] }
[   0.811][d][vo/gpu-next] Render options updated, resetting render state.
[   0.813][v][vo/gpu-next] Assuming 100.000000 FPS for display sync.
[   0.813][v][vd] Container reported FPS: 29.970030
[   0.813][v][vd] Codec list:
[   0.813][v][vd]     h264 - H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
[   0.813][v][vd]     h264_v4l2m2m (h264) - V4L2 mem2mem H.264 decoder wrapper
[   0.813][v][vd]     h264_qsv (h264) - H264 video (Intel Quick Sync Video acceleration)
[   0.813][v][vd]     h264_cuvid (h264) - Nvidia CUVID H264 decoder
[   0.813][v][vd] Opening decoder h264
[   0.813][v][vd] No hardware decoding requested.
[   0.813][v][vd] Using software decoding.
[   0.813][v][vd] Detected 8 logical cores.
[   0.813][v][vd] Requesting 9 threads for decoding.
[   0.816][v][vd] Selected decoder: h264 - H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
[   0.816][v][vf] User filter list:
[   0.816][v][vf]   (empty)
[   0.816][v][ad] Codec list:
[   0.816][v][ad]     aac - AAC (Advanced Audio Coding)
[   0.816][v][ad]     aac_fixed (aac) - AAC (Advanced Audio Coding)
[   0.816][v][ad] Opening decoder aac
[   0.816][v][ad] Requesting 1 threads for decoding.
[   0.816][v][ad] Selected decoder: aac - AAC (Advanced Audio Coding)
[   0.816][v][af] User filter list:
[   0.816][v][af]   (empty)
[   0.816][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.816][d][sub/ass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.817][v][sub/ass] libass API version: 0x1703000
[   0.817][v][sub/ass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.817][v][sub/ass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.817][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.817][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.817][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.817][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.817][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.817][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.817][v][sub/ass] Setting up fonts...
[   0.818][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.818][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.818][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.818][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.822][v][sub/ass] Using font provider fontconfig
[   0.822][v][sub/ass] Done.
[   0.822][v][cplayer] Starting playback...
[   0.822][v][file] stream level seek from 253905402 to 1574654
[   0.822][v][lavf] queuing seek to -0.000000 (cascade)
[   0.822][v][lavf] execute seek (to -0.000000 flags 0)
[   0.822][v][lavf] seek done
[   0.824][v][lavf] EOF reached.
[   0.824][v][af] [in] 48000Hz stereo 2ch floatp
[   0.824][v][af] [userspeed] 48000Hz stereo 2ch floatp
[   0.824][v][af] [userspeed] (disabled)
[   0.824][v][af] [convert] 48000Hz stereo 2ch floatp
[   0.824][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[   0.824][d][vd] DR parameter change to 848x482 yuv420p align=64
[   0.824][d][vd] Allocating new (host-cached) DR image...
[   0.824][d][vo/gpu-next/libplacebo] Allocating 2777088 memory of type 0xe (id 4) in heap 1: unknown
[   0.825][d][vo/gpu-next/libplacebo] Spent 0.573 ms allocating slab
[   0.825][d][vd] Allocating new (host-cached) DR image...
[   0.825][d][vd] Allocating new (host-cached) DR image...
[   0.825][d][vd] Allocating new (host-cached) DR image...
[   0.826][d][vd] Allocating new (host-cached) DR image...
[   0.826][d][vo/gpu-next/libplacebo] Allocating 5554176 memory of type 0xe (id 4) in heap 1: unknown
[   0.826][d][vo/gpu-next/libplacebo] Spent 0.860 ms allocating slab
[   0.827][d][vd] Allocating new (host-cached) DR image...
[   0.827][d][vd] Allocating new (host-cached) DR image...
[   0.827][d][vd] Allocating new (host-cached) DR image...
[   0.827][d][vd] Allocating new (host-cached) DR image...
[   0.828][d][vd] Allocating new (host-cached) DR image...
[   0.828][v][vd] Using software decoding.
[   0.828][d][vd] Allocating new (host-cached) DR image...
[   0.828][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[   0.828][v][vf] [in] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.828][v][vf] [userdeint] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.828][v][vf] [userdeint] (disabled)
[   0.828][v][vf] [autorotate] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.828][v][vf] [autorotate] (disabled)
[   0.828][v][vf] [convert] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.828][v][vf] [convert] (disabled)
[   0.828][v][vf] [out] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.829][v][auto_profiles] Re-evaluating auto profile pgs-fix
[   0.829][v][auto_profiles] Re-evaluating auto profile 8k-fix
[   0.829][v][auto_profiles] Re-evaluating auto profile SDR-Gamut
[   0.829][i][auto_profiles] Applying auto profile: SDR-Gamut
[   0.829][v][cplayer] Set property: user-data/smartcopypaste/menu-open="no" -> 1
[   0.829][d][cplayer] Run command: apply-profile, flags=64, args=[name="SDR-Gamut", mode="apply"]
[   0.829][v][cplayer] Applying profile 'SDR-Gamut'...
[   0.829][v][cplayer] Setting option 'gamut-mapping-mode' = 'clip' (flags = 4)
[   0.829][v][auto_profiles] Re-evaluating auto profile Deband
[   0.829][i][auto_profiles] Applying auto profile: Deband
[   0.830][v][cplayer] Set property: user-data/display_name="" -> 1
[   0.830][v][cplayer] Set property: user-data/simplehistory/menu-open="no" -> 1
[   0.830][v][cplayer] Set property: user-data/simplebookmark/menu-open="no" -> 1
[   0.830][d][cplayer] Run command: apply-profile, flags=64, args=[name="Deband", mode="apply"]
[   0.830][v][cplayer] Applying profile 'Deband'...
[   0.830][v][cplayer] Setting option 'deband' = 'yes' (flags = 4)
[   0.830][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.830][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.830][v][osd/libass] libass API version: 0x1703000
[   0.830][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.830][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.830][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.830][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.830][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.830][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.830][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.830][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.830][v][osd/libass] Setting up fonts...
[   0.831][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.831][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.831][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.831][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.835][v][osd/libass] Using font provider fontconfig
[   0.835][v][osd/libass] Done.
[   0.836][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.836][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.836][v][osd/libass] libass API version: 0x1703000
[   0.836][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.836][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.836][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.836][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.836][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.836][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.836][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.836][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.836][v][osd/libass] Setting up fonts...
[   0.837][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.837][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.837][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.837][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.841][v][osd/libass] Using font provider fontconfig
[   0.841][v][osd/libass] Done.
[   0.841][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.841][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.841][v][osd/libass] libass API version: 0x1703000
[   0.841][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.842][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.842][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.842][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.842][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.842][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.842][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.842][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.842][v][osd/libass] Setting up fonts...
[   0.843][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.843][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.843][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.843][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.847][v][osd/libass] Using font provider fontconfig
[   0.847][v][osd/libass] Done.
[   0.847][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[   0.847][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.847][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.847][v][osd/libass] libass API version: 0x1703000
[   0.847][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.847][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.847][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.847][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.847][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.847][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.847][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.847][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.847][v][osd/libass] Setting up fonts...
[   0.848][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.848][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.848][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.848][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.852][v][osd/libass] Using font provider fontconfig
[   0.852][v][osd/libass] Done.
[   0.854][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[   0.854][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[   0.854][d][cplayer] Run command: overlay-remove, flags=64, args=[id="42"]
[   0.854][d][cplayer] Run command: script-message, flags=64, args=[args="thumbfast-info", args="{\"thumbnail\":\"/tmp/thumbfast.out11061\",\"width\":200,\"overlay_id\":42,\"height\":200,\"disabled\":false,\"available\":true,\"socket\":\"/tmp/thumbfast11061\"}"]
[   0.854][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplebookmark", contents="", flags="default"]
[   0.855][d][cplayer] Run command: define-section, flags=64, args=[name="input_smartcopypaste_II", contents="", flags="default"]
[   0.855][d][cplayer] Run command: enable-section, flags=64, args=[name="input_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.855][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_smartcopypaste_II", contents="", flags="force"]
[   0.855][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.855][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.855][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplebookmark", contents="", flags="force"]
[   0.855][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.855][d][vo/gpu-next] Render options updated, resetting render state.
[   0.855][v][ao] Trying audio driver 'alsa'
[   0.855][v][ao/alsa] requested format: 48000 Hz, stereo channels, floatp
[   0.855][v][ao/alsa] using ALSA version: 1.2.13
[   0.855][v][ao/alsa] opening device 'default'
[   0.858][d][ao/alsa] PCM setup:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ALSA <-> PipeWire PCM I/O Plugin
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] Start HW params:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  MMAP_INTERLEAVED MMAP_NONINTERLEAVED RW_INTERLEAVED RW_NONINTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: [8 32]
[   0.858][d][ao/alsa] FRAME_BITS: [8 2048]
[   0.858][d][ao/alsa] CHANNELS: [1 64]
[   0.858][d][ao/alsa] RATE: [1 384000]
[   0.858][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[   0.858][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[   0.858][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] HW params after rate:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  MMAP_INTERLEAVED MMAP_NONINTERLEAVED RW_INTERLEAVED RW_NONINTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: [8 32]
[   0.858][d][ao/alsa] FRAME_BITS: [8 2048]
[   0.858][d][ao/alsa] CHANNELS: [1 64]
[   0.858][d][ao/alsa] RATE: [1 384000]
[   0.858][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[   0.858][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[   0.858][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] HW params after access:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: [8 32]
[   0.858][d][ao/alsa] FRAME_BITS: [8 2048]
[   0.858][d][ao/alsa] CHANNELS: [1 64]
[   0.858][d][ao/alsa] RATE: [1 384000]
[   0.858][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[   0.858][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[   0.858][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][v][ao/alsa] trying format float/14
[   0.858][d][ao/alsa] HW params after format:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  FLOAT_LE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: 32
[   0.858][d][ao/alsa] FRAME_BITS: [32 2048]
[   0.858][d][ao/alsa] CHANNELS: [1 64]
[   0.858][d][ao/alsa] RATE: [1 384000]
[   0.858][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[   0.858][d][ao/alsa] PERIOD_SIZE: (0 524288]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[   0.858][d][ao/alsa] BUFFER_SIZE: [1 1048576]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] HW params after channels:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  FLOAT_LE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: 32
[   0.858][d][ao/alsa] FRAME_BITS: 64
[   0.858][d][ao/alsa] CHANNELS: 2
[   0.858][d][ao/alsa] RATE: [1 384000]
[   0.858][d][ao/alsa] PERIOD_TIME: (41 4294967295)
[   0.858][d][ao/alsa] PERIOD_SIZE: [16 262144]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (83 4294967295]
[   0.858][d][ao/alsa] BUFFER_SIZE: [32 524288]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] HW params after rate-2:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  FLOAT_LE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: 32
[   0.858][d][ao/alsa] FRAME_BITS: 64
[   0.858][d][ao/alsa] CHANNELS: 2
[   0.858][d][ao/alsa] RATE: 48000
[   0.858][d][ao/alsa] PERIOD_TIME: (333 5461334)
[   0.858][d][ao/alsa] PERIOD_SIZE: [16 262144]
[   0.858][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[   0.858][d][ao/alsa] PERIODS: [2 1024]
[   0.858][d][ao/alsa] BUFFER_TIME: (666 10922667)
[   0.858][d][ao/alsa] BUFFER_SIZE: [32 524288]
[   0.858][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] Going to set final HW params:
[   0.858][d][ao/alsa] ---
[   0.858][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.858][d][ao/alsa] FORMAT:  FLOAT_LE
[   0.858][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[   0.858][d][ao/alsa] SAMPLE_BITS: 32
[   0.858][d][ao/alsa] FRAME_BITS: 64
[   0.858][d][ao/alsa] CHANNELS: 2
[   0.858][d][ao/alsa] RATE: 48000
[   0.858][d][ao/alsa] PERIOD_TIME: 25000
[   0.858][d][ao/alsa] PERIOD_SIZE: 1200
[   0.858][d][ao/alsa] PERIOD_BYTES: 9600
[   0.858][d][ao/alsa] PERIODS: 4
[   0.858][d][ao/alsa] BUFFER_TIME: 100000
[   0.858][d][ao/alsa] BUFFER_SIZE: 4800
[   0.858][d][ao/alsa] BUFFER_BYTES: 38400
[   0.858][d][ao/alsa] TICK_TIME: ALL
[   0.858][d][ao/alsa] ---
[   0.865][d][ao/alsa] Final HW params:
[   0.865][d][ao/alsa] ---
[   0.865][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[   0.865][d][ao/alsa] FORMAT:  FLOAT_LE
[   0.865][d][ao/alsa] SUBFORMAT:  STD
[   0.865][d][ao/alsa] SAMPLE_BITS: 32
[   0.865][d][ao/alsa] FRAME_BITS: 64
[   0.865][d][ao/alsa] CHANNELS: 2
[   0.865][d][ao/alsa] RATE: 48000
[   0.865][d][ao/alsa] PERIOD_TIME: 25000
[   0.865][d][ao/alsa] PERIOD_SIZE: 1200
[   0.865][d][ao/alsa] PERIOD_BYTES: 9600
[   0.865][d][ao/alsa] PERIODS: 4
[   0.865][d][ao/alsa] BUFFER_TIME: 100000
[   0.865][d][ao/alsa] BUFFER_SIZE: 4800
[   0.865][d][ao/alsa] BUFFER_BYTES: 38400
[   0.865][d][ao/alsa] TICK_TIME: [0 0]
[   0.865][d][ao/alsa] ---
[   0.865][v][ao/alsa] channel map reported by ALSA: FL FR
[   0.865][v][ao/alsa] which we understand as: stereo
[   0.865][v][ao/alsa] which is what we requested.
[   0.865][v][ao/alsa] hw pausing supported: yes
[   0.865][v][ao/alsa] buffersize: 4800 samples
[   0.865][v][ao/alsa] period size: 1200 samples
[   0.865][v][ao/alsa] device buffer: 4800 samples.
[   0.865][v][ao/alsa] using soft-buffer of 9600 samples.
[   0.865][i][cplayer] AO: [alsa] 48000Hz stereo 2ch float
[   0.865][v][cplayer] AO: Description: ALSA audio output
[   0.866][v][autoconvert] inserting resampler
[   0.866][v][swresample] format change, reinitializing resampler
[   0.866][v][swresample] 48000Hz stereo floatp -> 48000Hz stereo float
[   0.866][v][af] [out] 48000Hz stereo 2ch float
[   0.866][v][auto_profiles] Re-evaluating auto profile 8k-fix
[   0.866][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[   0.866][i][cplayer] VO: [gpu-next] 848x480 yuv420p
[   0.866][v][cplayer] VO: Description: Video output based on libplacebo
[   0.866][d][vd] Allocating new (host-cached) DR image...
[   0.866][v][vo/gpu-next] reconfig to 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[   0.866][v][vo/gpu-next/wayland] Reconfiguring!
[   0.866][d][vo/gpu-next] max content size: 1920x1080
[   0.866][d][vo/gpu-next] monitor size: 1920x1080
[   0.866][v][vo/gpu-next] Window size: 848x480 (Borders: l=0 t=0 r=0 b=0)
[   0.866][v][vo/gpu-next] Video source: 848x480 (1:1)
[   0.866][v][vo/gpu-next] Video display: (0, 0) 848x480 -> (0, 0) 848x480
[   0.866][v][vo/gpu-next] Video scale: 1.000000/1.000000
[   0.866][v][vo/gpu-next] OSD borders: l=0 t=0 r=0 b=0
[   0.866][v][vo/gpu-next] Video borders: l=0 t=0 r=0 b=0
[   0.866][v][vo/gpu-next/wayland] Handling resize on the vk side
[   0.866][d][vo/gpu-next/libplacebo] Requested alpha compositing mode: VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR
[   0.866][d][vo/gpu-next/libplacebo] Requested surface transform: VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR
[   0.866][d][vo/gpu-next/libplacebo] Requested image count: 4 (min 2 max 8)
[   0.866][d][vo/gpu-next/libplacebo] Requested image size: 848x480 (min 1x1 < cur -1x-1 < max 16384x16384)
[   0.866][d][vo/gpu-next/libplacebo] (Re)creating swapchain of size 848x480
[   0.870][v][vo/gpu-next] Window size: 848x480 (Borders: l=0 t=0 r=0 b=0)
[   0.870][v][vo/gpu-next] Video source: 848x480 (1:1)
[   0.870][v][vo/gpu-next] Video display: (0, 0) 848x480 -> (0, 0) 848x480
[   0.870][v][vo/gpu-next] Video scale: 1.000000/1.000000
[   0.870][v][vo/gpu-next] OSD borders: l=0 t=0 r=0 b=0
[   0.870][v][vo/gpu-next] Video borders: l=0 t=0 r=0 b=0
[   0.870][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 0.066733
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] Allocating 1835008 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] Spent 0.175 ms allocating slab
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] Allocating 917504 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.871][d][vo/gpu-next/libplacebo] Spent 0.136 ms allocating slab
[   0.871][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.872][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:3491
[   0.872][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[   0.872][d][vo/gpu-next/libplacebo] Spent 0.052 ms allocating slab
[   0.872][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format rg8: src/renderer.c:1652
[   0.872][d][vo/gpu-next/libplacebo] Allocating 1835008 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.872][d][vo/gpu-next/libplacebo] Spent 0.147 ms allocating slab
[   0.872][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.872][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.872][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.872][d][vo/gpu-next/libplacebo] [ 10] layout(constant_id=0) const float _4 = 1; 
[   0.872][d][vo/gpu-next/libplacebo] [ 11] layout(constant_id=1) const float _8004 = 1; 
[   0.872][d][vo/gpu-next/libplacebo] [ 12] layout(binding=0) uniform  sampler2D _2;
[   0.872][d][vo/gpu-next/libplacebo] [ 13] layout(binding=1) uniform  sampler2D _8002;
[   0.872][d][vo/gpu-next/libplacebo] [ 14] layout(location=0) in vec2 _7;
[   0.872][d][vo/gpu-next/libplacebo] [ 15] layout(location=0) out vec2 _3;
[   0.872][d][vo/gpu-next/libplacebo] [ 16] layout(location=1) in vec2 _8;
[   0.872][d][vo/gpu-next/libplacebo] [ 17] layout(location=1) out vec2 _8003;
[   0.872][d][vo/gpu-next/libplacebo] [ 18] layout(location=2) in vec2 _9;
[   0.872][d][vo/gpu-next/libplacebo] [ 19] void main() {
[   0.872][d][vo/gpu-next/libplacebo] [ 20] _3 = _7;
[   0.872][d][vo/gpu-next/libplacebo] [ 21] _8003 = _8;
[   0.872][d][vo/gpu-next/libplacebo] [ 22] vec2 va_pos = _9; 
[   0.872][d][vo/gpu-next/libplacebo] [ 23] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.872][d][vo/gpu-next/libplacebo] [ 24] }
[   0.872][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.872][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.872][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.872][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.872][d][vo/gpu-next/libplacebo] [ 10] layout(constant_id=0) const float _4 = 1; 
[   0.872][d][vo/gpu-next/libplacebo] [ 11] layout(constant_id=1) const float _8004 = 1; 
[   0.872][d][vo/gpu-next/libplacebo] [ 12] layout(binding=0) uniform  sampler2D _2;
[   0.872][d][vo/gpu-next/libplacebo] [ 13] layout(binding=1) uniform  sampler2D _8002;
[   0.872][d][vo/gpu-next/libplacebo] [ 14] layout(location=0) in vec2 _3;
[   0.872][d][vo/gpu-next/libplacebo] [ 15] layout(location=1) in vec2 _8003;
[   0.872][d][vo/gpu-next/libplacebo] [ 16] layout(location=0) out vec4 out_color;
[   0.872][d][vo/gpu-next/libplacebo] [ 17] 
[   0.872][d][vo/gpu-next/libplacebo] [ 18] vec4 _8001() {
[   0.872][d][vo/gpu-next/libplacebo] [ 19] // pl_shader_sample_direct                            
[   0.872][d][vo/gpu-next/libplacebo] [ 20] vec4 color = vec4(_8004) * textureLod(_8002, _8003, 0.0);   
[   0.872][d][vo/gpu-next/libplacebo] [ 21] return color;
[   0.872][d][vo/gpu-next/libplacebo] [ 22] }
[   0.872][d][vo/gpu-next/libplacebo] [ 23] 
[   0.872][d][vo/gpu-next/libplacebo] [ 24] vec4 _1() {
[   0.872][d][vo/gpu-next/libplacebo] [ 25] // pl_shader_sample_direct                            
[   0.872][d][vo/gpu-next/libplacebo] [ 26] vec4 color = vec4(_4) * textureLod(_2, _3, 0.0);   
[   0.872][d][vo/gpu-next/libplacebo] [ 27] {                 
[   0.872][d][vo/gpu-next/libplacebo] [ 28] vec4 tmp = _8001(); 
[   0.872][d][vo/gpu-next/libplacebo] [ 29] color[1] = tmp[0]; 
[   0.872][d][vo/gpu-next/libplacebo] [ 30] } 
[   0.872][d][vo/gpu-next/libplacebo] [ 31] return color;
[   0.872][d][vo/gpu-next/libplacebo] [ 32] }
[   0.872][d][vo/gpu-next/libplacebo] [ 33] 
[   0.872][d][vo/gpu-next/libplacebo] [ 34] void main() {
[   0.872][d][vo/gpu-next/libplacebo] [ 35] out_color = _1();
[   0.872][d][vo/gpu-next/libplacebo] [ 36] }
[   0.872][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.872][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.872][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[   0.873][d][vo/gpu-next] cache_load_obj: key(9915afd1b4be85d2), size(848), load time(0.046 ms)
[   0.873][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x9915afd1b4be85d2
[   0.873][d][vo/gpu-next] cache_load_obj: key(c2c9cfdd40a306e3), size(856), load time(0.021 ms)
[   0.873][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xc2c9cfdd40a306e3
[   0.873][d][vo/gpu-next] cache_load_obj: key(7c0bd35ab6f87c4d), size(13486), load time(0.129 ms)
[   0.873][d][vo/gpu-next/libplacebo] Spent 0.005 ms compiling shader
[   0.873][d][vo/gpu-next] cache_save_obj: key(9915afd1b4be85d2), size(848)
[   0.873][d][vo/gpu-next] cache_save_obj: key(c2c9cfdd40a306e3), size(856)
[   0.873][d][vo/gpu-next/libplacebo] Spent 0.258 ms creating pipeline
[   0.873][d][vo/gpu-next] cache_save_obj: key(7c0bd35ab6f87c4d), size(13486)
[   0.873][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.873][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[   0.874][d][vo/gpu-next/libplacebo] Spent 0.164 ms allocating slab
[   0.874][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r16hf: src/renderer.c:1065
[   0.874][d][vo/gpu-next/libplacebo] Allocating 3538944 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.874][d][vo/gpu-next/libplacebo] Spent 0.189 ms allocating slab
[   0.874][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.874][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.874][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.874][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.874][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4004;
[   0.874][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) uint _4007;
[   0.874][d][vo/gpu-next/libplacebo] [ 13] };
[   0.874][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _4009 = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _400a = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _400b = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _400c = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=4) const float _400d = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 19] layout(binding=0) uniform  sampler2D _4002;
[   0.874][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _4010;
[   0.874][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec2 _4003;
[   0.874][d][vo/gpu-next/libplacebo] [ 22] layout(location=1) in vec2 _4011;
[   0.874][d][vo/gpu-next/libplacebo] [ 23] void main() {
[   0.874][d][vo/gpu-next/libplacebo] [ 24] _4003 = _4010;
[   0.874][d][vo/gpu-next/libplacebo] [ 25] vec2 va_pos = _4011; 
[   0.874][d][vo/gpu-next/libplacebo] [ 26] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.874][d][vo/gpu-next/libplacebo] [ 27] }
[   0.874][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.874][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.874][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.874][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.874][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.874][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4004;
[   0.874][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) uint _4007;
[   0.874][d][vo/gpu-next/libplacebo] [ 13] };
[   0.874][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _4009 = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _400a = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _400b = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _400c = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=4) const float _400d = 1; 
[   0.874][d][vo/gpu-next/libplacebo] [ 19] layout(binding=0) uniform  sampler2D _4002;
[   0.874][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _4003;
[   0.874][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec4 out_color;
[   0.874][d][vo/gpu-next/libplacebo] [ 22] #define prng_t uvec3
[   0.874][d][vo/gpu-next/libplacebo] [ 23] 
[   0.874][d][vo/gpu-next/libplacebo] [ 24] vec3 _4005(inout uvec3 s) {                    
[   0.875][d][vo/gpu-next/libplacebo] [ 25]     s = 1664525u * s + uvec3(1013904223u);   
[   0.875][d][vo/gpu-next/libplacebo] [ 26]     s.x += s.y * s.z;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 27]     s.y += s.z * s.x;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 28]     s.z += s.x * s.y;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 29]     s ^= s >> 16u;                           
[   0.875][d][vo/gpu-next/libplacebo] [ 30]     s.x += s.y * s.z;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 31]     s.y += s.z * s.x;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 32]     s.z += s.x * s.y;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 33]     return vec3(s) * 1.0/float(0xFFFFFFFFu); 
[   0.875][d][vo/gpu-next/libplacebo] [ 34] }                                            
[   0.875][d][vo/gpu-next/libplacebo] [ 35] #define _4008 (_4005(_4006))
[   0.875][d][vo/gpu-next/libplacebo] [ 36] vec4 _4001() {
[   0.875][d][vo/gpu-next/libplacebo] [ 37] vec4 color;                       
[   0.875][d][vo/gpu-next/libplacebo] [ 38] // pl_shader_deband               
[   0.875][d][vo/gpu-next/libplacebo] [ 39] {                                 
[   0.875][d][vo/gpu-next/libplacebo] [ 40] vec2 pos = _4003, pt = _4004;         
[   0.875][d][vo/gpu-next/libplacebo] [ 41] color = textureLod(_4002, pos, 0.0);
[   0.875][d][vo/gpu-next/libplacebo] [ 42] #define GET(X, Y)                                   \
[   0.875][d][vo/gpu-next/libplacebo] [ 43]     (textureLod(_4002, pos + pt * vec2(X, Y), 0.0).r)  
[   0.875][d][vo/gpu-next/libplacebo] [ 44] #define T float                                          
[   0.875][d][vo/gpu-next/libplacebo] [ 45] uvec3 _4006 = uvec3(gl_FragCoord.xy, _4007); 
[   0.875][d][vo/gpu-next/libplacebo] [ 46] T avg, diff, bound;   
[   0.875][d][vo/gpu-next/libplacebo] [ 47] T res = color.r;     
[   0.875][d][vo/gpu-next/libplacebo] [ 48] vec2 d;               
[   0.875][d][vo/gpu-next/libplacebo] [ 49] d = _4008.xy * vec2(1.0 * _4009, 6.283185307179586);    
[   0.875][d][vo/gpu-next/libplacebo] [ 50] d = d.x * vec2(cos(d.y), sin(d.y));   
[   0.875][d][vo/gpu-next/libplacebo] [ 51] avg = T(0.0);                         
[   0.875][d][vo/gpu-next/libplacebo] [ 52] avg += GET(+d.x, +d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 53] avg += GET(-d.x, +d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 54] avg += GET(-d.x, -d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 55] avg += GET(+d.x, -d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 56] avg *= 0.25;                          
[   0.875][d][vo/gpu-next/libplacebo] [ 57] diff = abs(res - avg);                
[   0.875][d][vo/gpu-next/libplacebo] [ 58] bound = T(_400a / 1.0);                
[   0.875][d][vo/gpu-next/libplacebo] [ 59] res = mix(avg, res, diff > bound); 
[   0.875][d][vo/gpu-next/libplacebo] [ 60] bound = T(
[   0.875][d][vo/gpu-next/libplacebo] [ 61]  _400b);                                        
[   0.875][d][vo/gpu-next/libplacebo] [ 62] T strength = min(abs(res - bound), _400c);  
[   0.875][d][vo/gpu-next/libplacebo] [ 63] res += strength * (T(_4008) - T(0.5));      
[   0.875][d][vo/gpu-next/libplacebo] [ 64] color.r = res;   
[   0.875][d][vo/gpu-next/libplacebo] [ 65] color *= _400d;     
[   0.875][d][vo/gpu-next/libplacebo] [ 66] #undef T          
[   0.875][d][vo/gpu-next/libplacebo] [ 67] #undef GET        
[   0.875][d][vo/gpu-next/libplacebo] [ 68] }                 
[   0.875][d][vo/gpu-next/libplacebo] [ 69] return color;
[   0.875][d][vo/gpu-next/libplacebo] [ 70] }
[   0.875][d][vo/gpu-next/libplacebo] [ 71] 
[   0.875][d][vo/gpu-next/libplacebo] [ 72] void main() {
[   0.875][d][vo/gpu-next/libplacebo] [ 73] out_color = _4001();
[   0.875][d][vo/gpu-next/libplacebo] [ 74] }
[   0.875][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=0: 16.000000
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=1: 0.002930
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=2: 0.062745
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=3: 0.001953
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=4: 1.000000
[   0.875][d][vo/gpu-next] cache_load_obj: key(e6c7f7c4df5215e8), size(748), load time(0.028 ms)
[   0.875][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xe6c7f7c4df5215e8
[   0.875][d][vo/gpu-next] cache_load_obj: key(a8e92110f18ecc13), size(3516), load time(0.023 ms)
[   0.875][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa8e92110f18ecc13
[   0.875][d][vo/gpu-next] cache_load_obj: key(e8bc198639d47e48), size(15095), load time(0.110 ms)
[   0.875][d][vo/gpu-next/libplacebo] Spent 0.007 ms compiling shader
[   0.875][d][vo/gpu-next] cache_save_obj: key(e6c7f7c4df5215e8), size(748)
[   0.875][d][vo/gpu-next] cache_save_obj: key(a8e92110f18ecc13), size(3516)
[   0.875][d][vo/gpu-next/libplacebo] Spent 0.095 ms creating pipeline
[   0.875][d][vo/gpu-next] cache_save_obj: key(e8bc198639d47e48), size(15095)
[   0.875][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.875][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format rg16hf: src/renderer.c:1065
[   0.875][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.875][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.875][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.875][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.875][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _c004;
[   0.875][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) uint _c007;
[   0.875][d][vo/gpu-next/libplacebo] [ 13] };
[   0.875][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _c009 = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _c00a = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c00b = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _c00c = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=4) const float _c00d = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=5) const float _c00e = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 20] layout(binding=0) uniform  sampler2D _c002;
[   0.875][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) in vec2 _c011;
[   0.875][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec2 _c003;
[   0.875][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) in vec2 _c012;
[   0.875][d][vo/gpu-next/libplacebo] [ 24] void main() {
[   0.875][d][vo/gpu-next/libplacebo] [ 25] _c003 = _c011;
[   0.875][d][vo/gpu-next/libplacebo] [ 26] vec2 va_pos = _c012; 
[   0.875][d][vo/gpu-next/libplacebo] [ 27] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.875][d][vo/gpu-next/libplacebo] [ 28] }
[   0.875][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.875][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.875][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.875][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.875][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.875][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _c004;
[   0.875][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) uint _c007;
[   0.875][d][vo/gpu-next/libplacebo] [ 13] };
[   0.875][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _c009 = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _c00a = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c00b = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _c00c = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=4) const float _c00d = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=5) const float _c00e = 1; 
[   0.875][d][vo/gpu-next/libplacebo] [ 20] layout(binding=0) uniform  sampler2D _c002;
[   0.875][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) in vec2 _c003;
[   0.875][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[   0.875][d][vo/gpu-next/libplacebo] [ 23] #define prng_t uvec3
[   0.875][d][vo/gpu-next/libplacebo] [ 24] 
[   0.875][d][vo/gpu-next/libplacebo] [ 25] vec3 _c005(inout uvec3 s) {                    
[   0.875][d][vo/gpu-next/libplacebo] [ 26]     s = 1664525u * s + uvec3(1013904223u);   
[   0.875][d][vo/gpu-next/libplacebo] [ 27]     s.x += s.y * s.z;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 28]     s.y += s.z * s.x;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 29]     s.z += s.x * s.y;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 30]     s ^= s >> 16u;                           
[   0.875][d][vo/gpu-next/libplacebo] [ 31]     s.x += s.y * s.z;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 32]     s.y += s.z * s.x;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 33]     s.z += s.x * s.y;                        
[   0.875][d][vo/gpu-next/libplacebo] [ 34]     return vec3(s) * 1.0/float(0xFFFFFFFFu); 
[   0.875][d][vo/gpu-next/libplacebo] [ 35] }                                            
[   0.875][d][vo/gpu-next/libplacebo] [ 36] #define _c008 (_c005(_c006))
[   0.875][d][vo/gpu-next/libplacebo] [ 37] vec4 _c001() {
[   0.875][d][vo/gpu-next/libplacebo] [ 38] vec4 color;                       
[   0.875][d][vo/gpu-next/libplacebo] [ 39] // pl_shader_deband               
[   0.875][d][vo/gpu-next/libplacebo] [ 40] {                                 
[   0.875][d][vo/gpu-next/libplacebo] [ 41] vec2 pos = _c003, pt = _c004;         
[   0.875][d][vo/gpu-next/libplacebo] [ 42] color = textureLod(_c002, pos, 0.0);
[   0.875][d][vo/gpu-next/libplacebo] [ 43] #define GET(X, Y)                                   \
[   0.875][d][vo/gpu-next/libplacebo] [ 44]     (textureLod(_c002, pos + pt * vec2(X, Y), 0.0).rg)  
[   0.875][d][vo/gpu-next/libplacebo] [ 45] #define T vec2                                          
[   0.875][d][vo/gpu-next/libplacebo] [ 46] uvec3 _c006 = uvec3(gl_FragCoord.xy, _c007); 
[   0.875][d][vo/gpu-next/libplacebo] [ 47] T avg, diff, bound;   
[   0.875][d][vo/gpu-next/libplacebo] [ 48] T res = color.rg;     
[   0.875][d][vo/gpu-next/libplacebo] [ 49] vec2 d;               
[   0.875][d][vo/gpu-next/libplacebo] [ 50] d = _c008.xy * vec2(1.0 * _c009, 6.283185307179586);    
[   0.875][d][vo/gpu-next/libplacebo] [ 51] d = d.x * vec2(cos(d.y), sin(d.y));   
[   0.875][d][vo/gpu-next/libplacebo] [ 52] avg = T(0.0);                         
[   0.875][d][vo/gpu-next/libplacebo] [ 53] avg += GET(+d.x, +d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 54] avg += GET(-d.x, +d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 55] avg += GET(-d.x, -d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 56] avg += GET(+d.x, -d.y);               
[   0.875][d][vo/gpu-next/libplacebo] [ 57] avg *= 0.25;                          
[   0.875][d][vo/gpu-next/libplacebo] [ 58] diff = abs(res - avg);                
[   0.875][d][vo/gpu-next/libplacebo] [ 59] bound = T(_c00a / 1.0);                
[   0.875][d][vo/gpu-next/libplacebo] [ 60] res = mix(avg, res, greaterThan(diff, bound)); 
[   0.875][d][vo/gpu-next/libplacebo] [ 61] bound = T(
[   0.875][d][vo/gpu-next/libplacebo] [ 62]  _c00b,_c00c);                                        
[   0.875][d][vo/gpu-next/libplacebo] [ 63] T strength = min(abs(res - bound), _c00d);  
[   0.875][d][vo/gpu-next/libplacebo] [ 64] res += strength * (T(_c008) - T(0.5));      
[   0.875][d][vo/gpu-next/libplacebo] [ 65] color.rg = res;   
[   0.875][d][vo/gpu-next/libplacebo] [ 66] color *= _c00e;     
[   0.875][d][vo/gpu-next/libplacebo] [ 67] #undef T          
[   0.875][d][vo/gpu-next/libplacebo] [ 68] #undef GET        
[   0.875][d][vo/gpu-next/libplacebo] [ 69] }                 
[   0.875][d][vo/gpu-next/libplacebo] [ 70] return color;
[   0.875][d][vo/gpu-next/libplacebo] [ 71] }
[   0.875][d][vo/gpu-next/libplacebo] [ 72] 
[   0.875][d][vo/gpu-next/libplacebo] [ 73] void main() {
[   0.875][d][vo/gpu-next/libplacebo] [ 74] out_color = _c001();
[   0.875][d][vo/gpu-next/libplacebo] [ 75] }
[   0.875][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=0: 16.000000
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=1: 0.002930
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=2: 0.501961
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=3: 0.501961
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=4: 0.001953
[   0.875][d][vo/gpu-next/libplacebo]   constant_id=5: 1.000000
[   0.875][d][vo/gpu-next] cache_load_obj: key(677c2abab2ee0d2b), size(748), load time(0.035 ms)
[   0.875][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x677c2abab2ee0d2b
[   0.876][d][vo/gpu-next] cache_load_obj: key(def1f1265a2ad7c7), size(3788), load time(0.026 ms)
[   0.876][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xdef1f1265a2ad7c7
[   0.876][d][vo/gpu-next] cache_load_obj: key(1954ba8c312209df), size(15439), load time(0.131 ms)
[   0.876][d][vo/gpu-next/libplacebo] Spent 0.008 ms compiling shader
[   0.876][d][vo/gpu-next] cache_save_obj: key(677c2abab2ee0d2b), size(748)
[   0.876][d][vo/gpu-next] cache_save_obj: key(def1f1265a2ad7c7), size(3788)
[   0.876][d][vo/gpu-next/libplacebo] Spent 0.059 ms creating pipeline
[   0.876][d][vo/gpu-next] cache_save_obj: key(1954ba8c312209df), size(15439)
[   0.876][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.876][d][vo/gpu-next/libplacebo] (Re)creating 848x240x0 texture with format rgba16hf: src/renderer.c:1011
[   0.876][d][vo/gpu-next/libplacebo] Allocating 6946816 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.876][d][vo/gpu-next/libplacebo] Spent 0.233 ms allocating slab
[   0.876][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.876][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.876][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.876][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.876][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.876][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.876][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.876][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.876][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[   0.876][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[   0.876][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[   0.876][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[   0.876][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[   0.876][d][vo/gpu-next/libplacebo] [ 20] };
[   0.876][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[   0.876][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[   0.876][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _13;
[   0.876][d][vo/gpu-next/libplacebo] [ 30] layout(location=0) out vec2 _3;
[   0.876][d][vo/gpu-next/libplacebo] [ 31] layout(location=1) in vec2 _14;
[   0.876][d][vo/gpu-next/libplacebo] [ 32] layout(location=1) out vec2 _8;
[   0.876][d][vo/gpu-next/libplacebo] [ 33] layout(location=2) in vec2 _15;
[   0.876][d][vo/gpu-next/libplacebo] [ 34] void main() {
[   0.876][d][vo/gpu-next/libplacebo] [ 35] _3 = _13;
[   0.876][d][vo/gpu-next/libplacebo] [ 36] _8 = _14;
[   0.876][d][vo/gpu-next/libplacebo] [ 37] vec2 va_pos = _15; 
[   0.876][d][vo/gpu-next/libplacebo] [ 38] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.876][d][vo/gpu-next/libplacebo] [ 39] }
[   0.876][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.876][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.876][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.876][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.876][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.876][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.876][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.876][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.876][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.876][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[   0.876][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[   0.876][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[   0.876][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[   0.876][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[   0.876][d][vo/gpu-next/libplacebo] [ 20] };
[   0.876][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[   0.876][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[   0.876][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[   0.876][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _3;
[   0.876][d][vo/gpu-next/libplacebo] [ 30] layout(location=1) in vec2 _8;
[   0.876][d][vo/gpu-next/libplacebo] [ 31] layout(location=0) out vec4 out_color;
[   0.876][d][vo/gpu-next/libplacebo] [ 32] 
[   0.876][d][vo/gpu-next/libplacebo] [ 33] #define LUMA_raw _2 
[   0.876][d][vo/gpu-next/libplacebo] [ 34] #define LUMA_pos _3 
[   0.876][d][vo/gpu-next/libplacebo] [ 35] #define LUMA_map _3_map 
[   0.876][d][vo/gpu-next/libplacebo] [ 36] #define LUMA_size vec2(textureSize(_2, 0)) 
[   0.876][d][vo/gpu-next/libplacebo] [ 37] #define LUMA_pt _4 
[   0.876][d][vo/gpu-next/libplacebo] [ 38] #define LUMA_off _5 
[   0.876][d][vo/gpu-next/libplacebo] [ 39] #define LUMA_mul _6 
[   0.876][d][vo/gpu-next/libplacebo] [ 40] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.876][d][vo/gpu-next/libplacebo] [ 41] #define LUMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 42] #define LUMA_texOff(off) (LUMA_tex(_3 + _4 * vec2(off))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 43] #define LUMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 44] #define CHROMA_raw _7 
[   0.876][d][vo/gpu-next/libplacebo] [ 45] #define CHROMA_pos _8 
[   0.876][d][vo/gpu-next/libplacebo] [ 46] #define CHROMA_map _8_map 
[   0.876][d][vo/gpu-next/libplacebo] [ 47] #define CHROMA_size vec2(textureSize(_7, 0)) 
[   0.876][d][vo/gpu-next/libplacebo] [ 48] #define CHROMA_pt _9 
[   0.876][d][vo/gpu-next/libplacebo] [ 49] #define CHROMA_off _a 
[   0.876][d][vo/gpu-next/libplacebo] [ 50] #define CHROMA_mul _b 
[   0.876][d][vo/gpu-next/libplacebo] [ 51] #define CHROMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.876][d][vo/gpu-next/libplacebo] [ 52] #define CHROMA_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 53] #define CHROMA_texOff(off) (CHROMA_tex(_8 + _9 * vec2(off))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 54] #define CHROMA_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[   0.876][d][vo/gpu-next/libplacebo] [ 55] #define HOOKED_raw CHROMA_raw 
[   0.876][d][vo/gpu-next/libplacebo] [ 56] #define HOOKED_pos CHROMA_pos 
[   0.876][d][vo/gpu-next/libplacebo] [ 57] #define HOOKED_size CHROMA_size 
[   0.876][d][vo/gpu-next/libplacebo] [ 58] #define HOOKED_rot CHROMA_rot 
[   0.876][d][vo/gpu-next/libplacebo] [ 59] #define HOOKED_off CHROMA_off 
[   0.876][d][vo/gpu-next/libplacebo] [ 60] #define HOOKED_pt CHROMA_pt 
[   0.876][d][vo/gpu-next/libplacebo] [ 61] #define HOOKED_map CHROMA_map 
[   0.876][d][vo/gpu-next/libplacebo] [ 62] #define HOOKED_mul CHROMA_mul 
[   0.876][d][vo/gpu-next/libplacebo] [ 63] #define HOOKED_tex CHROMA_tex 
[   0.876][d][vo/gpu-next/libplacebo] [ 64] #define HOOKED_texOff CHROMA_texOff 
[   0.876][d][vo/gpu-next/libplacebo] [ 65] #define HOOKED_gather CHROMA_gather 
[   0.876][d][vo/gpu-next/libplacebo] [ 66] #define frame _c 
[   0.876][d][vo/gpu-next/libplacebo] [ 67] #define random _d 
[   0.876][d][vo/gpu-next/libplacebo] [ 68] #define input_size _e 
[   0.876][d][vo/gpu-next/libplacebo] [ 69] #define target_size _f 
[   0.876][d][vo/gpu-next/libplacebo] [ 70] #define tex_offset _10 
[   0.876][d][vo/gpu-next/libplacebo] [ 71] vec4 _8001(vec4 color) {
[   0.876][d][vo/gpu-next/libplacebo] [ 72] // pl_shader_linearize           
[   0.876][d][vo/gpu-next/libplacebo] [ 73] color.rgb = max(color.rgb, 0.0); 
[   0.876][d][vo/gpu-next/libplacebo] [ 74] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[   0.876][d][vo/gpu-next/libplacebo] [ 75] return color;
[   0.877][d][vo/gpu-next/libplacebo] [ 76] }
[   0.877][d][vo/gpu-next/libplacebo] [ 77] 
[   0.877][d][vo/gpu-next/libplacebo] [ 78] #define linearize _8001 
[   0.877][d][vo/gpu-next/libplacebo] [ 79] vec4 _4001(vec4 color) {
[   0.877][d][vo/gpu-next/libplacebo] [ 80] // pl_shader_delinearize 
[   0.877][d][vo/gpu-next/libplacebo] [ 81] color.rgb = max(color.rgb, 0.0); 
[   0.877][d][vo/gpu-next/libplacebo] [ 82] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[   0.877][d][vo/gpu-next/libplacebo] [ 83] return color;
[   0.877][d][vo/gpu-next/libplacebo] [ 84] }
[   0.877][d][vo/gpu-next/libplacebo] [ 85] 
[   0.877][d][vo/gpu-next/libplacebo] [ 86] #define delinearize _4001 
[   0.877][d][vo/gpu-next/libplacebo] [ 87] 
[   0.877][d][vo/gpu-next/libplacebo] [ 88] #define offset      vec2(0)
[   0.877][d][vo/gpu-next/libplacebo] [ 89] 
[   0.877][d][vo/gpu-next/libplacebo] [ 90] #define axis        1
[   0.877][d][vo/gpu-next/libplacebo] [ 91] 
[   0.877][d][vo/gpu-next/libplacebo] [ 92] #define Kernel(x)   dot(vec3(0.42659, -0.49656, 0.076849), cos(vec3(0, 1, 2) * acos(-1.) * (x + 1.)))
[   0.877][d][vo/gpu-next/libplacebo] [ 93] 
[   0.877][d][vo/gpu-next/libplacebo] [ 94] vec4 hook() {
[   0.877][d][vo/gpu-next/libplacebo] [ 95]     // Calculate bounds
[   0.877][d][vo/gpu-next/libplacebo] [ 96]     float low  = ceil((LUMA_pos - CHROMA_pt) * LUMA_size - offset - 0.5)[axis];
[   0.877][d][vo/gpu-next/libplacebo] [ 97]     float high = floor((LUMA_pos + CHROMA_pt) * LUMA_size - offset - 0.5)[axis];
[   0.877][d][vo/gpu-next/libplacebo] [ 98] 
[   0.877][d][vo/gpu-next/libplacebo] [ 99]     float W = 0.0;
[   0.877][d][vo/gpu-next/libplacebo] [100]     vec4 avg = vec4(0);
[   0.877][d][vo/gpu-next/libplacebo] [101]     vec2 pos = LUMA_pos;
[   0.877][d][vo/gpu-next/libplacebo] [102] 
[   0.877][d][vo/gpu-next/libplacebo] [103]     for (float k = low; k <= high; k++) {
[   0.877][d][vo/gpu-next/libplacebo] [104]         pos[axis] = LUMA_pt[axis] * (k - offset[axis] + 0.5);
[   0.877][d][vo/gpu-next/libplacebo] [105]         float rel = (pos[axis] - LUMA_pos[axis])*CHROMA_size[axis];
[   0.877][d][vo/gpu-next/libplacebo] [106]         float w = Kernel(rel);
[   0.877][d][vo/gpu-next/libplacebo] [107] 
[   0.877][d][vo/gpu-next/libplacebo] [108]         vec4 y = textureGrad(LUMA_raw, pos, vec2(0.0), vec2(0.0)).xxxx * LUMA_mul;
[   0.877][d][vo/gpu-next/libplacebo] [109]         y.y *= y.y;
[   0.877][d][vo/gpu-next/libplacebo] [110]         avg += w * y;
[   0.877][d][vo/gpu-next/libplacebo] [111]         W += w;
[   0.877][d][vo/gpu-next/libplacebo] [112]     }
[   0.877][d][vo/gpu-next/libplacebo] [113]     avg /= W;
[   0.877][d][vo/gpu-next/libplacebo] [114]     avg.y = abs(avg.y - avg.x * avg.x);
[   0.877][d][vo/gpu-next/libplacebo] [115]     return avg;
[   0.877][d][vo/gpu-next/libplacebo] [116] }
[   0.877][d][vo/gpu-next/libplacebo] [117] 
[   0.877][d][vo/gpu-next/libplacebo] [118] vec4 _1() {
[   0.877][d][vo/gpu-next/libplacebo] [119] vec4 color = hook(); 
[   0.877][d][vo/gpu-next/libplacebo] [120] return color;
[   0.877][d][vo/gpu-next/libplacebo] [121] }
[   0.877][d][vo/gpu-next/libplacebo] [122] 
[   0.877][d][vo/gpu-next/libplacebo] [123] void main() {
[   0.877][d][vo/gpu-next/libplacebo] [124] out_color = _1();
[   0.877][d][vo/gpu-next/libplacebo] [125] }
[   0.877][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=2: 0.059585
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=3: 0.870311
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=5: 1.149015
[   0.877][d][vo/gpu-next] cache_load_obj: key(84ffee52f8902a4e), size(848), load time(0.029 ms)
[   0.877][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x84ffee52f8902a4e
[   0.877][d][vo/gpu-next] cache_load_obj: key(a2c3c5c3a57f9e1b), size(2548), load time(0.023 ms)
[   0.877][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa2c3c5c3a57f9e1b
[   0.877][d][vo/gpu-next] cache_load_obj: key(ab84f0de6628065c), size(16454), load time(0.125 ms)
[   0.877][d][vo/gpu-next/libplacebo] Spent 0.005 ms compiling shader
[   0.877][d][vo/gpu-next] cache_save_obj: key(84ffee52f8902a4e), size(848)
[   0.877][d][vo/gpu-next] cache_save_obj: key(a2c3c5c3a57f9e1b), size(2548)
[   0.877][d][vo/gpu-next/libplacebo] Spent 0.093 ms creating pipeline
[   0.877][d][vo/gpu-next] cache_save_obj: key(ab84f0de6628065c), size(16454)
[   0.877][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.877][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format rgba16hf: src/renderer.c:1011
[   0.877][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.877][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.877][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.877][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.877][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.877][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.877][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.877][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.877][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[   0.877][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[   0.877][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[   0.877][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[   0.877][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[   0.877][d][vo/gpu-next/libplacebo] [ 20] };
[   0.877][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[   0.877][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[   0.877][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _13;
[   0.877][d][vo/gpu-next/libplacebo] [ 30] layout(location=0) out vec2 _3;
[   0.877][d][vo/gpu-next/libplacebo] [ 31] layout(location=1) in vec2 _14;
[   0.877][d][vo/gpu-next/libplacebo] [ 32] layout(location=1) out vec2 _8;
[   0.877][d][vo/gpu-next/libplacebo] [ 33] layout(location=2) in vec2 _15;
[   0.877][d][vo/gpu-next/libplacebo] [ 34] void main() {
[   0.877][d][vo/gpu-next/libplacebo] [ 35] _3 = _13;
[   0.877][d][vo/gpu-next/libplacebo] [ 36] _8 = _14;
[   0.877][d][vo/gpu-next/libplacebo] [ 37] vec2 va_pos = _15; 
[   0.877][d][vo/gpu-next/libplacebo] [ 38] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.877][d][vo/gpu-next/libplacebo] [ 39] }
[   0.877][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.877][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.877][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.877][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.877][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.877][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.877][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.877][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.877][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.877][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[   0.877][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[   0.877][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[   0.877][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[   0.877][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[   0.877][d][vo/gpu-next/libplacebo] [ 20] };
[   0.877][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[   0.877][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[   0.877][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[   0.877][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _3;
[   0.877][d][vo/gpu-next/libplacebo] [ 30] layout(location=1) in vec2 _8;
[   0.877][d][vo/gpu-next/libplacebo] [ 31] layout(location=0) out vec4 out_color;
[   0.877][d][vo/gpu-next/libplacebo] [ 32] 
[   0.877][d][vo/gpu-next/libplacebo] [ 33] #define LOWRES_Y_raw _2 
[   0.877][d][vo/gpu-next/libplacebo] [ 34] #define LOWRES_Y_pos _3 
[   0.877][d][vo/gpu-next/libplacebo] [ 35] #define LOWRES_Y_map _3_map 
[   0.877][d][vo/gpu-next/libplacebo] [ 36] #define LOWRES_Y_size vec2(textureSize(_2, 0)) 
[   0.877][d][vo/gpu-next/libplacebo] [ 37] #define LOWRES_Y_pt _4 
[   0.877][d][vo/gpu-next/libplacebo] [ 38] #define LOWRES_Y_off _5 
[   0.877][d][vo/gpu-next/libplacebo] [ 39] #define LOWRES_Y_mul _6 
[   0.877][d][vo/gpu-next/libplacebo] [ 40] #define LOWRES_Y_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.877][d][vo/gpu-next/libplacebo] [ 41] #define LOWRES_Y_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 42] #define LOWRES_Y_texOff(off) (LOWRES_Y_tex(_3 + _4 * vec2(off))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 43] #define LOWRES_Y_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 44] #define CHROMA_raw _7 
[   0.877][d][vo/gpu-next/libplacebo] [ 45] #define CHROMA_pos _8 
[   0.877][d][vo/gpu-next/libplacebo] [ 46] #define CHROMA_map _8_map 
[   0.877][d][vo/gpu-next/libplacebo] [ 47] #define CHROMA_size vec2(textureSize(_7, 0)) 
[   0.877][d][vo/gpu-next/libplacebo] [ 48] #define CHROMA_pt _9 
[   0.877][d][vo/gpu-next/libplacebo] [ 49] #define CHROMA_off _a 
[   0.877][d][vo/gpu-next/libplacebo] [ 50] #define CHROMA_mul _b 
[   0.877][d][vo/gpu-next/libplacebo] [ 51] #define CHROMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.877][d][vo/gpu-next/libplacebo] [ 52] #define CHROMA_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 53] #define CHROMA_texOff(off) (CHROMA_tex(_8 + _9 * vec2(off))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 54] #define CHROMA_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[   0.877][d][vo/gpu-next/libplacebo] [ 55] #define HOOKED_raw CHROMA_raw 
[   0.877][d][vo/gpu-next/libplacebo] [ 56] #define HOOKED_pos CHROMA_pos 
[   0.877][d][vo/gpu-next/libplacebo] [ 57] #define HOOKED_size CHROMA_size 
[   0.877][d][vo/gpu-next/libplacebo] [ 58] #define HOOKED_rot CHROMA_rot 
[   0.877][d][vo/gpu-next/libplacebo] [ 59] #define HOOKED_off CHROMA_off 
[   0.877][d][vo/gpu-next/libplacebo] [ 60] #define HOOKED_pt CHROMA_pt 
[   0.877][d][vo/gpu-next/libplacebo] [ 61] #define HOOKED_map CHROMA_map 
[   0.877][d][vo/gpu-next/libplacebo] [ 62] #define HOOKED_mul CHROMA_mul 
[   0.877][d][vo/gpu-next/libplacebo] [ 63] #define HOOKED_tex CHROMA_tex 
[   0.877][d][vo/gpu-next/libplacebo] [ 64] #define HOOKED_texOff CHROMA_texOff 
[   0.877][d][vo/gpu-next/libplacebo] [ 65] #define HOOKED_gather CHROMA_gather 
[   0.877][d][vo/gpu-next/libplacebo] [ 66] #define frame _c 
[   0.877][d][vo/gpu-next/libplacebo] [ 67] #define random _d 
[   0.877][d][vo/gpu-next/libplacebo] [ 68] #define input_size _e 
[   0.877][d][vo/gpu-next/libplacebo] [ 69] #define target_size _f 
[   0.877][d][vo/gpu-next/libplacebo] [ 70] #define tex_offset _10 
[   0.877][d][vo/gpu-next/libplacebo] [ 71] vec4 _8001(vec4 color) {
[   0.877][d][vo/gpu-next/libplacebo] [ 72] // pl_shader_linearize           
[   0.877][d][vo/gpu-next/libplacebo] [ 73] color.rgb = max(color.rgb, 0.0); 
[   0.877][d][vo/gpu-next/libplacebo] [ 74] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[   0.877][d][vo/gpu-next/libplacebo] [ 75] return color;
[   0.877][d][vo/gpu-next/libplacebo] [ 76] }
[   0.877][d][vo/gpu-next/libplacebo] [ 77] 
[   0.877][d][vo/gpu-next/libplacebo] [ 78] #define linearize _8001 
[   0.877][d][vo/gpu-next/libplacebo] [ 79] vec4 _4001(vec4 color) {
[   0.877][d][vo/gpu-next/libplacebo] [ 80] // pl_shader_delinearize 
[   0.877][d][vo/gpu-next/libplacebo] [ 81] color.rgb = max(color.rgb, 0.0); 
[   0.877][d][vo/gpu-next/libplacebo] [ 82] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[   0.877][d][vo/gpu-next/libplacebo] [ 83] return color;
[   0.877][d][vo/gpu-next/libplacebo] [ 84] }
[   0.877][d][vo/gpu-next/libplacebo] [ 85] 
[   0.877][d][vo/gpu-next/libplacebo] [ 86] #define delinearize _4001 
[   0.877][d][vo/gpu-next/libplacebo] [ 87] 
[   0.877][d][vo/gpu-next/libplacebo] [ 88] #define offset      vec2(0)
[   0.877][d][vo/gpu-next/libplacebo] [ 89] 
[   0.877][d][vo/gpu-next/libplacebo] [ 90] #define axis        0
[   0.877][d][vo/gpu-next/libplacebo] [ 91] 
[   0.877][d][vo/gpu-next/libplacebo] [ 92] #define Kernel(x)   dot(vec3(0.42659, -0.49656, 0.076849), cos(vec3(0, 1, 2) * acos(-1.) * (x + 1.)))
[   0.877][d][vo/gpu-next/libplacebo] [ 93] 
[   0.877][d][vo/gpu-next/libplacebo] [ 94] vec4 hook() {
[   0.877][d][vo/gpu-next/libplacebo] [ 95]     // Calculate bounds
[   0.877][d][vo/gpu-next/libplacebo] [ 96]     float low  = ceil((LOWRES_Y_pos - CHROMA_pt) * LOWRES_Y_size - offset - 0.5)[axis];
[   0.877][d][vo/gpu-next/libplacebo] [ 97]     float high = floor((LOWRES_Y_pos + CHROMA_pt) * LOWRES_Y_size - offset - 0.5)[axis];
[   0.877][d][vo/gpu-next/libplacebo] [ 98] 
[   0.877][d][vo/gpu-next/libplacebo] [ 99]     float W = 0.0;
[   0.877][d][vo/gpu-next/libplacebo] [100]     vec4 avg = vec4(0);
[   0.877][d][vo/gpu-next/libplacebo] [101]     vec2 pos = LOWRES_Y_pos;
[   0.877][d][vo/gpu-next/libplacebo] [102] 
[   0.877][d][vo/gpu-next/libplacebo] [103]     for (float k = low; k <= high; k++) {
[   0.877][d][vo/gpu-next/libplacebo] [104]         pos[axis] = LOWRES_Y_pt[axis] * (k - offset[axis] + 0.5);
[   0.877][d][vo/gpu-next/libplacebo] [105]         float rel = (pos[axis] - LOWRES_Y_pos[axis])*CHROMA_size[axis];
[   0.877][d][vo/gpu-next/libplacebo] [106]         float w = Kernel(rel);
[   0.877][d][vo/gpu-next/libplacebo] [107] 
[   0.877][d][vo/gpu-next/libplacebo] [108]         vec4 y = textureGrad(LOWRES_Y_raw, pos, vec2(0.0), vec2(0.0)).xxxx * LOWRES_Y_mul;
[   0.877][d][vo/gpu-next/libplacebo] [109]         y.y *= y.y;
[   0.877][d][vo/gpu-next/libplacebo] [110]         avg += w * y;
[   0.877][d][vo/gpu-next/libplacebo] [111]         W += w;
[   0.877][d][vo/gpu-next/libplacebo] [112]     }
[   0.877][d][vo/gpu-next/libplacebo] [113]     avg /= W;
[   0.877][d][vo/gpu-next/libplacebo] [114]     avg.y = abs(avg.y - avg.x * avg.x) + LOWRES_Y_texOff(0).y;
[   0.877][d][vo/gpu-next/libplacebo] [115]     return avg;
[   0.877][d][vo/gpu-next/libplacebo] [116] }
[   0.877][d][vo/gpu-next/libplacebo] [117] 
[   0.877][d][vo/gpu-next/libplacebo] [118] vec4 _1() {
[   0.877][d][vo/gpu-next/libplacebo] [119] vec4 color = hook(); 
[   0.877][d][vo/gpu-next/libplacebo] [120] return color;
[   0.877][d][vo/gpu-next/libplacebo] [121] }
[   0.877][d][vo/gpu-next/libplacebo] [122] 
[   0.877][d][vo/gpu-next/libplacebo] [123] void main() {
[   0.877][d][vo/gpu-next/libplacebo] [124] out_color = _1();
[   0.877][d][vo/gpu-next/libplacebo] [125] }
[   0.877][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=2: 0.059585
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=3: 0.870311
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[   0.877][d][vo/gpu-next/libplacebo]   constant_id=5: 1.149015
[   0.877][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x84ffee52f8902a4e
[   0.877][d][vo/gpu-next] cache_load_obj: key(cbfc5aa648936066), size(2636), load time(0.031 ms)
[   0.877][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xcbfc5aa648936066
[   0.878][d][vo/gpu-next] cache_load_obj: key(bbbad4651e7118cf), size(16495), load time(0.138 ms)
[   0.878][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[   0.878][d][vo/gpu-next] cache_save_obj: key(84ffee52f8902a4e), size(848)
[   0.878][d][vo/gpu-next] cache_save_obj: key(cbfc5aa648936066), size(2636)
[   0.878][d][vo/gpu-next/libplacebo] Spent 0.067 ms creating pipeline
[   0.878][d][vo/gpu-next] cache_save_obj: key(bbbad4651e7118cf), size(16495)
[   0.878][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.878][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[   0.878][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[   0.878][d][vo/gpu-next/libplacebo] Spent 0.066 ms allocating slab
[   0.878][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.878][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.878][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.878][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.878][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.878][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.878][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.878][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.878][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[   0.878][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[   0.878][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) int _11;
[   0.878][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=52) float _12;
[   0.878][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _13;
[   0.878][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=64) vec2 _14;
[   0.878][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _15;
[   0.878][d][vo/gpu-next/libplacebo] [ 22] };
[   0.878][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=0) const float _6 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=1) const float _b = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=2) const float _10 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=3) const float _8002 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=4) const float _8003 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=5) const float _4002 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=6) const float _4003 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 30] layout(binding=0) uniform  sampler2D _2;
[   0.878][d][vo/gpu-next/libplacebo] [ 31] layout(binding=1) uniform  sampler2D _7;
[   0.878][d][vo/gpu-next/libplacebo] [ 32] layout(binding=2) uniform  sampler2D _c;
[   0.878][d][vo/gpu-next/libplacebo] [ 33] layout(location=0) in vec2 _18;
[   0.878][d][vo/gpu-next/libplacebo] [ 34] layout(location=0) out vec2 _3;
[   0.878][d][vo/gpu-next/libplacebo] [ 35] layout(location=1) in vec2 _19;
[   0.878][d][vo/gpu-next/libplacebo] [ 36] layout(location=1) out vec2 _8;
[   0.878][d][vo/gpu-next/libplacebo] [ 37] layout(location=2) in vec2 _1a;
[   0.878][d][vo/gpu-next/libplacebo] [ 38] layout(location=2) out vec2 _d;
[   0.878][d][vo/gpu-next/libplacebo] [ 39] layout(location=3) in vec2 _1b;
[   0.878][d][vo/gpu-next/libplacebo] [ 40] void main() {
[   0.878][d][vo/gpu-next/libplacebo] [ 41] _3 = _18;
[   0.878][d][vo/gpu-next/libplacebo] [ 42] _8 = _19;
[   0.878][d][vo/gpu-next/libplacebo] [ 43] _d = _1a;
[   0.878][d][vo/gpu-next/libplacebo] [ 44] vec2 va_pos = _1b; 
[   0.878][d][vo/gpu-next/libplacebo] [ 45] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.878][d][vo/gpu-next/libplacebo] [ 46] }
[   0.878][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.878][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.878][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.878][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.878][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.878][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.878][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.878][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[   0.878][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[   0.878][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[   0.878][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[   0.878][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) int _11;
[   0.878][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=52) float _12;
[   0.878][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _13;
[   0.878][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=64) vec2 _14;
[   0.878][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _15;
[   0.878][d][vo/gpu-next/libplacebo] [ 22] };
[   0.878][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=0) const float _6 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=1) const float _b = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=2) const float _10 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=3) const float _8002 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=4) const float _8003 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=5) const float _4002 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=6) const float _4003 = 1; 
[   0.878][d][vo/gpu-next/libplacebo] [ 30] layout(binding=0) uniform  sampler2D _2;
[   0.878][d][vo/gpu-next/libplacebo] [ 31] layout(binding=1) uniform  sampler2D _7;
[   0.878][d][vo/gpu-next/libplacebo] [ 32] layout(binding=2) uniform  sampler2D _c;
[   0.878][d][vo/gpu-next/libplacebo] [ 33] layout(location=0) in vec2 _3;
[   0.878][d][vo/gpu-next/libplacebo] [ 34] layout(location=1) in vec2 _8;
[   0.878][d][vo/gpu-next/libplacebo] [ 35] layout(location=2) in vec2 _d;
[   0.878][d][vo/gpu-next/libplacebo] [ 36] layout(location=0) out vec4 out_color;
[   0.878][d][vo/gpu-next/libplacebo] [ 37] 
[   0.878][d][vo/gpu-next/libplacebo] [ 38] #define CHROMA_raw _2 
[   0.878][d][vo/gpu-next/libplacebo] [ 39] #define CHROMA_pos _3 
[   0.878][d][vo/gpu-next/libplacebo] [ 40] #define CHROMA_map _3_map 
[   0.878][d][vo/gpu-next/libplacebo] [ 41] #define CHROMA_size vec2(textureSize(_2, 0)) 
[   0.878][d][vo/gpu-next/libplacebo] [ 42] #define CHROMA_pt _4 
[   0.878][d][vo/gpu-next/libplacebo] [ 43] #define CHROMA_off _5 
[   0.878][d][vo/gpu-next/libplacebo] [ 44] #define CHROMA_mul _6 
[   0.878][d][vo/gpu-next/libplacebo] [ 45] #define CHROMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.878][d][vo/gpu-next/libplacebo] [ 46] #define CHROMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 47] #define CHROMA_texOff(off) (CHROMA_tex(_3 + _4 * vec2(off))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 48] #define CHROMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 49] #define HOOKED_raw CHROMA_raw 
[   0.878][d][vo/gpu-next/libplacebo] [ 50] #define HOOKED_pos CHROMA_pos 
[   0.878][d][vo/gpu-next/libplacebo] [ 51] #define HOOKED_size CHROMA_size 
[   0.878][d][vo/gpu-next/libplacebo] [ 52] #define HOOKED_rot CHROMA_rot 
[   0.878][d][vo/gpu-next/libplacebo] [ 53] #define HOOKED_off CHROMA_off 
[   0.878][d][vo/gpu-next/libplacebo] [ 54] #define HOOKED_pt CHROMA_pt 
[   0.878][d][vo/gpu-next/libplacebo] [ 55] #define HOOKED_map CHROMA_map 
[   0.878][d][vo/gpu-next/libplacebo] [ 56] #define HOOKED_mul CHROMA_mul 
[   0.878][d][vo/gpu-next/libplacebo] [ 57] #define HOOKED_tex CHROMA_tex 
[   0.878][d][vo/gpu-next/libplacebo] [ 58] #define HOOKED_texOff CHROMA_texOff 
[   0.878][d][vo/gpu-next/libplacebo] [ 59] #define HOOKED_gather CHROMA_gather 
[   0.878][d][vo/gpu-next/libplacebo] [ 60] #define LUMA_raw _7 
[   0.878][d][vo/gpu-next/libplacebo] [ 61] #define LUMA_pos _8 
[   0.878][d][vo/gpu-next/libplacebo] [ 62] #define LUMA_map _8_map 
[   0.878][d][vo/gpu-next/libplacebo] [ 63] #define LUMA_size vec2(textureSize(_7, 0)) 
[   0.878][d][vo/gpu-next/libplacebo] [ 64] #define LUMA_pt _9 
[   0.878][d][vo/gpu-next/libplacebo] [ 65] #define LUMA_off _a 
[   0.878][d][vo/gpu-next/libplacebo] [ 66] #define LUMA_mul _b 
[   0.878][d][vo/gpu-next/libplacebo] [ 67] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.878][d][vo/gpu-next/libplacebo] [ 68] #define LUMA_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 69] #define LUMA_texOff(off) (LUMA_tex(_8 + _9 * vec2(off))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 70] #define LUMA_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 71] #define LOWRES_Y_raw _c 
[   0.878][d][vo/gpu-next/libplacebo] [ 72] #define LOWRES_Y_pos _d 
[   0.878][d][vo/gpu-next/libplacebo] [ 73] #define LOWRES_Y_map _d_map 
[   0.878][d][vo/gpu-next/libplacebo] [ 74] #define LOWRES_Y_size vec2(textureSize(_c, 0)) 
[   0.878][d][vo/gpu-next/libplacebo] [ 75] #define LOWRES_Y_pt _e 
[   0.878][d][vo/gpu-next/libplacebo] [ 76] #define LOWRES_Y_off _f 
[   0.878][d][vo/gpu-next/libplacebo] [ 77] #define LOWRES_Y_mul _10 
[   0.878][d][vo/gpu-next/libplacebo] [ 78] #define LOWRES_Y_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.878][d][vo/gpu-next/libplacebo] [ 79] #define LOWRES_Y_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 80] #define LOWRES_Y_texOff(off) (LOWRES_Y_tex(_d + _e * vec2(off))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 81] #define LOWRES_Y_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[   0.878][d][vo/gpu-next/libplacebo] [ 82] #define frame _11 
[   0.878][d][vo/gpu-next/libplacebo] [ 83] #define random _12 
[   0.878][d][vo/gpu-next/libplacebo] [ 84] #define input_size _13 
[   0.878][d][vo/gpu-next/libplacebo] [ 85] #define target_size _14 
[   0.878][d][vo/gpu-next/libplacebo] [ 86] #define tex_offset _15 
[   0.878][d][vo/gpu-next/libplacebo] [ 87] vec4 _8001(vec4 color) {
[   0.878][d][vo/gpu-next/libplacebo] [ 88] // pl_shader_linearize           
[   0.878][d][vo/gpu-next/libplacebo] [ 89] color.rgb = max(color.rgb, 0.0); 
[   0.878][d][vo/gpu-next/libplacebo] [ 90] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[   0.878][d][vo/gpu-next/libplacebo] [ 91] return color;
[   0.878][d][vo/gpu-next/libplacebo] [ 92] }
[   0.878][d][vo/gpu-next/libplacebo] [ 93] 
[   0.878][d][vo/gpu-next/libplacebo] [ 94] #define linearize _8001 
[   0.878][d][vo/gpu-next/libplacebo] [ 95] vec4 _4001(vec4 color) {
[   0.878][d][vo/gpu-next/libplacebo] [ 96] // pl_shader_delinearize 
[   0.878][d][vo/gpu-next/libplacebo] [ 97] color.rgb = max(color.rgb, 0.0); 
[   0.878][d][vo/gpu-next/libplacebo] [ 98] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[   0.878][d][vo/gpu-next/libplacebo] [ 99] return color;
[   0.878][d][vo/gpu-next/libplacebo] [100] }
[   0.878][d][vo/gpu-next/libplacebo] [101] 
[   0.878][d][vo/gpu-next/libplacebo] [102] #define delinearize _4001 
[   0.878][d][vo/gpu-next/libplacebo] [103] 
[   0.878][d][vo/gpu-next/libplacebo] [104] #define sigma_nsq   256.0/(255.0*255.0)
[   0.878][d][vo/gpu-next/libplacebo] [105] #define N           8
[   0.878][d][vo/gpu-next/libplacebo] [106] #define sqr(x)      dot(x,x)
[   0.878][d][vo/gpu-next/libplacebo] [107] 
[   0.878][d][vo/gpu-next/libplacebo] [108] #define M(i,j)      Mx[min(i,j)*N + max(i,j) - (min(i,j)*(min(i,j)+1))/2]
[   0.878][d][vo/gpu-next/libplacebo] [109] 
[   0.878][d][vo/gpu-next/libplacebo] [110] #define C(i,j)      (inversesqrt(1.0 + (X[i].y + X[j].y) / Var) * exp(-0.5 * (sqr(X[i].x - X[j].x) / (localVar + X[i].y + X[j].y) + sqr((coords[i] - coords[j]) / radius))) /*+ (X[i].x - y) * (X[j].x - y) / Var*/)  // commented out part works well only on test patterns
[   0.878][d][vo/gpu-next/libplacebo] [111] #define c(i)        (inversesqrt(1.0 + X[i].y / Var) * exp(-0.5 * (sqr(X[i].x - y) / (localVar + X[i].y) + sqr((coords[i] - offset) / radius))))
[   0.878][d][vo/gpu-next/libplacebo] [112] 
[   0.878][d][vo/gpu-next/libplacebo] [113] #define getnsum(i)  X[i] = vec4(LOWRES_Y_tex(LOWRES_Y_pt*(pos+coords[i]+vec2(0.5))).xy, \
[   0.878][d][vo/gpu-next/libplacebo] [114]                                 CHROMA_tex(CHROMA_pt*(pos+coords[i]+vec2(0.5))).xy); \
[   0.878][d][vo/gpu-next/libplacebo] [115]                     w = clamp(1.5 - abs(coords[i]), 0.0, 1.0); \
[   0.878][d][vo/gpu-next/libplacebo] [116]                     total += w.x*w.y*vec4(X[i].x, X[i].x * X[i].x, X[i].y, 1.0);
[   0.878][d][vo/gpu-next/libplacebo] [117] 
[   0.878][d][vo/gpu-next/libplacebo] [118] #define I3(f, n)    f(n) f(n+1) f(n+2)
[   0.878][d][vo/gpu-next/libplacebo] [119] #define I9(f, n)    I3(f, n) I3(f, n+3) I3(f, n+6)
[   0.878][d][vo/gpu-next/libplacebo] [120] 
[   0.878][d][vo/gpu-next/libplacebo] [121] vec4 hook() {
[   0.878][d][vo/gpu-next/libplacebo] [122]     vec2 pos = CHROMA_pos * HOOKED_size - vec2(0.5);
[   0.878][d][vo/gpu-next/libplacebo] [123]     vec2 offset = pos - round(pos);
[   0.878][d][vo/gpu-next/libplacebo] [124]     pos -= offset;
[   0.878][d][vo/gpu-next/libplacebo] [125] 
[   0.878][d][vo/gpu-next/libplacebo] [126]     vec2 coords[N+1];
[   0.878][d][vo/gpu-next/libplacebo] [127]     vec4 X[N+1];
[   0.878][d][vo/gpu-next/libplacebo] [128]     vec2 w;
[   0.878][d][vo/gpu-next/libplacebo] [129]     vec4 total = vec4(0);
[   0.878][d][vo/gpu-next/libplacebo] [130] 
[   0.878][d][vo/gpu-next/libplacebo] [131]     coords[0] = vec2(-1,-1); coords[1] = vec2(-1, 0); coords[2] = vec2(-1, 1);
[   0.878][d][vo/gpu-next/libplacebo] [132]     coords[3] = vec2( 0,-1); coords[4] = vec2( 0, 1); coords[5] = vec2( 1,-1);
[   0.878][d][vo/gpu-next/libplacebo] [133]     coords[6] = vec2( 1, 0); coords[7] = vec2( 1, 1); coords[8] = vec2( 0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [134] 
[   0.878][d][vo/gpu-next/libplacebo] [135]     I9(getnsum, 0)
[   0.878][d][vo/gpu-next/libplacebo] [136] 
[   0.878][d][vo/gpu-next/libplacebo] [137]     total.xyz /= total.w;
[   0.878][d][vo/gpu-next/libplacebo] [138]     float localVar = abs(total.y - total.x * total.x) + sigma_nsq;
[   0.878][d][vo/gpu-next/libplacebo] [139]     float Var = localVar + total.z;
[   0.878][d][vo/gpu-next/libplacebo] [140]     float radius = 1.5;  // mix(1.5, 1.0, sigma_nsq / Var);
[   0.878][d][vo/gpu-next/libplacebo] [141] 
[   0.878][d][vo/gpu-next/libplacebo] [142]     float y = LUMA_texOff(0).x;
[   0.878][d][vo/gpu-next/libplacebo] [143]     float Mx[(N*(N+1))/2];
[   0.878][d][vo/gpu-next/libplacebo] [144]     float b[N];
[   0.878][d][vo/gpu-next/libplacebo] [145]     vec2 interp = X[N].zw;
[   0.878][d][vo/gpu-next/libplacebo] [146] 
[   0.878][d][vo/gpu-next/libplacebo] [147]     b[0] = c(0) - c(N) - C(0,N) + C(N,N); M(0, 0) = C(0,0) - C(0,N) - C(0,N) + C(N,N); M(0, 1) = C(0,1) - C(1,N) - C(0,N) + C(N,N); M(0, 2) = C(0,2) - C(2,N) - C(0,N) + C(N,N); M(0, 3) = C(0,3) - C(3,N) - C(0,N) + C(N,N); M(0, 4) = C(0,4) - C(4,N) - C(0,N) + C(N,N); M(0, 5) = C(0,5) - C(5,N) - C(0,N) + C(N,N); M(0, 6) = C(0,6) - C(6,N) - C(0,N) + C(N,N); M(0, 7) = C(0,7) - C(7,N) - C(0,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [148]     b[1] = c(1) - c(N) - C(1,N) + C(N,N); M(1, 1) = C(1,1) - C(1,N) - C(1,N) + C(N,N); M(1, 2) = C(1,2) - C(2,N) - C(1,N) + C(N,N); M(1, 3) = C(1,3) - C(3,N) - C(1,N) + C(N,N); M(1, 4) = C(1,4) - C(4,N) - C(1,N) + C(N,N); M(1, 5) = C(1,5) - C(5,N) - C(1,N) + C(N,N); M(1, 6) = C(1,6) - C(6,N) - C(1,N) + C(N,N); M(1, 7) = C(1,7) - C(7,N) - C(1,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [149]     b[2] = c(2) - c(N) - C(2,N) + C(N,N); M(2, 2) = C(2,2) - C(2,N) - C(2,N) + C(N,N); M(2, 3) = C(2,3) - C(3,N) - C(2,N) + C(N,N); M(2, 4) = C(2,4) - C(4,N) - C(2,N) + C(N,N); M(2, 5) = C(2,5) - C(5,N) - C(2,N) + C(N,N); M(2, 6) = C(2,6) - C(6,N) - C(2,N) + C(N,N); M(2, 7) = C(2,7) - C(7,N) - C(2,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [150]     b[3] = c(3) - c(N) - C(3,N) + C(N,N); M(3, 3) = C(3,3) - C(3,N) - C(3,N) + C(N,N); M(3, 4) = C(3,4) - C(4,N) - C(3,N) + C(N,N); M(3, 5) = C(3,5) - C(5,N) - C(3,N) + C(N,N); M(3, 6) = C(3,6) - C(6,N) - C(3,N) + C(N,N); M(3, 7) = C(3,7) - C(7,N) - C(3,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [151]     b[4] = c(4) - c(N) - C(4,N) + C(N,N); M(4, 4) = C(4,4) - C(4,N) - C(4,N) + C(N,N); M(4, 5) = C(4,5) - C(5,N) - C(4,N) + C(N,N); M(4, 6) = C(4,6) - C(6,N) - C(4,N) + C(N,N); M(4, 7) = C(4,7) - C(7,N) - C(4,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [152]     b[5] = c(5) - c(N) - C(5,N) + C(N,N); M(5, 5) = C(5,5) - C(5,N) - C(5,N) + C(N,N); M(5, 6) = C(5,6) - C(6,N) - C(5,N) + C(N,N); M(5, 7) = C(5,7) - C(7,N) - C(5,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [153]     b[6] = c(6) - c(N) - C(6,N) + C(N,N); M(6, 6) = C(6,6) - C(6,N) - C(6,N) + C(N,N); M(6, 7) = C(6,7) - C(7,N) - C(6,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [154]     b[7] = c(7) - c(N) - C(7,N) + C(N,N); M(7, 7) = C(7,7) - C(7,N) - C(7,N) + C(N,N);
[   0.878][d][vo/gpu-next/libplacebo] [155] 
[   0.878][d][vo/gpu-next/libplacebo] [156]     b[1] -= b[0] * M(0, 1) / M(0, 0); M(1, 1) -= M(0, 1) * M(0, 1) / M(0, 0); M(1, 2) -= M(0, 2) * M(0, 1) / M(0, 0); M(1, 3) -= M(0, 3) * M(0, 1) / M(0, 0); M(1, 4) -= M(0, 4) * M(0, 1) / M(0, 0); M(1, 5) -= M(0, 5) * M(0, 1) / M(0, 0); M(1, 6) -= M(0, 6) * M(0, 1) / M(0, 0); M(1, 7) -= M(0, 7) * M(0, 1) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [157]     b[2] -= b[0] * M(0, 2) / M(0, 0); M(2, 2) -= M(0, 2) * M(0, 2) / M(0, 0); M(2, 3) -= M(0, 3) * M(0, 2) / M(0, 0); M(2, 4) -= M(0, 4) * M(0, 2) / M(0, 0); M(2, 5) -= M(0, 5) * M(0, 2) / M(0, 0); M(2, 6) -= M(0, 6) * M(0, 2) / M(0, 0); M(2, 7) -= M(0, 7) * M(0, 2) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [158]     b[3] -= b[0] * M(0, 3) / M(0, 0); M(3, 3) -= M(0, 3) * M(0, 3) / M(0, 0); M(3, 4) -= M(0, 4) * M(0, 3) / M(0, 0); M(3, 5) -= M(0, 5) * M(0, 3) / M(0, 0); M(3, 6) -= M(0, 6) * M(0, 3) / M(0, 0); M(3, 7) -= M(0, 7) * M(0, 3) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [159]     b[4] -= b[0] * M(0, 4) / M(0, 0); M(4, 4) -= M(0, 4) * M(0, 4) / M(0, 0); M(4, 5) -= M(0, 5) * M(0, 4) / M(0, 0); M(4, 6) -= M(0, 6) * M(0, 4) / M(0, 0); M(4, 7) -= M(0, 7) * M(0, 4) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [160]     b[5] -= b[0] * M(0, 5) / M(0, 0); M(5, 5) -= M(0, 5) * M(0, 5) / M(0, 0); M(5, 6) -= M(0, 6) * M(0, 5) / M(0, 0); M(5, 7) -= M(0, 7) * M(0, 5) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [161]     b[6] -= b[0] * M(0, 6) / M(0, 0); M(6, 6) -= M(0, 6) * M(0, 6) / M(0, 0); M(6, 7) -= M(0, 7) * M(0, 6) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [162]     b[7] -= b[0] * M(0, 7) / M(0, 0); M(7, 7) -= M(0, 7) * M(0, 7) / M(0, 0);
[   0.878][d][vo/gpu-next/libplacebo] [163] 
[   0.879][d][vo/gpu-next/libplacebo] [164]     b[2] -= b[1] * M(1, 2) / M(1, 1); M(2, 2) -= M(1, 2) * M(1, 2) / M(1, 1); M(2, 3) -= M(1, 3) * M(1, 2) / M(1, 1); M(2, 4) -= M(1, 4) * M(1, 2) / M(1, 1); M(2, 5) -= M(1, 5) * M(1, 2) / M(1, 1); M(2, 6) -= M(1, 6) * M(1, 2) / M(1, 1); M(2, 7) -= M(1, 7) * M(1, 2) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [165]     b[3] -= b[1] * M(1, 3) / M(1, 1); M(3, 3) -= M(1, 3) * M(1, 3) / M(1, 1); M(3, 4) -= M(1, 4) * M(1, 3) / M(1, 1); M(3, 5) -= M(1, 5) * M(1, 3) / M(1, 1); M(3, 6) -= M(1, 6) * M(1, 3) / M(1, 1); M(3, 7) -= M(1, 7) * M(1, 3) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [166]     b[4] -= b[1] * M(1, 4) / M(1, 1); M(4, 4) -= M(1, 4) * M(1, 4) / M(1, 1); M(4, 5) -= M(1, 5) * M(1, 4) / M(1, 1); M(4, 6) -= M(1, 6) * M(1, 4) / M(1, 1); M(4, 7) -= M(1, 7) * M(1, 4) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [167]     b[5] -= b[1] * M(1, 5) / M(1, 1); M(5, 5) -= M(1, 5) * M(1, 5) / M(1, 1); M(5, 6) -= M(1, 6) * M(1, 5) / M(1, 1); M(5, 7) -= M(1, 7) * M(1, 5) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [168]     b[6] -= b[1] * M(1, 6) / M(1, 1); M(6, 6) -= M(1, 6) * M(1, 6) / M(1, 1); M(6, 7) -= M(1, 7) * M(1, 6) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [169]     b[7] -= b[1] * M(1, 7) / M(1, 1); M(7, 7) -= M(1, 7) * M(1, 7) / M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [170] 
[   0.879][d][vo/gpu-next/libplacebo] [171]     b[3] -= b[2] * M(2, 3) / M(2, 2); M(3, 3) -= M(2, 3) * M(2, 3) / M(2, 2); M(3, 4) -= M(2, 4) * M(2, 3) / M(2, 2); M(3, 5) -= M(2, 5) * M(2, 3) / M(2, 2); M(3, 6) -= M(2, 6) * M(2, 3) / M(2, 2); M(3, 7) -= M(2, 7) * M(2, 3) / M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [172]     b[4] -= b[2] * M(2, 4) / M(2, 2); M(4, 4) -= M(2, 4) * M(2, 4) / M(2, 2); M(4, 5) -= M(2, 5) * M(2, 4) / M(2, 2); M(4, 6) -= M(2, 6) * M(2, 4) / M(2, 2); M(4, 7) -= M(2, 7) * M(2, 4) / M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [173]     b[5] -= b[2] * M(2, 5) / M(2, 2); M(5, 5) -= M(2, 5) * M(2, 5) / M(2, 2); M(5, 6) -= M(2, 6) * M(2, 5) / M(2, 2); M(5, 7) -= M(2, 7) * M(2, 5) / M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [174]     b[6] -= b[2] * M(2, 6) / M(2, 2); M(6, 6) -= M(2, 6) * M(2, 6) / M(2, 2); M(6, 7) -= M(2, 7) * M(2, 6) / M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [175]     b[7] -= b[2] * M(2, 7) / M(2, 2); M(7, 7) -= M(2, 7) * M(2, 7) / M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [176] 
[   0.879][d][vo/gpu-next/libplacebo] [177]     b[4] -= b[3] * M(3, 4) / M(3, 3); M(4, 4) -= M(3, 4) * M(3, 4) / M(3, 3); M(4, 5) -= M(3, 5) * M(3, 4) / M(3, 3); M(4, 6) -= M(3, 6) * M(3, 4) / M(3, 3); M(4, 7) -= M(3, 7) * M(3, 4) / M(3, 3);
[   0.879][d][vo/gpu-next/libplacebo] [178]     b[5] -= b[3] * M(3, 5) / M(3, 3); M(5, 5) -= M(3, 5) * M(3, 5) / M(3, 3); M(5, 6) -= M(3, 6) * M(3, 5) / M(3, 3); M(5, 7) -= M(3, 7) * M(3, 5) / M(3, 3);
[   0.879][d][vo/gpu-next/libplacebo] [179]     b[6] -= b[3] * M(3, 6) / M(3, 3); M(6, 6) -= M(3, 6) * M(3, 6) / M(3, 3); M(6, 7) -= M(3, 7) * M(3, 6) / M(3, 3);
[   0.879][d][vo/gpu-next/libplacebo] [180]     b[7] -= b[3] * M(3, 7) / M(3, 3); M(7, 7) -= M(3, 7) * M(3, 7) / M(3, 3);
[   0.879][d][vo/gpu-next/libplacebo] [181] 
[   0.879][d][vo/gpu-next/libplacebo] [182]     b[5] -= b[4] * M(4, 5) / M(4, 4); M(5, 5) -= M(4, 5) * M(4, 5) / M(4, 4); M(5, 6) -= M(4, 6) * M(4, 5) / M(4, 4); M(5, 7) -= M(4, 7) * M(4, 5) / M(4, 4);
[   0.879][d][vo/gpu-next/libplacebo] [183]     b[6] -= b[4] * M(4, 6) / M(4, 4); M(6, 6) -= M(4, 6) * M(4, 6) / M(4, 4); M(6, 7) -= M(4, 7) * M(4, 6) / M(4, 4);
[   0.879][d][vo/gpu-next/libplacebo] [184]     b[7] -= b[4] * M(4, 7) / M(4, 4); M(7, 7) -= M(4, 7) * M(4, 7) / M(4, 4);
[   0.879][d][vo/gpu-next/libplacebo] [185] 
[   0.879][d][vo/gpu-next/libplacebo] [186]     b[6] -= b[5] * M(5, 6) / M(5, 5); M(6, 6) -= M(5, 6) * M(5, 6) / M(5, 5); M(6, 7) -= M(5, 7) * M(5, 6) / M(5, 5);
[   0.879][d][vo/gpu-next/libplacebo] [187]     b[7] -= b[5] * M(5, 7) / M(5, 5); M(7, 7) -= M(5, 7) * M(5, 7) / M(5, 5);
[   0.879][d][vo/gpu-next/libplacebo] [188] 
[   0.879][d][vo/gpu-next/libplacebo] [189]     b[7] -= b[6] * M(6, 7) / M(6, 6); M(7, 7) -= M(6, 7) * M(6, 7) / M(6, 6);
[   0.879][d][vo/gpu-next/libplacebo] [190] 
[   0.879][d][vo/gpu-next/libplacebo] [191]     b[7] /= M(7, 7);
[   0.879][d][vo/gpu-next/libplacebo] [192]     interp += b[7] * (X[7] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [193] 
[   0.879][d][vo/gpu-next/libplacebo] [194]     b[6] -= M(6, 7) * b[7]; b[6] /= M(6, 6);
[   0.879][d][vo/gpu-next/libplacebo] [195]     interp += b[6] * (X[6] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [196] 
[   0.879][d][vo/gpu-next/libplacebo] [197]     b[5] -= M(5, 6) * b[6]; b[5] -= M(5, 7) * b[7]; b[5] /= M(5, 5);
[   0.879][d][vo/gpu-next/libplacebo] [198]     interp += b[5] * (X[5] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [199] 
[   0.879][d][vo/gpu-next/libplacebo] [200]     b[4] -= M(4, 5) * b[5]; b[4] -= M(4, 6) * b[6]; b[4] -= M(4, 7) * b[7]; b[4] /= M(4, 4);
[   0.879][d][vo/gpu-next/libplacebo] [201]     interp += b[4] * (X[4] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [202] 
[   0.879][d][vo/gpu-next/libplacebo] [203]     b[3] -= M(3, 4) * b[4]; b[3] -= M(3, 5) * b[5]; b[3] -= M(3, 6) * b[6]; b[3] -= M(3, 7) * b[7]; b[3] /= M(3, 3);
[   0.879][d][vo/gpu-next/libplacebo] [204]     interp += b[3] * (X[3] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [205] 
[   0.879][d][vo/gpu-next/libplacebo] [206]     b[2] -= M(2, 3) * b[3]; b[2] -= M(2, 4) * b[4]; b[2] -= M(2, 5) * b[5]; b[2] -= M(2, 6) * b[6]; b[2] -= M(2, 7) * b[7]; b[2] /= M(2, 2);
[   0.879][d][vo/gpu-next/libplacebo] [207]     interp += b[2] * (X[2] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [208] 
[   0.879][d][vo/gpu-next/libplacebo] [209]     b[1] -= M(1, 2) * b[2]; b[1] -= M(1, 3) * b[3]; b[1] -= M(1, 4) * b[4]; b[1] -= M(1, 5) * b[5]; b[1] -= M(1, 6) * b[6]; b[1] -= M(1, 7) * b[7]; b[1] /= M(1, 1);
[   0.879][d][vo/gpu-next/libplacebo] [210]     interp += b[1] * (X[1] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [211] 
[   0.879][d][vo/gpu-next/libplacebo] [212]     b[0] -= M(0, 1) * b[1]; b[0] -= M(0, 2) * b[2]; b[0] -= M(0, 3) * b[3]; b[0] -= M(0, 4) * b[4]; b[0] -= M(0, 5) * b[5]; b[0] -= M(0, 6) * b[6]; b[0] -= M(0, 7) * b[7]; b[0] /= M(0, 0);
[   0.879][d][vo/gpu-next/libplacebo] [213]     interp += b[0] * (X[0] - X[N]).zw;
[   0.879][d][vo/gpu-next/libplacebo] [214] 
[   0.879][d][vo/gpu-next/libplacebo] [215]     return interp.xyxy;
[   0.879][d][vo/gpu-next/libplacebo] [216] }
[   0.879][d][vo/gpu-next/libplacebo] [217] vec4 _1() {
[   0.879][d][vo/gpu-next/libplacebo] [218] vec4 color = hook(); 
[   0.879][d][vo/gpu-next/libplacebo] [219] return color;
[   0.879][d][vo/gpu-next/libplacebo] [220] }
[   0.879][d][vo/gpu-next/libplacebo] [221] 
[   0.879][d][vo/gpu-next/libplacebo] [222] void main() {
[   0.879][d][vo/gpu-next/libplacebo] [223] out_color = _1();
[   0.879][d][vo/gpu-next/libplacebo] [224] }
[   0.879][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=4: 0.870311
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=5: 0.059585
[   0.879][d][vo/gpu-next/libplacebo]   constant_id=6: 1.149015
[   0.879][d][vo/gpu-next] cache_load_obj: key(f7414375b5c01f02), size(948), load time(0.024 ms)
[   0.879][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xf7414375b5c01f02
[   0.879][d][vo/gpu-next] cache_load_obj: key(5d109be536f42b4d), size(31680), load time(0.173 ms)
[   0.879][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x5d109be536f42b4d
[   0.879][d][vo/gpu-next] cache_load_obj: key(bc63d8f4df9d5b3e), size(28966), load time(0.155 ms)
[   0.879][d][vo/gpu-next/libplacebo] Spent 0.037 ms compiling shader
[   0.879][d][vo/gpu-next] cache_save_obj: key(f7414375b5c01f02), size(948)
[   0.879][d][vo/gpu-next] cache_save_obj: key(5d109be536f42b4d), size(31680)
[   0.879][d][vo/gpu-next/libplacebo] Spent 0.240 ms creating pipeline
[   0.879][d][vo/gpu-next] cache_save_obj: key(bc63d8f4df9d5b3e), size(28966)
[   0.879][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.879][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1065
[   0.879][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1065
[   0.879][d][vo/gpu-next/libplacebo] Spent 0.055 ms allocating slab
[   0.879][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.879][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.879][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.879][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.880][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.880][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec3 _2005;
[   0.880][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=16) mat3 _2004;
[   0.880][d][vo/gpu-next/libplacebo] [ 13] };
[   0.880][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _2002 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _2003 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _a004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _6004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _a002;
[   0.880][d][vo/gpu-next/libplacebo] [ 19] layout(binding=1) uniform  sampler2D _6002;
[   0.880][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _2008;
[   0.880][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec2 _a003;
[   0.880][d][vo/gpu-next/libplacebo] [ 22] layout(location=1) in vec2 _2009;
[   0.880][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) out vec2 _6003;
[   0.880][d][vo/gpu-next/libplacebo] [ 24] layout(location=2) in vec2 _200a;
[   0.880][d][vo/gpu-next/libplacebo] [ 25] void main() {
[   0.880][d][vo/gpu-next/libplacebo] [ 26] _a003 = _2008;
[   0.880][d][vo/gpu-next/libplacebo] [ 27] _6003 = _2009;
[   0.880][d][vo/gpu-next/libplacebo] [ 28] vec2 va_pos = _200a; 
[   0.880][d][vo/gpu-next/libplacebo] [ 29] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.880][d][vo/gpu-next/libplacebo] [ 30] }
[   0.880][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.880][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.880][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.880][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.880][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec3 _2005;
[   0.880][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=16) mat3 _2004;
[   0.880][d][vo/gpu-next/libplacebo] [ 13] };
[   0.880][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _2002 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _2003 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _a004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _6004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _a002;
[   0.880][d][vo/gpu-next/libplacebo] [ 19] layout(binding=1) uniform  sampler2D _6002;
[   0.880][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _a003;
[   0.880][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) in vec2 _6003;
[   0.880][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[   0.880][d][vo/gpu-next/libplacebo] [ 23] 
[   0.880][d][vo/gpu-next/libplacebo] [ 24] vec4 _a001() {
[   0.880][d][vo/gpu-next/libplacebo] [ 25] // pl_shader_sample_direct                            
[   0.880][d][vo/gpu-next/libplacebo] [ 26] vec4 color = vec4(_a004) * textureLod(_a002, _a003, 0.0);   
[   0.880][d][vo/gpu-next/libplacebo] [ 27] return color;
[   0.880][d][vo/gpu-next/libplacebo] [ 28] }
[   0.880][d][vo/gpu-next/libplacebo] [ 29] 
[   0.880][d][vo/gpu-next/libplacebo] [ 30] vec4 _6001() {
[   0.880][d][vo/gpu-next/libplacebo] [ 31] // pl_shader_sample_direct                            
[   0.880][d][vo/gpu-next/libplacebo] [ 32] vec4 color = vec4(_6004) * textureLod(_6002, _6003, 0.0);   
[   0.880][d][vo/gpu-next/libplacebo] [ 33] return color;
[   0.880][d][vo/gpu-next/libplacebo] [ 34] }
[   0.880][d][vo/gpu-next/libplacebo] [ 35] 
[   0.880][d][vo/gpu-next/libplacebo] [ 36] vec4 _2001() {
[   0.880][d][vo/gpu-next/libplacebo] [ 37] vec4 color = vec4(_2003, vec2(_2002), 1.0);   
[   0.880][d][vo/gpu-next/libplacebo] [ 38] // pass_read_image                        
[   0.880][d][vo/gpu-next/libplacebo] [ 39] {                                         
[   0.880][d][vo/gpu-next/libplacebo] [ 40] vec4 tmp;                                 
[   0.880][d][vo/gpu-next/libplacebo] [ 41] tmp = _a001(); 
[   0.880][d][vo/gpu-next/libplacebo] [ 42] color[0] = tmp[0];
[   0.880][d][vo/gpu-next/libplacebo] [ 43] tmp = _6001(); 
[   0.880][d][vo/gpu-next/libplacebo] [ 44] color[1] = tmp[0];
[   0.880][d][vo/gpu-next/libplacebo] [ 45] color[2] = tmp[1];
[   0.880][d][vo/gpu-next/libplacebo] [ 46] }
[   0.880][d][vo/gpu-next/libplacebo] [ 47] // pl_shader_decode_color 
[   0.880][d][vo/gpu-next/libplacebo] [ 48] { 
[   0.880][d][vo/gpu-next/libplacebo] [ 49] color.rgb = _2004 * color.rgb + _2005; 
[   0.880][d][vo/gpu-next/libplacebo] [ 50] }
[   0.880][d][vo/gpu-next/libplacebo] [ 51] return color;
[   0.880][d][vo/gpu-next/libplacebo] [ 52] }
[   0.880][d][vo/gpu-next/libplacebo] [ 53] 
[   0.880][d][vo/gpu-next/libplacebo] [ 54] void main() {
[   0.880][d][vo/gpu-next/libplacebo] [ 55] out_color = _2001();
[   0.880][d][vo/gpu-next/libplacebo] [ 56] }
[   0.880][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.880][d][vo/gpu-next/libplacebo]   constant_id=0: 0.501961
[   0.880][d][vo/gpu-next/libplacebo]   constant_id=1: 0.062745
[   0.880][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[   0.880][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[   0.880][d][vo/gpu-next] cache_load_obj: key(2c3f15232e538598), size(848), load time(0.035 ms)
[   0.880][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x2c3f15232e538598
[   0.880][d][vo/gpu-next] cache_load_obj: key(852e14596ee317d8), size(1648), load time(0.027 ms)
[   0.880][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x852e14596ee317d8
[   0.880][d][vo/gpu-next] cache_load_obj: key(f6330099a065a0e6), size(14338), load time(0.111 ms)
[   0.880][d][vo/gpu-next/libplacebo] Spent 0.004 ms compiling shader
[   0.880][d][vo/gpu-next] cache_save_obj: key(2c3f15232e538598), size(848)
[   0.880][d][vo/gpu-next] cache_save_obj: key(852e14596ee317d8), size(1648)
[   0.880][d][vo/gpu-next/libplacebo] Spent 0.060 ms creating pipeline
[   0.880][d][vo/gpu-next] cache_save_obj: key(f6330099a065a0e6), size(14338)
[   0.880][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.880][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1065
[   0.880][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1065
[   0.880][d][vo/gpu-next/libplacebo] Spent 0.059 ms allocating slab
[   0.880][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.880][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.880][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.880][d][vo/gpu-next/libplacebo] [ 10] layout(constant_id=0) const float _e004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 11] layout(binding=0) uniform  sampler2D _e002;
[   0.880][d][vo/gpu-next/libplacebo] [ 12] layout(location=0) in vec2 _e007;
[   0.880][d][vo/gpu-next/libplacebo] [ 13] layout(location=0) out vec2 _e003;
[   0.880][d][vo/gpu-next/libplacebo] [ 14] layout(location=1) in vec2 _e008;
[   0.880][d][vo/gpu-next/libplacebo] [ 15] void main() {
[   0.880][d][vo/gpu-next/libplacebo] [ 16] _e003 = _e007;
[   0.880][d][vo/gpu-next/libplacebo] [ 17] vec2 va_pos = _e008; 
[   0.880][d][vo/gpu-next/libplacebo] [ 18] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.880][d][vo/gpu-next/libplacebo] [ 19] }
[   0.880][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.880][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.880][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.880][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.880][d][vo/gpu-next/libplacebo] [ 10] layout(constant_id=0) const float _e004 = 1; 
[   0.880][d][vo/gpu-next/libplacebo] [ 11] layout(binding=0) uniform  sampler2D _e002;
[   0.880][d][vo/gpu-next/libplacebo] [ 12] layout(location=0) in vec2 _e003;
[   0.880][d][vo/gpu-next/libplacebo] [ 13] layout(location=0) out vec4 out_color;
[   0.880][d][vo/gpu-next/libplacebo] [ 14] 
[   0.880][d][vo/gpu-next/libplacebo] [ 15] vec4 _e001() {
[   0.880][d][vo/gpu-next/libplacebo] [ 16] // pl_shader_sample_direct                            
[   0.880][d][vo/gpu-next/libplacebo] [ 17] vec4 color = vec4(_e004) * textureLod(_e002, _e003, 0.0);   
[   0.880][d][vo/gpu-next/libplacebo] [ 18] return color;
[   0.880][d][vo/gpu-next/libplacebo] [ 19] }
[   0.880][d][vo/gpu-next/libplacebo] [ 20] 
[   0.880][d][vo/gpu-next/libplacebo] [ 21] void main() {
[   0.880][d][vo/gpu-next/libplacebo] [ 22] out_color = _e001();
[   0.880][d][vo/gpu-next/libplacebo] [ 23] }
[   0.880][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.880][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.880][d][vo/gpu-next] cache_load_obj: key(b50fb555658166c1), size(748), load time(0.032 ms)
[   0.880][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb50fb555658166c1
[   0.880][d][vo/gpu-next] cache_load_obj: key(d1566dbf1dda46e3), size(584), load time(0.017 ms)
[   0.880][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xd1566dbf1dda46e3
[   0.881][d][vo/gpu-next] cache_load_obj: key(4d8b64c78276749f), size(13149), load time(0.124 ms)
[   0.881][d][vo/gpu-next/libplacebo] Spent 0.003 ms compiling shader
[   0.881][d][vo/gpu-next] cache_save_obj: key(b50fb555658166c1), size(748)
[   0.881][d][vo/gpu-next] cache_save_obj: key(d1566dbf1dda46e3), size(584)
[   0.881][d][vo/gpu-next/libplacebo] Spent 0.074 ms creating pipeline
[   0.881][d][vo/gpu-next] cache_save_obj: key(4d8b64c78276749f), size(13149)
[   0.881][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.881][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.881][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.881][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.881][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.881][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _7;
[   0.881][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _8;
[   0.881][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=96) mat3 _9;
[   0.881][d][vo/gpu-next/libplacebo] [ 14] };
[   0.881][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=0) const float _4 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=1) const float _5 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=2) const float _6 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=3) const float _a = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=4) const float _b = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 20] layout(binding=0) uniform  sampler2D _2;
[   0.881][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) in vec2 _e;
[   0.881][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec2 _3;
[   0.881][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) in vec2 _f;
[   0.881][d][vo/gpu-next/libplacebo] [ 24] void main() {
[   0.881][d][vo/gpu-next/libplacebo] [ 25] _3 = _e;
[   0.881][d][vo/gpu-next/libplacebo] [ 26] vec2 va_pos = _f; 
[   0.881][d][vo/gpu-next/libplacebo] [ 27] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.881][d][vo/gpu-next/libplacebo] [ 28] }
[   0.881][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.881][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.881][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.881][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.881][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.881][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _7;
[   0.881][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _8;
[   0.881][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=96) mat3 _9;
[   0.881][d][vo/gpu-next/libplacebo] [ 14] };
[   0.881][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=0) const float _4 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=1) const float _5 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=2) const float _6 = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=3) const float _a = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=4) const float _b = 1; 
[   0.881][d][vo/gpu-next/libplacebo] [ 20] layout(binding=0) uniform  sampler2D _2;
[   0.881][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) in vec2 _3;
[   0.881][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[   0.881][d][vo/gpu-next/libplacebo] [ 23] 
[   0.881][d][vo/gpu-next/libplacebo] [ 24] vec4 _1() {
[   0.881][d][vo/gpu-next/libplacebo] [ 25] // pl_shader_sample_direct                            
[   0.881][d][vo/gpu-next/libplacebo] [ 26] vec4 color = vec4(_4) * textureLod(_2, _3, 0.0);   
[   0.881][d][vo/gpu-next/libplacebo] [ 27] // pl_shader_color_map 
[   0.881][d][vo/gpu-next/libplacebo] [ 28] {                      
[   0.881][d][vo/gpu-next/libplacebo] [ 29] // pl_shader_linearize           
[   0.881][d][vo/gpu-next/libplacebo] [ 30] color.rgb = max(color.rgb, 0.0); 
[   0.881][d][vo/gpu-next/libplacebo] [ 31] color.rgb = _6 * pow(color.rgb + vec3(_5), vec3(2.4)); 
[   0.881][d][vo/gpu-next/libplacebo] [ 32] color.rgb = _9 * color.rgb; 
[   0.881][d][vo/gpu-next/libplacebo] [ 33] // pl_shader_delinearize 
[   0.881][d][vo/gpu-next/libplacebo] [ 34] color.rgb = _b * color.rgb + vec3(_a); 
[   0.881][d][vo/gpu-next/libplacebo] [ 35] color.rgb = max(color.rgb, 0.0); 
[   0.881][d][vo/gpu-next/libplacebo] [ 36] color.rgb = pow(color.rgb, vec3(1.0/2.2));
[   0.881][d][vo/gpu-next/libplacebo] [ 37] }
[   0.881][d][vo/gpu-next/libplacebo] [ 38] return color;
[   0.881][d][vo/gpu-next/libplacebo] [ 39] }
[   0.881][d][vo/gpu-next/libplacebo] [ 40] 
[   0.881][d][vo/gpu-next/libplacebo] [ 41] void main() {
[   0.881][d][vo/gpu-next/libplacebo] [ 42] out_color = _1();
[   0.881][d][vo/gpu-next/libplacebo] [ 43] }
[   0.881][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.881][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.881][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[   0.881][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[   0.881][d][vo/gpu-next/libplacebo]   constant_id=3: -0.001001
[   0.881][d][vo/gpu-next/libplacebo]   constant_id=4: 1.001001
[   0.881][d][vo/gpu-next] cache_load_obj: key(41c502ef60056358), size(748), load time(0.031 ms)
[   0.881][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x41c502ef60056358
[   0.881][d][vo/gpu-next] cache_load_obj: key(42ecbe111bbbacac), size(2412), load time(0.029 ms)
[   0.881][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x42ecbe111bbbacac
[   0.881][d][vo/gpu-next] cache_load_obj: key(5b25372d680e0040), size(14925), load time(0.131 ms)
[   0.881][d][vo/gpu-next/libplacebo] Spent 0.005 ms compiling shader
[   0.881][d][vo/gpu-next] cache_save_obj: key(41c502ef60056358), size(748)
[   0.881][d][vo/gpu-next] cache_save_obj: key(42ecbe111bbbacac), size(2412)
[   0.881][d][vo/gpu-next/libplacebo] Spent 0.056 ms creating pipeline
[   0.881][d][vo/gpu-next] cache_save_obj: key(5b25372d680e0040), size(14925)
[   0.881][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.881][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:3491
[   0.881][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[   0.881][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[   0.882][d][vo/gpu-next] cache_load_obj: key(d95b62e641a2e006), size(16384), load time(0.165 ms)
[   0.882][d][vo/gpu-next/libplacebo] Re-using cached LUT (0xd95b62e641a2e006) with size 16384
[   0.882][d][vo/gpu-next/libplacebo] Allocating 262144 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   0.882][d][vo/gpu-next/libplacebo] Spent 0.136 ms allocating slab
[   0.882][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[   0.882][d][vo/gpu-next/libplacebo] Spent 0.124 ms allocating slab
[   0.882][d][vo/gpu-next] cache_save_obj: key(d95b62e641a2e006), size(16384)
[   0.882][v][vo/gpu-next/libplacebo] Dithering to 8 bit depth
[   0.882][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.882][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.882][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.882][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.882][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.882][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.882][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=4) float _7;
[   0.882][d][vo/gpu-next/libplacebo] [ 13] };
[   0.882][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _a = 1; 
[   0.882][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _b = 1; 
[   0.882][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c = 1; 
[   0.882][d][vo/gpu-next/libplacebo] [ 17] layout(binding=0) uniform  sampler2D _2;
[   0.882][d][vo/gpu-next/libplacebo] [ 18] layout(binding=1) uniform  sampler2D _5;
[   0.882][d][vo/gpu-next/libplacebo] [ 19] layout(binding=2) uniform  sampler2D _9;
[   0.882][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _10;
[   0.882][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec2 _3;
[   0.882][d][vo/gpu-next/libplacebo] [ 22] layout(location=1) in vec2 _11;
[   0.882][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) out vec2 _6;
[   0.882][d][vo/gpu-next/libplacebo] [ 24] layout(location=2) in vec2 _12;
[   0.882][d][vo/gpu-next/libplacebo] [ 25] void main() {
[   0.882][d][vo/gpu-next/libplacebo] [ 26] _3 = _10;
[   0.882][d][vo/gpu-next/libplacebo] [ 27] _6 = _11;
[   0.882][d][vo/gpu-next/libplacebo] [ 28] vec2 va_pos = _12; 
[   0.882][d][vo/gpu-next/libplacebo] [ 29] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.882][d][vo/gpu-next/libplacebo] [ 30] }
[   0.883][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.883][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.883][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.883][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.883][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.883][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.883][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=4) float _7;
[   0.883][d][vo/gpu-next/libplacebo] [ 13] };
[   0.883][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _a = 1; 
[   0.883][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _b = 1; 
[   0.883][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c = 1; 
[   0.883][d][vo/gpu-next/libplacebo] [ 17] layout(binding=0) uniform  sampler2D _2;
[   0.883][d][vo/gpu-next/libplacebo] [ 18] layout(binding=1) uniform  sampler2D _5;
[   0.883][d][vo/gpu-next/libplacebo] [ 19] layout(binding=2) uniform  sampler2D _9;
[   0.883][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _3;
[   0.883][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) in vec2 _6;
[   0.883][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[   0.883][d][vo/gpu-next/libplacebo] [ 23] 
[   0.883][d][vo/gpu-next/libplacebo] [ 24] #define _8(pos) (texelFetch(_9, ivec2(pos), 0).x)
[   0.883][d][vo/gpu-next/libplacebo] [ 25] vec4 _1() {
[   0.883][d][vo/gpu-next/libplacebo] [ 26] vec4 color;                   
[   0.883][d][vo/gpu-next/libplacebo] [ 27] // pl_render_image_mix        
[   0.883][d][vo/gpu-next/libplacebo] [ 28] {                             
[   0.883][d][vo/gpu-next/libplacebo] [ 29] vec4 mix_color = vec4(0.0);   
[   0.883][d][vo/gpu-next/libplacebo] [ 30] color = textureLod(_2, _3, 0.0); 
[   0.883][d][vo/gpu-next/libplacebo] [ 31] mix_color += vec4(_4) * color; 
[   0.883][d][vo/gpu-next/libplacebo] [ 32] color = textureLod(_5, _6, 0.0); 
[   0.883][d][vo/gpu-next/libplacebo] [ 33] mix_color += vec4(_7) * color; 
[   0.883][d][vo/gpu-next/libplacebo] [ 34] color = mix_color; 
[   0.883][d][vo/gpu-next/libplacebo] [ 35] }                  
[   0.883][d][vo/gpu-next/libplacebo] [ 36] // pl_shader_encode_color 
[   0.883][d][vo/gpu-next/libplacebo] [ 37] { 
[   0.883][d][vo/gpu-next/libplacebo] [ 38] color.rgb *= vec3(color.a); 
[   0.883][d][vo/gpu-next/libplacebo] [ 39] }
[   0.883][d][vo/gpu-next/libplacebo] [ 40] // pl_shader_dither 
[   0.883][d][vo/gpu-next/libplacebo] [ 41] {                    
[   0.883][d][vo/gpu-next/libplacebo] [ 42] float bias;          
[   0.883][d][vo/gpu-next/libplacebo] [ 43] vec2 pos = fract(gl_FragCoord.xy * 1.0/_a); 
[   0.883][d][vo/gpu-next/libplacebo] [ 44] bias = _8(ivec2(pos * _b));
[   0.883][d][vo/gpu-next/libplacebo] [ 45] const float scale = 255.0; 
[   0.883][d][vo/gpu-next/libplacebo] [ 46] color = scale * color + vec4(bias);   
[   0.883][d][vo/gpu-next/libplacebo] [ 47] color = floor(color) * (1.0 / scale); 
[   0.883][d][vo/gpu-next/libplacebo] [ 48] } 
[   0.883][d][vo/gpu-next/libplacebo] [ 49] color *= vec4(1.0 / _c); 
[   0.883][d][vo/gpu-next/libplacebo] [ 50] vec4 _d = color;                 
[   0.883][d][vo/gpu-next/libplacebo] [ 51] color = vec4(0.0, 0.0, 0.0, 1.0); 
[   0.883][d][vo/gpu-next/libplacebo] [ 52] color[0] = _d[0]; 
[   0.883][d][vo/gpu-next/libplacebo] [ 53] color[1] = _d[1]; 
[   0.883][d][vo/gpu-next/libplacebo] [ 54] color[2] = _d[2]; 
[   0.883][d][vo/gpu-next/libplacebo] [ 55] color[3] = _d[3]; 
[   0.883][d][vo/gpu-next/libplacebo] [ 56] return color;
[   0.883][d][vo/gpu-next/libplacebo] [ 57] }
[   0.883][d][vo/gpu-next/libplacebo] [ 58] 
[   0.883][d][vo/gpu-next/libplacebo] [ 59] void main() {
[   0.883][d][vo/gpu-next/libplacebo] [ 60] out_color = _1();
[   0.883][d][vo/gpu-next/libplacebo] [ 61] }
[   0.883][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.883][d][vo/gpu-next/libplacebo]   constant_id=0: 64.000000
[   0.883][d][vo/gpu-next/libplacebo]   constant_id=1: 64.000000
[   0.883][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[   0.883][d][vo/gpu-next] cache_load_obj: key(f9d10c163ee5fd66), size(848), load time(0.032 ms)
[   0.883][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xf9d10c163ee5fd66
[   0.883][d][vo/gpu-next] cache_load_obj: key(e8af280022d1787e), size(1940), load time(0.032 ms)
[   0.883][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xe8af280022d1787e
[   0.883][d][vo/gpu-next] cache_load_obj: key(428ff0a32033a2ba), size(14802), load time(0.133 ms)
[   0.883][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[   0.883][d][vo/gpu-next] cache_save_obj: key(f9d10c163ee5fd66), size(848)
[   0.883][d][vo/gpu-next] cache_save_obj: key(e8af280022d1787e), size(1940)
[   0.883][d][vo/gpu-next/libplacebo] Spent 0.105 ms creating pipeline
[   0.883][d][vo/gpu-next] cache_save_obj: key(428ff0a32033a2ba), size(14802)
[   0.883][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.885][v][vo/gpu-next/wayland] Resizing due to xdg from 848x480 to 848x480
[   0.885][v][vo/gpu-next/wayland] Surface entered output EDR EGM24F100H (0x37), scale = 1.000000, refresh rate = 100.000000 Hz
[   0.885][v][vo/gpu-next/wayland] DND action is DND_APPEND
[   0.885][v][vo/gpu-next/wayland] Given data offer with mime type text/plain
[   0.885][v][vo/gpu-next/wayland] Given data offer with mime type text/plain;charset=utf-8
[   0.885][v][vo/gpu-next/wayland] Resizing due to xdg from 848x480 to 848x480
[   0.885][v][vo/gpu-next/wayland] Resizing due to xdg from 848x480 to 1920x1080
[   0.885][v][cplayer] first video frame after restart shown
[   0.885][v][vo/gpu-next] Window size: 848x480 (Borders: l=0 t=0 r=0 b=0)
[   0.885][v][vo/gpu-next] Video source: 848x480 (1:1)
[   0.885][v][vo/gpu-next] Video display: (0, 0) 848x480 -> (0, 0) 848x480
[   0.885][v][vo/gpu-next] Video scale: 1.000000/1.000000
[   0.885][v][vo/gpu-next] OSD borders: l=0 t=0 r=0 b=0
[   0.885][v][vo/gpu-next] Video borders: l=0 t=0 r=0 b=0
[   0.885][v][vo/gpu-next/wayland] Handling resize on the vk side
[   0.885][d][vo/gpu-next/libplacebo] Requested alpha compositing mode: VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR
[   0.885][d][vo/gpu-next/libplacebo] Requested surface transform: VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR
[   0.885][d][vo/gpu-next/libplacebo] Requested image count: 4 (min 2 max 8)
[   0.885][d][vo/gpu-next/libplacebo] Requested image size: 1920x1080 (min 1x1 < cur -1x-1 < max 16384x16384)
[   0.885][d][vo/gpu-next/libplacebo] (Re)creating swapchain of size 1920x1080
[   0.885][v][auto_profiles] Re-evaluating auto profile fps-fix
[   0.885][d][cplayer] Run command: script-message, flags=64, args=[args="thumbfast-info", args="{\"thumbnail\":\"/tmp/thumbfast.out11061\",\"width\":200,\"overlay_id\":42,\"height\":200,\"disabled\":false,\"available\":true,\"socket\":\"/tmp/thumbfast11061\"}"]
[   0.886][d][cplayer] Run command: script-message, flags=64, args=[args="thumbfast-info", args="{\"thumbnail\":\"/tmp/thumbfast.out11061\",\"width\":200,\"overlay_id\":42,\"height\":113,\"disabled\":false,\"available\":true,\"socket\":\"/tmp/thumbfast11061\"}"]
[   0.889][i][simplehistory] Added the below into history
[   0.889][i][simplehistory] Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4 üïí00:00:00.000
[   0.890][v][vo/gpu-next] Window size: 1920x1080 (Borders: l=0 t=0 r=0 b=0)
[   0.890][v][vo/gpu-next] Video source: 848x480 (1:1)
[   0.890][v][vo/gpu-next] Video display: (0, 0) 848x480 -> (6, 0) 1908x1080
[   0.890][v][vo/gpu-next] Video scale: 2.250000/2.250000
[   0.890][v][vo/gpu-next] OSD borders: l=6 t=0 r=6 b=0
[   0.890][v][vo/gpu-next] Video borders: l=6 t=0 r=6 b=0
[   0.892][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[   0.892][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[   0.892][d][vo/gpu-next/libplacebo] Spent 0.159 ms allocating slab
[   0.892][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:1011
[   0.892][d][vo/gpu-next/libplacebo] Freeing slab of size 3392K
[   0.892][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[   0.893][d][vo/gpu-next/libplacebo] Spent 0.090 ms allocating slab
[   0.893][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.893][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.893][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.893][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.893][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.893][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.893][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[   0.893][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[   0.893][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[   0.893][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[   0.893][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[   0.893][d][vo/gpu-next/libplacebo] [ 18] };
[   0.893][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[   0.893][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[   0.893][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[   0.893][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[   0.893][d][vo/gpu-next/libplacebo] [ 28] void main() {
[   0.893][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[   0.893][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[   0.893][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.893][d][vo/gpu-next/libplacebo] [ 32] }
[   0.893][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.893][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.893][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.893][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.893][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.893][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[   0.893][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[   0.893][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[   0.893][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[   0.893][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[   0.893][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[   0.893][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[   0.893][d][vo/gpu-next/libplacebo] [ 18] };
[   0.893][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[   0.893][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[   0.893][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[   0.893][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[   0.893][d][vo/gpu-next/libplacebo] [ 27] 
[   0.893][d][vo/gpu-next/libplacebo] [ 28] #define MAINPRESUB_raw _2 
[   0.893][d][vo/gpu-next/libplacebo] [ 29] #define MAINPRESUB_pos _3 
[   0.893][d][vo/gpu-next/libplacebo] [ 30] #define MAINPRESUB_map _3_map 
[   0.893][d][vo/gpu-next/libplacebo] [ 31] #define MAINPRESUB_size vec2(textureSize(_2, 0)) 
[   0.893][d][vo/gpu-next/libplacebo] [ 32] #define MAINPRESUB_pt _4 
[   0.893][d][vo/gpu-next/libplacebo] [ 33] #define MAINPRESUB_off _5 
[   0.893][d][vo/gpu-next/libplacebo] [ 34] #define MAINPRESUB_mul _6 
[   0.893][d][vo/gpu-next/libplacebo] [ 35] #define MAINPRESUB_rot mat2(1.0, 0.0, 0.0, 1.0) 
[   0.893][d][vo/gpu-next/libplacebo] [ 36] #define MAINPRESUB_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[   0.893][d][vo/gpu-next/libplacebo] [ 37] #define MAINPRESUB_texOff(off) (MAINPRESUB_tex(_3 + _4 * vec2(off))) 
[   0.893][d][vo/gpu-next/libplacebo] [ 38] #define MAINPRESUB_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[   0.893][d][vo/gpu-next/libplacebo] [ 39] #define HOOKED_raw MAINPRESUB_raw 
[   0.893][d][vo/gpu-next/libplacebo] [ 40] #define HOOKED_pos MAINPRESUB_pos 
[   0.893][d][vo/gpu-next/libplacebo] [ 41] #define HOOKED_size MAINPRESUB_size 
[   0.893][d][vo/gpu-next/libplacebo] [ 42] #define HOOKED_rot MAINPRESUB_rot 
[   0.893][d][vo/gpu-next/libplacebo] [ 43] #define HOOKED_off MAINPRESUB_off 
[   0.893][d][vo/gpu-next/libplacebo] [ 44] #define HOOKED_pt MAINPRESUB_pt 
[   0.893][d][vo/gpu-next/libplacebo] [ 45] #define HOOKED_map MAINPRESUB_map 
[   0.893][d][vo/gpu-next/libplacebo] [ 46] #define HOOKED_mul MAINPRESUB_mul 
[   0.893][d][vo/gpu-next/libplacebo] [ 47] #define HOOKED_tex MAINPRESUB_tex 
[   0.893][d][vo/gpu-next/libplacebo] [ 48] #define HOOKED_texOff MAINPRESUB_texOff 
[   0.893][d][vo/gpu-next/libplacebo] [ 49] #define HOOKED_gather MAINPRESUB_gather 
[   0.893][d][vo/gpu-next/libplacebo] [ 50] #define MAIN_raw MAINPRESUB_raw 
[   0.893][d][vo/gpu-next/libplacebo] [ 51] #define MAIN_pos MAINPRESUB_pos 
[   0.893][d][vo/gpu-next/libplacebo] [ 52] #define MAIN_size MAINPRESUB_size 
[   0.893][d][vo/gpu-next/libplacebo] [ 53] #define MAIN_rot MAINPRESUB_rot 
[   0.893][d][vo/gpu-next/libplacebo] [ 54] #define MAIN_off MAINPRESUB_off 
[   0.893][d][vo/gpu-next/libplacebo] [ 55] #define MAIN_pt MAINPRESUB_pt 
[   0.893][d][vo/gpu-next/libplacebo] [ 56] #define MAIN_map MAINPRESUB_map 
[   0.893][d][vo/gpu-next/libplacebo] [ 57] #define MAIN_mul MAINPRESUB_mul 
[   0.893][d][vo/gpu-next/libplacebo] [ 58] #define MAIN_tex MAINPRESUB_tex 
[   0.893][d][vo/gpu-next/libplacebo] [ 59] #define MAIN_texOff MAINPRESUB_texOff 
[   0.893][d][vo/gpu-next/libplacebo] [ 60] #define MAIN_gather MAINPRESUB_gather 
[   0.893][d][vo/gpu-next/libplacebo] [ 61] #define frame _7 
[   0.893][d][vo/gpu-next/libplacebo] [ 62] #define random _8 
[   0.893][d][vo/gpu-next/libplacebo] [ 63] #define input_size _9 
[   0.893][d][vo/gpu-next/libplacebo] [ 64] #define target_size _a 
[   0.893][d][vo/gpu-next/libplacebo] [ 65] #define tex_offset _b 
[   0.893][d][vo/gpu-next/libplacebo] [ 66] vec4 _8001(vec4 color) {
[   0.893][d][vo/gpu-next/libplacebo] [ 67] // pl_shader_linearize           
[   0.893][d][vo/gpu-next/libplacebo] [ 68] color.rgb = max(color.rgb, 0.0); 
[   0.893][d][vo/gpu-next/libplacebo] [ 69] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[   0.893][d][vo/gpu-next/libplacebo] [ 70] return color;
[   0.893][d][vo/gpu-next/libplacebo] [ 71] }
[   0.893][d][vo/gpu-next/libplacebo] [ 72] 
[   0.893][d][vo/gpu-next/libplacebo] [ 73] #define linearize _8001 
[   0.893][d][vo/gpu-next/libplacebo] [ 74] vec4 _4001(vec4 color) {
[   0.893][d][vo/gpu-next/libplacebo] [ 75] // pl_shader_delinearize 
[   0.893][d][vo/gpu-next/libplacebo] [ 76] color.rgb = max(color.rgb, 0.0); 
[   0.893][d][vo/gpu-next/libplacebo] [ 77] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[   0.893][d][vo/gpu-next/libplacebo] [ 78] return color;
[   0.893][d][vo/gpu-next/libplacebo] [ 79] }
[   0.893][d][vo/gpu-next/libplacebo] [ 80] 
[   0.893][d][vo/gpu-next/libplacebo] [ 81] #define delinearize _4001 
[   0.893][d][vo/gpu-next/libplacebo] [ 82] 
[   0.893][d][vo/gpu-next/libplacebo] [ 83] // User variables
[   0.893][d][vo/gpu-next/libplacebo] [ 84] #define FSR_EASU_PASSTHROUGH_ALPHA 1 // If set to 1, preserves transparency in the image. Can be disabled for more performance. 0 or 1.
[   0.893][d][vo/gpu-next/libplacebo] [ 85] 
[   0.893][d][vo/gpu-next/libplacebo] [ 86] // Shader code
[   0.893][d][vo/gpu-next/libplacebo] [ 87] 
[   0.893][d][vo/gpu-next/libplacebo] [ 88] float APrxLoRcpF1(float a) {
[   0.893][d][vo/gpu-next/libplacebo] [ 89] 	return uintBitsToFloat(uint(0x7ef07ebb) - floatBitsToUint(a));
[   0.893][d][vo/gpu-next/libplacebo] [ 90] }
[   0.893][d][vo/gpu-next/libplacebo] [ 91] 
[   0.893][d][vo/gpu-next/libplacebo] [ 92] float APrxLoRsqF1(float a) {
[   0.893][d][vo/gpu-next/libplacebo] [ 93] 	return uintBitsToFloat(uint(0x5f347d74) - (floatBitsToUint(a) >> uint(1)));
[   0.893][d][vo/gpu-next/libplacebo] [ 94] }
[   0.893][d][vo/gpu-next/libplacebo] [ 95] 
[   0.893][d][vo/gpu-next/libplacebo] [ 96] vec3 AMin3F3(vec3 x, vec3 y, vec3 z) {
[   0.893][d][vo/gpu-next/libplacebo] [ 97] 	return min(x, min(y, z));
[   0.893][d][vo/gpu-next/libplacebo] [ 98] }
[   0.893][d][vo/gpu-next/libplacebo] [ 99] 
[   0.893][d][vo/gpu-next/libplacebo] [100] vec3 AMax3F3(vec3 x, vec3 y, vec3 z) {
[   0.893][d][vo/gpu-next/libplacebo] [101] 	return max(x, max(y, z));
[   0.893][d][vo/gpu-next/libplacebo] [102] }
[   0.893][d][vo/gpu-next/libplacebo] [103] 
[   0.893][d][vo/gpu-next/libplacebo] [104]  // Filtering for a given tap for the scalar.
[   0.893][d][vo/gpu-next/libplacebo] [105]  void FsrEasuTap(
[   0.893][d][vo/gpu-next/libplacebo] [106] 	inout vec3 aC,  // Accumulated color, with negative lobe.
[   0.893][d][vo/gpu-next/libplacebo] [107] 	inout float aW, // Accumulated weight.
[   0.893][d][vo/gpu-next/libplacebo] [108] 	vec2 off,       // Pixel offset from resolve position to tap.
[   0.893][d][vo/gpu-next/libplacebo] [109] 	vec2 dir,       // Gradient direction.
[   0.893][d][vo/gpu-next/libplacebo] [110] 	vec2 len,       // Length.
[   0.893][d][vo/gpu-next/libplacebo] [111] 	float lob,      // Negative lobe strength.
[   0.893][d][vo/gpu-next/libplacebo] [112] 	float clp,      // Clipping point.
[   0.893][d][vo/gpu-next/libplacebo] [113] 	vec3 c){        // Tap color.
[   0.893][d][vo/gpu-next/libplacebo] [114] 	// Rotate offset by direction.
[   0.893][d][vo/gpu-next/libplacebo] [115] 	vec2 v;
[   0.893][d][vo/gpu-next/libplacebo] [116] 	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
[   0.893][d][vo/gpu-next/libplacebo] [117] 	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
[   0.893][d][vo/gpu-next/libplacebo] [118] 	// Anisotropy.
[   0.893][d][vo/gpu-next/libplacebo] [119] 	v *= len;
[   0.893][d][vo/gpu-next/libplacebo] [120] 	// Compute distance^2.
[   0.893][d][vo/gpu-next/libplacebo] [121] 	float d2 = v.x * v.x + v.y * v.y;
[   0.893][d][vo/gpu-next/libplacebo] [122] 	// Limit to the window as at corner, 2 taps can easily be outside.
[   0.893][d][vo/gpu-next/libplacebo] [123] 	d2 = min(d2, clp);
[   0.893][d][vo/gpu-next/libplacebo] [124] 	// Approximation of lancos2 without sin() or rcp(), or sqrt() to get x.
[   0.893][d][vo/gpu-next/libplacebo] [125] 	//  (25/16 * (2/5 * x^2 - 1)^2 - (25/16 - 1)) * (1/4 * x^2 - 1)^2
[   0.893][d][vo/gpu-next/libplacebo] [126] 	//  |_______________________________________|   |_______________|
[   0.893][d][vo/gpu-next/libplacebo] [127] 	//                   base                             window
[   0.893][d][vo/gpu-next/libplacebo] [128] 	// The general form of the 'base' is,
[   0.893][d][vo/gpu-next/libplacebo] [129] 	//  (a*(b*x^2-1)^2-(a-1))
[   0.893][d][vo/gpu-next/libplacebo] [130] 	// Where 'a=1/(2*b-b^2)' and 'b' moves around the negative lobe.
[   0.893][d][vo/gpu-next/libplacebo] [131] 	float wB = float(2.0 / 5.0) * d2 + float(-1.0);
[   0.893][d][vo/gpu-next/libplacebo] [132] 	float wA = lob * d2 + float(-1.0);
[   0.893][d][vo/gpu-next/libplacebo] [133] 	wB *= wB;
[   0.893][d][vo/gpu-next/libplacebo] [134] 	wA *= wA;
[   0.893][d][vo/gpu-next/libplacebo] [135] 	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
[   0.893][d][vo/gpu-next/libplacebo] [136] 	float w = wB * wA;
[   0.893][d][vo/gpu-next/libplacebo] [137] 	// Do weighted average.
[   0.893][d][vo/gpu-next/libplacebo] [138] 	aC += c * w;
[   0.893][d][vo/gpu-next/libplacebo] [139] 	aW += w;
[   0.893][d][vo/gpu-next/libplacebo] [140] }
[   0.893][d][vo/gpu-next/libplacebo] [141] 
[   0.893][d][vo/gpu-next/libplacebo] [142] // Accumulate direction and length.
[   0.893][d][vo/gpu-next/libplacebo] [143] void FsrEasuSet(
[   0.893][d][vo/gpu-next/libplacebo] [144] 	inout vec2 dir,
[   0.893][d][vo/gpu-next/libplacebo] [145] 	inout float len,
[   0.893][d][vo/gpu-next/libplacebo] [146] 	vec2 pp,
[   0.893][d][vo/gpu-next/libplacebo] [147] 	bool biS, bool biT, bool biU, bool biV,
[   0.893][d][vo/gpu-next/libplacebo] [148] 	float lA, float lB, float lC, float lD, float lE){
[   0.893][d][vo/gpu-next/libplacebo] [149] 	// Compute bilinear weight, branches factor out as predicates are compiler time immediates.
[   0.893][d][vo/gpu-next/libplacebo] [150] 	//  s t
[   0.893][d][vo/gpu-next/libplacebo] [151] 	//  u v
[   0.893][d][vo/gpu-next/libplacebo] [152] 	float w = float(0.0);
[   0.893][d][vo/gpu-next/libplacebo] [153] 	if(biS) w = (float(1.0) - pp.x) * (float(1.0) - pp.y);
[   0.893][d][vo/gpu-next/libplacebo] [154] 	if(biT) w = pp.x * (float(1.0) - pp.y);
[   0.893][d][vo/gpu-next/libplacebo] [155] 	if(biU) w = (float(1.0) - pp.x) * pp.y;
[   0.893][d][vo/gpu-next/libplacebo] [156] 	if(biV) w = pp.x * pp.y;
[   0.893][d][vo/gpu-next/libplacebo] [157] 	// Direction is the '+' diff.
[   0.893][d][vo/gpu-next/libplacebo] [158] 	//    a
[   0.893][d][vo/gpu-next/libplacebo] [159] 	//  b c d
[   0.893][d][vo/gpu-next/libplacebo] [160] 	//    e
[   0.893][d][vo/gpu-next/libplacebo] [161] 	// Then takes magnitude from abs average of both sides of 'c'.
[   0.893][d][vo/gpu-next/libplacebo] [162] 	// Length converts gradient reversal to 0, smoothly to non-reversal at 1, shaped, then adding horz and vert terms.
[   0.893][d][vo/gpu-next/libplacebo] [163] 	float dc = lD - lC;
[   0.893][d][vo/gpu-next/libplacebo] [164] 	float cb = lC - lB;
[   0.893][d][vo/gpu-next/libplacebo] [165] 	float lenX = max(abs(dc), abs(cb));
[   0.893][d][vo/gpu-next/libplacebo] [166] 	lenX = APrxLoRcpF1(lenX);
[   0.893][d][vo/gpu-next/libplacebo] [167] 	float dirX = lD - lB;
[   0.893][d][vo/gpu-next/libplacebo] [168] 	dir.x += dirX * w;
[   0.893][d][vo/gpu-next/libplacebo] [169] 	lenX = clamp(abs(dirX) * lenX, float(0.0), float(1.0));
[   0.893][d][vo/gpu-next/libplacebo] [170] 	lenX *= lenX;
[   0.893][d][vo/gpu-next/libplacebo] [171] 	len += lenX * w;
[   0.893][d][vo/gpu-next/libplacebo] [172] 	// Repeat for the y axis.
[   0.893][d][vo/gpu-next/libplacebo] [173] 	float ec = lE - lC;
[   0.893][d][vo/gpu-next/libplacebo] [174] 	float ca = lC - lA;
[   0.893][d][vo/gpu-next/libplacebo] [175] 	float lenY = max(abs(ec), abs(ca));
[   0.893][d][vo/gpu-next/libplacebo] [176] 	lenY = APrxLoRcpF1(lenY);
[   0.893][d][vo/gpu-next/libplacebo] [177] 	float dirY = lE - lA;
[   0.893][d][vo/gpu-next/libplacebo] [178] 	dir.y += dirY * w;
[   0.893][d][vo/gpu-next/libplacebo] [179] 	lenY = clamp(abs(dirY) * lenY, float(0.0), float(1.0));
[   0.893][d][vo/gpu-next/libplacebo] [180] 	lenY *= lenY;
[   0.893][d][vo/gpu-next/libplacebo] [181] 	len += lenY * w;
[   0.893][d][vo/gpu-next/libplacebo] [182] }
[   0.893][d][vo/gpu-next/libplacebo] [183] 
[   0.893][d][vo/gpu-next/libplacebo] [184] vec4 hook() {
[   0.893][d][vo/gpu-next/libplacebo] [185] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [186] 	// Get position of 'f'.
[   0.893][d][vo/gpu-next/libplacebo] [187] 	vec2 pp = HOOKED_pos * HOOKED_size - vec2(0.5);
[   0.893][d][vo/gpu-next/libplacebo] [188] 	vec2 fp = floor(pp);
[   0.893][d][vo/gpu-next/libplacebo] [189] 	pp -= fp;
[   0.893][d][vo/gpu-next/libplacebo] [190] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [191] 	// 12-tap kernel.
[   0.893][d][vo/gpu-next/libplacebo] [192] 	//    b c
[   0.893][d][vo/gpu-next/libplacebo] [193] 	//  e f g h
[   0.893][d][vo/gpu-next/libplacebo] [194] 	//  i j k l
[   0.893][d][vo/gpu-next/libplacebo] [195] 	//    n o
[   0.893][d][vo/gpu-next/libplacebo] [196] 	// Gather 4 ordering.
[   0.893][d][vo/gpu-next/libplacebo] [197] 	//  a b
[   0.893][d][vo/gpu-next/libplacebo] [198] 	//  r g
[   0.893][d][vo/gpu-next/libplacebo] [199] 	// For packed FP16, need either {rg} or {ab} so using the following setup for gather in all versions,
[   0.893][d][vo/gpu-next/libplacebo] [200] 	//    a b    <- unused (z)
[   0.893][d][vo/gpu-next/libplacebo] [201] 	//    r g
[   0.893][d][vo/gpu-next/libplacebo] [202] 	//  a b a b
[   0.893][d][vo/gpu-next/libplacebo] [203] 	//  r g r g
[   0.893][d][vo/gpu-next/libplacebo] [204] 	//    a b
[   0.893][d][vo/gpu-next/libplacebo] [205] 	//    r g    <- unused (z)
[   0.893][d][vo/gpu-next/libplacebo] [206] 	// Allowing dead-code removal to remove the 'z's.
[   0.893][d][vo/gpu-next/libplacebo] [207] 	
[   0.893][d][vo/gpu-next/libplacebo] [208]  #if (defined(HOOKED_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
[   0.893][d][vo/gpu-next/libplacebo] [209] 	vec4 bczzR = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 0);
[   0.893][d][vo/gpu-next/libplacebo] [210] 	vec4 bczzG = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 1);
[   0.893][d][vo/gpu-next/libplacebo] [211] 	vec4 bczzB = HOOKED_gather(vec2((fp + vec2(1.0, -1.0)) * HOOKED_pt), 2);
[   0.893][d][vo/gpu-next/libplacebo] [212] 	
[   0.893][d][vo/gpu-next/libplacebo] [213] 	vec4 ijfeR = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 0);
[   0.893][d][vo/gpu-next/libplacebo] [214] 	vec4 ijfeG = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 1);
[   0.893][d][vo/gpu-next/libplacebo] [215] 	vec4 ijfeB = HOOKED_gather(vec2((fp + vec2(0.0, 1.0)) * HOOKED_pt), 2);
[   0.893][d][vo/gpu-next/libplacebo] [216] 	
[   0.893][d][vo/gpu-next/libplacebo] [217] 	vec4 klhgR = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 0);
[   0.893][d][vo/gpu-next/libplacebo] [218] 	vec4 klhgG = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 1);
[   0.893][d][vo/gpu-next/libplacebo] [219] 	vec4 klhgB = HOOKED_gather(vec2((fp + vec2(2.0, 1.0)) * HOOKED_pt), 2);
[   0.893][d][vo/gpu-next/libplacebo] [220] 	
[   0.893][d][vo/gpu-next/libplacebo] [221] 	vec4 zzonR = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 0);
[   0.893][d][vo/gpu-next/libplacebo] [222] 	vec4 zzonG = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 1);
[   0.893][d][vo/gpu-next/libplacebo] [223] 	vec4 zzonB = HOOKED_gather(vec2((fp + vec2(1.0, 3.0)) * HOOKED_pt), 2);
[   0.893][d][vo/gpu-next/libplacebo] [224] #else
[   0.893][d][vo/gpu-next/libplacebo] [225] 	// pre-OpenGL 4.0 compatibility
[   0.893][d][vo/gpu-next/libplacebo] [226] 	vec3 b = HOOKED_tex(vec2((fp + vec2(0.5, -0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [227] 	vec3 c = HOOKED_tex(vec2((fp + vec2(1.5, -0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [228] 	
[   0.893][d][vo/gpu-next/libplacebo] [229] 	vec3 e = HOOKED_tex(vec2((fp + vec2(-0.5, 0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [230] 	vec3 f = HOOKED_tex(vec2((fp + vec2( 0.5, 0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [231] 	vec3 g = HOOKED_tex(vec2((fp + vec2( 1.5, 0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [232] 	vec3 h = HOOKED_tex(vec2((fp + vec2( 2.5, 0.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [233] 	
[   0.893][d][vo/gpu-next/libplacebo] [234] 	vec3 i = HOOKED_tex(vec2((fp + vec2(-0.5, 1.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [235] 	vec3 j = HOOKED_tex(vec2((fp + vec2( 0.5, 1.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [236] 	vec3 k = HOOKED_tex(vec2((fp + vec2( 1.5, 1.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [237] 	vec3 l = HOOKED_tex(vec2((fp + vec2( 2.5, 1.5)) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [238] 	
[   0.893][d][vo/gpu-next/libplacebo] [239] 	vec3 n = HOOKED_tex(vec2((fp + vec2(0.5, 2.5) ) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [240] 	vec3 o = HOOKED_tex(vec2((fp + vec2(1.5, 2.5) ) * HOOKED_pt)).rgb;
[   0.893][d][vo/gpu-next/libplacebo] [241] 
[   0.893][d][vo/gpu-next/libplacebo] [242] 	vec4 bczzR = vec4(b.r, c.r, 0.0, 0.0);
[   0.893][d][vo/gpu-next/libplacebo] [243] 	vec4 bczzG = vec4(b.g, c.g, 0.0, 0.0);
[   0.893][d][vo/gpu-next/libplacebo] [244] 	vec4 bczzB = vec4(b.b, c.b, 0.0, 0.0);
[   0.893][d][vo/gpu-next/libplacebo] [245] 	
[   0.893][d][vo/gpu-next/libplacebo] [246] 	vec4 ijfeR = vec4(i.r, j.r, f.r, e.r);
[   0.893][d][vo/gpu-next/libplacebo] [247] 	vec4 ijfeG = vec4(i.g, j.g, f.g, e.g);
[   0.893][d][vo/gpu-next/libplacebo] [248] 	vec4 ijfeB = vec4(i.b, j.b, f.b, e.b);
[   0.893][d][vo/gpu-next/libplacebo] [249] 	
[   0.893][d][vo/gpu-next/libplacebo] [250] 	vec4 klhgR = vec4(k.r, l.r, h.r, g.r);
[   0.893][d][vo/gpu-next/libplacebo] [251] 	vec4 klhgG = vec4(k.g, l.g, h.g, g.g);
[   0.893][d][vo/gpu-next/libplacebo] [252] 	vec4 klhgB = vec4(k.b, l.b, h.b, g.b);
[   0.893][d][vo/gpu-next/libplacebo] [253] 	
[   0.893][d][vo/gpu-next/libplacebo] [254] 	vec4 zzonR = vec4(0.0, 0.0, o.r, n.r);
[   0.893][d][vo/gpu-next/libplacebo] [255] 	vec4 zzonG = vec4(0.0, 0.0, o.g, n.g);
[   0.893][d][vo/gpu-next/libplacebo] [256] 	vec4 zzonB = vec4(0.0, 0.0, o.b, n.b);
[   0.893][d][vo/gpu-next/libplacebo] [257] #endif
[   0.893][d][vo/gpu-next/libplacebo] [258] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [259] 	// Simplest multi-channel approximate luma possible (luma times 2, in 2 FMA/MAD).
[   0.893][d][vo/gpu-next/libplacebo] [260] 	vec4 bczzL = bczzB * vec4(0.5) + (bczzR * vec4(0.5) + bczzG);
[   0.893][d][vo/gpu-next/libplacebo] [261] 	vec4 ijfeL = ijfeB * vec4(0.5) + (ijfeR * vec4(0.5) + ijfeG);
[   0.893][d][vo/gpu-next/libplacebo] [262] 	vec4 klhgL = klhgB * vec4(0.5) + (klhgR * vec4(0.5) + klhgG);
[   0.893][d][vo/gpu-next/libplacebo] [263] 	vec4 zzonL = zzonB * vec4(0.5) + (zzonR * vec4(0.5) + zzonG);
[   0.893][d][vo/gpu-next/libplacebo] [264] 	// Rename.
[   0.893][d][vo/gpu-next/libplacebo] [265] 	float bL = bczzL.x;
[   0.893][d][vo/gpu-next/libplacebo] [266] 	float cL = bczzL.y;
[   0.893][d][vo/gpu-next/libplacebo] [267] 	float iL = ijfeL.x;
[   0.893][d][vo/gpu-next/libplacebo] [268] 	float jL = ijfeL.y;
[   0.893][d][vo/gpu-next/libplacebo] [269] 	float fL = ijfeL.z;
[   0.893][d][vo/gpu-next/libplacebo] [270] 	float eL = ijfeL.w;
[   0.893][d][vo/gpu-next/libplacebo] [271] 	float kL = klhgL.x;
[   0.893][d][vo/gpu-next/libplacebo] [272] 	float lL = klhgL.y;
[   0.893][d][vo/gpu-next/libplacebo] [273] 	float hL = klhgL.z;
[   0.893][d][vo/gpu-next/libplacebo] [274] 	float gL = klhgL.w;
[   0.893][d][vo/gpu-next/libplacebo] [275] 	float oL = zzonL.z;
[   0.893][d][vo/gpu-next/libplacebo] [276] 	float nL = zzonL.w;
[   0.893][d][vo/gpu-next/libplacebo] [277] 	// Accumulate for bilinear interpolation.
[   0.893][d][vo/gpu-next/libplacebo] [278] 	vec2 dir = vec2(0.0);
[   0.893][d][vo/gpu-next/libplacebo] [279] 	float len = float(0.0);
[   0.893][d][vo/gpu-next/libplacebo] [280] 	FsrEasuSet(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
[   0.893][d][vo/gpu-next/libplacebo] [281] 	FsrEasuSet(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
[   0.893][d][vo/gpu-next/libplacebo] [282] 	FsrEasuSet(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
[   0.893][d][vo/gpu-next/libplacebo] [283] 	FsrEasuSet(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
[   0.893][d][vo/gpu-next/libplacebo] [284] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [285] 	// Normalize with approximation, and cleanup close to zero.
[   0.893][d][vo/gpu-next/libplacebo] [286] 	vec2 dir2 = dir * dir;
[   0.893][d][vo/gpu-next/libplacebo] [287] 	float dirR = dir2.x + dir2.y;
[   0.893][d][vo/gpu-next/libplacebo] [288] 	bool zro = dirR < float(1.0 / 32768.0);
[   0.893][d][vo/gpu-next/libplacebo] [289] 	dirR = APrxLoRsqF1(dirR);
[   0.893][d][vo/gpu-next/libplacebo] [290] 	dirR = zro ? float(1.0) : dirR;
[   0.893][d][vo/gpu-next/libplacebo] [291] 	dir.x = zro ? float(1.0) : dir.x;
[   0.893][d][vo/gpu-next/libplacebo] [292] 	dir *= vec2(dirR);
[   0.893][d][vo/gpu-next/libplacebo] [293] 	// Transform from {0 to 2} to {0 to 1} range, and shape with square.
[   0.893][d][vo/gpu-next/libplacebo] [294] 	len = len * float(0.5);
[   0.893][d][vo/gpu-next/libplacebo] [295] 	len *= len;
[   0.893][d][vo/gpu-next/libplacebo] [296] 	// Stretch kernel {1.0 vert|horz, to sqrt(2.0) on diagonal}.
[   0.893][d][vo/gpu-next/libplacebo] [297] 	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
[   0.893][d][vo/gpu-next/libplacebo] [298] 	// Anisotropic length after rotation,
[   0.893][d][vo/gpu-next/libplacebo] [299] 	//  x := 1.0 lerp to 'stretch' on edges
[   0.893][d][vo/gpu-next/libplacebo] [300] 	//  y := 1.0 lerp to 2x on edges
[   0.893][d][vo/gpu-next/libplacebo] [301] 	vec2 len2 = vec2(float(1.0) + (stretch - float(1.0)) * len, float(1.0) + float(-0.5) * len);
[   0.893][d][vo/gpu-next/libplacebo] [302] 	// Based on the amount of 'edge',
[   0.893][d][vo/gpu-next/libplacebo] [303] 	// the window shifts from +/-{sqrt(2.0) to slightly beyond 2.0}.
[   0.893][d][vo/gpu-next/libplacebo] [304] 	float lob = float(0.5) + float((1.0 / 4.0 - 0.04) - 0.5) * len;
[   0.893][d][vo/gpu-next/libplacebo] [305] 	// Set distance^2 clipping point to the end of the adjustable window.
[   0.893][d][vo/gpu-next/libplacebo] [306] 	float clp = APrxLoRcpF1(lob);
[   0.893][d][vo/gpu-next/libplacebo] [307] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [308] 	// Accumulation mixed with min/max of 4 nearest.
[   0.893][d][vo/gpu-next/libplacebo] [309] 	//    b c
[   0.893][d][vo/gpu-next/libplacebo] [310] 	//  e f g h
[   0.893][d][vo/gpu-next/libplacebo] [311] 	//  i j k l
[   0.893][d][vo/gpu-next/libplacebo] [312] 	//    n o
[   0.893][d][vo/gpu-next/libplacebo] [313] 	vec3 min4 = min(AMin3F3(vec3(ijfeR.z, ijfeG.z, ijfeB.z), vec3(klhgR.w, klhgG.w, klhgB.w), vec3(ijfeR.y, ijfeG.y, ijfeB.y)), vec3(klhgR.x, klhgG.x, klhgB.x));
[   0.893][d][vo/gpu-next/libplacebo] [314] 	vec3 max4 = max(AMax3F3(vec3(ijfeR.z, ijfeG.z, ijfeB.z), vec3(klhgR.w, klhgG.w, klhgB.w), vec3(ijfeR.y, ijfeG.y, ijfeB.y)), vec3(klhgR.x, klhgG.x, klhgB.x));
[   0.893][d][vo/gpu-next/libplacebo] [315] 
[   0.893][d][vo/gpu-next/libplacebo] [316] 	// Accumulation.
[   0.893][d][vo/gpu-next/libplacebo] [317] 	vec3 aC = vec3(0.0);
[   0.893][d][vo/gpu-next/libplacebo] [318] 	float aW = float(0.0);
[   0.893][d][vo/gpu-next/libplacebo] [319] 	FsrEasuTap(aC, aW, vec2( 0.0,-1.0) - pp,dir, len2, lob, clp, vec3(bczzR.x, bczzG.x, bczzB.x)); // b
[   0.893][d][vo/gpu-next/libplacebo] [320] 	FsrEasuTap(aC, aW, vec2( 1.0,-1.0) - pp,dir, len2, lob, clp, vec3(bczzR.y, bczzG.y, bczzB.y)); // c
[   0.893][d][vo/gpu-next/libplacebo] [321] 	FsrEasuTap(aC, aW, vec2(-1.0, 1.0) - pp,dir, len2, lob, clp, vec3(ijfeR.x, ijfeG.x, ijfeB.x)); // i
[   0.893][d][vo/gpu-next/libplacebo] [322] 	FsrEasuTap(aC, aW, vec2( 0.0, 1.0) - pp,dir, len2, lob, clp, vec3(ijfeR.y, ijfeG.y, ijfeB.y)); // j
[   0.893][d][vo/gpu-next/libplacebo] [323] 	FsrEasuTap(aC, aW, vec2( 0.0, 0.0) - pp,dir, len2, lob, clp, vec3(ijfeR.z, ijfeG.z, ijfeB.z)); // f
[   0.893][d][vo/gpu-next/libplacebo] [324] 	FsrEasuTap(aC, aW, vec2(-1.0, 0.0) - pp,dir, len2, lob, clp, vec3(ijfeR.w, ijfeG.w, ijfeB.w)); // e
[   0.893][d][vo/gpu-next/libplacebo] [325] 	FsrEasuTap(aC, aW, vec2( 1.0, 1.0) - pp,dir, len2, lob, clp, vec3(klhgR.x, klhgG.x, klhgB.x)); // k
[   0.893][d][vo/gpu-next/libplacebo] [326] 	FsrEasuTap(aC, aW, vec2( 2.0, 1.0) - pp,dir, len2, lob, clp, vec3(klhgR.y, klhgG.y, klhgB.y)); // l
[   0.893][d][vo/gpu-next/libplacebo] [327] 	FsrEasuTap(aC, aW, vec2( 2.0, 0.0) - pp,dir, len2, lob, clp, vec3(klhgR.z, klhgG.z, klhgB.z)); // h
[   0.893][d][vo/gpu-next/libplacebo] [328] 	FsrEasuTap(aC, aW, vec2( 1.0, 0.0) - pp,dir, len2, lob, clp, vec3(klhgR.w, klhgG.w, klhgB.w)); // g
[   0.893][d][vo/gpu-next/libplacebo] [329] 	FsrEasuTap(aC, aW, vec2( 1.0, 2.0) - pp,dir, len2, lob, clp, vec3(zzonR.z, zzonG.z, zzonB.z)); // o
[   0.893][d][vo/gpu-next/libplacebo] [330] 	FsrEasuTap(aC, aW, vec2( 0.0, 2.0) - pp,dir, len2, lob, clp, vec3(zzonR.w, zzonG.w, zzonB.w)); // n
[   0.893][d][vo/gpu-next/libplacebo] [331] 	//------------------------------------------------------------------------------------------------------------------------------
[   0.893][d][vo/gpu-next/libplacebo] [332] 	// Normalize and dering.
[   0.893][d][vo/gpu-next/libplacebo] [333] 	vec4 pix;
[   0.893][d][vo/gpu-next/libplacebo] [334] 	pix.rgb = min(max4, max(min4, aC * vec3(1.0 / aW)));
[   0.893][d][vo/gpu-next/libplacebo] [335] 
[   0.893][d][vo/gpu-next/libplacebo] [336] 	#if (FSR_EASU_PASSTHROUGH_ALPHA == 1)
[   0.893][d][vo/gpu-next/libplacebo] [337] 		pix.a = HOOKED_tex(HOOKED_pos).a;
[   0.893][d][vo/gpu-next/libplacebo] [338] 	#else
[   0.893][d][vo/gpu-next/libplacebo] [339] 		pix.a = float(1.0);
[   0.893][d][vo/gpu-next/libplacebo] [340] 	#endif
[   0.893][d][vo/gpu-next/libplacebo] [341] 	return pix;
[   0.893][d][vo/gpu-next/libplacebo] [342] }
[   0.893][d][vo/gpu-next/libplacebo] [343] 
[   0.893][d][vo/gpu-next/libplacebo] [344] vec4 _1() {
[   0.893][d][vo/gpu-next/libplacebo] [345] vec4 color = hook(); 
[   0.893][d][vo/gpu-next/libplacebo] [346] return color;
[   0.893][d][vo/gpu-next/libplacebo] [347] }
[   0.893][d][vo/gpu-next/libplacebo] [348] 
[   0.893][d][vo/gpu-next/libplacebo] [349] void main() {
[   0.893][d][vo/gpu-next/libplacebo] [350] out_color = _1();
[   0.893][d][vo/gpu-next/libplacebo] [351] }
[   0.893][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.893][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[   0.893][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[   0.893][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[   0.893][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[   0.893][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[   0.893][d][vo/gpu-next] cache_load_obj: key(fbfbc6f818e56fab), size(748), load time(0.044 ms)
[   0.893][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[   0.894][d][vo/gpu-next] cache_load_obj: key(b2c702510399012a), size(14908), load time(0.143 ms)
[   0.894][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb2c702510399012a
[   0.894][d][vo/gpu-next] cache_load_obj: key(ca88f6753fec3790), size(20369), load time(0.118 ms)
[   0.894][d][vo/gpu-next/libplacebo] Spent 0.020 ms compiling shader
[   0.894][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[   0.894][d][vo/gpu-next] cache_save_obj: key(b2c702510399012a), size(14908)
[   0.894][d][vo/gpu-next/libplacebo] Spent 0.102 ms creating pipeline
[   0.894][d][vo/gpu-next] cache_save_obj: key(ca88f6753fec3790), size(20369)
[   0.894][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.894][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:1065
[   0.894][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1065
[   0.894][d][vo/gpu-next/libplacebo] Spent 0.121 ms allocating slab
[   0.894][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.894][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.894][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.894][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.894][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.894][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.894][d][vo/gpu-next/libplacebo] [ 12] };
[   0.894][d][vo/gpu-next/libplacebo] [ 13] layout(constant_id=0) const float _7 = 1; 
[   0.894][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=1) const float _8 = 1; 
[   0.894][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=2) const float _9 = 1; 
[   0.894][d][vo/gpu-next/libplacebo] [ 16] layout(binding=0) uniform  sampler2D _2;
[   0.894][d][vo/gpu-next/libplacebo] [ 17] layout(binding=1) uniform  sampler2D _6;
[   0.894][d][vo/gpu-next/libplacebo] [ 18] layout(location=0) in vec2 _d;
[   0.894][d][vo/gpu-next/libplacebo] [ 19] layout(location=0) out vec2 _3;
[   0.894][d][vo/gpu-next/libplacebo] [ 20] layout(location=1) in vec2 _e;
[   0.894][d][vo/gpu-next/libplacebo] [ 21] void main() {
[   0.894][d][vo/gpu-next/libplacebo] [ 22] _3 = _d;
[   0.894][d][vo/gpu-next/libplacebo] [ 23] vec2 va_pos = _e; 
[   0.894][d][vo/gpu-next/libplacebo] [ 24] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.894][d][vo/gpu-next/libplacebo] [ 25] }
[   0.894][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.895][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.895][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.895][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.895][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.895][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.895][d][vo/gpu-next/libplacebo] [ 12] };
[   0.895][d][vo/gpu-next/libplacebo] [ 13] layout(constant_id=0) const float _7 = 1; 
[   0.895][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=1) const float _8 = 1; 
[   0.895][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=2) const float _9 = 1; 
[   0.895][d][vo/gpu-next/libplacebo] [ 16] layout(binding=0) uniform  sampler2D _2;
[   0.895][d][vo/gpu-next/libplacebo] [ 17] layout(binding=1) uniform  sampler2D _6;
[   0.895][d][vo/gpu-next/libplacebo] [ 18] layout(location=0) in vec2 _3;
[   0.895][d][vo/gpu-next/libplacebo] [ 19] layout(location=0) out vec4 out_color;
[   0.895][d][vo/gpu-next/libplacebo] [ 20] 
[   0.895][d][vo/gpu-next/libplacebo] [ 21] #define _5(pos) (texelFetch(_6, ivec2(pos), 0).x)
[   0.895][d][vo/gpu-next/libplacebo] [ 22] vec4 _1() {
[   0.895][d][vo/gpu-next/libplacebo] [ 23] vec4 color;                   
[   0.895][d][vo/gpu-next/libplacebo] [ 24] // pl_render_image_mix        
[   0.895][d][vo/gpu-next/libplacebo] [ 25] {                             
[   0.895][d][vo/gpu-next/libplacebo] [ 26] vec4 mix_color = vec4(0.0);   
[   0.895][d][vo/gpu-next/libplacebo] [ 27] color = textureLod(_2, _3, 0.0); 
[   0.895][d][vo/gpu-next/libplacebo] [ 28] mix_color += vec4(_4) * color; 
[   0.895][d][vo/gpu-next/libplacebo] [ 29] color = mix_color; 
[   0.895][d][vo/gpu-next/libplacebo] [ 30] }                  
[   0.895][d][vo/gpu-next/libplacebo] [ 31] // pl_shader_encode_color 
[   0.895][d][vo/gpu-next/libplacebo] [ 32] { 
[   0.895][d][vo/gpu-next/libplacebo] [ 33] color.rgb *= vec3(color.a); 
[   0.895][d][vo/gpu-next/libplacebo] [ 34] }
[   0.895][d][vo/gpu-next/libplacebo] [ 35] // pl_shader_dither 
[   0.895][d][vo/gpu-next/libplacebo] [ 36] {                    
[   0.895][d][vo/gpu-next/libplacebo] [ 37] float bias;          
[   0.895][d][vo/gpu-next/libplacebo] [ 38] vec2 pos = fract(gl_FragCoord.xy * 1.0/_7); 
[   0.895][d][vo/gpu-next/libplacebo] [ 39] bias = _5(ivec2(pos * _8));
[   0.895][d][vo/gpu-next/libplacebo] [ 40] const float scale = 255.0; 
[   0.895][d][vo/gpu-next/libplacebo] [ 41] color = scale * color + vec4(bias);   
[   0.895][d][vo/gpu-next/libplacebo] [ 42] color = floor(color) * (1.0 / scale); 
[   0.895][d][vo/gpu-next/libplacebo] [ 43] } 
[   0.895][d][vo/gpu-next/libplacebo] [ 44] color *= vec4(1.0 / _9); 
[   0.895][d][vo/gpu-next/libplacebo] [ 45] vec4 _a = color;                 
[   0.895][d][vo/gpu-next/libplacebo] [ 46] color = vec4(0.0, 0.0, 0.0, 1.0); 
[   0.895][d][vo/gpu-next/libplacebo] [ 47] color[0] = _a[0]; 
[   0.895][d][vo/gpu-next/libplacebo] [ 48] color[1] = _a[1]; 
[   0.895][d][vo/gpu-next/libplacebo] [ 49] color[2] = _a[2]; 
[   0.895][d][vo/gpu-next/libplacebo] [ 50] color[3] = _a[3]; 
[   0.895][d][vo/gpu-next/libplacebo] [ 51] return color;
[   0.895][d][vo/gpu-next/libplacebo] [ 52] }
[   0.895][d][vo/gpu-next/libplacebo] [ 53] 
[   0.895][d][vo/gpu-next/libplacebo] [ 54] void main() {
[   0.895][d][vo/gpu-next/libplacebo] [ 55] out_color = _1();
[   0.895][d][vo/gpu-next/libplacebo] [ 56] }
[   0.895][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.895][d][vo/gpu-next/libplacebo]   constant_id=0: 64.000000
[   0.895][d][vo/gpu-next/libplacebo]   constant_id=1: 64.000000
[   0.895][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[   0.895][d][vo/gpu-next] cache_load_obj: key(65dadd290f120522), size(748), load time(0.031 ms)
[   0.895][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x65dadd290f120522
[   0.895][d][vo/gpu-next] cache_load_obj: key(c7633cfbe27ef2a0), size(1648), load time(0.017 ms)
[   0.895][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xc7633cfbe27ef2a0
[   0.895][d][vo/gpu-next] cache_load_obj: key(ca5563da0db85e89), size(14262), load time(0.123 ms)
[   0.895][d][vo/gpu-next/libplacebo] Spent 0.004 ms compiling shader
[   0.895][d][vo/gpu-next] cache_save_obj: key(65dadd290f120522), size(748)
[   0.895][d][vo/gpu-next] cache_save_obj: key(c7633cfbe27ef2a0), size(1648)
[   0.895][d][vo/gpu-next/libplacebo] Spent 0.088 ms creating pipeline
[   0.895][d][vo/gpu-next] cache_save_obj: key(ca5563da0db85e89), size(14262)
[   0.895][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.896][v][vo/gpu-next/wayland] Read 9 bytes from the data offer fd
[   0.896][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.896][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.896][v][osd/libass] libass API version: 0x1703000
[   0.896][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.896][v][auto_profiles] Re-evaluating auto profile maximized
[   0.896][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.896][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.896][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.896][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.896][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.896][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.896][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.896][v][osd/libass] Setting up fonts...
[   0.897][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.897][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.898][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.898][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.902][v][osd/libass] Using font provider fontconfig
[   0.902][v][osd/libass] Done.
[   0.905][v][osd/libass] fontselect: (Noto Emoji, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[   0.905][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[   0.905][v][osd/libass] fontselect: (Noto Sans Mono CJK SC, 400, 0) -> /usr/share/fonts/noto-cjk/NotoSansCJK-Regular.ttc, 7, NotoSansMonoCJKsc-Regular
[   0.906][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplehistory", contents="", flags="default"]
[   0.906][i][auto_profiles] Applying auto profile: maximized
[   0.906][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.906][d][cplayer] Run command: apply-profile, flags=64, args=[name="maximized", mode="apply"]
[   0.906][v][cplayer] Applying profile 'maximized'...
[   0.906][v][cplayer] Setting option 'auto-window-resize' = 'no' (flags = 4)
[   0.906][v][vo/gpu-next] Window size: 1920x1080 (Borders: l=0 t=0 r=0 b=0)
[   0.906][v][vo/gpu-next] Video source: 848x480 (1:1)
[   0.906][v][vo/gpu-next] Video display: (0, 0) 848x480 -> (6, 0) 1908x1080
[   0.906][v][vo/gpu-next] Video scale: 2.250000/2.250000
[   0.906][v][vo/gpu-next] OSD borders: l=6 t=0 r=6 b=0
[   0.906][v][vo/gpu-next] Video borders: l=6 t=0 r=6 b=0
[   0.906][v][auto_profiles] Re-evaluating auto profile fps-fix
[   0.906][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplehistory", contents="", flags="force"]
[   0.906][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[   0.907][d][cplayer] Run command: notify-property, flags=73, args=[property="clipboard"]
[   0.907][v][cplayer] audio ready
[   0.907][d][cplayer] starting video playback
[   0.907][v][cplayer] starting audio playback
[   0.907][v][ao/alsa] starting AO
[   0.907][v][cplayer] playback restart complete @ 0.066733, audio=playing, video=playing
[   0.907][v][vo/gpu-next/wayland] Enabling idle inhibitor
[   0.907][v][cplayer] Set property: user-data/display_name="HDMI-A-1" -> 1
[   0.907][v][auto_profiles] Re-evaluating auto profile maximized
[   0.907][d][vd] Allocating new (host-cached) DR image...
[   0.907][d][vo/gpu-next/libplacebo] Allocating 11108352 memory of type 0xe (id 4) in heap 1: unknown
[   0.907][v][cplayer] Change display sync audio drift: -1
[   0.907][v][cplayer] Video sync mode enabled.
[   0.908][v][vo/gpu-next/libplacebo] Detected fps ratio 0.0000 below threshold 0.0100, disabling interpolation
[   0.908][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[   0.908][v][osd/libass] Glyph 0x1F4CC not found, selecting one more font for (Noto Sans Mono CJK SC, 400, 0)
[   0.908][v][auto_profiles] Re-evaluating auto profile video-sync
[   0.908][v][osd/libass] fontselect: (Noto Sans Mono CJK SC, 400, 0) -> /usr/share/fonts/TTF/seguisym.ttf, 0, SegoeUISymbol
[   0.909][d][vo/gpu-next/libplacebo] Spent 1.628 ms allocating slab
[   0.909][d][vo/gpu-next/libplacebo] Freeing slab of size 3392K
[   0.909][d][vd] Allocating new (host-cached) DR image...
[   0.909][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[   0.909][d][vo/gpu-next/libplacebo] Spent 0.144 ms allocating slab
[   0.913][v][vo/gpu-next/libplacebo] Detected fps ratio 2.3333 exceeds threshold 0.0100, re-enabling interpolation
[   0.913][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[   0.913][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.913][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[   0.914][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[   0.914][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[   0.914][v][osd/libass] libass API version: 0x1703000
[   0.914][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[   0.914][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[   0.914][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[   0.914][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[   0.914][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[   0.914][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[   0.914][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[   0.914][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[   0.914][v][osd/libass] Setting up fonts...
[   0.915][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[   0.915][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[   0.915][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[   0.915][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[   0.919][v][osd/libass] Using font provider fontconfig
[   0.919][v][osd/libass] Done.
[   0.926][v][osd/libass] fontselect: (Noto Emoji, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[   0.926][v][osd/libass] fontselect: (sans-serif, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[   0.926][v][osd/libass] fontselect: (MaterialIconsRound-Regular, 400, 0) -> MaterialIconsRound-Regular, 0, MaterialIconsRound-Regular
[   0.926][v][osd/libass] fontselect: (Noto Sans Mono CJK SC, 400, 0) -> /usr/share/fonts/noto-cjk/NotoSansCJK-Regular.ttc, 7, NotoSansMonoCJKsc-Regular
[   0.927][v][osd/libass] fontselect: (Noto Sans Mono CJK SC, 700, 0) -> /usr/share/fonts/noto-cjk/NotoSansCJK-Bold.ttc, 7, NotoSansMonoCJKsc-Bold
[   0.928][v][osd/libass] Glyph 0x1F4CC not found, selecting one more font for (Noto Sans Mono CJK SC, 400, 0)
[   0.928][v][osd/libass] fontselect: (Noto Sans Mono CJK SC, 400, 0) -> /usr/share/fonts/TTF/seguisym.ttf, 0, SegoeUISymbol
[   0.929][d][osd] Spent 6.021 ms in osd_render (slow!)
[   0.929][d][vo/gpu-next/libplacebo] (Re)creating 512x199x0 texture with format r8: unknown
[   0.929][d][vo/gpu-next/libplacebo] Allocating 417792 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[   0.929][d][vo/gpu-next/libplacebo] Spent 0.221 ms allocating slab
[   0.930][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.930][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.930][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.930][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.930][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _5;
[   0.930][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _6;
[   0.930][d][vo/gpu-next/libplacebo] [ 13] };
[   0.930][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _3 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _7 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _8 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _2;
[   0.930][d][vo/gpu-next/libplacebo] [ 19] layout(location=0) in vec2 _e;
[   0.930][d][vo/gpu-next/libplacebo] [ 20] layout(location=1) in vec2 _f;
[   0.930][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) out vec2 _b;
[   0.930][d][vo/gpu-next/libplacebo] [ 22] layout(location=2) in vec4 _10;
[   0.930][d][vo/gpu-next/libplacebo] [ 23] layout(location=2) out vec4 _c;
[   0.930][d][vo/gpu-next/libplacebo] [ 24] void main() {
[   0.930][d][vo/gpu-next/libplacebo] [ 25] vec2 va_pos = _e; 
[   0.930][d][vo/gpu-next/libplacebo] [ 26] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.930][d][vo/gpu-next/libplacebo] [ 27] _b = _f;
[   0.930][d][vo/gpu-next/libplacebo] [ 28] _c = _10;
[   0.930][d][vo/gpu-next/libplacebo] [ 29] }
[   0.930][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.930][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.930][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.930][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.930][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.930][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _5;
[   0.930][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _6;
[   0.930][d][vo/gpu-next/libplacebo] [ 13] };
[   0.930][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _3 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _7 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _8 = 1; 
[   0.930][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _2;
[   0.930][d][vo/gpu-next/libplacebo] [ 19] layout(location=1) in vec2 _b;
[   0.930][d][vo/gpu-next/libplacebo] [ 20] layout(location=2) in vec4 _c;
[   0.930][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec4 out_color;
[   0.930][d][vo/gpu-next/libplacebo] [ 22] #define pos _a
[   0.930][d][vo/gpu-next/libplacebo] [ 23] #define coord _b
[   0.930][d][vo/gpu-next/libplacebo] [ 24] #define osd_color _c
[   0.930][d][vo/gpu-next/libplacebo] [ 25] 
[   0.930][d][vo/gpu-next/libplacebo] [ 26] vec4 _1() {
[   0.930][d][vo/gpu-next/libplacebo] [ 27] // overlay 
[   0.930][d][vo/gpu-next/libplacebo] [ 28] vec4 color = osd_color; 
[   0.930][d][vo/gpu-next/libplacebo] [ 29] // pl_shader_decode_color 
[   0.930][d][vo/gpu-next/libplacebo] [ 30] { 
[   0.930][d][vo/gpu-next/libplacebo] [ 31] }
[   0.930][d][vo/gpu-next/libplacebo] [ 32] // pl_shader_color_map 
[   0.930][d][vo/gpu-next/libplacebo] [ 33] {                      
[   0.930][d][vo/gpu-next/libplacebo] [ 34] // pl_shader_linearize           
[   0.930][d][vo/gpu-next/libplacebo] [ 35] color.rgb = max(color.rgb, 0.0); 
[   0.930][d][vo/gpu-next/libplacebo] [ 36] color.rgb = mix(color.rgb * vec3(1.0/12.92),               
[   0.930][d][vo/gpu-next/libplacebo] [ 37]                 pow((color.rgb + vec3(0.055))/vec3(1.055), 
[   0.930][d][vo/gpu-next/libplacebo] [ 38]                     vec3(2.4)),                            
[   0.930][d][vo/gpu-next/libplacebo] [ 39]                 lessThan(vec3(0.04045), color.rgb));       
[   0.930][d][vo/gpu-next/libplacebo] [ 40] color.rgb = _4 * color.rgb + vec3(_3); 
[   0.930][d][vo/gpu-next/libplacebo] [ 41] // pl_shader_delinearize 
[   0.930][d][vo/gpu-next/libplacebo] [ 42] color.rgb = _8 * color.rgb + vec3(_7); 
[   0.930][d][vo/gpu-next/libplacebo] [ 43] color.rgb = max(color.rgb, 0.0); 
[   0.930][d][vo/gpu-next/libplacebo] [ 44] color.rgb = pow(color.rgb, vec3(1.0/2.2));
[   0.930][d][vo/gpu-next/libplacebo] [ 45] }
[   0.930][d][vo/gpu-next/libplacebo] [ 46] // pl_shader_encode_color 
[   0.930][d][vo/gpu-next/libplacebo] [ 47] { 
[   0.930][d][vo/gpu-next/libplacebo] [ 48] color.rgb *= vec3(color.a); 
[   0.930][d][vo/gpu-next/libplacebo] [ 49] }
[   0.930][d][vo/gpu-next/libplacebo] [ 50] color.rgba *= textureLod(_2, coord, 0.0).r; 
[   0.930][d][vo/gpu-next/libplacebo] [ 51] vec4 _9 = color;                 
[   0.930][d][vo/gpu-next/libplacebo] [ 52] color = vec4(0.0, 0.0, 0.0, 1.0); 
[   0.930][d][vo/gpu-next/libplacebo] [ 53] color[0] = _9[0]; 
[   0.930][d][vo/gpu-next/libplacebo] [ 54] color[1] = _9[1]; 
[   0.930][d][vo/gpu-next/libplacebo] [ 55] color[2] = _9[2]; 
[   0.930][d][vo/gpu-next/libplacebo] [ 56] color[3] = _9[3]; 
[   0.930][d][vo/gpu-next/libplacebo] [ 57] color.a = _9.a; 
[   0.930][d][vo/gpu-next/libplacebo] [ 58] return color;
[   0.930][d][vo/gpu-next/libplacebo] [ 59] }
[   0.930][d][vo/gpu-next/libplacebo] [ 60] 
[   0.930][d][vo/gpu-next/libplacebo] [ 61] void main() {
[   0.930][d][vo/gpu-next/libplacebo] [ 62] out_color = _1();
[   0.930][d][vo/gpu-next/libplacebo] [ 63] }
[   0.930][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.930][d][vo/gpu-next/libplacebo]   constant_id=0: 0.001000
[   0.930][d][vo/gpu-next/libplacebo]   constant_id=1: 0.999000
[   0.930][d][vo/gpu-next/libplacebo]   constant_id=2: -0.001001
[   0.930][d][vo/gpu-next/libplacebo]   constant_id=3: 1.001001
[   0.930][d][vo/gpu-next] cache_load_obj: key(193c47ccd1cde241), size(864), load time(0.035 ms)
[   0.930][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x193c47ccd1cde241
[   0.930][d][vo/gpu-next] cache_load_obj: key(d1940a4b0d2b0800), size(2644), load time(0.020 ms)
[   0.930][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xd1940a4b0d2b0800
[   0.930][d][vo/gpu-next] cache_load_obj: key(7a0f5ddf3f3210ee), size(15257), load time(0.132 ms)
[   0.930][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[   0.930][d][vo/gpu-next] cache_save_obj: key(193c47ccd1cde241), size(864)
[   0.930][d][vo/gpu-next] cache_save_obj: key(d1940a4b0d2b0800), size(2644)
[   0.930][d][vo/gpu-next/libplacebo] Spent 0.111 ms creating pipeline
[   0.930][d][vo/gpu-next] cache_save_obj: key(7a0f5ddf3f3210ee), size(15257)
[   0.930][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   0.931][d][vd] Allocating new (host-cached) DR image...
[   0.934][d][vo/gpu-next/libplacebo] vertex shader source:
[   0.934][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.934][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.934][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.934][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.934][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=4) float _7;
[   0.934][d][vo/gpu-next/libplacebo] [ 13] };
[   0.934][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _a = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _b = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 17] layout(binding=0) uniform  sampler2D _2;
[   0.934][d][vo/gpu-next/libplacebo] [ 18] layout(binding=1) uniform  sampler2D _5;
[   0.934][d][vo/gpu-next/libplacebo] [ 19] layout(binding=2) uniform  sampler2D _9;
[   0.934][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _10;
[   0.934][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec2 _3;
[   0.934][d][vo/gpu-next/libplacebo] [ 22] layout(location=1) in vec2 _11;
[   0.934][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) out vec2 _6;
[   0.934][d][vo/gpu-next/libplacebo] [ 24] layout(location=2) in vec2 _12;
[   0.934][d][vo/gpu-next/libplacebo] [ 25] void main() {
[   0.934][d][vo/gpu-next/libplacebo] [ 26] _3 = _10;
[   0.934][d][vo/gpu-next/libplacebo] [ 27] _6 = _11;
[   0.934][d][vo/gpu-next/libplacebo] [ 28] vec2 va_pos = _12; 
[   0.934][d][vo/gpu-next/libplacebo] [ 29] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   0.934][d][vo/gpu-next/libplacebo] [ 30] }
[   0.934][d][vo/gpu-next/libplacebo] fragment shader source:
[   0.934][d][vo/gpu-next/libplacebo] [  1] #version 450
[   0.934][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   0.934][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   0.934][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   0.934][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) float _4;
[   0.934][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=4) float _7;
[   0.934][d][vo/gpu-next/libplacebo] [ 13] };
[   0.934][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _a = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _b = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c = 1; 
[   0.934][d][vo/gpu-next/libplacebo] [ 17] layout(binding=0) uniform  sampler2D _2;
[   0.934][d][vo/gpu-next/libplacebo] [ 18] layout(binding=1) uniform  sampler2D _5;
[   0.934][d][vo/gpu-next/libplacebo] [ 19] layout(binding=2) uniform  sampler2D _9;
[   0.934][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _3;
[   0.934][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) in vec2 _6;
[   0.934][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[   0.934][d][vo/gpu-next/libplacebo] [ 23] 
[   0.934][d][vo/gpu-next/libplacebo] [ 24] #define _8(pos) (texelFetch(_9, ivec2(pos), 0).x)
[   0.934][d][vo/gpu-next/libplacebo] [ 25] vec4 _1() {
[   0.934][d][vo/gpu-next/libplacebo] [ 26] vec4 color;                   
[   0.934][d][vo/gpu-next/libplacebo] [ 27] // pl_render_image_mix        
[   0.934][d][vo/gpu-next/libplacebo] [ 28] {                             
[   0.934][d][vo/gpu-next/libplacebo] [ 29] vec4 mix_color = vec4(0.0);   
[   0.934][d][vo/gpu-next/libplacebo] [ 30] color = textureLod(_2, _3, 0.0); 
[   0.934][d][vo/gpu-next/libplacebo] [ 31] mix_color += vec4(_4) * color; 
[   0.934][d][vo/gpu-next/libplacebo] [ 32] color = textureLod(_5, _6, 0.0); 
[   0.934][d][vo/gpu-next/libplacebo] [ 33] mix_color += vec4(_7) * color; 
[   0.934][d][vo/gpu-next/libplacebo] [ 34] color = mix_color; 
[   0.934][d][vo/gpu-next/libplacebo] [ 35] }                  
[   0.934][d][vo/gpu-next/libplacebo] [ 36] // pl_shader_encode_color 
[   0.934][d][vo/gpu-next/libplacebo] [ 37] { 
[   0.934][d][vo/gpu-next/libplacebo] [ 38] color.rgb *= vec3(color.a); 
[   0.934][d][vo/gpu-next/libplacebo] [ 39] }
[   0.934][d][vo/gpu-next/libplacebo] [ 40] // pl_shader_dither 
[   0.934][d][vo/gpu-next/libplacebo] [ 41] {                    
[   0.934][d][vo/gpu-next/libplacebo] [ 42] float bias;          
[   0.934][d][vo/gpu-next/libplacebo] [ 43] vec2 pos = fract(gl_FragCoord.xy * 1.0/_a); 
[   0.934][d][vo/gpu-next/libplacebo] [ 44] bias = _8(ivec2(pos * _b));
[   0.934][d][vo/gpu-next/libplacebo] [ 45] const float scale = 255.0; 
[   0.934][d][vo/gpu-next/libplacebo] [ 46] color = scale * color + vec4(bias);   
[   0.934][d][vo/gpu-next/libplacebo] [ 47] color = floor(color) * (1.0 / scale); 
[   0.934][d][vo/gpu-next/libplacebo] [ 48] } 
[   0.934][d][vo/gpu-next/libplacebo] [ 49] color *= vec4(1.0 / _c); 
[   0.934][d][vo/gpu-next/libplacebo] [ 50] vec4 _d = color;                 
[   0.934][d][vo/gpu-next/libplacebo] [ 51] color = vec4(0.0, 0.0, 0.0, 1.0); 
[   0.934][d][vo/gpu-next/libplacebo] [ 52] color[0] = _d[0]; 
[   0.934][d][vo/gpu-next/libplacebo] [ 53] color[1] = _d[1]; 
[   0.934][d][vo/gpu-next/libplacebo] [ 54] color[2] = _d[2]; 
[   0.934][d][vo/gpu-next/libplacebo] [ 55] color[3] = _d[3]; 
[   0.934][d][vo/gpu-next/libplacebo] [ 56] return color;
[   0.934][d][vo/gpu-next/libplacebo] [ 57] }
[   0.934][d][vo/gpu-next/libplacebo] [ 58] 
[   0.934][d][vo/gpu-next/libplacebo] [ 59] void main() {
[   0.934][d][vo/gpu-next/libplacebo] [ 60] out_color = _1();
[   0.934][d][vo/gpu-next/libplacebo] [ 61] }
[   0.934][d][vo/gpu-next/libplacebo] Specialization constant values:
[   0.934][d][vo/gpu-next/libplacebo]   constant_id=0: 64.000000
[   0.934][d][vo/gpu-next/libplacebo]   constant_id=1: 64.000000
[   0.934][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[   0.934][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xf9d10c163ee5fd66
[   0.934][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xe8af280022d1787e
[   0.934][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[   0.934][d][vo/gpu-next] cache_save_obj: key(f9d10c163ee5fd66), size(848)
[   0.934][d][vo/gpu-next] cache_save_obj: key(e8af280022d1787e), size(1940)
[   0.934][d][vo/gpu-next/libplacebo] Spent 0.035 ms creating pipeline
[   0.934][d][vo/gpu-next] cache_save_obj: key(428ff0a32033a2ba), size(14802)
[   0.934][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   1.013][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 399.600
[   1.053][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[   1.053][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 3
[   1.053][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[   1.063][v][auto_profiles] Re-evaluating auto profile fps-fix
[   1.166][d][vo/gpu-next/libplacebo] Garbage collected slab of size  408K from pool 3
[   1.166][d][vo/gpu-next/libplacebo] Freeing slab of size  408K
[   1.205][v][auto_profiles] Re-evaluating auto profile video-sync
[   1.466][v][auto_profiles] Re-evaluating auto profile video-sync
[   1.605][v][auto_profiles] Re-evaluating auto profile video-sync
[   1.805][v][auto_profiles] Re-evaluating auto profile video-sync
[   1.905][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.005][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.005][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.065][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.104][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.165][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.205][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.304][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.335][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.465][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.505][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.635][v][auto_profiles] Re-evaluating auto profile fps-fix
[   2.735][v][auto_profiles] Re-evaluating auto profile video-sync
[   2.865][v][auto_profiles] Re-evaluating auto profile fps-fix
[   3.065][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.165][v][auto_profiles] Re-evaluating auto profile fps-fix
[   3.165][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.265][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.365][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.505][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.605][v][auto_profiles] Re-evaluating auto profile fps-fix
[   3.635][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.765][v][auto_profiles] Re-evaluating auto profile video-sync
[   3.935][v][auto_profiles] Re-evaluating auto profile video-sync
[   4.105][v][auto_profiles] Re-evaluating auto profile video-sync
[   4.205][v][auto_profiles] Re-evaluating auto profile fps-fix
[   5.983][v][sub/ass] fontselect: (Noto Sans CJK JP Thin, 400, 0) -> /usr/share/fonts/noto-cjk/NotoSansCJK-Thin.ttc, 0, NotoSansCJKjp-Thin
[   5.990][d][osd] Spent 7.547 ms in osd_render (slow!)
[   5.990][d][vo/gpu-next/libplacebo] (Re)creating 441x349x0 texture with format r8: unknown
[   5.991][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[   5.991][d][vo/gpu-next/libplacebo] Spent 0.279 ms allocating slab
[   6.003][d][vo/gpu-next/libplacebo] vertex shader source:
[   6.003][d][vo/gpu-next/libplacebo] [  1] #version 450
[   6.003][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   6.003][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   6.003][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _5;
[   6.003][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _6;
[   6.003][d][vo/gpu-next/libplacebo] [ 13] };
[   6.003][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _3 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _7 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _8 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _2;
[   6.003][d][vo/gpu-next/libplacebo] [ 19] layout(location=0) in vec2 _e;
[   6.003][d][vo/gpu-next/libplacebo] [ 20] layout(location=1) in vec2 _f;
[   6.003][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) out vec2 _b;
[   6.003][d][vo/gpu-next/libplacebo] [ 22] layout(location=2) in vec4 _10;
[   6.003][d][vo/gpu-next/libplacebo] [ 23] layout(location=2) out vec4 _c;
[   6.003][d][vo/gpu-next/libplacebo] [ 24] void main() {
[   6.003][d][vo/gpu-next/libplacebo] [ 25] vec2 va_pos = _e; 
[   6.003][d][vo/gpu-next/libplacebo] [ 26] gl_Position = vec4(va_pos, 0.0, 1.0); 
[   6.003][d][vo/gpu-next/libplacebo] [ 27] _b = _f;
[   6.003][d][vo/gpu-next/libplacebo] [ 28] _c = _10;
[   6.003][d][vo/gpu-next/libplacebo] [ 29] }
[   6.003][d][vo/gpu-next/libplacebo] fragment shader source:
[   6.003][d][vo/gpu-next/libplacebo] [  1] #version 450
[   6.003][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[   6.003][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[   6.003][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[   6.003][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _5;
[   6.003][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _6;
[   6.003][d][vo/gpu-next/libplacebo] [ 13] };
[   6.003][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _3 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _7 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _8 = 1; 
[   6.003][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _2;
[   6.003][d][vo/gpu-next/libplacebo] [ 19] layout(location=1) in vec2 _b;
[   6.003][d][vo/gpu-next/libplacebo] [ 20] layout(location=2) in vec4 _c;
[   6.003][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec4 out_color;
[   6.003][d][vo/gpu-next/libplacebo] [ 22] #define pos _a
[   6.003][d][vo/gpu-next/libplacebo] [ 23] #define coord _b
[   6.003][d][vo/gpu-next/libplacebo] [ 24] #define osd_color _c
[   6.003][d][vo/gpu-next/libplacebo] [ 25] 
[   6.003][d][vo/gpu-next/libplacebo] [ 26] vec4 _1() {
[   6.003][d][vo/gpu-next/libplacebo] [ 27] // overlay 
[   6.003][d][vo/gpu-next/libplacebo] [ 28] vec4 color = osd_color; 
[   6.003][d][vo/gpu-next/libplacebo] [ 29] // pl_shader_decode_color 
[   6.003][d][vo/gpu-next/libplacebo] [ 30] { 
[   6.003][d][vo/gpu-next/libplacebo] [ 31] }
[   6.003][d][vo/gpu-next/libplacebo] [ 32] // pl_shader_color_map 
[   6.003][d][vo/gpu-next/libplacebo] [ 33] {                      
[   6.003][d][vo/gpu-next/libplacebo] [ 34] // pl_shader_linearize           
[   6.003][d][vo/gpu-next/libplacebo] [ 35] color.rgb = max(color.rgb, 0.0); 
[   6.003][d][vo/gpu-next/libplacebo] [ 36] color.rgb = mix(color.rgb * vec3(1.0/12.92),               
[   6.003][d][vo/gpu-next/libplacebo] [ 37]                 pow((color.rgb + vec3(0.055))/vec3(1.055), 
[   6.003][d][vo/gpu-next/libplacebo] [ 38]                     vec3(2.4)),                            
[   6.003][d][vo/gpu-next/libplacebo] [ 39]                 lessThan(vec3(0.04045), color.rgb));       
[   6.003][d][vo/gpu-next/libplacebo] [ 40] color.rgb = _4 * color.rgb + vec3(_3); 
[   6.003][d][vo/gpu-next/libplacebo] [ 41] // pl_shader_delinearize 
[   6.003][d][vo/gpu-next/libplacebo] [ 42] color.rgb = _8 * color.rgb + vec3(_7); 
[   6.003][d][vo/gpu-next/libplacebo] [ 43] color.rgb = max(color.rgb, 0.0); 
[   6.003][d][vo/gpu-next/libplacebo] [ 44] color.rgb = pow(color.rgb, vec3(1.0/2.2));
[   6.003][d][vo/gpu-next/libplacebo] [ 45] }
[   6.003][d][vo/gpu-next/libplacebo] [ 46] // pl_shader_encode_color 
[   6.003][d][vo/gpu-next/libplacebo] [ 47] { 
[   6.003][d][vo/gpu-next/libplacebo] [ 48] }
[   6.003][d][vo/gpu-next/libplacebo] [ 49] color.a *= textureLod(_2, coord, 0.0).r; 
[   6.003][d][vo/gpu-next/libplacebo] [ 50] vec4 _9 = color;                 
[   6.003][d][vo/gpu-next/libplacebo] [ 51] color = vec4(0.0, 0.0, 0.0, 1.0); 
[   6.003][d][vo/gpu-next/libplacebo] [ 52] color[0] = _9[0]; 
[   6.003][d][vo/gpu-next/libplacebo] [ 53] color[1] = _9[1]; 
[   6.003][d][vo/gpu-next/libplacebo] [ 54] color[2] = _9[2]; 
[   6.003][d][vo/gpu-next/libplacebo] [ 55] color.a = _9.a; 
[   6.003][d][vo/gpu-next/libplacebo] [ 56] return color;
[   6.003][d][vo/gpu-next/libplacebo] [ 57] }
[   6.003][d][vo/gpu-next/libplacebo] [ 58] 
[   6.003][d][vo/gpu-next/libplacebo] [ 59] void main() {
[   6.003][d][vo/gpu-next/libplacebo] [ 60] out_color = _1();
[   6.003][d][vo/gpu-next/libplacebo] [ 61] }
[   6.003][d][vo/gpu-next/libplacebo] Specialization constant values:
[   6.003][d][vo/gpu-next/libplacebo]   constant_id=0: 0.001000
[   6.003][d][vo/gpu-next/libplacebo]   constant_id=1: 0.999000
[   6.003][d][vo/gpu-next/libplacebo]   constant_id=2: -0.001001
[   6.003][d][vo/gpu-next/libplacebo]   constant_id=3: 1.001001
[   6.003][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x193c47ccd1cde241
[   6.004][d][vo/gpu-next] cache_load_obj: key(1e7e12520f99de99), size(2360), load time(0.055 ms)
[   6.004][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x1e7e12520f99de99
[   6.004][d][vo/gpu-next] cache_load_obj: key(e87f0a7c2c2b5e82), size(15060), load time(0.171 ms)
[   6.004][d][vo/gpu-next/libplacebo] Spent 0.008 ms compiling shader
[   6.004][d][vo/gpu-next] cache_save_obj: key(193c47ccd1cde241), size(864)
[   6.004][d][vo/gpu-next] cache_save_obj: key(1e7e12520f99de99), size(2360)
[   6.004][d][vo/gpu-next/libplacebo] Spent 0.118 ms creating pipeline
[   6.004][d][vo/gpu-next] cache_save_obj: key(e87f0a7c2c2b5e82), size(15060)
[   6.004][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[   6.013][d][vo/gpu-next/libplacebo] (Re)creating 441x349x0 texture with format r8: unknown
[   9.638][d][vo/gpu-next/libplacebo] (Re)creating 629x349x0 texture with format r8: unknown
[   9.638][d][vo/gpu-next/libplacebo] Allocating 3932160 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[   9.640][d][vo/gpu-next/libplacebo] Spent 1.154 ms allocating slab
[   9.674][d][vo/gpu-next/libplacebo] (Re)creating 629x349x0 texture with format r8: unknown
[  13.140][d][osd] Spent 5.361 ms in osd_render (slow!)
[  13.140][d][vo/gpu-next/libplacebo] (Re)creating 879x349x0 texture with format r8: unknown
[  13.140][d][vo/gpu-next/libplacebo] Allocating 5505024 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[  13.141][d][vo/gpu-next/libplacebo] Spent 1.013 ms allocating slab
[  13.174][d][vo/gpu-next/libplacebo] (Re)creating 879x349x0 texture with format r8: unknown
[  13.335][d][vo/gpu-next/libplacebo] Garbage collected slab of size 3840K from pool 1
[  13.335][d][vo/gpu-next/libplacebo] Freeing slab of size 3840K
[  16.738][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  16.739][d][vo/gpu-next/libplacebo] Spent 0.634 ms allocating slab
[  16.866][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[  16.866][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[  20.394][v][cplayer] Change display sync audio drift: 0
[  20.394][v][cplayer] Compensation factor: 1.000004
[  20.394][v][auto_profiles] Re-evaluating auto profile video-sync
[  21.009][d][osd] Spent 5.080 ms in osd_render (slow!)
[  21.009][d][vo/gpu-next/libplacebo] (Re)creating 946x349x0 texture with format r8: unknown
[  21.009][d][vo/gpu-next/libplacebo] Allocating 5898240 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[  21.010][d][vo/gpu-next/libplacebo] Spent 1.089 ms allocating slab
[  21.034][d][vo/gpu-next/libplacebo] (Re)creating 946x349x0 texture with format r8: unknown
[  21.196][d][vo/gpu-next/libplacebo] Garbage collected slab of size 5376K from pool 1
[  21.196][d][vo/gpu-next/libplacebo] Freeing slab of size 5376K
[  22.983][v][cplayer] Change display sync audio drift: -1
[  22.983][v][auto_profiles] Re-evaluating auto profile video-sync
[  27.968][d][vo/gpu-next/libplacebo] (Re)creating 972x349x0 texture with format r8: unknown
[  27.968][d][vo/gpu-next/libplacebo] Allocating 6291456 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[  27.969][d][vo/gpu-next/libplacebo] Spent 1.005 ms allocating slab
[  27.969][d][vo/gpu-next/libplacebo] Allocating 983040 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  27.970][d][vo/gpu-next/libplacebo] Spent 0.536 ms allocating slab
[  27.994][d][vo/gpu-next/libplacebo] (Re)creating 972x349x0 texture with format r8: unknown
[  28.086][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[  28.086][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[  28.155][d][vo/gpu-next/libplacebo] Garbage collected slab of size 5760K from pool 1
[  28.155][d][vo/gpu-next/libplacebo] Freeing slab of size 5760K
[  31.084][v][cplayer] Change display sync audio drift: 0
[  31.084][v][cplayer] Compensation factor: 1.000001
[  31.084][v][auto_profiles] Re-evaluating auto profile video-sync
[  38.124][d][vo/gpu-next/libplacebo] Garbage collected slab of size  960K from pool 3
[  38.124][d][vo/gpu-next/libplacebo] Freeing slab of size  960K
[  40.328][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  40.329][d][vo/gpu-next/libplacebo] Spent 0.709 ms allocating slab
[  52.124][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[  52.124][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[  53.326][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  53.326][d][vo/gpu-next/libplacebo] Spent 0.672 ms allocating slab
[  57.327][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  57.328][d][vo/gpu-next/libplacebo] Spent 0.669 ms allocating slab
[  57.464][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[  57.464][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[  60.015][d][auto_save_state] saving state
[  60.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[  60.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.015][i][cplayer] Saving state.
[  60.019][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.019][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.020][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.020][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.020][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  60.020][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[  62.924][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[  62.924][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[  66.198][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  66.199][d][vo/gpu-next/libplacebo] Spent 0.693 ms allocating slab
[  68.770][d][osd] Spent 6.851 ms in osd_render (slow!)
[  68.770][d][vo/gpu-next/libplacebo] (Re)creating 1000x349x0 texture with format r8: unknown
[  68.770][d][vo/gpu-next/libplacebo] Allocating 1179648 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  68.771][d][vo/gpu-next/libplacebo] Spent 0.664 ms allocating slab
[  68.794][d][vo/gpu-next/libplacebo] (Re)creating 1000x349x0 texture with format r8: unknown
[  68.894][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[  68.894][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[  83.199][d][osd] Spent 5.654 ms in osd_render (slow!)
[  83.199][d][vo/gpu-next/libplacebo] (Re)creating 1107x349x0 texture with format r8: unknown
[  83.199][d][vo/gpu-next/libplacebo] Allocating 1474560 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[  83.200][d][vo/gpu-next/libplacebo] Spent 0.722 ms allocating slab
[  83.224][d][vo/gpu-next/libplacebo] (Re)creating 1107x349x0 texture with format r8: unknown
[  83.324][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1152K from pool 3
[  83.324][d][vo/gpu-next/libplacebo] Freeing slab of size 1152K
[  83.384][d][vo/gpu-next/libplacebo] Garbage collected slab of size 6144K from pool 1
[  83.384][d][vo/gpu-next/libplacebo] Freeing slab of size 6144K
[  87.397][d][vo/gpu-next/libplacebo] (Re)creating 1640x349x0 texture with format r8: unknown
[  87.423][d][vo/gpu-next/libplacebo] (Re)creating 1640x349x0 texture with format r8: unknown
[  90.797][d][vo/gpu-next/libplacebo] (Re)creating 1964x349x0 texture with format r8: unknown
[  90.823][d][vo/gpu-next/libplacebo] (Re)creating 1964x349x0 texture with format r8: unknown
[  94.478][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left_dbl", flags=""]
[  94.478][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left", flags=""]
[  94.695][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left_dbl"]
[  94.695][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left"]
[  94.975][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left_dbl", flags=""]
[  94.975][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left", flags=""]
[  95.026][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left_dbl"]
[  95.026][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left"]
[  95.427][d][vo/gpu-next/libplacebo] (Re)creating 2032x349x0 texture with format r8: unknown
[  95.464][d][vo/gpu-next/libplacebo] (Re)creating 2032x349x0 texture with format r8: unknown
[  97.353][v][cplayer] Change display sync audio drift: 1
[  97.353][v][auto_profiles] Re-evaluating auto profile video-sync
[  97.744][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[  97.744][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[  97.744][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[  97.744][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[  97.744][d][vo/gpu-next/libplacebo] Freeing slab of size 3392K
[  97.745][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[  97.745][d][vo/gpu-next/libplacebo] Spent 0.416 ms allocating slab
[  98.238][v][cplayer] Change display sync audio drift: 0
[  98.238][v][cplayer] Compensation factor: 0.994117
[  98.293][v][cplayer] Change display sync audio drift: 1
[  99.866][v][cplayer] Change display sync audio drift: 0
[  99.866][v][cplayer] Compensation factor: 0.994767
[  99.914][v][cplayer] Change display sync audio drift: 1
[ 100.893][v][cplayer] Change display sync audio drift: 0
[ 100.893][v][cplayer] Compensation factor: 0.999242
[ 100.893][v][auto_profiles] Re-evaluating auto profile video-sync
[ 100.929][v][cplayer] Change display sync audio drift: 1
[ 100.929][v][auto_profiles] Re-evaluating auto profile video-sync
[ 112.548][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1440K from pool 3
[ 112.548][d][vo/gpu-next/libplacebo] Freeing slab of size 1440K
[ 113.392][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 113.392][d][vo/gpu-next/libplacebo] Spent 0.250 ms allocating slab
[ 116.040][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 116.040][d][vo/gpu-next/libplacebo] Spent 0.660 ms allocating slab
[ 116.188][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[ 116.188][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[ 119.262][d][osd] Spent 5.327 ms in osd_render (slow!)
[ 119.262][d][vo/gpu-next/libplacebo] (Re)creating 2037x349x0 texture with format r8: unknown
[ 119.262][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 119.263][d][vo/gpu-next/libplacebo] Spent 0.669 ms allocating slab
[ 119.299][d][vo/gpu-next/libplacebo] (Re)creating 2037x349x0 texture with format r8: unknown
[ 119.419][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 119.419][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 120.015][d][auto_save_state] saving state
[ 120.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 120.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.015][i][cplayer] Saving state.
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 120.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 126.149][v][cplayer] Change display sync audio drift: 0
[ 126.149][v][cplayer] Compensation factor: 0.997195
[ 126.247][v][cplayer] Change display sync audio drift: 1
[ 134.030][d][vo/gpu-next/libplacebo] (Re)creating 2044x349x0 texture with format r8: unknown
[ 134.063][d][vo/gpu-next/libplacebo] (Re)creating 2044x349x0 texture with format r8: unknown
[ 138.929][v][cplayer] Change display sync audio drift: 0
[ 138.929][v][cplayer] Compensation factor: 0.997820
[ 139.007][v][cplayer] Change display sync audio drift: 1
[ 150.672][v][cplayer] Change display sync audio drift: 0
[ 150.672][v][cplayer] Compensation factor: 0.998273
[ 150.709][v][cplayer] Change display sync audio drift: 1
[ 153.595][v][cplayer] Change display sync audio drift: 0
[ 153.595][v][cplayer] Compensation factor: 0.999542
[ 153.596][v][auto_profiles] Re-evaluating auto profile video-sync
[ 153.633][v][cplayer] Change display sync audio drift: 1
[ 153.634][v][auto_profiles] Re-evaluating auto profile video-sync
[ 158.215][v][cplayer] Change display sync audio drift: 0
[ 158.215][v][cplayer] Compensation factor: 0.998545
[ 158.314][v][cplayer] Change display sync audio drift: 1
[ 173.792][v][cplayer] Change display sync audio drift: 0
[ 173.792][v][cplayer] Compensation factor: 0.999417
[ 173.792][v][auto_profiles] Re-evaluating auto profile video-sync
[ 173.829][v][cplayer] Change display sync audio drift: 1
[ 173.830][v][auto_profiles] Re-evaluating auto profile video-sync
[ 180.015][d][auto_save_state] saving state
[ 180.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 180.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.015][i][cplayer] Saving state.
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 180.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 185.373][v][cplayer] Change display sync audio drift: 0
[ 185.373][v][cplayer] Compensation factor: 0.996582
[ 185.406][v][cplayer] Change display sync audio drift: 1
[ 201.171][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 201.171][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 201.290][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 201.291][d][vo/gpu-next/libplacebo] Spent 0.943 ms allocating slab
[ 203.533][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 203.533][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 203.778][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 203.779][d][vo/gpu-next/libplacebo] Spent 0.651 ms allocating slab
[ 215.088][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 215.088][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 215.566][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 215.566][d][vo/gpu-next/libplacebo] Spent 0.218 ms allocating slab
[ 215.907][v][cplayer] Change display sync audio drift: 0
[ 215.907][v][cplayer] Compensation factor: 0.999541
[ 215.908][v][auto_profiles] Re-evaluating auto profile video-sync
[ 215.955][v][cplayer] Change display sync audio drift: 1
[ 215.955][v][auto_profiles] Re-evaluating auto profile video-sync
[ 226.855][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 226.856][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[ 227.027][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[ 227.027][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[ 234.002][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 234.002][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 234.984][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 234.984][d][vo/gpu-next/libplacebo] Spent 0.654 ms allocating slab
[ 236.806][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 236.807][d][vo/gpu-next/libplacebo] Spent 0.644 ms allocating slab
[ 236.966][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 236.966][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 239.542][v][cplayer] Change display sync audio drift: 0
[ 239.542][v][cplayer] Compensation factor: 0.999168
[ 239.542][v][auto_profiles] Re-evaluating auto profile video-sync
[ 239.618][v][cplayer] Change display sync audio drift: 1
[ 239.618][v][auto_profiles] Re-evaluating auto profile video-sync
[ 240.015][d][auto_save_state] saving state
[ 240.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 240.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.015][i][cplayer] Saving state.
[ 240.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 240.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 241.421][v][cplayer] Change display sync audio drift: 0
[ 241.421][v][cplayer] Compensation factor: 0.999963
[ 241.421][v][auto_profiles] Re-evaluating auto profile video-sync
[ 241.482][v][cplayer] Change display sync audio drift: 1
[ 241.483][v][auto_profiles] Re-evaluating auto profile video-sync
[ 245.507][d][vo/gpu-next/libplacebo] Allocating 1019904 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 245.508][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[ 245.667][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 245.667][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 251.821][v][cplayer] Change display sync audio drift: 0
[ 251.821][v][cplayer] Compensation factor: 0.999358
[ 251.821][v][auto_profiles] Re-evaluating auto profile video-sync
[ 251.857][v][cplayer] Change display sync audio drift: 1
[ 251.857][v][auto_profiles] Re-evaluating auto profile video-sync
[ 259.214][d][vo/gpu-next/libplacebo] Garbage collected slab of size  996K from pool 3
[ 259.214][d][vo/gpu-next/libplacebo] Freeing slab of size  996K
[ 259.643][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 259.644][d][vo/gpu-next/libplacebo] Spent 0.699 ms allocating slab
[ 261.354][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 261.355][d][vo/gpu-next/libplacebo] Spent 0.663 ms allocating slab
[ 261.515][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 261.515][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 263.509][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 263.510][d][vo/gpu-next/libplacebo] Spent 0.855 ms allocating slab
[ 263.657][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[ 263.657][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[ 269.229][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 269.230][d][vo/gpu-next/libplacebo] Spent 0.653 ms allocating slab
[ 269.408][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 269.408][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 272.442][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 272.442][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 272.718][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 272.719][d][vo/gpu-next/libplacebo] Spent 0.841 ms allocating slab
[ 274.189][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 274.190][d][vo/gpu-next/libplacebo] Spent 0.651 ms allocating slab
[ 274.349][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 274.349][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 276.664][v][cplayer] Change display sync audio drift: 0
[ 276.664][v][cplayer] Compensation factor: 0.998959
[ 276.665][v][auto_profiles] Re-evaluating auto profile video-sync
[ 276.727][v][cplayer] Change display sync audio drift: 1
[ 276.728][v][auto_profiles] Re-evaluating auto profile video-sync
[ 277.326][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 277.326][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 277.983][v][vo/gpu-next/wayland] DND action is DND_APPEND
[ 277.983][v][vo/gpu-next/wayland] Given data offer with mime type text/plain
[ 277.983][v][vo/gpu-next/wayland] Given data offer with mime type text/plain;charset=utf-8
[ 277.987][v][vo/gpu-next/wayland] Read 9 bytes from the data offer fd
[ 277.987][d][cplayer] Run command: notify-property, flags=73, args=[property="clipboard"]
[ 279.740][v][cplayer] Change display sync audio drift: 0
[ 279.740][v][cplayer] Compensation factor: 1.003054
[ 279.741][v][auto_profiles] Re-evaluating auto profile video-sync
[ 284.940][v][cplayer] Change display sync audio drift: 1
[ 284.940][v][auto_profiles] Re-evaluating auto profile video-sync
[ 289.610][v][cplayer] Change display sync audio drift: 0
[ 289.610][v][cplayer] Compensation factor: 0.999993
[ 289.610][v][auto_profiles] Re-evaluating auto profile video-sync
[ 291.129][v][cplayer] Change display sync audio drift: -1
[ 291.129][v][auto_profiles] Re-evaluating auto profile video-sync
[ 291.711][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 291.712][d][vo/gpu-next/libplacebo] Spent 0.649 ms allocating slab
[ 293.901][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 293.901][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 294.311][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 294.312][d][vo/gpu-next/libplacebo] Spent 0.714 ms allocating slab
[ 296.071][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 296.071][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 296.214][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 296.215][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[ 300.015][d][auto_save_state] saving state
[ 300.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 300.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.015][i][cplayer] Saving state.
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 300.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 303.334][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 303.334][d][vo/gpu-next/libplacebo] Spent 0.627 ms allocating slab
[ 303.463][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 303.463][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 307.990][v][cplayer] Change display sync audio drift: 0
[ 307.990][v][cplayer] Compensation factor: 1.000016
[ 307.990][v][auto_profiles] Re-evaluating auto profile video-sync
[ 319.609][v][cplayer] Change display sync audio drift: -1
[ 319.609][v][auto_profiles] Re-evaluating auto profile video-sync
[ 335.769][v][cplayer] Change display sync audio drift: 0
[ 335.769][v][cplayer] Compensation factor: 1.000005
[ 335.770][v][auto_profiles] Re-evaluating auto profile video-sync
[ 343.370][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 343.370][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 347.411][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 347.411][d][vo/gpu-next/libplacebo] Spent 0.707 ms allocating slab
[ 349.840][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 349.840][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 350.012][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 350.013][d][vo/gpu-next/libplacebo] Spent 0.734 ms allocating slab
[ 352.888][v][cplayer] Change display sync audio drift: -1
[ 352.888][v][auto_profiles] Re-evaluating auto profile video-sync
[ 356.773][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 356.774][d][vo/gpu-next/libplacebo] Spent 0.940 ms allocating slab
[ 356.900][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 356.900][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 360.015][d][auto_save_state] saving state
[ 360.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 360.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.015][i][cplayer] Saving state.
[ 360.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 360.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 361.219][v][cplayer] Change display sync audio drift: 0
[ 361.219][v][cplayer] Compensation factor: 0.999995
[ 361.219][v][auto_profiles] Re-evaluating auto profile video-sync
[ 368.007][v][cplayer] Change display sync audio drift: -1
[ 368.008][v][auto_profiles] Re-evaluating auto profile video-sync
[ 369.920][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[ 369.920][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[ 370.789][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 370.789][d][vo/gpu-next/libplacebo] Spent 0.710 ms allocating slab
[ 372.389][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 372.389][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 372.492][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 372.493][d][vo/gpu-next/libplacebo] Spent 0.744 ms allocating slab
[ 376.248][v][cplayer] Change display sync audio drift: 0
[ 376.249][v][cplayer] Compensation factor: 0.999996
[ 376.249][v][auto_profiles] Re-evaluating auto profile video-sync
[ 378.850][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 378.850][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 379.530][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 379.530][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[ 381.831][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 381.832][d][vo/gpu-next/libplacebo] Spent 0.640 ms allocating slab
[ 381.950][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 381.951][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 386.450][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 386.450][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 387.361][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 387.362][d][vo/gpu-next/libplacebo] Spent 0.698 ms allocating slab
[ 392.220][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 392.220][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 392.759][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 392.760][d][vo/gpu-next/libplacebo] Spent 0.666 ms allocating slab
[ 397.796][d][cplayer] Run command: list, flags=0, args=[]
[ 397.796][d][cplayer] Run command: apply-profile, flags=73, args=[name="FSRCNNX+", mode="apply"]
[ 397.796][v][cplayer] Applying profile 'FSRCNNX+'...
[ 397.796][v][cplayer] Setting option 'glsl-shaders' = '~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl:~~/shaders/igv/KrigBilateral.glsl:~~/shaders/igv/SSimSuperRes.glsl:~~/shaders/igv/SSimDownscaler.glsl' (flags = 4)
[ 397.799][d][global] config path: 'shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl' -> '/home/zen/.config/mpv/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl'
[ 397.799][d][global] user path: '~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl' -> '/home/zen/.config/mpv/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl'
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: feature map 1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: feature map 2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: feature map 3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: feature map 4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 1_1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 1_2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 1_3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 1_4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 2_1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 2_2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 2_3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 2_4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 3_1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 3_2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 3_3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 3_4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 4_1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 4_2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 4_3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: mapping 4_4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: sub-band residuals 1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: sub-band residuals 2
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: sub-band residuals 3
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: sub-band residuals 4
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: sub-pixel convolution 1
[ 397.803][v][vo/gpu-next/libplacebo] Registering hook pass: aggregation
[ 397.803][d][vo/gpu-next/libplacebo] Loaded user shader:
[ 397.803][d][vo/gpu-next/libplacebo] [  1] //!HOOK LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [  2] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.803][d][vo/gpu-next/libplacebo] [  3] //!DESC feature map 1
[ 397.803][d][vo/gpu-next/libplacebo] [  4] //!BIND LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [  5] //!SAVE FEATURE1
[ 397.803][d][vo/gpu-next/libplacebo] [  6] //!COMPONENTS 4
[ 397.803][d][vo/gpu-next/libplacebo] [  7] vec4 hook()
[ 397.803][d][vo/gpu-next/libplacebo] [  8] {
[ 397.803][d][vo/gpu-next/libplacebo] [  9] vec4 res = vec4(0.0147628486156464,-0.1012328118085861,0.0125125292688608,-0.0872502326965332);
[ 397.803][d][vo/gpu-next/libplacebo] [ 10] res += vec4(0.0258867852389812,-0.0340782813727856,0.0420042425394058,0.0325760319828987) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 11] res += vec4(-0.0042444774881005,-0.0015453429659829,0.0189028624445200,-0.0475430712103844) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 12] res += vec4(0.0567907728254795,0.0873767733573914,0.0567022338509560,-0.0621563792228699) * float(LUMA_texOff(vec2(-2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 13] res += vec4(-0.0306649338454008,-0.0714163482189178,0.0473429188132286,0.1008332893252373) * float(LUMA_texOff(vec2(-2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 14] res += vec4(0.0152249755337834,0.0639158412814140,-0.0300818998366594,-0.0612861253321171) * float(LUMA_texOff(vec2(-2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 15] res += vec4(0.0408086255192757,0.0875807404518127,0.0317574664950371,0.1191576942801476) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 16] res += vec4(-0.1050408855080605,0.0589458979666233,0.0660466924309731,-0.0352053083479404) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 17] res += vec4(-0.3237755596637726,0.1804163157939911,-0.0379739888012409,0.1372951567173004) * float(LUMA_texOff(vec2(-1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 18] res += vec4(-0.0318203978240490,0.0038085589185357,-0.1028131842613220,0.0520160682499409) * float(LUMA_texOff(vec2(-1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 19] res += vec4(-0.0142179057002068,-0.0404687039554119,0.0323907770216465,0.0430089049041271) * float(LUMA_texOff(vec2(-1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 20] res += vec4(-0.0298593845218420,0.0694253444671631,0.0555122569203377,0.1005806028842926) * float(LUMA_texOff(vec2(0,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 21] res += vec4(-0.0350390858948231,-0.0044562439434230,-0.0801842734217644,0.2329425364732742) * float(LUMA_texOff(vec2(0,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 22] res += vec4(0.4449002444744110,0.1544224023818970,-0.1345878094434738,0.2600763738155365) * float(LUMA_texOff(vec2(0,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 23] res += vec4(-0.0495627783238888,-0.1202057301998138,0.3168737590312958,0.1082767471671104) * float(LUMA_texOff(vec2(0,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 24] res += vec4(-0.0142364865168929,-0.0569389946758747,-0.0300011597573757,-0.0413980036973953) * float(LUMA_texOff(vec2(0,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 25] res += vec4(-0.0005151761579327,-0.0952512174844742,-0.0208353623747826,0.0199232511222363) * float(LUMA_texOff(vec2(1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 26] res += vec4(0.0601653940975666,0.0493328794836998,-0.1787780970335007,-0.0561225190758705) * float(LUMA_texOff(vec2(1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 27] res += vec4(0.2522509992122650,-0.0372882746160030,0.0964855477213860,0.0540010221302509) * float(LUMA_texOff(vec2(1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 28] res += vec4(-0.1415692716836929,-0.0229692179709673,0.0637697577476501,-0.1182228699326515) * float(LUMA_texOff(vec2(1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 29] res += vec4(0.0687273889780045,-0.0198110770434141,-0.0516268573701382,0.0656097158789635) * float(LUMA_texOff(vec2(1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 30] res += vec4(-0.0328949801623821,0.0751283690333366,0.0083597749471664,0.0140956267714500) * float(LUMA_texOff(vec2(2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 31] res += vec4(0.0248807389289141,-0.0190096721053123,0.0093385083600879,-0.0304660033434629) * float(LUMA_texOff(vec2(2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 32] res += vec4(-0.1160471588373184,0.0223725475370884,-0.2164965867996216,-0.0070583499036729) * float(LUMA_texOff(vec2(2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 33] res += vec4(-0.0276862345635891,-0.0283980723470449,0.0453952662646770,0.0049119470641017) * float(LUMA_texOff(vec2(2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 34] res += vec4(-0.0414730980992317,0.0231062546372414,-0.0347512997686863,-0.0328228026628494) * float(LUMA_texOff(vec2(2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 35] return res;
[ 397.803][d][vo/gpu-next/libplacebo] [ 36] }
[ 397.803][d][vo/gpu-next/libplacebo] [ 37] 
[ 397.803][d][vo/gpu-next/libplacebo] [ 38] //!HOOK LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [ 39] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.803][d][vo/gpu-next/libplacebo] [ 40] //!DESC feature map 2
[ 397.803][d][vo/gpu-next/libplacebo] [ 41] //!BIND LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [ 42] //!SAVE FEATURE2
[ 397.803][d][vo/gpu-next/libplacebo] [ 43] //!COMPONENTS 4
[ 397.803][d][vo/gpu-next/libplacebo] [ 44] vec4 hook()
[ 397.803][d][vo/gpu-next/libplacebo] [ 45] {
[ 397.803][d][vo/gpu-next/libplacebo] [ 46] vec4 res = vec4(0.0029151507187635,-0.0613294094800949,0.0008914369973354,-0.0767232030630112);
[ 397.803][d][vo/gpu-next/libplacebo] [ 47] res += vec4(0.0135127231478691,-0.0165634769946337,0.0435598008334637,-0.0149057637900114) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 48] res += vec4(-0.0228847339749336,0.0010997278150171,0.0216255430132151,0.0310201775282621) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 49] res += vec4(0.0263330750167370,0.1414172500371933,0.0920841321349144,-0.0657699853181839) * float(LUMA_texOff(vec2(-2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 50] res += vec4(0.0158146508038044,-0.0184755995869637,0.0141742452979088,-0.0165870897471905) * float(LUMA_texOff(vec2(-2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 51] res += vec4(-0.0132065815851092,-0.0751400440931320,-0.0428155101835728,0.0052004638127983) * float(LUMA_texOff(vec2(-2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 52] res += vec4(0.0716190189123154,0.0045931492932141,0.0975653976202011,-0.0400408394634724) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 53] res += vec4(0.0715559795498848,0.1788620352745056,-0.1724022328853607,-0.0984080582857132) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 54] res += vec4(0.1811059415340424,0.0456536896526814,-0.1703828871250153,0.0498118251562119) * float(LUMA_texOff(vec2(-1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 55] res += vec4(-0.0097249904647470,0.0977436900138855,0.1316085010766983,-0.0342273637652397) * float(LUMA_texOff(vec2(-1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 56] res += vec4(0.0428396761417389,0.0155571792274714,-0.0170442368835211,0.0395168215036392) * float(LUMA_texOff(vec2(-1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 57] res += vec4(-0.1028733700513840,-0.0809405446052551,0.1166266947984695,-0.0673500820994377) * float(LUMA_texOff(vec2(0,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 58] res += vec4(0.0798736959695816,0.1202776357531548,0.0907938107848167,0.1063688993453979) * float(LUMA_texOff(vec2(0,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 59] res += vec4(-0.1435703784227371,0.2803598642349243,-0.3220657706260681,0.4127312004566193) * float(LUMA_texOff(vec2(0,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 60] res += vec4(0.0352024137973785,-0.0811312496662140,-0.1050737351179123,0.1529482305049896) * float(LUMA_texOff(vec2(0,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 61] res += vec4(-0.0548246912658215,-0.0066257156431675,-0.0384114645421505,0.0332037955522537) * float(LUMA_texOff(vec2(0,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 62] res += vec4(-0.0205884110182524,-0.1069750636816025,-0.0073009179905057,0.0592166967689991) * float(LUMA_texOff(vec2(1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 63] res += vec4(0.0253312829881907,0.0051871533505619,0.1640746146440506,0.0306565817445517) * float(LUMA_texOff(vec2(1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 64] res += vec4(0.0892853885889053,-0.1487601995468140,0.2865480482578278,0.2875403165817261) * float(LUMA_texOff(vec2(1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 65] res += vec4(-0.0835615247488022,-0.0581778027117252,-0.0550909973680973,0.1425815075635910) * float(LUMA_texOff(vec2(1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 66] res += vec4(0.0309277195483446,-0.0506685487926006,-0.0266683306545019,-0.0472095124423504) * float(LUMA_texOff(vec2(1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 67] res += vec4(-0.0409559160470963,0.0094648934900761,0.0351537279784679,-0.0076995193958282) * float(LUMA_texOff(vec2(2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 68] res += vec4(0.0409245006740093,0.1342664659023285,-0.1063540428876877,-0.0468707382678986) * float(LUMA_texOff(vec2(2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 69] res += vec4(-0.1835696250200272,-0.0999113172292709,-0.0240161959081888,0.0508222617208958) * float(LUMA_texOff(vec2(2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 70] res += vec4(0.0175041966140270,-0.0365947335958481,0.0317368693649769,0.0590598061680794) * float(LUMA_texOff(vec2(2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 71] res += vec4(-0.0800161138176918,-0.0124522168189287,-0.0041967704892159,0.0315603762865067) * float(LUMA_texOff(vec2(2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 72] return res;
[ 397.803][d][vo/gpu-next/libplacebo] [ 73] }
[ 397.803][d][vo/gpu-next/libplacebo] [ 74] 
[ 397.803][d][vo/gpu-next/libplacebo] [ 75] //!HOOK LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [ 76] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.803][d][vo/gpu-next/libplacebo] [ 77] //!DESC feature map 3
[ 397.803][d][vo/gpu-next/libplacebo] [ 78] //!BIND LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [ 79] //!SAVE FEATURE3
[ 397.803][d][vo/gpu-next/libplacebo] [ 80] //!COMPONENTS 4
[ 397.803][d][vo/gpu-next/libplacebo] [ 81] vec4 hook()
[ 397.803][d][vo/gpu-next/libplacebo] [ 82] {
[ 397.803][d][vo/gpu-next/libplacebo] [ 83] vec4 res = vec4(-0.1264328211545944,-0.0279394891113043,-0.0064888978376985,0.0420002378523350);
[ 397.803][d][vo/gpu-next/libplacebo] [ 84] res += vec4(-0.0131980935111642,0.0266927909106016,0.0695492923259735,-0.0063398526981473) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 85] res += vec4(0.0159970503300428,0.0148094780743122,0.0719174891710281,0.0041566533036530) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 86] res += vec4(0.0399939678609371,0.0506784133613110,0.0477518960833549,-0.0844549685716629) * float(LUMA_texOff(vec2(-2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 87] res += vec4(-0.0162003915756941,0.0667246878147125,0.0661090239882469,0.0736296772956848) * float(LUMA_texOff(vec2(-2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 88] res += vec4(0.0187468398362398,0.0019713738001883,0.0874735563993454,-0.0255339350551367) * float(LUMA_texOff(vec2(-2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 89] res += vec4(-0.0850194543600082,0.0163485687226057,-0.1212844401597977,-0.0479937046766281) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 90] res += vec4(0.0732808113098145,-0.0097687849774957,0.0417790748178959,0.0896924287080765) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 91] res += vec4(0.1258524060249329,-0.3104827105998993,-0.0218985043466091,0.1121514812111855) * float(LUMA_texOff(vec2(-1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 92] res += vec4(0.0074320179410279,-0.0256812535226345,0.0645651295781136,-0.1755836457014084) * float(LUMA_texOff(vec2(-1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 93] res += vec4(-0.0393245257437229,-0.0383107811212540,0.1041718125343323,0.0366581790149212) * float(LUMA_texOff(vec2(-1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 94] res += vec4(0.0145607199519873,0.0456735864281654,-0.1359732300043106,0.0837914943695068) * float(LUMA_texOff(vec2(0,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 95] res += vec4(-0.0148519007489085,-0.0929340571165085,0.0423509478569031,0.2566445469856262) * float(LUMA_texOff(vec2(0,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 96] res += vec4(0.1964939236640930,0.3518604338169098,-0.0973007753491402,0.1974137276411057) * float(LUMA_texOff(vec2(0,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 97] res += vec4(0.1888202577829361,0.2577683329582214,-0.1013639196753502,-0.2581922709941864) * float(LUMA_texOff(vec2(0,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 98] res += vec4(0.0241410620510578,-0.0072364830411971,0.0341953933238983,0.0454998016357422) * float(LUMA_texOff(vec2(0,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [ 99] res += vec4(-0.0374109223484993,-0.0471867136657238,0.0710652917623520,0.0134411044418812) * float(LUMA_texOff(vec2(1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [100] res += vec4(0.1920984536409378,-0.0478645265102386,-0.0647146105766296,0.0222374666482210) * float(LUMA_texOff(vec2(1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [101] res += vec4(0.0602415762841702,-0.0288685746490955,0.0075958576053381,-0.2160810977220535) * float(LUMA_texOff(vec2(1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [102] res += vec4(0.0850555971264839,-0.0782011076807976,-0.0114041855558753,-0.1209100186824799) * float(LUMA_texOff(vec2(1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [103] res += vec4(-0.0049744024872780,-0.0065365592017770,-0.0089643299579620,-0.0742740705609322) * float(LUMA_texOff(vec2(1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [104] res += vec4(-0.0137028237804770,0.0186147168278694,-0.0370406880974770,0.0295204035937786) * float(LUMA_texOff(vec2(2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [105] res += vec4(-0.0895456820726395,-0.0375148542225361,-0.0313744619488716,-0.1119082570075989) * float(LUMA_texOff(vec2(2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [106] res += vec4(0.0242840964347124,-0.0231526307761669,-0.0532953739166260,0.0544772148132324) * float(LUMA_texOff(vec2(2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [107] res += vec4(-0.0712804645299911,-0.0538538359105587,-0.0336124263703823,-0.0369212552905083) * float(LUMA_texOff(vec2(2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [108] res += vec4(-0.0017276481958106,0.0138095710426569,0.0136405434459448,0.0244382321834564) * float(LUMA_texOff(vec2(2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [109] return res;
[ 397.803][d][vo/gpu-next/libplacebo] [110] }
[ 397.803][d][vo/gpu-next/libplacebo] [111] 
[ 397.803][d][vo/gpu-next/libplacebo] [112] //!HOOK LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [113] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.803][d][vo/gpu-next/libplacebo] [114] //!DESC feature map 4
[ 397.803][d][vo/gpu-next/libplacebo] [115] //!BIND LUMA
[ 397.803][d][vo/gpu-next/libplacebo] [116] //!SAVE FEATURE4
[ 397.803][d][vo/gpu-next/libplacebo] [117] //!COMPONENTS 4
[ 397.803][d][vo/gpu-next/libplacebo] [118] vec4 hook()
[ 397.803][d][vo/gpu-next/libplacebo] [119] {
[ 397.803][d][vo/gpu-next/libplacebo] [120] vec4 res = vec4(0.0070585198700428,0.0109722968190908,-0.0186138395220041,-0.0247610080987215);
[ 397.803][d][vo/gpu-next/libplacebo] [121] res += vec4(-0.0427159443497658,0.0345138609409332,-0.0043228855356574,0.0263762231916189) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [122] res += vec4(-0.0215423200279474,-0.0201900992542505,-0.0263530425727367,-0.0075583830475807) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [123] res += vec4(-0.0208488702774048,-0.0263796150684357,0.0048027029260993,-0.0180702358484268) * float(LUMA_texOff(vec2(-2,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [124] res += vec4(-0.0033123074099422,-0.0459871888160706,0.0074687330052257,-0.0531630516052246) * float(LUMA_texOff(vec2(-2,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [125] res += vec4(0.0712261721491814,0.0599316917359829,-0.0117431124672294,-0.0091551328077912) * float(LUMA_texOff(vec2(-2,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [126] res += vec4(0.1062309294939041,0.0316648185253143,0.0022315878886729,-0.0494135320186615) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [127] res += vec4(0.0869664698839188,-0.0889192670583725,-0.0302817411720753,0.0871973037719727) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [128] res += vec4(-0.1390235275030136,0.0109816743060946,0.1826847791671753,0.0588588342070580) * float(LUMA_texOff(vec2(-1,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [129] res += vec4(-0.0808288902044296,-0.0446107201278210,0.0685509145259857,0.1322640776634216) * float(LUMA_texOff(vec2(-1,1)));
[ 397.803][d][vo/gpu-next/libplacebo] [130] res += vec4(-0.0431778207421303,-0.0715203061699867,0.0272494368255138,-0.0406388416886330) * float(LUMA_texOff(vec2(-1,2)));
[ 397.803][d][vo/gpu-next/libplacebo] [131] res += vec4(-0.1043576672673225,0.0435773134231567,-0.0156023483723402,0.0003633489250205) * float(LUMA_texOff(vec2(0,-2)));
[ 397.803][d][vo/gpu-next/libplacebo] [132] res += vec4(0.3914019167423248,0.1128338500857353,-0.3622477650642395,-0.2134702056646347) * float(LUMA_texOff(vec2(0,-1)));
[ 397.803][d][vo/gpu-next/libplacebo] [133] res += vec4(-0.2566887140274048,0.4643316566944122,0.4298384189605713,0.2023355811834335) * float(LUMA_texOff(vec2(0,0)));
[ 397.803][d][vo/gpu-next/libplacebo] [134] res += vec4(-0.0870738476514816,-0.2335397005081177,-0.0682953223586082,0.1927117854356766) * float(LUMA_texOff(vec2(0,1)));
[ 397.804][d][vo/gpu-next/libplacebo] [135] res += vec4(0.1308144330978394,0.0925729721784592,0.0465335994958878,-0.1193709373474121) * float(LUMA_texOff(vec2(0,2)));
[ 397.804][d][vo/gpu-next/libplacebo] [136] res += vec4(-0.0574972666800022,-0.0618521086871624,0.0282293409109116,0.0364051461219788) * float(LUMA_texOff(vec2(1,-2)));
[ 397.804][d][vo/gpu-next/libplacebo] [137] res += vec4(0.0559999272227287,-0.1199548989534378,0.0019089960260317,0.0112631628289819) * float(LUMA_texOff(vec2(1,-1)));
[ 397.804][d][vo/gpu-next/libplacebo] [138] res += vec4(0.0438338480889797,-0.0732697844505310,-0.2594016492366791,-0.0785673633217812) * float(LUMA_texOff(vec2(1,0)));
[ 397.804][d][vo/gpu-next/libplacebo] [139] res += vec4(-0.0346798598766327,-0.1528525501489639,0.1528349220752716,-0.1032024696469307) * float(LUMA_texOff(vec2(1,1)));
[ 397.804][d][vo/gpu-next/libplacebo] [140] res += vec4(0.0561404302716255,0.0303718857467175,-0.0542364232242107,0.0132365953177214) * float(LUMA_texOff(vec2(1,2)));
[ 397.804][d][vo/gpu-next/libplacebo] [141] res += vec4(-0.0114848464727402,0.0516396202147007,-0.0230368301272392,-0.0116722676903009) * float(LUMA_texOff(vec2(2,-2)));
[ 397.804][d][vo/gpu-next/libplacebo] [142] res += vec4(0.0216846000403166,-0.0487921759486198,-0.0266283787786961,-0.0552150383591652) * float(LUMA_texOff(vec2(2,-1)));
[ 397.804][d][vo/gpu-next/libplacebo] [143] res += vec4(-0.1205942556262016,0.0671967938542366,-0.0458866842091084,0.0994790792465210) * float(LUMA_texOff(vec2(2,0)));
[ 397.804][d][vo/gpu-next/libplacebo] [144] res += vec4(-0.0450517013669014,-0.0236119553446770,-0.0031007658690214,0.0068094953894615) * float(LUMA_texOff(vec2(2,1)));
[ 397.804][d][vo/gpu-next/libplacebo] [145] res += vec4(0.0447798296809196,0.0324511975049973,0.0374569594860077,-0.0123012084513903) * float(LUMA_texOff(vec2(2,2)));
[ 397.804][d][vo/gpu-next/libplacebo] [146] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [147] }
[ 397.804][d][vo/gpu-next/libplacebo] [148] 
[ 397.804][d][vo/gpu-next/libplacebo] [149] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [150] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [151] //!DESC mapping 1_1
[ 397.804][d][vo/gpu-next/libplacebo] [152] //!BIND FEATURE1
[ 397.804][d][vo/gpu-next/libplacebo] [153] //!BIND FEATURE2
[ 397.804][d][vo/gpu-next/libplacebo] [154] //!BIND FEATURE3
[ 397.804][d][vo/gpu-next/libplacebo] [155] //!BIND FEATURE4
[ 397.804][d][vo/gpu-next/libplacebo] [156] //!SAVE MODEL21
[ 397.804][d][vo/gpu-next/libplacebo] [157] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [158] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [159] {
[ 397.804][d][vo/gpu-next/libplacebo] [160] vec4 res = vec4(0.0538579821586609,0.0207305960357189,0.0254634171724319,0.0153640825301409);
[ 397.804][d][vo/gpu-next/libplacebo] [161] res += mat4(0.0942513421177864,0.0891742855310440,0.1703276932239532,0.0523716993629932,0.1674145758152008,-0.0544738620519638,-0.1198973059654236,-0.0423433668911457,0.0515154302120209,-0.0596617907285690,0.2768746614456177,0.3570924103260040,-0.2002887129783630,-0.1301720142364502,0.1128292605280876,0.0972013026475906) * FEATURE1_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [162] res += mat4(0.0506789609789848,0.2283374667167664,0.3002701997756958,0.0719720944762230,0.2141722440719604,-0.1343615055084229,0.1546344310045242,0.0621918700635433,-0.0544323623180389,-0.0221508406102657,0.4773038625717163,-0.0141492532566190,-0.0967316552996635,0.0168843884021044,0.0570617616176605,-0.1742728203535080) * FEATURE2_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [163] res += mat4(0.1996528208255768,0.0715565979480743,-0.0198881570249796,-0.2097080498933792,0.1386303305625916,-0.0629681572318077,-0.0573015734553337,0.1730632334947586,-0.0319919139146805,0.0613489709794521,0.0009632866713218,0.0963142737746239,0.0922120437026024,-0.1362144947052002,-0.1248387992382050,-0.0438973791897297) * FEATURE3_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [164] res += mat4(0.0729181915521622,-0.0412426479160786,-0.0903936550021172,-0.0877909436821938,-0.0501929707825184,-0.1361309438943863,-0.1435612738132477,-0.3544941246509552,0.1188186258077621,0.0854843929409981,-0.1572271734476089,0.1614757478237152,-0.0394551232457161,0.0561030209064484,0.1981999427080154,0.1012751534581184) * FEATURE4_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [165] res += mat4(-0.1364078372716904,-0.0915576890110970,0.0312875770032406,-0.0373064279556274,-0.1864551603794098,0.1270632743835449,0.0160129573196173,-0.2269953936338425,-0.1248846203088760,0.0047860695049167,0.1067357808351517,0.0389528647065163,0.0046090064570308,0.1194815561175346,0.0107140550389886,0.1202540248632431) * FEATURE1_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [166] res += mat4(0.0601032748818398,-0.2038935124874115,0.3221660852432251,0.1911306679248810,0.1072739660739899,0.0386378541588783,-0.2028579860925674,-0.1244315281510353,-0.0588039867579937,0.1519959121942520,0.1538249552249908,0.3218008279800415,-0.0203690603375435,-0.0309583507478237,-0.0803360491991043,0.1190733462572098) * FEATURE2_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [167] res += mat4(-0.1834098100662231,-0.1000090688467026,0.0111735267564654,0.0360066965222359,-0.3350115418434143,0.1023564040660858,0.0298401378095150,0.1608188599348068,0.1666297018527985,-0.0028937852475792,0.2172369807958603,-0.1244791150093079,-0.1523841619491577,0.1347199827432632,-0.1450833082199097,-0.0060648908838630) * FEATURE3_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [168] res += mat4(0.0420283265411854,-0.1068769097328186,0.4277499914169312,-0.0138771189376712,-0.1625174582004547,0.1436374485492706,-0.0571523755788803,-0.0274514369666576,-0.0590669140219688,-0.0235943235456944,0.0200154744088650,-0.0343827977776527,-0.0585989430546761,-0.0086731221526861,-0.0286329183727503,0.0404300950467587) * FEATURE4_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [169] res += mat4(0.0019283422734588,0.2278475612401962,-0.0184804853051901,0.0763652250170708,0.0055652162991464,-0.0678962543606758,-0.0727402940392494,-0.0088435094803572,0.1559262871742249,-0.0718241333961487,-0.3270556628704071,-0.0119281299412251,-0.1585037857294083,-0.0271203480660915,-0.1241048276424408,-0.1096233353018761) * FEATURE1_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [170] res += mat4(0.1743012368679047,-0.1782766282558441,0.0913587436079979,-0.0247910134494305,0.1648189425468445,0.0423905961215496,-0.0372997410595417,-0.0980355441570282,-0.0360249131917953,0.1658414900302887,-0.1740437895059586,0.0990202873945236,0.0902439951896667,-0.0230961311608553,-0.2429363280534744,-0.0633871406316757) * FEATURE2_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [171] res += mat4(-0.0990383774042130,-0.0565105788409710,0.2761702835559845,0.0871174111962318,0.0381780490279198,-0.0729763880372047,0.1674342453479767,0.0289874579757452,0.0117457192391157,0.1226039305329323,0.1880341768264771,0.1736565828323364,0.1634613424539566,-0.2213666588068008,-0.0251860022544861,0.0209391023963690) * FEATURE3_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [172] res += mat4(-0.0247564055025578,0.0445051491260529,0.1454031318426132,0.1105114370584488,-0.0754487141966820,-0.1011193692684174,-0.1713480800390244,-0.0486282519996166,0.1028212979435921,-0.0380472168326378,0.1385174542665482,0.2016232162714005,-0.0913221612572670,0.1636791229248047,-0.0015221120556816,0.1394934058189392) * FEATURE4_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [173] res += mat4(-0.2109110355377197,-0.0351128168404102,0.1712934076786041,-0.1123685985803604,-0.0729602649807930,0.1665348112583160,0.2296800017356873,0.1969782263040543,0.1243449077010155,-0.0277454610913992,-0.0713174566626549,-0.2141246795654297,-0.0153689784929156,0.1890520006418228,-0.1286026239395142,0.0219256319105625) * FEATURE1_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [174] res += mat4(-0.0438295155763626,-0.1626479178667068,-0.1232330128550529,-0.1845719069242477,-0.1844127029180527,0.0464013330638409,0.3269801437854767,0.0413873605430126,-0.0631050467491150,-0.0446006916463375,-0.1060080379247665,-0.0166274104267359,-0.0650791078805923,-0.2335784137248993,-0.1026779189705849,0.0378167182207108) * FEATURE2_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [175] res += mat4(-0.1554500162601471,-0.1754475533962250,-0.0552926026284695,-0.0490237846970558,-0.0015100783202797,-0.0955125093460083,0.0477011203765869,-0.3376740217208862,0.0374519377946854,-0.0852863043546677,-0.0375335887074471,-0.1743462830781937,-0.1896701306104660,-0.0357031226158142,0.3129993081092834,0.1430367380380630) * FEATURE3_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [176] res += mat4(-0.0428619198501110,-0.2211611419916153,-0.0617481805384159,-0.0345504581928253,-0.1697518676519394,-0.1951408386230469,0.1325777322053909,0.2924070656299591,-0.2159555554389954,0.1970866918563843,0.1946451216936111,-0.0279270336031914,-0.1987766176462173,0.0403713621199131,0.3247581720352173,-0.2781505882740021) * FEATURE4_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [177] res += mat4(0.4459752738475800,-0.2120098024606705,-0.3578203022480011,-0.2277844101190567,0.0322797335684299,0.0300148930400610,-0.2169913798570633,-0.0314500071108341,-0.1224590241909027,0.2108448296785355,-0.0568907819688320,0.3598763644695282,0.0357060506939888,-0.0424680560827255,-0.1881009638309479,0.1019125133752823) * FEATURE1_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [178] res += mat4(-0.1538701802492142,0.4115009307861328,-0.2816752493381500,0.1506592929363251,-0.0253271460533142,-0.0399473570287228,-0.0093031516298652,-0.4269565343856812,-0.2753987312316895,0.1565917879343033,-0.0441544651985168,0.3552229702472687,0.3185600638389587,0.0603101029992104,-0.2451339662075043,-0.2411369383335114) * FEATURE2_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [179] res += mat4(0.1958894580602646,-0.2673653364181519,-0.1395241618156433,0.1446722447872162,0.5314681529998779,0.0796354189515114,-0.1473572105169296,-0.2334580719470978,-0.0118259964510798,-0.0133179081603885,0.1444961130619049,-0.0981970056891441,-0.4798493385314941,-0.0918875485658646,0.1868294477462769,-0.2451380342245102) * FEATURE3_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [180] res += mat4(-0.0867395997047424,0.0342525728046894,0.1998478621244431,0.1943975389003754,0.3717151880264282,-0.1969631165266037,-0.0676675811409950,-0.2403614819049835,0.1548621505498886,-0.1033347174525261,0.2075791805982590,-0.7434594631195068,0.1297969818115234,-0.3071094155311584,-0.2551306188106537,-0.1033857911825180) * FEATURE4_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [181] res += mat4(0.1910413950681686,-0.0454304032027721,-0.2005550116300583,0.2301318347454071,-0.1277633160352707,0.2670663893222809,-0.1828060597181320,0.1923152506351471,-0.0639155209064484,0.0946919098496437,0.1297533214092255,-0.0114321000874043,-0.0732707604765892,-0.0450826175510883,-0.0549302212893963,0.1134130135178566) * FEATURE1_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [182] res += mat4(-0.1371006667613983,-0.0017097343225032,0.0003772592754103,0.1115825846791267,0.0546416267752647,-0.0000054702604757,0.2462200671434402,-0.1137474253773689,0.1809550523757935,0.0758358314633369,-0.5332003831863403,0.3873719871044159,0.0272153057157993,-0.2072244733572006,0.1103228032588959,0.0409625619649887) * FEATURE2_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [183] res += mat4(0.1801925897598267,0.1230550035834312,-0.1961367875337601,0.1255238950252533,-0.0885850787162781,-0.0268044397234917,0.2343062460422516,-0.0446412861347198,-0.0571067556738853,0.0261972416192293,0.2480108886957169,-0.1201685294508934,-0.0412609651684761,0.1934995651245117,0.1661445647478104,0.2297777235507965) * FEATURE3_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [184] res += mat4(0.1018679812550545,0.0478270761668682,0.1306073367595673,0.3471642732620239,0.0682028234004974,0.0713321119546890,0.1219814047217369,0.1942566037178040,-0.1766284108161926,0.0594538077712059,0.2545968890190125,0.0807048305869102,0.0677410215139389,-0.0419276766479015,0.0102333007380366,0.1901416778564453) * FEATURE4_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [185] res += mat4(-0.1422130912542343,-0.0209633577615023,0.1563519537448883,0.0638999491930008,-0.0353768132627010,-0.0458791069686413,-0.0035924366675317,0.2189119011163712,-0.0782971233129501,0.1802898645401001,-0.3779482841491699,0.0555818416178226,-0.2072600871324539,0.1333364993333817,-0.0317861549556255,0.0318425223231316) * FEATURE1_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [186] res += mat4(-0.0286058560013771,0.1659249514341354,0.0012943913461640,0.0499969981610775,0.1422614604234695,0.0672997236251831,0.1053121238946915,0.0241394750773907,-0.0267950072884560,-0.2408446371555328,0.0689387544989586,-0.0353503115475178,-0.1775945425033569,0.0234226547181606,0.0756977722048759,0.0147098181769252) * FEATURE2_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [187] res += mat4(-0.0543244630098343,0.1917871087789536,0.0193976480513811,-0.0431259982287884,-0.2033711969852448,0.0477821268141270,0.0067753521725535,-0.0682270526885986,0.1969993859529495,-0.0750918835401535,-0.2594552636146545,-0.1375313699245453,-0.0077267014421523,0.1274733394384384,0.0865155607461929,0.0472486987709999) * FEATURE3_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [188] res += mat4(0.0638304129242897,-0.0325457416474819,-0.1572882980108261,-0.0546916499733925,0.0232818126678467,-0.0714884400367737,0.1627114564180374,-0.0557239502668381,0.0209975223988295,-0.0187117625027895,0.3106088042259216,-0.0053044236265123,0.1987716555595398,-0.0953556299209595,0.2629529833793640,-0.0071331881918013) * FEATURE4_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [189] res += mat4(-0.0421246476471424,0.2592750489711761,-0.0927281454205513,0.3078538775444031,0.2100289762020111,-0.0642854720354080,-0.0921883061528206,0.0326341763138771,-0.2644840776920319,0.1774180531501770,-0.1196464598178864,-0.4229507744312286,0.2510976195335388,0.0372096374630928,-0.2537170350551605,0.2260684221982956) * FEATURE1_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [190] res += mat4(0.0206921920180321,-0.2198302298784256,-0.0701930820941925,-0.3230668008327484,-0.0217957627028227,0.1357497274875641,0.2323972135782242,-0.0309077259153128,-0.0590932071208954,-0.1639022678136826,-0.1563350111246109,-0.1444355696439743,0.0613540187478065,0.0601835064589977,-0.0287189222872257,-0.0357198491692543) * FEATURE2_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [191] res += mat4(-0.0020270729437470,0.1621738374233246,0.0399310030043125,-0.0438883267343044,-0.0824203342199326,0.0099390773102641,-0.4241760969161987,0.1165389567613602,-0.1991093158721924,-0.1385766267776489,-0.3597168028354645,-0.2093434631824493,0.0716988667845726,0.0764024257659912,0.1949614137411118,-0.0398958511650562) * FEATURE3_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [192] res += mat4(-0.1486600339412689,-0.4024447798728943,0.1636409163475037,-0.0883854106068611,0.1269216090440750,0.2130152583122253,0.0226612426340580,0.0302033293992281,0.2051880210638046,-0.0517359860241413,0.1467522382736206,0.0957927107810974,0.0443594977259636,0.1177708283066750,0.0564442165195942,0.3151275515556335) * FEATURE4_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [193] res += mat4(-0.2304142415523529,-0.0719510838389397,-0.0675006136298180,-0.3363347947597504,-0.1184817776083946,-0.1126850321888924,0.1518510878086090,-0.0257060509175062,0.0532785877585411,-0.0668446049094200,-0.0280778128653765,0.1538693457841873,-0.0306744184345007,0.2549984455108643,-0.1447070389986038,-0.0391077250242233) * FEATURE1_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [194] res += mat4(0.0575510375201702,0.2173524498939514,-0.0927070975303650,-0.1615140885114670,0.0490588247776031,0.0307105164974928,-0.1662461310625076,0.0981267020106316,0.0214565992355347,0.0494793355464935,-0.1530900448560715,-0.2056774795055389,-0.0225916951894760,0.0415866039693356,-0.0117064453661442,-0.0291576590389013) * FEATURE2_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [195] res += mat4(0.0177033450454473,-0.1274748295545578,0.1430204361677170,-0.1192419081926346,-0.0703871473670006,-0.0706785991787910,0.2976159155368805,0.0470926500856876,-0.0072712986730039,0.1795812845230103,-0.0024556454736739,0.0982688292860985,-0.1377155184745789,-0.0327612347900867,-0.0722481608390808,-0.0682997331023216) * FEATURE3_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [196] res += mat4(-0.2610870897769928,0.1586860567331314,-0.0943611562252045,0.0243455953896046,-0.1236873045563698,0.1264219880104065,-0.1729681342840195,-0.2474125772714615,0.0177616085857153,-0.0425097197294235,0.1647205352783203,-0.2539803087711334,-0.1173504814505577,-0.0786687880754471,-0.0249674320220947,0.0602308809757233) * FEATURE4_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [197] res = max(res, vec4(0.0)) + vec4(0.4589389860630035,-0.0171027909964323,0.1109997034072876,0.7046035528182983) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [198] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [199] }
[ 397.804][d][vo/gpu-next/libplacebo] [200] 
[ 397.804][d][vo/gpu-next/libplacebo] [201] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [202] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [203] //!DESC mapping 1_2
[ 397.804][d][vo/gpu-next/libplacebo] [204] //!BIND FEATURE1
[ 397.804][d][vo/gpu-next/libplacebo] [205] //!BIND FEATURE2
[ 397.804][d][vo/gpu-next/libplacebo] [206] //!BIND FEATURE3
[ 397.804][d][vo/gpu-next/libplacebo] [207] //!BIND FEATURE4
[ 397.804][d][vo/gpu-next/libplacebo] [208] //!SAVE MODEL22
[ 397.804][d][vo/gpu-next/libplacebo] [209] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [210] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [211] {
[ 397.804][d][vo/gpu-next/libplacebo] [212] vec4 res = vec4(0.0050486661493778,-0.0228962972760201,-0.0334742926061153,-0.0749474465847015);
[ 397.804][d][vo/gpu-next/libplacebo] [213] res += mat4(-0.0636506080627441,0.0414536744356155,-0.0601340085268021,-0.1492895781993866,0.0266887508332729,0.1290355175733566,-0.1096160188317299,-0.0060973335057497,-0.1082219034433365,-0.2484298050403595,-0.0492997542023659,-0.1507269591093063,-0.0063208816573024,0.0278978366404772,0.0559392459690571,-0.0855900421738625) * FEATURE1_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [214] res += mat4(-0.0479767583310604,-0.1680374741554260,-0.0433681309223175,0.0709083005785942,-0.2127597928047180,0.0669720545411110,-0.0468601882457733,0.0844738036394119,0.0361499190330505,0.2795697748661041,-0.0900071188807487,0.0771756023168564,-0.0945145860314369,0.0329340286552906,-0.1299255639314651,-0.0251025389879942) * FEATURE2_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [215] res += mat4(0.1168580055236816,-0.1255342066287994,-0.0880676284432411,0.1660774797201157,-0.2297494858503342,0.0064496542327106,-0.0535941347479820,-0.2143118381500244,0.2292995154857635,0.1740189641714096,0.0004259505367372,-0.0690135732293129,0.1331175416707993,0.1003144457936287,-0.0844909623265266,0.0122939394786954) * FEATURE3_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [216] res += mat4(0.1027175262570381,-0.0609552152454853,0.0520542748272419,0.0642495974898338,0.1000228375196457,-0.1185205951333046,-0.0579122789204121,-0.1555659025907516,-0.0605787895619869,-0.2131439894437790,0.1039092391729355,0.2101044952869415,0.1405750513076782,0.0517179183661938,0.0021876082755625,-0.3164139688014984) * FEATURE4_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [217] res += mat4(0.2074049115180969,-0.0506212897598743,0.1249784007668495,0.1202733814716339,-0.0585046447813511,-0.1000120416283607,0.1991082876920700,-0.1943191587924957,-0.1808652281761169,0.0442306883633137,-0.1876850426197052,-0.0544150769710541,-0.0482590310275555,-0.1091798990964890,-0.1555807590484619,0.0641228109598160) * FEATURE1_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [218] res += mat4(-0.0516644716262817,0.2187380641698837,0.1580324769020081,-0.0298149734735489,0.1568845361471176,-0.0694709494709969,-0.0156475324183702,-0.1467818617820740,-0.3323013186454773,-0.1269628554582596,0.1774071902036667,0.0703119486570358,0.1119378954172134,0.0026767798699439,-0.0007590121240355,-0.0759204849600792) * FEATURE2_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [219] res += mat4(0.1218863129615784,-0.0142991924658418,-0.1754228770732880,0.1960164606571198,0.3764416575431824,-0.0640086159110069,-0.1760962009429932,0.2673647105693817,-0.3611862659454346,0.0912636891007423,-0.0847290754318237,-0.0417214743793011,-0.0578436329960823,-0.0263695251196623,-0.1327239871025085,-0.3475520014762878) * FEATURE3_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [220] res += mat4(-0.2874909341335297,-0.0407578013837337,0.0599964335560799,-0.2408095449209213,-0.2017816752195358,-0.2848342955112457,-0.0796688795089722,-0.0723477452993393,0.1366535574197769,0.0102123394608498,-0.1985246092081070,0.1587944626808167,0.2955283522605896,0.0750069320201874,0.0187748130410910,0.1516282111406326) * FEATURE4_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [221] res += mat4(0.1594368070363998,-0.1468944847583771,0.0471258424222469,-0.0241045635193586,-0.0501801446080208,0.0218925625085831,0.0225021727383137,-0.0979235544800758,0.1620006114244461,0.1432553678750992,-0.1368250846862793,-0.1964376866817474,-0.0230209566652775,-0.0552996881306171,-0.1095163747668266,-0.1232675686478615) * FEATURE1_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [222] res += mat4(0.2003141194581985,0.0201547835022211,0.0051529011689126,-0.0014524413272738,0.0695162415504456,-0.0560750104486942,0.1347300708293915,0.1203261390328407,-0.2232214659452438,-0.0777770578861237,-0.1109718605875969,-0.0036153327673674,-0.1624626517295837,-0.1004763543605804,0.0409551188349724,-0.0183079633861780) * FEATURE2_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [223] res += mat4(-0.0283994600176811,0.0475098155438900,-0.0393812768161297,0.0898945406079292,-0.2062479108572006,-0.0960468500852585,0.0813136026263237,-0.0469682477414608,0.1563576310873032,-0.0207612141966820,0.0042922985740006,0.2140935212373734,-0.1559178084135056,0.0017188332276419,-0.1165986284613609,0.0095806019380689) * FEATURE3_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [224] res += mat4(-0.0255314018577337,0.0053132837638259,-0.2335292100906372,0.1714269518852234,0.1378968954086304,-0.0134489014744759,-0.0610948204994202,-0.2788822054862976,0.3191868662834167,0.1429490745067596,0.1573762744665146,-0.0905571207404137,-0.2665251791477203,-0.0549174770712852,-0.0497622266411781,0.0014125620946288) * FEATURE4_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [225] res += mat4(0.2041343450546265,-0.0793451294302940,-0.1584397703409195,0.0189015548676252,0.0841031521558762,-0.0510663576424122,0.0782111138105392,-0.1774760782718658,0.1344453990459442,0.1194181516766548,0.0633851066231728,-0.1575935482978821,0.1386636048555374,-0.0103090191259980,0.1229354143142700,0.0644944533705711) * FEATURE1_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [226] res += mat4(-0.4877364337444305,0.2027113735675812,-0.1288372576236725,-0.1133702546358109,0.0907325148582458,-0.0902310758829117,-0.0123172188177705,0.0125291664153337,-0.1056642383337021,-0.1495229005813599,0.1867364346981049,-0.0354580022394657,0.0589499361813068,0.1484927982091904,0.0824608951807022,0.0011405796976760) * FEATURE2_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [227] res += mat4(-0.1545341163873672,-0.0932014808058739,-0.1113527715206146,-0.0319784991443157,0.0242115519940853,-0.1953306794166565,0.1512601375579834,0.0399545468389988,-0.1712766140699387,-0.1649830639362335,-0.1137973442673683,0.2562557160854340,0.4170604944229126,0.0485921874642372,0.0115369297564030,0.0471604056656361) * FEATURE3_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [228] res += mat4(-0.0174177736043930,-0.0868183523416519,-0.1611233651638031,-0.1155694723129272,0.0565580539405346,-0.4630706608295441,0.0683171078562737,-0.0496649593114853,0.2282834798097610,-0.1620554924011230,0.0733736976981163,-0.2501778006553650,0.0369014106690884,0.0956562161445618,-0.1545992940664291,0.0942374169826508) * FEATURE4_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [229] res += mat4(-0.0288630966097116,0.2024775445461273,0.2231666445732117,0.1415414363145828,-0.2260987460613251,0.1266845762729645,-0.0103499302640557,0.1321901828050613,-0.0433016680181026,0.0710583105683327,-0.4118835628032684,-0.1507381796836853,-0.0908712670207024,0.0622761659324169,0.2384989708662033,0.0809374526143074) * FEATURE1_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [230] res += mat4(0.3266247510910034,-0.0178601127117872,-0.2003595679998398,0.1144727766513824,0.0626943558454514,0.2073500007390976,0.2080030590295792,0.0128668304532766,0.7344420552253723,-0.1793971508741379,0.0798397064208984,-0.4412221014499664,0.0407845303416252,0.1131422445178032,0.2934736609458923,0.0625335574150085) * FEATURE2_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [231] res += mat4(0.0319333635270596,0.1737762838602066,0.1869451403617859,0.1409240961074829,-0.1438102424144745,0.3691526055335999,-0.1304105222225189,0.2626801431179047,0.1752091795206070,-0.0515829734504223,-0.0831976905465126,0.0601379945874214,-0.2747399508953094,0.1969172060489655,0.3182463347911835,-0.0077942823991179) * FEATURE3_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [232] res += mat4(0.4369443356990814,-0.2348733842372894,0.1978072971105576,-0.1678612977266312,-0.1983436346054077,0.3403945565223694,0.4189101755619049,0.0315188989043236,-0.6563832163810730,0.3771362900733948,-0.0205766223371029,0.4802694916725159,-0.1200327053666115,0.0508982129395008,-0.1016638129949570,0.1347854137420654) * FEATURE4_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [233] res += mat4(0.0703062862157822,0.2102960497140884,0.0154892085120082,-0.2812403440475464,0.0107412738725543,-0.1078063398599625,-0.0538537353277206,0.2014517188072205,-0.0119203403592110,0.3250710070133209,0.1019796878099442,0.1494667232036591,-0.0774624198675156,0.2472514212131500,-0.1382634639739990,0.1727007627487183) * FEATURE1_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [234] res += mat4(-0.3406212627887726,0.1102256178855896,0.0344245545566082,0.0535254664719105,-0.1131787896156311,-0.1116196066141129,-0.0361820906400681,0.2828329205513000,0.1532165110111237,0.1664879620075226,0.1495245248079300,-0.1846220791339874,-0.0863110795617104,0.1879447698593140,-0.2187136262655258,-0.0976269990205765) * FEATURE2_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [235] res += mat4(0.2498962283134460,0.0628746822476387,0.0752239376306534,0.0465303435921669,-0.3409739434719086,0.2857620120048523,0.0698532983660698,-0.1929524689912796,0.0117371957749128,-0.1592671424150467,-0.0443856492638588,-0.1500931084156036,-0.0638014823198318,0.2300414592027664,0.2772723138332367,0.0982782691717148) * FEATURE3_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [236] res += mat4(-0.5059490203857422,-0.1311045885086060,0.0368731617927551,0.1761099994182587,-0.2564618289470673,0.3076902031898499,-0.1110099628567696,0.1084324046969414,0.2835643887519836,-0.1647099554538727,-0.1255061924457550,-0.2327279746532440,-0.0985080376267433,0.0366575457155704,-0.1026502773165703,-0.0330082252621651) * FEATURE4_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [237] res += mat4(-0.3360988199710846,0.2244271785020828,-0.0387836545705795,0.1149037256836891,0.0972868502140045,-0.0944996923208237,-0.0228208024054766,0.0300375390797853,0.3410931825637817,0.0673678517341614,-0.1067329868674278,0.0460759624838829,-0.1416530013084412,0.0719029083848000,0.1737461686134338,-0.1460048109292984) * FEATURE1_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [238] res += mat4(0.1348958611488342,-0.0217581838369370,-0.0246997904032469,-0.0370253399014473,-0.2199629992246628,-0.2583822607994080,-0.0932653769850731,-0.2328930199146271,-0.3985703587532043,-0.0800357311964035,-0.0502789840102196,-0.1894255578517914,0.0157703701406717,0.0064301551319659,-0.0858104750514030,0.0733424127101898) * FEATURE2_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [239] res += mat4(0.1041419282555580,0.0518928579986095,-0.0646929740905762,-0.0370695181190968,0.0235015563666821,0.1457109898328781,-0.0695325955748558,0.1174258142709732,-0.2374160140752792,-0.1920933574438095,0.1244019418954849,0.0188022516667843,0.0602986663579941,-0.1103134676814079,0.0410128720104694,0.1191382408142090) * FEATURE3_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [240] res += mat4(0.0710143893957138,0.1863823831081390,0.1069454997777939,-0.0628824830055237,-0.0817598104476929,-0.2282510697841644,-0.0731965005397797,-0.2010470926761627,0.0196697581559420,-0.0930084213614464,-0.2215146869421005,-0.0995974317193031,0.0197020657360554,-0.2077472507953644,-0.2745246887207031,-0.2016142755746841) * FEATURE4_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [241] res += mat4(0.0337189361453056,0.0165102854371071,-0.0615520589053631,-0.0837895199656487,0.0536002889275551,-0.2178279608488083,0.2378123551607132,-0.0640304759144783,-0.1842651665210724,0.1383887231349945,-0.0163793954998255,0.0974779129028320,0.0414890572428703,-0.1716658025979996,-0.0911796241998672,0.2949803471565247) * FEATURE1_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [242] res += mat4(-0.0948021039366722,-0.1160111948847771,0.1457199901342392,0.0830268114805222,-0.0575311966240406,-0.0802905112504959,0.1907799690961838,0.0806293338537216,-0.2138084769248962,-0.0966582298278809,-0.2017477154731750,0.1610527485609055,-0.0404433608055115,-0.2105194330215454,0.0839709937572479,-0.1883381307125092) * FEATURE2_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [243] res += mat4(-0.0252135824412107,0.0330959074199200,0.0855813026428223,-0.0615275166928768,0.2952718436717987,-0.0192984342575073,-0.0794014632701874,-0.0708832591772079,-0.0284778289496899,0.0396614037454128,-0.0762029662728310,-0.0091145960614085,0.0112863909453154,-0.0858006030321121,0.2219867259263992,-0.0473073832690716) * FEATURE3_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [244] res += mat4(-0.0735780969262123,0.1588295102119446,0.0526467189192772,0.0841475054621696,0.2984561026096344,-0.0126614877954125,0.1053985804319382,-0.1054222360253334,-0.2275395393371582,0.0325669273734093,-0.1359508931636810,-0.0432912521064281,0.3476223051548004,0.0060007474385202,0.0478659644722939,0.0217769891023636) * FEATURE4_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [245] res += mat4(-0.1700742095708847,0.1524066627025604,0.0056248060427606,-0.0194710157811642,0.1511547267436981,0.1654875576496124,0.1847568601369858,-0.1580300033092499,-0.1765314042568207,-0.0585254132747650,-0.0740904882550240,0.1187586858868599,0.0925130993127823,0.1622044593095779,-0.1567358523607254,-0.0668452009558678) * FEATURE1_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [246] res += mat4(0.1341780424118042,-0.1721378117799759,0.1383672952651978,-0.3065282702445984,0.0086536090821028,-0.1854903697967529,0.0173848569393158,-0.0958723276853561,0.2456385642290115,0.1917649209499359,-0.2038490176200867,-0.1217347383499146,-0.0541911497712135,-0.2786482274532318,0.0933305397629738,0.0611389316618443) * FEATURE2_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [247] res += mat4(-0.0451022833585739,-0.0605932325124741,-0.0374172404408455,-0.0356340780854225,-0.0950141549110413,0.2326428592205048,0.0564964823424816,0.0559692643582821,-0.0715712606906891,-0.1021538227796555,-0.0026287697255611,0.0984951853752136,-0.1102745011448860,-0.0487639307975769,-0.1391361206769943,0.1251715570688248) * FEATURE3_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [248] res += mat4(0.2046471387147903,0.1251144856214523,-0.0454968921840191,-0.0424325466156006,-0.0259405653923750,0.0798271521925926,-0.1830127239227295,-0.2307291328907013,-0.1853311359882355,-0.0832240208983421,-0.0404579453170300,-0.0428061001002789,-0.1496866494417191,-0.1584313660860062,0.1983799189329147,-0.0448243059217930) * FEATURE4_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [249] res = max(res, vec4(0.0)) + vec4(-0.2172160744667053,1.0248425006866455,0.7351635098457336,0.2249015122652054) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [250] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [251] }
[ 397.804][d][vo/gpu-next/libplacebo] [252] 
[ 397.804][d][vo/gpu-next/libplacebo] [253] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [254] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [255] //!DESC mapping 1_3
[ 397.804][d][vo/gpu-next/libplacebo] [256] //!BIND FEATURE1
[ 397.804][d][vo/gpu-next/libplacebo] [257] //!BIND FEATURE2
[ 397.804][d][vo/gpu-next/libplacebo] [258] //!BIND FEATURE3
[ 397.804][d][vo/gpu-next/libplacebo] [259] //!BIND FEATURE4
[ 397.804][d][vo/gpu-next/libplacebo] [260] //!SAVE MODEL23
[ 397.804][d][vo/gpu-next/libplacebo] [261] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [262] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [263] {
[ 397.804][d][vo/gpu-next/libplacebo] [264] vec4 res = vec4(0.0511174127459526,0.0359574593603611,-0.0185840297490358,0.0512145012617111);
[ 397.804][d][vo/gpu-next/libplacebo] [265] res += mat4(0.0578461475670338,0.2828919589519501,-0.1346452981233597,0.0320160463452339,-0.0698082149028778,0.1168579459190369,0.1400541961193085,0.0388100557029247,0.0376713834702969,0.0375407524406910,0.1184962242841721,0.0882366225123405,0.0020162458531559,-0.0868167132139206,0.0034549718257040,-0.0163146443665028) * FEATURE1_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [266] res += mat4(0.1800664067268372,-0.0640114471316338,0.2431817501783371,0.0366823226213455,-0.0444068312644958,-0.0690090730786324,0.0584501102566719,-0.1308096647262573,-0.0052478332072496,-0.1090428233146667,-0.0908301025629044,-0.0933984592556953,-0.0864761248230934,0.1372670531272888,0.0407580547034740,0.0705780163407326) * FEATURE2_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [267] res += mat4(0.1828511208295822,0.0576393343508244,0.0217101480811834,-0.0089030526578426,-0.0623153559863567,-0.1101517006754875,-0.0719603896141052,-0.1372530609369278,-0.1984188556671143,-0.1293830275535583,-0.0651546716690063,-0.0637928247451782,-0.1048893108963966,0.0154370125383139,0.0358166024088860,-0.3106870949268341) * FEATURE3_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [268] res += mat4(0.0981069579720497,-0.1049205511808395,-0.2421268373727798,0.0293983612209558,-0.2442162781953812,0.2212668210268021,0.2120037823915482,-0.0813540369272232,0.0450910143554211,-0.3425211608409882,-0.1026159673929214,-0.0506544224917889,0.0712244138121605,0.1318957358598709,0.0610611140727997,-0.0272802803665400) * FEATURE4_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [269] res += mat4(0.0757116675376892,0.0171789843589067,0.1280157119035721,0.1780004650354385,0.1940336227416992,0.0905117467045784,0.1280143857002258,-0.0075025563128293,-0.0081007732078433,0.2032423913478851,0.1274915784597397,0.1291383504867554,-0.1648930013179779,0.0216276049613953,-0.1590877324342728,0.1075148805975914) * FEATURE1_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [270] res += mat4(0.2919487655162811,0.0159679595381021,0.0741899386048317,-0.1138671264052391,-0.1472337245941162,0.0585891306400299,-0.2953324615955353,0.0341861061751842,0.1097938418388367,-0.3058669269084930,-0.0194781050086021,-0.2184937149286270,0.0867074877023697,0.0781764239072800,0.0877893045544624,-0.0211875345557928) * FEATURE2_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [271] res += mat4(-0.0053484216332436,-0.0241691619157791,-0.2177040278911591,0.0781714171171188,-0.1637988239526749,-0.0008503105491400,0.0396153256297112,0.2763280868530273,-0.1462812572717667,-0.2049797475337982,0.1382520645856857,-0.0691982954740524,-0.1430344730615616,0.0482883676886559,-0.2159024178981781,0.0288316234946251) * FEATURE3_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [272] res += mat4(0.0257013905793428,-0.2157738357782364,-0.0104084108024836,0.1268256902694702,0.0796590447425842,-0.0404040142893791,-0.0645640641450882,-0.1908340603113174,0.0319073088467121,-0.1588334888219833,0.2061458826065063,-0.0268522966653109,0.0711527019739151,0.0515270642936230,0.0610213540494442,0.1500909030437469) * FEATURE4_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [273] res += mat4(0.0754264667630196,0.0516740866005421,-0.0874962434172630,0.0603918395936489,-0.0756956934928894,-0.1173401325941086,0.0785196125507355,-0.0671538934111595,-0.0816918089985847,-0.0357300601899624,-0.0434930622577667,-0.0150950783863664,-0.0413136780261993,-0.0122060971334577,-0.1442099362611771,-0.0745952427387238) * FEATURE1_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [274] res += mat4(-0.0170399695634842,-0.0806885212659836,0.3260264992713928,-0.0606914423406124,0.1005641967058182,0.3976904153823853,0.3015973865985870,0.0750900134444237,0.3002873361110687,0.1097188293933868,-0.0507142990827560,0.3961393535137177,0.0288244299590588,-0.0879809781908989,0.0269260630011559,0.0237243082374334) * FEATURE2_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [275] res += mat4(-0.0264652632176876,0.1016611754894257,0.0643393844366074,-0.0530705191195011,0.0024295691400766,0.0143215563148260,-0.1968523412942886,-0.1619118005037308,-0.0106757655739784,0.0187640935182571,0.0976292043924332,0.0248356256633997,-0.0410357415676117,0.0219711922109127,-0.0956720858812332,0.0902286618947983) * FEATURE3_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [276] res += mat4(0.0231158118695021,0.2895714342594147,0.3024026155471802,0.2077331990003586,-0.0650042518973351,0.0217847023159266,-0.0772262811660767,-0.0283138379454613,0.2134558260440826,0.0431921556591988,-0.1028737574815750,0.0213085450232029,-0.0087573593482375,-0.1172112450003624,0.0229998510330915,-0.2088558822870255) * FEATURE4_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [277] res += mat4(0.3234306275844574,-0.0036758435890079,0.0758589431643486,-0.0505495630204678,-0.0476355440914631,-0.0742078125476837,-0.0672180801630020,-0.0859087854623795,0.2005819231271744,0.0526694320142269,0.0181618090718985,0.1270401477813721,0.0360271520912647,-0.0535571500658989,-0.2090791016817093,0.1898656040430069) * FEATURE1_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [278] res += mat4(-0.1914348602294922,0.3021202683448792,0.0804308727383614,0.0203794166445732,0.0215651225298643,-0.2746695578098297,-0.2756184935569763,0.1516600549221039,-0.1790768355131149,-0.1245375573635101,0.1609978973865509,-0.1723066270351410,-0.1159619092941284,0.0524865239858627,0.0562714673578739,-0.0370114147663116) * FEATURE2_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [279] res += mat4(0.0319192595779896,-0.0397810451686382,0.1978694200515747,-0.1865420639514923,0.1077109277248383,0.0574462562799454,0.1544080823659897,-0.0755468830466270,-0.0234267488121986,0.0506254322826862,-0.1276153475046158,0.0454352833330631,0.1296306401491165,0.0681788548827171,-0.0031885858625174,0.2401781082153320) * FEATURE3_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [280] res += mat4(0.0883577913045883,-0.1225442066788673,-0.0518296025693417,-0.1428000628948212,-0.0082690687850118,-0.3502953946590424,0.0103399204090238,-0.0086328629404306,-0.1192949190735817,0.0245292577892542,-0.3912904560565948,0.1688191741704941,-0.0310530029237270,-0.2192679792642593,-0.0955478847026825,-0.2416780889034271) * FEATURE4_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [281] res += mat4(0.1438802629709244,0.4415321350097656,0.1194443255662918,-0.0833267197012901,0.1291743963956833,0.0808409601449966,-0.2797149121761322,0.0922314450144768,0.3578602969646454,-0.2166663557291031,0.1485640406608582,0.1230967789888382,0.2417494207620621,0.1943885535001755,-0.3441389501094818,0.0836386457085609) * FEATURE1_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [282] res += mat4(0.0140561945736408,-0.0930848121643066,-0.3222397863864899,0.3774345815181732,0.2496200799942017,0.1319408118724823,-0.4739931523799896,0.2975631058216095,-0.6283363103866577,0.4485394656658173,0.1579030901193619,0.2276044636964798,0.1954878866672516,0.0422135479748249,0.1251304894685745,-0.1129303053021431) * FEATURE2_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [283] res += mat4(0.0721885040402412,0.1271906793117523,-0.2274189144372940,-0.0034560146741569,0.4503856897354126,0.3654197454452515,0.0625725463032722,-0.3701701760292053,0.0350647158920765,-0.3291721642017365,0.2419649809598923,0.1158339232206345,0.1363242119550705,-0.3370400965213776,-0.4590337574481964,-0.1087213605642319) * FEATURE3_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [284] res += mat4(-0.0425999015569687,-0.0803546756505966,-0.0682977288961411,0.1522664278745651,0.3394095897674561,0.0147661138325930,-0.2460791468620300,-0.1358268707990646,0.3123224675655365,0.0335265956819057,-0.1279314905405045,-0.2441596984863281,0.0691332891583443,-0.0065273907966912,0.0315024778246880,-0.2075266540050507) * FEATURE4_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [285] res += mat4(-0.0352581776678562,0.1733648777008057,-0.2391406744718552,-0.1985583156347275,0.0307849999517202,0.1498878896236420,-0.0964969918131828,0.0610927008092403,0.0656357258558273,-0.3735375106334686,-0.1126287132501602,0.0810788348317146,0.2228245884180069,0.0629712119698524,-0.1089765280485153,0.1937741935253143) * FEATURE1_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [286] res += mat4(-0.0714075788855553,0.1122887283563614,-0.0541789606213570,0.1050251945853233,0.2244011759757996,-0.2155403494834900,0.0281857214868069,-0.0192877724766731,0.0115881757810712,0.0295707397162914,-0.0402938537299633,-0.0159157104790211,-0.0322378501296043,0.0462084412574768,0.0796689689159393,-0.0045751547440886) * FEATURE2_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [287] res += mat4(-0.1745322793722153,-0.1089341342449188,0.0311019849032164,0.1796688586473465,-0.0497992001473904,-0.3238902688026428,-0.1294999867677689,-0.1981544494628906,0.2647362053394318,-0.0497390553355217,0.1340302228927612,0.1089042499661446,0.3159225285053253,0.0749141424894333,-0.2068309783935547,0.2945960760116577) * FEATURE3_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [288] res += mat4(0.0552009753882885,0.0791923254728317,-0.0234178118407726,-0.2137083113193512,0.2205381244421005,-0.1788860112428665,-0.0469832457602024,0.0188462510704994,-0.1843361705541611,-0.2105434536933899,-0.1968381106853485,0.2580736875534058,0.0339437164366245,-0.0693900063633919,-0.0590746030211449,0.3345184922218323) * FEATURE4_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [289] res += mat4(-0.0714576318860054,-0.1314765065908432,0.0044849822297692,-0.0384970940649509,0.2241345494985580,-0.0324452109634876,0.2159636765718460,0.1048837751150131,-0.1070954799652100,-0.0161915589123964,-0.0572434253990650,-0.1844666749238968,0.0281824711710215,-0.1263117045164108,-0.2617301940917969,0.0878679007291794) * FEATURE1_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [290] res += mat4(-0.1100168824195862,-0.0780089497566223,0.1974209547042847,-0.0670912265777588,0.1407631486654282,0.1423299312591553,0.1635863184928894,-0.0288321077823639,0.3278575837612152,-0.1082433238625526,0.2574056684970856,0.1123920455574989,-0.1196926757693291,-0.0249382574111223,0.0006079469458200,-0.1647489219903946) * FEATURE2_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [291] res += mat4(0.1526419073343277,0.0477463267743587,-0.0402963794767857,-0.0688054859638214,-0.0743660777807236,-0.1399626880884171,-0.2718788683414459,0.3125098943710327,0.1716637760400772,-0.1604706645011902,-0.1242120563983917,0.0801826342940331,-0.0891780182719231,0.0744505822658539,-0.1075374931097031,-0.2213074415922165) * FEATURE3_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [292] res += mat4(-0.1353906840085983,-0.0651349574327469,-0.3486540019512177,0.0519254878163338,0.1884097605943680,-0.0021119879093021,0.1838577538728714,0.2008749395608902,0.1146747693419456,-0.0404230952262878,-0.0025575994513929,-0.1060535013675690,-0.0098623437806964,0.0988361388444901,0.0361230596899986,0.0778185352683067) * FEATURE4_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [293] res += mat4(-0.7296320796012878,-0.1005255207419395,-0.0297978557646275,-0.3341357111930847,0.1982498317956924,-0.2028026878833771,-0.1974771767854691,-0.1999196559190750,0.0944639220833778,-0.0612797103822231,0.0827406495809555,-0.0263017136603594,-0.1228519976139069,-0.3428965508937836,0.0960030034184456,0.1286140382289886) * FEATURE1_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [294] res += mat4(0.2460274547338486,-0.0110488999634981,-0.0974549204111099,0.0422583743929863,0.2751173973083496,0.0678272098302841,-0.2969105541706085,0.1323045939207077,0.0380870699882507,0.3217476606369019,-0.0752521008253098,0.0459126196801662,-0.4058500826358795,0.0251078642904758,-0.0231282394379377,-0.1124168261885643) * FEATURE2_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [295] res += mat4(-0.2689310014247894,-0.2388662099838257,0.1936679780483246,-0.0622065514326096,-0.2855861485004425,0.0881438851356506,-0.1297691315412521,-0.0710278674960136,0.3021833598613739,0.0885890796780586,0.0518921613693237,0.2242880314588547,0.1547999829053879,-0.1480449587106705,0.1359568983316422,0.0099172536283731) * FEATURE3_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [296] res += mat4(0.1443729847669601,-0.2127736210823059,-0.1425509303808212,-0.1897493451833725,-0.2638850510120392,-0.1273290663957596,-0.0896094292402267,-0.0437430441379547,0.1610110104084015,-0.1014155820012093,0.2710902988910675,-0.0327298417687416,-0.0324533618986607,0.0915087535977364,0.0798557400703430,-0.1547852903604507) * FEATURE4_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [297] res += mat4(-0.2404520064592361,-0.0844260677695274,-0.2389319241046906,-0.1240477040410042,0.1413290798664093,0.3788705766201019,0.0120783364400268,0.0488567911088467,-0.1317554712295532,-0.2663916051387787,-0.0246596839278936,-0.0082284500822425,-0.1777968853712082,0.0150971999391913,-0.0495786853134632,-0.0782039240002632) * FEATURE1_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [298] res += mat4(0.1535158157348633,-0.1182311400771141,-0.1546080559492111,0.0448417924344540,-0.0881625786423683,-0.0413807667791843,0.0816671028733253,0.2144964784383774,-0.4627449214458466,0.0498482473194599,-0.0300191771239042,0.0065994099713862,-0.0156666859984398,-0.1720254272222519,-0.0485287122428417,-0.1363081336021423) * FEATURE2_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [299] res += mat4(0.0021659194026142,-0.1300170868635178,-0.0059179398231208,0.0288986936211586,-0.0019816202111542,-0.0576530508697033,-0.1840831786394119,-0.0129501679912210,0.1544197946786880,0.2934990227222443,0.0106042763218284,-0.0419802144169807,-0.2079767584800720,-0.3180702328681946,0.1618657112121582,-0.0636325553059578) * FEATURE3_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [300] res += mat4(-0.3316137194633484,0.0584416948258877,0.2460993081331253,-0.0385730527341366,-0.1526068896055222,0.0712944641709328,0.0567634105682373,-0.1403829455375671,0.1281589567661285,0.1594053804874420,0.2744943499565125,0.0101370532065630,0.0462218746542931,-0.1511970162391663,-0.0000599296290602,-0.0264442525804043) * FEATURE4_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [301] res = max(res, vec4(0.0)) + vec4(0.1329186856746674,0.4945091009140015,-0.0285056717693806,0.5025353431701660) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [302] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [303] }
[ 397.804][d][vo/gpu-next/libplacebo] [304] 
[ 397.804][d][vo/gpu-next/libplacebo] [305] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [306] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [307] //!DESC mapping 1_4
[ 397.804][d][vo/gpu-next/libplacebo] [308] //!BIND FEATURE1
[ 397.804][d][vo/gpu-next/libplacebo] [309] //!BIND FEATURE2
[ 397.804][d][vo/gpu-next/libplacebo] [310] //!BIND FEATURE3
[ 397.804][d][vo/gpu-next/libplacebo] [311] //!BIND FEATURE4
[ 397.804][d][vo/gpu-next/libplacebo] [312] //!SAVE MODEL24
[ 397.804][d][vo/gpu-next/libplacebo] [313] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [314] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [315] {
[ 397.804][d][vo/gpu-next/libplacebo] [316] vec4 res = vec4(-0.4677113592624664,0.0596643872559071,-0.1394357085227966,-0.0474149025976658);
[ 397.804][d][vo/gpu-next/libplacebo] [317] res += mat4(0.0283560287207365,0.1632403135299683,0.1545499116182327,-0.1395063996315002,-0.0688662007451057,-0.0736728757619858,-0.1194026470184326,0.0635547265410423,0.1496663391590118,-0.2046299278736115,-0.1990851163864136,0.1986444592475891,0.0938748717308044,0.0851655229926109,0.0643394067883492,0.0175190437585115) * FEATURE1_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [318] res += mat4(-0.1706869602203369,0.0189472753554583,-0.1184043362736702,0.0998171344399452,-0.1032890230417252,0.1420563012361526,-0.0668720826506615,0.0394843854010105,-0.0842913612723351,0.1660422533750534,-0.5172500014305115,0.2054497301578522,-0.0657985284924507,0.1270816773176193,0.1796167194843292,0.0053847674280405) * FEATURE2_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [319] res += mat4(0.1217580363154411,0.1042716652154922,-0.1231716424226761,-0.1094131618738174,-0.0445660017430782,-0.0655702874064445,0.0594377182424068,-0.1643417626619339,-0.0057018632069230,-0.2968985736370087,-0.0090959724038839,0.1444288939237595,0.0278254449367523,0.0531919300556183,-0.0797978714108467,0.1580917537212372) * FEATURE3_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [320] res += mat4(0.1023867651820183,0.0782632082700729,0.1376877725124359,-0.2557797431945801,-0.0860542878508568,0.1032235845923424,-0.0648632198572159,0.1306759864091873,-0.0739438682794571,-0.0179721694439650,-0.0082308109849691,0.1747244745492935,-0.1365087479352951,-0.0927051901817322,0.0143458470702171,0.1506867408752441) * FEATURE4_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [321] res += mat4(0.2170464694499969,0.0002870913885999,0.1082361266016960,0.0810969695448875,-0.0233201589435339,0.0988461151719093,-0.0679773390293121,0.2193212807178497,-0.2105504870414734,-0.0245069134980440,-0.0248711705207825,-0.2008217871189117,-0.0665743276476860,-0.0864971727132797,-0.1867953538894653,-0.1417353451251984) * FEATURE1_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [322] res += mat4(-0.0060973879881203,0.2791217565536499,-0.1383740305900574,-0.0722776874899864,0.0468704253435135,0.0632910281419754,0.1379466801881790,0.0857292935252190,0.1201294362545013,-0.5738033652305603,-0.1481534987688065,0.1082581132650375,0.0583366453647614,-0.0605551861226559,0.0226882509887218,-0.1571758389472961) * FEATURE2_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [323] res += mat4(-0.0389893129467964,-0.1442680507898331,0.0443960465490818,-0.0106713678687811,0.0771727785468102,0.0900101289153099,-0.0914754047989845,-0.0729852244257927,0.0937186479568481,-0.1620398461818695,-0.1510852575302124,0.0379182845354080,-0.2640995085239410,0.1212409734725952,-0.0698653087019920,0.0764444917440414) * FEATURE3_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [324] res += mat4(0.0094550428912044,-0.1416580229997635,0.0040757483802736,0.0711589679121971,-0.0278622452169657,0.1276591867208481,-0.0185330137610435,0.0989640280604362,-0.0241079051047564,0.1958288699388504,-0.0341864079236984,-0.0203034970909357,0.1311966329813004,0.0726944506168365,-0.1139959171414375,0.0695756077766418) * FEATURE4_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [325] res += mat4(-0.1046063899993896,0.0169014390558004,0.0566153712570667,-0.0909216180443764,0.1807488054037094,0.1575771272182465,-0.0805048644542694,-0.0666622519493103,-0.0279997456818819,0.3350932896137238,0.0631688386201859,-0.0093164052814245,-0.0619123466312885,0.0301001071929932,-0.0260559096932411,0.0059746033512056) * FEATURE1_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [326] res += mat4(-0.0143611505627632,0.2324832826852798,-0.0060990033671260,0.1127019226551056,0.0126230213791132,0.2339999228715897,0.1924626082181931,0.2061477303504944,0.0493903905153275,-0.1729395091533661,-0.1811242699623108,-0.6014294624328613,0.0342454761266708,-0.0274821706116199,0.1105191484093666,-0.1979669183492661) * FEATURE2_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [327] res += mat4(0.0304616615176201,-0.2031574547290802,-0.0807851925492287,-0.0697002559900284,-0.0698697268962860,0.0051260222680867,0.2499262094497681,-0.0973711311817169,-0.0771127119660378,-0.0720796883106232,-0.5590449571609497,-0.2520964741706848,-0.0163954924792051,0.0744133740663528,0.2196218222379684,-0.2336483448743820) * FEATURE3_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [328] res += mat4(0.1008921638131142,0.1226324513554573,0.1692889481782913,-0.1959094405174255,0.0208503510802984,0.1198548898100853,-0.0169574189931154,-0.0145710362121463,-0.0836949944496155,-0.0894491747021675,-0.0554155036807060,0.1527550071477890,-0.1670548170804977,0.0129694417119026,-0.1856075525283813,0.0408268384635448) * FEATURE4_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [329] res += mat4(-0.0305163897573948,-0.0767870619893074,0.0613127462565899,0.1089824065566063,-0.0490215420722961,0.0649225413799286,-0.3888852000236511,0.2872225344181061,-0.0105518708005548,-0.0723692327737808,-0.0249940138310194,0.0244531538337469,-0.0104067716747522,0.0199929829686880,-0.0143613154068589,-0.1261249780654907) * FEATURE1_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [330] res += mat4(0.0417649522423744,0.1641997247934341,-0.3794211745262146,0.1482190340757370,0.0126221617683768,0.0924909561872482,-0.1544391512870789,-0.0747963562607765,0.0679167956113815,0.1877635866403580,0.0086008775979280,0.0841070786118507,-0.0103343576192856,-0.1396269202232361,0.0794675424695015,0.0356968715786934) * FEATURE2_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [331] res += mat4(0.1153599098324776,0.1380549669265747,0.0995968654751778,-0.1357073485851288,0.2307410091161728,-0.1676283031702042,-0.0096712857484818,-0.2089426666498184,-0.0020792745053768,0.1697451472282410,-0.1037141531705856,-0.0332836210727692,0.0217782165855169,0.0239152982831001,-0.1074517816305161,0.0315274447202682) * FEATURE3_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [332] res += mat4(-0.1172794103622437,-0.1133701056241989,0.1197625696659088,0.2757594883441925,0.0907953381538391,0.1085178330540657,-0.0892044082283974,0.0410259068012238,-0.0039528561756015,0.1873635351657867,0.1140211671590805,-0.0239405203610659,0.0777708739042282,-0.2992796599864960,-0.0244610011577606,-0.1262238919734955) * FEATURE4_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [333] res += mat4(0.1601363271474838,-0.1024804711341858,0.0558576621115208,-0.0647795945405960,0.4536117613315582,-0.1438980698585510,0.0363552756607533,-0.0851869955658913,-0.0199466384947300,0.1326086074113846,-0.0915003195405006,-0.1175814792513847,0.0238959547132254,-0.1614147275686264,-0.0998204350471497,-0.2010682374238968) * FEATURE1_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [334] res += mat4(0.1476137489080429,0.2393688559532166,-0.2296492159366608,0.0042779981158674,0.1037053167819977,0.1472122520208359,0.0032886650878936,-0.2251711189746857,-0.0404342859983444,-0.0171687994152308,-0.2280301898717880,0.3987729549407959,0.4020861983299255,0.1607445031404495,0.1672488003969193,-0.3888488411903381) * FEATURE2_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [335] res += mat4(0.0218454655259848,0.2671929895877838,-0.0119920698925853,-0.2715956568717957,0.1263071000576019,0.4152169823646545,0.0728624537587166,-0.3734714686870575,-0.0906806811690331,0.0673342943191528,-0.1451562941074371,-0.0111573236063123,0.1217871680855751,-0.4524103701114655,-0.1648243367671967,0.0074777076952159) * FEATURE3_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [336] res += mat4(-0.1264527887105942,0.0800493806600571,-0.1353330612182617,0.3417861163616180,-0.0440137460827827,-0.3641567230224609,-0.1094656735658646,-0.2400032728910446,0.3886721134185791,-0.0321426466107368,0.1743922829627991,-0.2514666318893433,0.4774186313152313,0.1686504930257797,-0.1134199872612953,-0.0880033746361732) * FEATURE4_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [337] res += mat4(-0.1341401636600494,0.0961203575134277,0.0174810066819191,-0.1315679401159286,0.2148621231317520,-0.0422738716006279,0.1060828566551208,-0.0043826033361256,-0.0195943713188171,0.0413073748350143,-0.0209606774151325,0.1535830348730087,0.0019101846264675,-0.0752144008874893,0.0543836802244186,0.0817238166928291) * FEATURE1_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [338] res += mat4(0.2039585858583450,0.0317360870540142,-0.1431615948677063,-0.0021050858777016,0.0781205222010612,-0.0810130387544632,0.0781239792704582,-0.0228356011211872,-0.0057179541327059,0.1765613555908203,0.1328212618827820,0.1162380650639534,0.0440343655645847,-0.0955794304609299,0.0061650266870856,-0.2743133902549744) * FEATURE2_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [339] res += mat4(0.0216834526509047,-0.0422806702554226,-0.0307590048760176,-0.0987641364336014,-0.0867971032857895,0.0247024279087782,-0.0049467366188765,0.2352760881185532,0.0741604268550873,0.2699835598468781,-0.2172181308269501,0.0214569829404354,0.0881326273083687,-0.3191315531730652,0.3460417091846466,-0.3118346929550171) * FEATURE3_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [340] res += mat4(0.2059896439313889,0.1252457946538925,-0.0074510029517114,-0.0691959038376808,0.1807214915752411,0.0027611132245511,0.0240095667541027,-0.0766959115862846,-0.2156358659267426,0.1172294840216637,-0.0495175346732140,-0.1693508028984070,-0.2264798283576965,0.1293796896934509,-0.0099031990393996,-0.0373347997665405) * FEATURE4_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [341] res += mat4(-0.1486484259366989,-0.0883196964859962,-0.1987736970186234,-0.0938437283039093,0.0970940217375755,-0.0196071788668633,-0.1967689394950867,0.1610310226678848,-0.0768222808837891,0.1623231619596481,0.3253002166748047,-0.0089388052001595,-0.1180243045091629,-0.1877942830324173,-0.0183167178183794,0.0188101623207331) * FEATURE1_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [342] res += mat4(-0.1101450696587563,-0.0586120933294296,0.2209171354770660,-0.0070414175279438,0.2106666266918182,0.0642789304256439,-0.0919141173362732,0.0349143296480179,0.1890538632869720,-0.1068792790174484,0.0104350410401821,0.1184908673167229,-0.1089602261781693,-0.0094016948714852,0.0017966856248677,0.0176654886454344) * FEATURE2_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [343] res += mat4(0.1723289191722870,0.1253015846014023,0.0129809668287635,-0.0096823889762163,0.0716049075126648,-0.0353725440800190,0.1567278355360031,0.1648248732089996,-0.0200736690312624,-0.0962075367569923,0.4105050861835480,-0.2045884430408478,-0.0749892368912697,0.1791831552982330,-0.0503315366804600,0.1393465697765350) * FEATURE3_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [344] res += mat4(-0.0570600554347038,-0.0980537757277489,0.1290795952081680,-0.2045826315879822,0.0843658223748207,0.1265690475702286,0.0357006937265396,-0.0056274337694049,-0.0230911634862423,-0.2809480428695679,0.0960148945450783,-0.0294854622334242,0.0398252755403519,-0.0827212855219841,0.3009684681892395,0.1364646106958389) * FEATURE4_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [345] res += mat4(-0.2818616926670074,0.1190070509910583,-0.0221457425504923,0.0436922684311867,0.2696960866451263,-0.0621693730354309,0.1205597668886185,-0.1424377113580704,0.1226921603083611,-0.1418399065732956,0.0728522315621376,-0.0041362936608493,0.0959575772285461,-0.1118893623352051,-0.0150952748954296,-0.1468373239040375) * FEATURE1_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [346] res += mat4(-0.0212179757654667,-0.2112931758165359,0.4129287302494049,-0.2591953575611115,0.0837515369057655,0.2280779331922531,-0.0166412573307753,0.0318110287189484,0.0451285168528557,0.1645151078701019,-0.0918505042791367,-0.3413339257240295,-0.1391270756721497,0.1170434877276421,0.1808806508779526,0.1371048092842102) * FEATURE2_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [347] res += mat4(0.2365919649600983,0.0929477214813232,0.0098810018971562,-0.0705359354615211,-0.0263667479157448,0.3372208178043365,-0.2670886814594269,0.1929598152637482,0.1251814067363739,0.1176949441432953,0.3895280361175537,0.0087956897914410,-0.1003661006689072,0.0438285619020462,0.0709054544568062,0.1750314384698868) * FEATURE3_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [348] res += mat4(-0.1494247168302536,-0.0427187569439411,0.1252926588058472,-0.0381422936916351,0.0603532493114471,0.0479200966656208,0.1253385990858078,-0.0344637632369995,0.2232175469398499,0.0041557680815458,0.1741494685411453,0.1342372000217438,0.0462950356304646,0.2518405318260193,0.1433944255113602,-0.2184360623359680) * FEATURE4_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [349] res += mat4(-0.0174759086221457,0.1435166150331497,0.1709098070859909,0.0303303804248571,0.1366100013256073,-0.0466808117926121,-0.2585677206516266,-0.0260113924741745,0.0891791060566902,0.1636637747287750,-0.0108174066990614,-0.2410513609647751,-0.0733066499233246,-0.2842519283294678,0.0900657922029495,0.1629368662834167) * FEATURE1_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [350] res += mat4(-0.1839466094970703,-0.3148627281188965,0.4585924744606018,-0.1045131012797356,0.0372976958751678,-0.0834625810384750,0.1311012655496597,-0.1129970699548721,-0.0473304502665997,0.0826512053608894,0.3313356339931488,-0.2423646897077560,-0.1377865374088287,-0.0669801011681557,-0.1558588445186615,-0.1705927103757858) * FEATURE2_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [351] res += mat4(0.1175539419054985,0.0567405335605145,0.1487032324075699,0.0238782912492752,0.0462666153907776,-0.0194517634809017,0.1340848952531815,0.3176729083061218,-0.0521196462213993,0.2000763863325119,0.2545012831687927,0.0430522076785564,-0.1516814082860947,-0.0023446544073522,0.1940542608499527,0.0857671871781349) * FEATURE3_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [352] res += mat4(-0.0185494329780340,-0.2759767770767212,-0.1199675053358078,-0.0520934872329235,-0.1969349235296249,-0.1761688590049744,-0.0436133332550526,0.0472480617463589,-0.0757623463869095,0.1956251859664917,-0.1295351535081863,0.0402258150279522,-0.0910124331712723,-0.1337720751762390,0.2972950339317322,0.0360797531902790) * FEATURE4_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [353] res = max(res, vec4(0.0)) + vec4(-0.0182641837745905,-0.0059784287586808,-0.3269565105438232,0.1502418369054794) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [354] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [355] }
[ 397.804][d][vo/gpu-next/libplacebo] [356] 
[ 397.804][d][vo/gpu-next/libplacebo] [357] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [358] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [359] //!DESC mapping 2_1
[ 397.804][d][vo/gpu-next/libplacebo] [360] //!BIND MODEL21
[ 397.804][d][vo/gpu-next/libplacebo] [361] //!BIND MODEL22
[ 397.804][d][vo/gpu-next/libplacebo] [362] //!BIND MODEL23
[ 397.804][d][vo/gpu-next/libplacebo] [363] //!BIND MODEL24
[ 397.804][d][vo/gpu-next/libplacebo] [364] //!SAVE MODEL1
[ 397.804][d][vo/gpu-next/libplacebo] [365] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [366] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [367] {
[ 397.804][d][vo/gpu-next/libplacebo] [368] vec4 res = vec4(0.0289922468364239,-0.0046213301829994,0.0367466285824776,0.0247280076146126);
[ 397.804][d][vo/gpu-next/libplacebo] [369] res += mat4(0.0143457781523466,-0.0190678630024195,-0.0258230697363615,0.1313548088073730,0.3141909837722778,-0.0069119986146688,-0.0645182058215141,-0.0854005292057991,0.1413416415452957,0.1722284108400345,-0.0839119851589203,0.1197172924876213,-0.3372162282466888,-0.1395767331123352,-0.0039571234956384,0.2856540679931641) * MODEL21_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [370] res += mat4(0.0069858012720942,0.1824326515197754,0.0518632940948009,-0.1651064753532410,-0.0377099290490150,0.1738090366125107,-0.0732944905757904,0.0683743804693222,0.1099290549755096,-0.0019769740756601,-0.0532479472458363,0.0886035263538361,0.0118701932951808,0.0399258546531200,0.0053707323968410,-0.2170725464820862) * MODEL22_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [371] res += mat4(-0.0457811802625656,-0.0583812780678272,0.0106086488813162,-0.0548048131167889,0.2685912251472473,0.0483037903904915,-0.2051575630903244,-0.0179434139281511,-0.1426836252212524,-0.2228482961654663,0.0035537795629352,-0.0673922449350357,-0.0544852837920189,-0.2038804441690445,-0.0021089925430715,-0.1177326589822769) * MODEL23_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [372] res += mat4(-0.1366073936223984,-0.0315098315477371,0.1321292817592621,0.2525149285793304,-0.1456605792045593,-0.0025319734122604,-0.0818520784378052,-0.0146102681756020,-0.1718215197324753,-0.1178970932960510,-0.0832295715808868,-0.0491813458502293,0.1259993761777878,-0.0999935120344162,0.0563119463622570,0.0435056872665882) * MODEL24_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [373] res += mat4(-0.4573970437049866,0.1022815480828285,-0.0117169795557857,0.0031934282742441,0.0641026124358177,-0.2733633220195770,0.0072853905148804,-0.4380507767200470,0.2007429301738739,-0.0816889330744743,-0.0122506804764271,-0.0956504642963409,0.0294950269162655,-0.0895949974656105,-0.1854041069746017,-0.7676455378532410) * MODEL21_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [374] res += mat4(0.1377535015344620,0.3586088418960571,0.0549380332231522,-0.2113907039165497,-0.1651734709739685,0.0877330154180527,-0.3724181950092316,0.4033094644546509,0.1721396297216415,-0.2539699673652649,0.1025523915886879,0.0573127306997776,-0.2649540305137634,0.0996546223759651,-0.0322739854454994,-0.0665868520736694) * MODEL22_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [375] res += mat4(-0.2230871468782425,0.0878259241580963,-0.0725827813148499,-0.2203043699264526,-0.0549901463091373,0.2613747119903564,-0.0657631829380989,0.2836516201496124,-0.2296158373355865,0.1444439440965652,-0.1738165020942688,-0.0411833599209785,0.2213525772094727,-0.1472615599632263,-0.0803443863987923,0.0813046768307686) * MODEL23_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [376] res += mat4(0.2197474390268326,-0.0366083644330502,0.0380731560289860,-0.0071744159795344,0.1010168194770813,0.1950140595436096,0.0008539655827917,-0.0120169641450047,-0.0898331403732300,-0.0149100609123707,0.0195039734244347,-0.0262539740651846,0.1531230509281158,0.0617115199565887,0.0106047820299864,0.1345859915018082) * MODEL24_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [377] res += mat4(0.1767730861902237,-0.0500057265162468,0.2573432922363281,-0.0796421468257904,0.0833976343274117,0.0809997841715813,-0.0547020621597767,-0.0294426903128624,0.0086969649419188,-0.0437616072595119,-0.0277936980128288,-0.0780489891767502,0.0786738246679306,0.1040676459670067,0.1303991526365280,-0.0775700286030769) * MODEL21_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [378] res += mat4(-0.1780300885438919,0.2307239323854446,-0.0490200854837894,-0.1115287542343140,0.0413367860019207,-0.0131242256611586,-0.1669027954339981,-0.2644900381565094,-0.0998633503913879,0.0747515484690666,0.0838051065802574,0.1215404942631721,0.3635001182556152,-0.1774637252092361,0.0236857626587152,0.0582830198109150) * MODEL22_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [379] res += mat4(0.0588678158819675,-0.0194804612547159,-0.0146815674379468,0.1759945601224899,-0.0188863482326269,0.1450830698013306,-0.0976979285478592,-0.0334439128637314,0.1088448762893677,-0.2636922299861908,-0.0487314909696579,-0.1833051592111588,0.0295283142477274,-0.0965298935770988,0.0555295459926128,0.0416923537850380) * MODEL23_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [380] res += mat4(-0.1194345131516457,0.1776950806379318,0.0304453447461128,-0.0358243547379971,0.0609029754996300,-0.2111077457666397,-0.0769061818718910,-0.0515557341277599,-0.0104961041361094,-0.0110840210691094,-0.0751237869262695,-0.0627719312906265,-0.0470809116959572,-0.0052316081710160,-0.0147776203230023,-0.0123609444126487) * MODEL24_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [381] res += mat4(-0.0329177081584930,0.0750706046819687,0.1031253039836884,-0.2896055579185486,-0.0099481903016567,0.0257256161421537,0.1279631108045578,-0.1913103759288788,-0.1453415453433990,0.1676286458969116,-0.0144909946247935,-0.1456130743026733,0.1021625846624374,-0.0406420677900314,0.0150578496977687,-0.4707487821578979) * MODEL21_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [382] res += mat4(-0.1022704094648361,0.1302301734685898,0.0201830789446831,-0.0964004769921303,0.0682998597621918,-0.0549241937696934,0.1587424874305725,0.1584217101335526,-0.0718813836574554,-0.1156852692365646,-0.1400242000818253,-0.0399557352066040,0.0212425049394369,-0.1191432029008865,0.0329345837235451,0.4230840206146240) * MODEL22_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [383] res += mat4(-0.0670338720083237,-0.2093392014503479,-0.0664634555578232,0.1959116309881210,0.0310438647866249,0.0076268846169114,0.1642050594091415,0.0193996038287878,-0.1796613782644272,-0.0597044788300991,0.0265230983495712,0.1191902905702591,-0.3822203278541565,0.3378601372241974,-0.1067518070340157,0.2888302206993103) * MODEL23_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [384] res += mat4(-0.2332227826118469,-0.0284878704696894,-0.3023777306079865,-0.2995139956474304,-0.2314976751804352,0.0214060395956039,-0.0834021866321564,0.0851880982518196,-0.2304719239473343,-0.1238549500703812,-0.1049085557460785,-0.0193341635167599,0.2219447493553162,0.2046199440956116,-0.3574564456939697,0.0140718510374427) * MODEL24_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [385] res += mat4(-0.2188393920660019,-0.4000800251960754,0.3918939530849457,-0.1298827826976776,0.1075959801673889,-0.1363613456487656,0.1831594705581665,0.2557156085968018,0.2268265485763550,0.2713584303855896,-0.2952989339828491,0.2925834357738495,0.0425545200705528,0.1138439401984215,0.1610191315412521,0.9559882283210754) * MODEL21_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [386] res += mat4(0.0744557380676270,0.2223352193832397,0.0502287223935127,-0.2242146432399750,-0.1545594036579132,-0.2363180071115494,-0.1222988739609718,-0.6208294630050659,0.0146329915151000,-0.2016517817974091,0.1301292032003403,-0.2429598271846771,-0.2252487093210220,0.1148211881518364,-0.2663983106613159,0.0882013812661171) * MODEL22_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [387] res += mat4(-0.3354397416114807,0.0556654334068298,-0.0877891853451729,-0.0723027586936951,-0.3086970150470734,-0.1458612978458405,0.4014125168323517,-0.3830009102821350,0.1983656138181686,0.0708551332354546,0.0551107563078403,-0.1499060690402985,-0.1816355586051941,0.5149498581886292,0.3547013998031616,-0.1821456700563431) * MODEL23_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [388] res += mat4(-0.0752305835485458,-0.5638636350631714,-0.1729134172201157,-0.1124454736709595,-0.2223979532718658,0.0704293176531792,0.0203290153294802,0.0351259820163250,-0.2848574817180634,-0.0418890938162804,0.0438340008258820,-0.0656529366970062,0.5115717649459839,-0.0562645904719830,-0.0825002789497375,0.2555425465106964) * MODEL24_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [389] res += mat4(0.2004646062850952,0.1638224869966507,-0.1880697011947632,0.1501211673021317,0.2122931629419327,-0.1741550713777542,-0.0958371013402939,0.2639476060867310,-0.0731826350092888,0.1258066147565842,-0.0688803344964981,0.0180414430797100,-0.1551354229450226,-0.5502672791481018,-0.1077943965792656,0.3587292730808258) * MODEL21_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [390] res += mat4(-0.1024796217679977,0.0117322364822030,0.0363092422485352,-0.3492212295532227,-0.1270268261432648,0.3700734972953796,0.1422414183616638,0.2052343189716339,0.0445701442658901,0.2266556620597839,-0.0094319209456444,-0.2695310413837433,0.0328722782433033,0.0661893486976624,0.0490676239132881,-0.0614571534097195) * MODEL22_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [391] res += mat4(0.0252579115331173,-0.0622757449746132,-0.1155191510915756,0.0095673762261868,0.2282947450876236,-0.1837289184331894,0.2098618000745773,0.2425164282321930,0.2071875333786011,-0.0423258654773235,0.1215800791978836,-0.2211700975894928,0.2533731460571289,-0.2642615139484406,-0.1669356822967529,-0.0271653756499290) * MODEL23_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [392] res += mat4(-0.3783554732799530,-0.2213269472122192,0.0566003434360027,0.1069133505225182,-0.1928440928459167,0.0262646768242121,0.1139844879508018,-0.0577131509780884,0.0568569041788578,0.0130691332742572,-0.0964337214827538,0.0457795709371567,0.0341121889650822,-0.2546681463718414,0.1275185793638229,0.2017956674098969) * MODEL24_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [393] res += mat4(0.0119640482589602,-0.0166406221687794,-0.0355323478579521,0.1206061542034149,-0.1953788399696350,-0.1345187425613403,-0.2710676789283752,0.2432325333356857,-0.0854752436280251,-0.0748339444398880,0.0688332170248032,0.0879098773002625,0.0928065180778503,-0.0478774271905422,-0.0570105016231537,0.1914014518260956) * MODEL21_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [394] res += mat4(0.0327945612370968,0.1210531443357468,0.0604318268597126,-0.1682498455047607,-0.1201471760869026,0.2245749533176422,-0.1314784586429596,-0.1008907631039619,-0.1534835845232010,-0.1206128746271133,-0.2142660170793533,-0.0132634229958057,-0.1433206051588058,0.2265839576721191,0.0331619083881378,-0.2093234360218048) * MODEL22_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [395] res += mat4(-0.0044715465046465,-0.0260666087269783,0.1467585265636444,0.0128453513607383,-0.0823976099491119,-0.1707710772752762,-0.1588797867298126,-0.0293543972074986,-0.1192563101649284,-0.0611195191740990,0.0718725472688675,0.0444633997976780,0.0957413017749786,-0.1960238367319107,0.0240818299353123,-0.0480349957942963) * MODEL23_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [396] res += mat4(-0.2847678363323212,0.0091180726885796,-0.1650844961404800,0.0283044185489416,0.0206628590822220,-0.0847065672278404,-0.1033711507916451,-0.0802335217595100,-0.0624029077589512,-0.1719952672719955,0.0336383692920208,-0.0817446112632751,-0.0043347869068384,0.1867621392011642,0.0502996183931828,-0.1201890036463737) * MODEL24_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [397] res += mat4(0.0815731957554817,-0.0435508787631989,-0.2562917470932007,0.0064125405624509,-0.0461699366569519,0.1964033395051956,-0.1910998821258545,-0.2282165735960007,-0.0438480488955975,-0.0490582957863808,0.0264722630381584,-0.1659971177577972,0.1226257011294365,0.1581728756427765,-0.4247716665267944,-0.4316994845867157) * MODEL21_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [398] res += mat4(0.0344251990318298,0.1876997798681259,-0.1417787224054337,-0.0529508665204048,0.0177888758480549,0.0026195631362498,0.3623940646648407,0.1907893270254135,-0.0366006568074226,0.2961347401142120,0.0108891669660807,0.0844657123088837,-0.2957761287689209,-0.0912782400846481,0.0340089388191700,0.1253420263528824) * MODEL22_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [399] res += mat4(0.1044647991657257,-0.1127108111977577,0.0742520391941071,0.0639538839459419,-0.1364147365093231,-0.0278452411293983,-0.1399204432964325,0.2784890234470367,-0.2201107293367386,0.0014376422623172,0.1261498481035233,-0.1247041970491409,-0.2303806096315384,0.0425361022353172,-0.0960937961935997,-0.1815907955169678) * MODEL23_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [400] res += mat4(-0.3495737016201019,0.0595081597566605,-0.3192266225814819,0.0244316663593054,-0.2647269666194916,0.0243924595415592,-0.4993122220039368,-0.0915616005659103,0.1351604163646698,-0.1538936793804169,-0.2260099053382874,-0.1273860484361649,-0.2565363049507141,-0.0097459377720952,-0.0185106173157692,-0.0524045601487160) * MODEL24_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [401] res += mat4(0.0769963115453720,-0.0613472089171410,-0.1491233408451080,-0.1099350675940514,0.0587296374142170,0.0251194182783365,0.1328753679990768,-0.0452027060091496,0.2108579874038696,0.0305243916809559,0.0046890387311578,-0.2101819813251495,-0.1994265615940094,0.1010351628065109,0.5569025278091431,-0.3144665062427521) * MODEL21_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [402] res += mat4(-0.0655505955219269,0.0596943497657776,-0.1898400634527206,-0.0669943019747734,0.0620926916599274,-0.2699524760246277,-0.0210326462984085,-0.0196340642869473,-0.1571995764970779,-0.2119420468807220,-0.3458395898342133,0.2174158841371536,0.0422618687152863,-0.1147909015417099,0.1503390669822693,0.0818282887339592) * MODEL22_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [403] res += mat4(0.0324207395315170,-0.0160288829356432,0.1019040495157242,-0.0971354469656944,0.1254110783338547,0.0815148353576660,-0.0040160370990634,-0.2318838685750961,-0.0448244623839855,-0.3475115001201630,0.1322139948606491,0.1248756125569344,0.2238789945840836,0.2239783704280853,0.1129583045840263,0.1411372721195221) * MODEL23_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [404] res += mat4(-0.2598690688610077,-0.0924480780959129,0.2330809831619263,-0.0699106231331825,-0.0901900753378868,0.0221884120255709,-0.0161387491971254,-0.0535962954163551,-0.0453197881579399,-0.0677262395620346,-0.1407030820846558,-0.0269491802901030,-0.1986681818962097,-0.1218583211302757,0.2581350803375244,-0.1032286882400513) * MODEL24_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [405] res = max(res, vec4(0.0)) + vec4(0.1444300115108490,0.0811698511242867,0.2380373775959015,-0.0551525354385376) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [406] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [407] }
[ 397.804][d][vo/gpu-next/libplacebo] [408] 
[ 397.804][d][vo/gpu-next/libplacebo] [409] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [410] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [411] //!DESC mapping 2_2
[ 397.804][d][vo/gpu-next/libplacebo] [412] //!BIND MODEL21
[ 397.804][d][vo/gpu-next/libplacebo] [413] //!BIND MODEL22
[ 397.804][d][vo/gpu-next/libplacebo] [414] //!BIND MODEL23
[ 397.804][d][vo/gpu-next/libplacebo] [415] //!BIND MODEL24
[ 397.804][d][vo/gpu-next/libplacebo] [416] //!SAVE MODEL2
[ 397.804][d][vo/gpu-next/libplacebo] [417] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [418] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [419] {
[ 397.804][d][vo/gpu-next/libplacebo] [420] vec4 res = vec4(-0.0080647552385926,-0.0841037333011627,-0.0345347858965397,-0.0046435240656137);
[ 397.804][d][vo/gpu-next/libplacebo] [421] res += mat4(-0.0514949448406696,-0.0195349659770727,-0.0553774349391460,0.0636545792222023,0.1359733939170837,-0.1403330415487289,-0.1598486304283142,0.0592918619513512,-0.0407843701541424,-0.3072011172771454,-0.1158820018172264,-0.0578623302280903,-0.1388145834207535,-0.0434607192873955,0.0151221435517073,0.0283437091857195) * MODEL21_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [422] res += mat4(-0.0148447081446648,-0.0011291034752503,0.0435503832995892,-0.0598094686865807,-0.0511103533208370,-0.0365611836314201,0.0455631166696548,0.0867569372057915,0.0477958917617798,0.0855460390448570,0.0229050423949957,-0.0388118885457516,-0.0507727414369583,0.1061691641807556,0.1198279187083244,0.0848968774080276) * MODEL22_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [423] res += mat4(-0.0069508175365627,-0.1228519231081009,0.0253262501209974,-0.0378559790551662,0.1467339247465134,-0.1158478483557701,-0.1068108901381493,0.0627379044890404,-0.2429156601428986,-0.0409935936331749,-0.1167572066187859,0.1767156422138214,-0.1341967582702637,0.0469993613660336,0.0547994934022427,0.1689712703227997) * MODEL23_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [424] res += mat4(-0.0820880457758904,0.0399885736405849,-0.0981159806251526,-0.1002681255340576,-0.1290888786315918,0.0368873812258244,-0.1092253178358078,0.0073415748775005,-0.0934184119105339,0.0151069313287735,-0.0192732363939285,0.0380824320018291,-0.0613358244299889,0.1173662766814232,0.1313189268112183,-0.0921110212802887) * MODEL24_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [425] res += mat4(0.0098996255546808,0.0312625244259834,-0.1832284927368164,0.1066081672906876,-0.0402730740606785,-0.0942633822560310,-0.1069478467106819,-0.1148846298456192,0.0798483416438103,-0.0506768226623535,-0.4664174318313599,-0.1142466217279434,0.1528352797031403,0.1847205907106400,-0.0349850691854954,-0.0741918385028839) * MODEL21_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [426] res += mat4(0.1102754846215248,-0.1074369102716446,-0.0651983171701431,0.0699046328663826,-0.0759588181972504,0.1463358849287033,-0.0985756441950798,0.0231575872749090,0.0208139587193727,-0.0964017882943153,-0.0419954620301723,0.0635820031166077,-0.3484080433845520,0.1240990608930588,-0.0308482125401497,0.0729894787073135) * MODEL22_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [427] res += mat4(0.2594768404960632,0.1165392622351646,-0.2245630919933319,-0.0496957376599312,-0.1046951040625572,0.1734437793493271,-0.0652893185615540,-0.0092790275812149,0.1586924642324448,0.1640542000532150,0.0196580439805984,-0.1081535294651985,0.0077492995187640,0.0407850369811058,-0.1291919499635696,0.1519178301095963) * MODEL23_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [428] res += mat4(0.1029526740312576,0.0660485774278641,0.1212314814329147,0.1897536814212799,0.0002048090100288,0.0255673751235008,-0.1060385853052139,0.0200774837285280,0.0062124803662300,0.0234904885292053,0.1536596268415451,-0.0485081151127815,-0.0124538373202085,0.1555083692073822,0.1307172477245331,0.0596063323318958) * MODEL24_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [429] res += mat4(0.1274900883436203,-0.0615960955619812,-0.0011545824818313,0.0187249369919300,-0.0517742522060871,-0.1474293470382690,-0.1384572833776474,-0.1142253652215004,-0.1599780023097992,-0.0045510027557611,0.0537799969315529,-0.0989719927310944,0.0614120811223984,-0.0065263318829238,0.0731932893395424,0.1176574006676674) * MODEL21_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [430] res += mat4(0.0679059028625488,0.0489907935261726,-0.0386480204761028,-0.0088006509467959,-0.1278632283210754,0.1026496812701225,0.2393069267272949,-0.1442947536706924,-0.1121301352977753,0.0131147149950266,0.0134216891601682,0.0449649542570114,0.0013345155166462,0.1510204374790192,0.0867359489202499,-0.0340320803225040) * MODEL22_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [431] res += mat4(0.1385339349508286,-0.0126309562474489,-0.0248520635068417,0.1041667088866234,-0.0101676015183330,-0.1773101538419724,-0.0992127656936646,-0.0877092033624649,-0.0962495133280754,-0.1400426775217056,0.0448617413640022,-0.0215080231428146,-0.0798614248633385,-0.0013233533827588,0.1995851993560791,-0.0098537430167198) * MODEL23_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [432] res += mat4(-0.1314268857240677,0.0883787870407104,-0.1828433722257614,-0.0209707003086805,-0.0505778789520264,-0.1624096632003784,-0.0147311268374324,0.0453269891440868,-0.0248489864170551,-0.0089180208742619,-0.1016742363572121,0.0179600268602371,-0.0403063930571079,-0.0572606474161148,-0.0667501166462898,0.0397375524044037) * MODEL24_texOff(vec2(-1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [433] res += mat4(-0.0810762420296669,0.0391263812780380,0.0641367137432098,0.0243103150278330,0.1766536235809326,-0.1969371587038040,0.2263849824666977,-0.0404553413391113,0.2390791475772858,-0.1145247817039490,-0.2748443782329559,-0.0572190880775452,0.0838880538940430,0.0736846774816513,0.0232369992882013,-0.0087333582341671) * MODEL21_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [434] res += mat4(-0.0308689922094345,0.0805446729063988,0.0669609010219574,-0.1240565553307533,0.1614721864461899,-0.0397229865193367,-0.0074304589070380,0.1271419525146484,-0.0677013546228409,-0.1385257840156555,-0.0751412287354469,-0.1304943710565567,0.0683621093630791,-0.1514931470155716,0.0028100861236453,0.1105734407901764) * MODEL22_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [435] res += mat4(-0.3092923462390900,-0.1926667094230652,-0.0141210667788982,0.2251794189214706,-0.1781981587409973,-0.4085194170475006,0.0880601853132248,-0.1117141172289848,0.3235633969306946,-0.0803129822015762,0.1887630671262741,-0.0385875925421715,0.1798022836446762,-0.0534458346664906,-0.1295908242464066,-0.0777843520045280) * MODEL23_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [436] res += mat4(0.2058505564928055,0.0038056622724980,-0.0336683429777622,0.0005303425132297,0.0219732206314802,0.0916120633482933,0.3742682337760925,-0.1028247624635696,-0.0757900401949883,0.0623364672064781,0.1084700226783752,-0.0482954978942871,0.0384275987744331,-0.3698539733886719,0.1275842338800430,-0.1164079979062080) * MODEL24_texOff(vec2(0,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [437] res += mat4(0.3891098201274872,0.3280866146087646,0.1308258622884750,-0.1806241273880005,-0.4164046347141266,-0.0303141847252846,0.1112162321805954,0.0804532319307327,-0.0049474453553557,-0.1725915819406509,-0.2230628728866577,-0.0468336455523968,-0.1930345594882965,0.0530356168746948,0.2353114038705826,-0.0930669531226158) * MODEL21_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [438] res += mat4(-0.0894790366292000,0.1346593797206879,0.0954394042491913,0.1908129006624222,0.3153880834579468,-0.0197620224207640,0.0351910144090652,0.2379240691661835,0.1635813415050507,-0.2503397762775421,0.3663334846496582,0.3794072866439819,0.1699618399143219,-0.1566538512706757,-0.1967535763978958,-0.0601752363145351) * MODEL22_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [439] res += mat4(0.1261692494153976,0.1984932720661163,0.1669745743274689,0.3550611138343811,0.0926000624895096,0.3854622840881348,0.1828416436910629,-0.1837217211723328,-0.2419044226408005,0.1508911252021790,0.2734063565731049,-0.1536229699850082,-0.1761455088853836,-0.0087679559364915,-0.0522777661681175,0.2335962653160095) * MODEL23_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [440] res += mat4(-0.0700223445892334,-0.1252374947071075,0.1610522121191025,-0.0097315898165107,0.0193566624075174,0.4243805408477783,0.0916870310902596,-0.0976453423500061,0.1068030819296837,0.1044174805283546,0.0876776054501534,-0.0678445622324944,-0.1056139394640923,0.2123496681451797,-0.2564689218997955,-0.4195530712604523) * MODEL24_texOff(vec2(0,0));
[ 397.804][d][vo/gpu-next/libplacebo] [441] res += mat4(-0.0280200876295567,0.1511713862419128,0.0646780878305435,0.1197788268327713,-0.0558574721217155,0.1370699554681778,-0.0261533521115780,-0.0355304442346096,-0.0121172796934843,-0.1500239223241806,0.0736288055777550,-0.0704763978719711,-0.0033017182722688,-0.1623643189668655,-0.1167406141757965,0.0434451103210449) * MODEL21_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [442] res += mat4(0.0401437804102898,0.0103358523920178,-0.0086319912225008,-0.0060997526161373,0.1433503031730652,-0.0325911603868008,-0.0835496336221695,-0.0093201883137226,0.0567993335425854,-0.0192108172923326,0.0510668270289898,0.1638691574335098,-0.0097630554810166,0.0808687806129456,-0.2234126031398773,0.1237059161067009) * MODEL22_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [443] res += mat4(-0.0497405715286732,0.4061828851699829,-0.0815772265195847,0.1014231890439987,-0.0539616793394089,-0.0178455803543329,-0.0534149780869484,-0.1359462887048721,-0.2715366482734680,-0.0171669684350491,0.0495530515909195,-0.2839536964893341,0.0072996304370463,-0.2958453595638275,0.0515479855239391,-0.1211838126182556) * MODEL23_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [444] res += mat4(-0.0477132201194763,-0.2299161255359650,0.0444511510431767,-0.0433127358555794,-0.1203790009021759,-0.2645773887634277,0.0285142175853252,-0.1575172841548920,0.0052798818796873,0.0491629466414452,0.0538714528083801,0.0105630606412888,-0.2005243599414825,-0.0291840154677629,0.0889622941613197,0.0987731963396072) * MODEL24_texOff(vec2(0,1));
[ 397.804][d][vo/gpu-next/libplacebo] [445] res += mat4(0.1197669059038162,-0.0475662164390087,0.0277559943497181,-0.0130590777844191,-0.1289554685354233,0.0296635199338198,0.0097988396883011,0.0873291045427322,0.3005311191082001,-0.0435284301638603,-0.0710076913237572,-0.0204364862293005,-0.0553197301924229,-0.0373280048370361,0.2277362346649170,-0.0861263275146484) * MODEL21_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [446] res += mat4(0.0555090308189392,-0.0903691351413727,0.1263573616743088,-0.0148489847779274,-0.0930994451045990,-0.0715782493352890,0.1449358016252518,-0.0363432206213474,-0.1212989315390587,0.0707705989480019,-0.0273582674562931,-0.0371941514313221,-0.0268990211188793,-0.0671620443463326,0.0596896111965179,-0.1522596776485443) * MODEL22_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [447] res += mat4(-0.0652994811534882,0.0613018907606602,-0.0920564010739326,-0.0111955646425486,-0.0735834836959839,-0.0622859746217728,0.0051317238248885,0.1026467084884644,0.2248782068490982,-0.2628534138202667,0.1386217027902603,0.2451450377702713,0.0580524057149887,0.0073491157963872,0.0677551999688148,-0.0949436277151108) * MODEL23_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [448] res += mat4(0.1321496218442917,-0.1297107636928558,0.1155429109930992,-0.0295177418738604,0.0626711621880531,-0.1081474721431732,0.2189140319824219,-0.0366330407559872,-0.0326425880193710,-0.0161970276385546,0.0265044234693050,-0.1087529137730598,-0.0190447792410851,-0.0556839294731617,-0.0329553820192814,-0.0108529813587666) * MODEL24_texOff(vec2(1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [449] res += mat4(-0.1958976984024048,0.0969740152359009,0.0059621138498187,0.0309026166796684,-0.0737855210900307,-0.0605157762765884,0.0024988783989102,0.0126573219895363,0.0024309405125678,-0.0003274893388152,-0.0742101520299911,0.0544909201562405,-0.1171734780073166,0.1395827829837799,0.0226303096860647,0.0079891812056303) * MODEL21_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [450] res += mat4(0.0991575717926025,-0.1500251591205597,0.0912138298153877,-0.0181505177170038,0.0323859006166458,0.2241065204143524,0.0743701830506325,-0.0856274142861366,0.0043774787336588,-0.0071415719576180,0.0017607586923987,-0.1086246892809868,0.2278621792793274,0.0901101455092430,0.0535765513777733,-0.0699984803795815) * MODEL22_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [451] res += mat4(-0.0750623196363449,-0.0142483720555902,-0.0178784951567650,-0.0584332495927811,0.0574056766927242,0.0759046524763107,-0.0362865030765533,-0.0462523102760315,0.0687225088477135,-0.2080455422401428,-0.2318178564310074,-0.0726642087101936,0.3167002797126770,-0.0767177045345306,-0.0881855860352516,0.0590229481458664) * MODEL23_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [452] res += mat4(0.0470520406961441,-0.1462315022945404,-0.0328058786690235,-0.2542710304260254,0.2595972716808319,-0.1078024283051491,-0.1181910112500191,-0.0611724667251110,-0.0948545932769775,-0.1300699114799500,0.0877934992313385,0.0825444981455803,-0.3653071522712708,-0.1159569695591927,-0.0348262637853622,-0.0957687422633171) * MODEL24_texOff(vec2(1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [453] res += mat4(-0.1683560609817505,0.0030932726804167,-0.1647853255271912,-0.0003509002272040,-0.0667054951190948,0.2200130373239517,-0.0516811013221741,0.0292137525975704,0.1835822612047195,-0.1109995171427727,0.2086427807807922,-0.0209745895117521,0.1276083141565323,-0.0533435083925724,-0.0032425487879664,0.0683360919356346) * MODEL21_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [454] res += mat4(-0.0462751165032387,-0.0867139026522636,0.1111874580383301,0.0935514271259308,-0.0098298648372293,-0.0845700725913048,-0.0734221562743187,0.0857466235756874,0.1406754255294800,0.3167072832584381,-0.0067550130188465,0.0106154913082719,0.0347389988601208,0.0685004144906998,-0.1983510255813599,0.0179250929504633) * MODEL22_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [455] res += mat4(-0.0650234594941139,-0.0160508323460817,-0.0538002699613571,0.1724233031272888,-0.1072816923260689,0.0411335118114948,0.1160629838705063,0.0208706408739090,-0.1902277618646622,-0.0401286408305168,-0.0157187841832638,-0.0060412869788706,-0.0393065437674522,-0.2020249962806702,-0.0220919791609049,-0.2004323154687881) * MODEL23_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [456] res += mat4(0.2424288094043732,0.1329905688762665,-0.0055388659238815,0.0238363780081272,0.1207244470715523,-0.0005906071164645,0.0595789365470409,-0.0554966293275356,-0.0188664458692074,0.0597569830715656,-0.1265683621168137,0.0122258746996522,0.0602672174572945,-0.1920576542615891,-0.2333943396806717,-0.1313648521900177) * MODEL24_texOff(vec2(1,1));
[ 397.804][d][vo/gpu-next/libplacebo] [457] res = max(res, vec4(0.0)) + vec4(0.3445472419261932,0.5009695887565613,0.1661557108163834,1.1569869518280029) * min(res, vec4(0.0));
[ 397.804][d][vo/gpu-next/libplacebo] [458] return res;
[ 397.804][d][vo/gpu-next/libplacebo] [459] }
[ 397.804][d][vo/gpu-next/libplacebo] [460] 
[ 397.804][d][vo/gpu-next/libplacebo] [461] //!HOOK LUMA
[ 397.804][d][vo/gpu-next/libplacebo] [462] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.804][d][vo/gpu-next/libplacebo] [463] //!DESC mapping 2_3
[ 397.804][d][vo/gpu-next/libplacebo] [464] //!BIND MODEL21
[ 397.804][d][vo/gpu-next/libplacebo] [465] //!BIND MODEL22
[ 397.804][d][vo/gpu-next/libplacebo] [466] //!BIND MODEL23
[ 397.804][d][vo/gpu-next/libplacebo] [467] //!BIND MODEL24
[ 397.804][d][vo/gpu-next/libplacebo] [468] //!SAVE MODEL3
[ 397.804][d][vo/gpu-next/libplacebo] [469] //!COMPONENTS 4
[ 397.804][d][vo/gpu-next/libplacebo] [470] vec4 hook()
[ 397.804][d][vo/gpu-next/libplacebo] [471] {
[ 397.804][d][vo/gpu-next/libplacebo] [472] vec4 res = vec4(-0.0030431493651122,0.0772903189063072,-0.0187399759888649,-0.0710480436682701);
[ 397.804][d][vo/gpu-next/libplacebo] [473] res += mat4(0.0630776658654213,-0.0156661290675402,-0.0405465587973595,-0.0338476225733757,-0.0282611027359962,0.2571686506271362,0.1697734296321869,-0.0872390717267990,0.0397485978901386,0.3090895414352417,-0.3134531676769257,-0.1192939057946205,0.2721681594848633,-0.0167478378862143,-0.1397513300180435,-0.0548031628131866) * MODEL21_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [474] res += mat4(-0.1318342983722687,-0.0501545593142509,0.1291329711675644,-0.1016503497958183,0.1012440845370293,0.0461882278323174,0.1797344982624054,0.1079239994287491,-0.0815896093845367,0.0929149240255356,-0.0424860119819641,0.1146970540285110,-0.1831907033920288,-0.0413108095526695,-0.0068255756050348,-0.0800214409828186) * MODEL22_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [475] res += mat4(0.0877645313739777,-0.1072989180684090,-0.2200396656990051,-0.0037374580278993,-0.0790953487157822,0.0755271315574646,0.0474142432212830,-0.0773731768131256,-0.0099691189825535,-0.3477037847042084,0.0682063102722168,0.1483027487993240,0.0829065367579460,0.1553632915019989,0.1872977912425995,0.1587218940258026) * MODEL23_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [476] res += mat4(-0.1909448504447937,-0.1900620609521866,0.0080121280625463,0.0393090993165970,0.0565608181059361,-0.0137943392619491,0.1410759538412094,-0.1537460386753082,0.1233773529529572,0.1025700196623802,-0.0166660584509373,-0.0503131486475468,-0.0601725652813911,0.2112258076667786,-0.1001082658767700,-0.1376190185546875) * MODEL24_texOff(vec2(-1,-1));
[ 397.804][d][vo/gpu-next/libplacebo] [477] res += mat4(0.0971400663256645,0.0190913230180740,0.0646057352423668,0.0170308649539948,-0.0416023842990398,0.1902754008769989,0.0793102532625198,0.0713693052530289,-0.0401241183280945,0.1678720116615295,0.0291440747678280,0.0524650253355503,-0.1040422320365906,-0.0104328989982605,-0.1395813226699829,-0.0404534190893173) * MODEL21_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [478] res += mat4(-0.1533539742231369,-0.0675712078809738,0.1737787276506424,0.0134361702948809,0.0524101257324219,0.1048178821802139,-0.1665556132793427,0.0876842513680458,0.0705502256751060,-0.2661143839359283,0.2847896218299866,-0.1311216503381729,0.0924764275550842,0.1106167882680893,0.0937874242663383,-0.0774846002459526) * MODEL22_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [479] res += mat4(-0.4562861919403076,-0.1734165996313095,0.3422911465167999,-0.1925340294837952,0.0327902697026730,-0.2392490506172180,-0.1206030473113060,-0.2357721775770187,0.2271317094564438,-0.0530497878789902,0.0483286269009113,0.1063277050852776,0.0199932400137186,0.1523556411266327,0.1057730913162231,-0.2196847349405289) * MODEL23_texOff(vec2(-1,0));
[ 397.804][d][vo/gpu-next/libplacebo] [480] res += mat4(-0.0489124208688736,-0.2881653308868408,0.0520398281514645,-0.3342506587505341,0.1777028590440750,0.0881835371255875,-0.1338129043579102,-0.0686874762177467,-0.0218005832284689,0.1372035145759583,-0.0582883283495903,0.1006423830986023,-0.0772568359971046,0.1407227367162704,0.0833180919289589,-0.0681120976805687) * MODEL24_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [481] res += mat4(-0.0371689051389694,0.0473397299647331,-0.1643261909484863,-0.1036504954099655,0.1803442537784576,0.1943777352571487,-0.1918847560882568,0.1054074317216873,-0.1592989861965179,0.2840387523174286,-0.0867500007152557,0.1634681671857834,-0.1577144116163254,0.0861068814992905,0.2544870674610138,-0.0183504782617092) * MODEL21_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [482] res += mat4(-0.1120471283793449,0.1204055920243263,-0.1750146299600601,-0.0942561253905296,-0.1838751435279846,0.0039609898813069,-0.0777691304683685,-0.0518617704510689,0.0514143742620945,-0.1477667987346649,-0.1996971368789673,-0.0032348544336855,0.2509424686431885,0.1136791333556175,0.0888099968433380,-0.0837909355759621) * MODEL22_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [483] res += mat4(-0.0687133818864822,-0.0270413793623447,-0.0664285942912102,0.1152484267950058,-0.1331844180822372,0.0738074481487274,-0.0529414154589176,0.0388907752931118,0.0105007681995630,-0.1075217947363853,-0.0450529195368290,0.1841222643852234,0.0399711728096008,-0.0444593094289303,-0.1561354696750641,-0.0107559710741043) * MODEL23_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [484] res += mat4(0.0619415044784546,-0.0867511779069901,0.0338320508599281,-0.0743320137262344,0.1069674417376518,0.0521016456186771,0.0078780241310596,0.0025270218029618,0.1670740693807602,-0.0574002750217915,-0.0644577816128731,-0.0374347269535065,0.2109401673078537,-0.1343586444854736,0.3885019421577454,0.0634160861372948) * MODEL24_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [485] res += mat4(0.0501961298286915,-0.1200719699263573,0.0870017856359482,0.0603387542068958,-0.0298256073147058,0.1005835160613060,0.2436549365520477,-0.1746886372566223,-0.1640983670949936,0.2111585140228271,-0.1956101059913635,-0.1028593182563782,0.0658186301589012,0.0651919320225716,-0.0343937613070011,0.2783910036087036) * MODEL21_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [486] res += mat4(-0.3140862882137299,0.1927280873060226,0.0866174399852753,-0.0778658464550972,0.1708843410015106,-0.0771798267960548,0.2387497276067734,-0.0273820459842682,-0.0269722994416952,-0.1322530508041382,0.0175024475902319,-0.1998025774955750,-0.0956034064292908,-0.0310876704752445,0.0397771485149860,0.1369255781173706) * MODEL22_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [487] res += mat4(-0.0654354989528656,-0.1777599751949310,-0.0638939961791039,0.0176162496209145,-0.1511016637086868,-0.0689900889992714,0.0882042497396469,-0.0371526740491390,-0.1841539293527603,-0.1932286024093628,0.0439552105963230,-0.1088663786649704,0.1958499252796173,-0.0090533858165145,-0.0804488509893417,-0.2405947297811508) * MODEL23_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [488] res += mat4(-0.0707487538456917,0.1211814880371094,0.1198588982224464,0.2254535555839539,-0.3664198517799377,0.0149808581918478,0.1507129222154617,0.0658811405301094,-0.0454952195286751,0.0809907317161560,-0.0207222849130630,0.0306631941348314,-0.0945806577801704,0.5358731746673584,-0.1865912377834320,-0.0853623002767563) * MODEL24_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [489] res += mat4(-0.0068992790766060,-0.2202512770891190,0.2473269402980804,0.2424443066120148,0.0678144246339798,-0.0401034764945507,0.1286835521459579,-0.0863844081759453,-0.1350753158330917,0.2628782093524933,-0.2170456498861313,-0.1734984964132309,-0.0481674820184708,-0.0981746390461922,0.0421205833554268,-0.0737363696098328) * MODEL21_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [490] res += mat4(-0.4458754956722260,0.2320904284715652,-0.2159235626459122,0.1026738286018372,-0.0899752750992775,-0.1010135710239410,0.1128966957330704,-0.1413348764181137,0.2127014994621277,-0.1384209841489792,0.3861987590789795,0.1806972175836563,-0.2717109322547913,-0.0117673911154270,0.0094319004565477,-0.0842245742678642) * MODEL22_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [491] res += mat4(-0.0710214599967003,-0.2646472752094269,0.3271702826023102,-0.0116354534402490,0.1118489429354668,-0.1219298616051674,0.2625328600406647,0.0976289808750153,-0.0211406741291285,0.2269163727760315,-0.3161485791206360,0.0318164750933647,-0.0988205298781395,0.1295432895421982,-0.2902800440788269,-0.0250033866614103) * MODEL23_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [492] res += mat4(0.0538521185517311,0.2303918153047562,-0.2087893038988113,-0.1191865280270576,0.1073722541332245,0.2815416157245636,-0.4466392695903778,0.1729597598314285,-0.0806390196084976,0.0974340066313744,0.0412844642996788,0.0934070646762848,-0.2061768174171448,0.3713734745979309,-0.2771237194538116,-0.0733152255415916) * MODEL24_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [493] res += mat4(-0.2342527806758881,0.2152005285024643,-0.9918748736381531,0.0716865509748459,0.1332143396139145,0.0464978255331516,0.0156143531203270,0.0680264607071877,0.1988355815410614,0.2622185945510864,0.1213267073035240,0.0733644366264343,0.0674474164843559,-0.1983297020196915,0.4473591446876526,0.0038960615638644) * MODEL21_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [494] res += mat4(0.0429526977241039,-0.1869587749242783,0.3420941233634949,0.0159873683005571,-0.1732455193996429,0.0663870424032211,-0.4592063724994659,0.1675552725791931,-0.1775226444005966,-0.0392234809696674,-0.0205797571688890,-0.1784932613372803,-0.0597243607044220,-0.1177468746900558,-0.2349186539649963,-0.1273561120033264) * MODEL22_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [495] res += mat4(-0.0448911860585213,0.1577339321374893,-0.2254225760698318,-0.2669016122817993,0.1060085296630859,0.0358660109341145,-0.0641159713268280,0.0469578914344311,-0.0395580641925335,0.0783664286136627,0.0441224910318851,-0.1656036078929901,0.0572852380573750,-0.0544466562569141,0.2231283485889435,0.0226800777018070) * MODEL23_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [496] res += mat4(0.0345212593674660,-0.1193191856145859,-0.0147288320586085,-0.0228357277810574,-0.0712287127971649,-0.1548950672149658,0.1131501048803329,0.2758660912513733,0.1175094470381737,0.0173021890223026,-0.1270108819007874,-0.0371842570602894,-0.0399581193923950,0.0659863948822021,0.3494960963726044,-0.0086737563833594) * MODEL24_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [497] res += mat4(-0.0335569679737091,0.0071173124015331,-0.0009998778114095,-0.0385203212499619,-0.0934615582227707,0.0114846546202898,0.0765226408839226,-0.0114618586376309,-0.0940322130918503,0.0047848355025053,0.0587064437568188,-0.1494884043931961,-0.0957998186349869,0.2229097187519073,-0.1365591734647751,0.1728390902280807) * MODEL21_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [498] res += mat4(-0.0540218725800514,-0.0514514185488224,0.2101804465055466,0.1000214070081711,-0.0574509575963020,0.0025572804734111,-0.0489990860223770,-0.0471749305725098,-0.1490073055028915,0.0434097945690155,-0.1229142695665359,-0.0924522653222084,-0.0135353617370129,-0.2028246372938156,-0.0518477670848370,-0.1171858832240105) * MODEL22_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [499] res += mat4(-0.0107182841747999,0.0337228961288929,-0.1105274632573128,-0.1475829035043716,0.0133261531591415,0.1065121889114380,0.0082426089793444,-0.2667810320854187,0.0844890177249908,-0.1486541330814362,0.0867980420589447,0.1195300891995430,-0.0313152074813843,-0.0572645887732506,0.0448432601988316,0.1734046489000320) * MODEL23_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [500] res += mat4(0.1070856079459190,-0.0753303840756416,0.2330440729856491,-0.1275107264518738,-0.1892447024583817,-0.1256609559059143,0.0203174930065870,0.0638692900538445,0.1604100018739700,0.1361071467399597,-0.1208712756633759,0.0372305475175381,-0.0216135419905186,0.3578442931175232,-0.0904160887002945,-0.1445161849260330) * MODEL24_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [501] res += mat4(-0.1140949055552483,-0.0271944291889668,0.0720798894762993,0.3108873367309570,0.0159123893827200,-0.1695712506771088,-0.0388168990612030,-0.0151515733450651,-0.2938031852245331,-0.0276262480765581,0.1338917165994644,0.1782743930816650,-0.0389479994773865,0.0772067606449127,-0.1261728405952454,-0.1045076549053192) * MODEL21_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [502] res += mat4(-0.0763762295246124,-0.0278123728930950,-0.1374498754739761,-0.1697828322649002,-0.2410329729318619,0.1508295089006424,0.0413833409547806,0.1830170899629593,-0.0568674616515636,-0.0395617298781872,0.1605635136365891,0.0000087269254436,0.0810096859931946,-0.0268836729228497,-0.0715123489499092,0.2257166355848312) * MODEL22_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [503] res += mat4(0.1129608973860741,-0.0652779489755630,0.0561135299503803,-0.0241573434323072,0.2499233037233353,-0.0439478345215321,0.1476396769285202,0.0974217057228088,-0.0241416357457638,0.3258978426456451,-0.4621813893318176,0.2320890128612518,-0.0672435089945793,-0.2067757397890091,-0.1430984586477280,0.0043349214829504) * MODEL23_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [504] res += mat4(0.1733620464801788,-0.1643370240926743,-0.0752913206815720,0.1347340345382690,0.0656896457076073,-0.2200115323066711,0.0169694535434246,0.0821862965822220,0.1015946939587593,0.0676483958959579,-0.0447810590267181,-0.0935861468315125,0.0426611825823784,0.1123342514038086,-0.0464628525078297,-0.2030570954084396) * MODEL24_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [505] res += mat4(-0.1864038705825806,0.0165662989020348,-0.0488956682384014,-0.0153512852266431,-0.0235369224101305,-0.0145505843684077,-0.0173839498311281,-0.0907464250922203,-0.1201626285910606,-0.0603120923042297,0.0652821362018585,0.1012448891997337,0.0660736858844757,-0.1003770679235458,-0.0489336960017681,-0.2438687384128571) * MODEL21_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [506] res += mat4(-0.0179918128997087,-0.0821196064352989,0.0647374913096428,-0.0502499751746655,-0.1018071547150612,-0.0849481150507927,-0.0124103799462318,-0.1430548429489136,-0.0160008184611797,0.0973308309912682,-0.0397349707782269,-0.1339930444955826,-0.0672484040260315,-0.0252381637692451,-0.1431783586740494,-0.0629890337586403) * MODEL22_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [507] res += mat4(0.1128788292407990,0.1258686035871506,-0.0225039813667536,-0.0375239513814449,0.0782041102647781,0.1055922359228134,-0.0804623141884804,-0.0400073342025280,-0.1114902570843697,-0.0244016293436289,-0.2829777002334595,0.0664623826742172,-0.0593721196055412,-0.0822532996535301,0.2071786373853683,0.1521076112985611) * MODEL23_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [508] res += mat4(0.0217540506273508,-0.0713581293821335,0.0360375493764877,0.2302846163511276,0.0024009081535041,-0.0166059006005526,-0.0505350604653358,0.2255921661853790,0.0422000996768475,-0.0159002691507339,-0.0521200112998486,0.1306321918964386,0.0802961289882660,-0.0393662862479687,0.2799265086650848,-0.1570998281240463) * MODEL24_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [509] res = max(res, vec4(0.0)) + vec4(0.4090864360332489,-0.0040581431239843,-0.1866522729396820,0.5624378919601440) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [510] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [511] }
[ 397.805][d][vo/gpu-next/libplacebo] [512] 
[ 397.805][d][vo/gpu-next/libplacebo] [513] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [514] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [515] //!DESC mapping 2_4
[ 397.805][d][vo/gpu-next/libplacebo] [516] //!BIND MODEL21
[ 397.805][d][vo/gpu-next/libplacebo] [517] //!BIND MODEL22
[ 397.805][d][vo/gpu-next/libplacebo] [518] //!BIND MODEL23
[ 397.805][d][vo/gpu-next/libplacebo] [519] //!BIND MODEL24
[ 397.805][d][vo/gpu-next/libplacebo] [520] //!SAVE MODEL4
[ 397.805][d][vo/gpu-next/libplacebo] [521] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [522] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [523] {
[ 397.805][d][vo/gpu-next/libplacebo] [524] vec4 res = vec4(0.0032819050829858,-0.0068913456052542,-0.0168672092258930,0.0562067702412605);
[ 397.805][d][vo/gpu-next/libplacebo] [525] res += mat4(0.1641025543212891,0.0313241854310036,0.0711381211876869,-0.0296631902456284,-0.1502986103296280,-0.1068164110183716,-0.0381608307361603,0.0092772999778390,-0.1527430117130280,-0.0560315959155560,0.0389505252242088,0.1343159675598145,-0.3100968301296234,-0.0691766440868378,-0.0174769628793001,-0.1137761622667313) * MODEL21_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [526] res += mat4(0.0161639191210270,0.1862726509571075,0.1988800466060638,-0.0224490389227867,-0.1546811759471893,-0.0656597539782524,0.1375859528779984,0.0102049289271235,0.2183663100004196,-0.0581316426396370,-0.0591496415436268,0.1198177635669708,0.5113847255706787,0.0340892784297466,-0.0523570515215397,-0.0504959635436535) * MODEL22_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [527] res += mat4(0.0343936607241631,0.1063148081302643,0.0805083066225052,0.0396051108837128,-0.1236344054341316,-0.0233269948512316,0.1233193129301071,-0.2264101654291153,-0.2960208356380463,-0.1071716025471687,-0.1833824366331100,-0.0790851041674614,0.1837736070156097,0.0833743810653687,0.1230603456497192,0.0385375246405602) * MODEL23_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [528] res += mat4(-0.0663255229592323,-0.0819603651762009,-0.1970731317996979,0.1191908717155457,-0.0865668952465057,-0.3306200504302979,0.0536981187760830,-0.0735869854688644,0.2214231342077255,-0.0135698653757572,0.1337730437517166,-0.0007018639007583,0.0386643111705780,0.2869086861610413,-0.0204952880740166,-0.0785670056939125) * MODEL24_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [529] res += mat4(-0.5512277483940125,-0.0432629100978374,-0.0074420026503503,0.0599113143980503,-0.0683796256780624,-0.1501161009073257,0.1093824207782745,-0.1609797477722168,-0.1926446855068207,0.0696224570274353,0.1865710169076920,-0.0263149999082088,0.2819041907787323,0.1336970329284668,-0.1383060216903687,-0.0294327381998301) * MODEL21_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [530] res += mat4(-0.2117140591144562,-0.1964783072471619,0.0209140237420797,-0.1468834728002548,-0.0388768389821053,0.0099467393010855,-0.0096735656261444,0.0119368890300393,0.0105373486876488,-0.0117405820637941,0.0939888283610344,-0.0859694704413414,0.0858618542551994,-0.0481163673102856,0.2874279022216797,-0.0189808309078217) * MODEL22_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [531] res += mat4(-0.0355829447507858,0.1019678786396980,-0.2398020476102829,-0.1328687220811844,-0.2580155134201050,-0.0937134549021721,0.0362211614847183,-0.0406967476010323,0.2681314349174500,-0.2669462859630585,-0.3174448907375336,-0.0182126667350531,0.0024880690034479,0.0660213157534599,0.0105634322389960,0.1912512183189392) * MODEL23_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [532] res += mat4(-0.1245332434773445,0.0905841588973999,0.2586607336997986,-0.1941296160221100,-0.0360556505620480,-0.1410470008850098,-0.0345183834433556,-0.0158733837306499,-0.2102904766798019,-0.0320044979453087,-0.1005627065896988,0.0356406010687351,0.0979287698864937,0.1831983625888824,-0.0043986211530864,0.0148757481947541) * MODEL24_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [533] res += mat4(0.3109019398689270,0.0552714280784130,-0.0726910978555679,0.0104056596755981,0.0853902027010918,-0.0355966687202454,0.1460472345352173,-0.1897231042385101,0.0314988754689693,0.1150667071342468,0.0418409183621407,0.1117350310087204,0.0620010979473591,-0.0620957873761654,-0.0738903582096100,0.0698305815458298) * MODEL21_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [534] res += mat4(-0.0829380825161934,0.1496474444866180,0.0959206894040108,-0.2010160833597183,-0.0168314706534147,-0.0137099549174309,0.1006841659545898,-0.0071484511718154,-0.0873117819428444,-0.0358791500329971,0.0285834260284901,0.0123149370774627,-0.0544689930975437,-0.2894275784492493,-0.1473379582166672,0.0083891181275249) * MODEL22_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [535] res += mat4(-0.1977951079607010,-0.0100609613582492,-0.1164959520101547,-0.0656628012657166,0.0203267224133015,-0.0295156929641962,-0.0500625744462013,-0.1956685781478882,0.0031584915705025,0.0104866456240416,0.1058313697576523,0.1084064468741417,0.0490563884377480,0.0155234616249800,0.1480228304862976,0.1603093147277832) * MODEL23_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [536] res += mat4(0.1918130517005920,0.0445322617888451,0.1228738129138947,-0.1334928870201111,0.0340709649026394,-0.0980764999985695,-0.0386491529643536,-0.0087758591398597,-0.0257204398512840,-0.1249853745102882,-0.0486717447638512,0.0040949913673103,-0.0177379343658686,-0.0854057148098946,0.1303411871194839,0.0381813757121563) * MODEL24_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [537] res += mat4(-0.3268094956874847,-0.0587583854794502,-0.0753372758626938,-0.0717469453811646,-0.0948380231857300,0.2379926145076752,-0.1344134509563446,0.1646426320075989,-0.2222341299057007,0.0496150217950344,-0.1110209971666336,-0.1986591368913651,0.0837696939706802,-0.1599014550447464,0.0698972865939140,-0.1346876621246338) * MODEL21_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [538] res += mat4(-0.0088008726015687,0.0928560346364975,0.1201700568199158,-0.0589695684611797,0.0742420107126236,-0.2886217534542084,-0.1916337311267853,-0.1743781715631485,0.3392179906368256,-0.0635917037725449,-0.0728326812386513,0.0600978694856167,-0.0625639706850052,0.0922416672110558,-0.2094564437866211,0.0675566419959068) * MODEL22_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [539] res += mat4(-0.0475945174694061,-0.6589110493659973,0.2246629893779755,0.0212813597172499,-0.3203825354576111,-0.0757866054773331,-0.0717910528182983,0.0750807374715805,-0.3471343517303467,-0.0157684087753296,-0.0413894765079021,-0.0321107469499111,0.1142143234610558,-0.1607771664857864,-0.0635187104344368,-0.0914107412099838) * MODEL23_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [540] res += mat4(-0.0765698701143265,0.1051954478025436,-0.1580289453268051,0.1240042373538017,-0.1146782189607620,-0.2974278032779694,-0.1153521612286568,-0.0505782365798950,-0.0114173181355000,0.1053626239299774,-0.0833419337868690,-0.0015653657028452,0.0449684411287308,0.0872889980673790,0.0055605149827898,-0.0759068205952644) * MODEL24_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [541] res += mat4(-0.1162151694297791,-0.1879661232233047,0.1471571922302246,0.2256650924682617,0.1338957995176315,-0.0661436468362808,0.0708340033888817,0.0204926915466785,0.2562061846256256,0.2182419449090958,-0.1013555973768234,-0.0519635267555714,0.4835367500782013,0.1160502731800079,-0.2073138803243637,-0.1113100200891495) * MODEL21_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [542] res += mat4(-0.1780631393194199,-0.0397111028432846,0.1546480953693390,-0.0341892130672932,0.1070734411478043,0.0416513606905937,0.0254482682794333,0.1617107987403870,-0.3465618193149567,-0.1205257773399353,-0.0438895002007484,0.0651826635003090,-0.2734737694263458,0.1171417087316513,0.3170448839664459,-0.0755234733223915) * MODEL22_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [543] res += mat4(-0.1574621051549911,-1.0492645502090454,0.1584949642419815,-0.1538892239332199,0.2216238677501678,-0.0618984177708626,0.1072544455528259,0.1084627807140350,-0.2063041478395462,0.2229731529951096,-0.2824307680130005,-0.1881915926933289,0.0544787198305130,-0.0355097949504852,-0.1704217791557312,0.0130623206496239) * MODEL23_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [544] res += mat4(0.0266278758645058,0.2311389744281769,0.3218958079814911,-0.1309652477502823,0.1176318153738976,-0.0573505945503712,-0.1852329820394516,-0.0377184376120567,-0.2539016604423523,-0.1384127885103226,-0.0018377456581220,-0.1079373210668564,0.4843352735042572,0.0736699700355530,0.1098218485713005,-0.1038916707038879) * MODEL24_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [545] res += mat4(0.1099128574132919,0.0438408479094505,-0.0166533365845680,-0.0350774340331554,-0.0442881993949413,-0.1052688732743263,-0.0115521410480142,0.1902013570070267,-0.0444535575807095,0.0750951319932938,-0.2052775919437408,0.0231947842985392,-0.1450876593589783,0.0867368802428246,-0.1092976033687592,0.1778948009014130) * MODEL21_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [546] res += mat4(-0.0359055474400520,-0.3305373191833496,0.1462755799293518,-0.2761049866676331,0.1002137586474419,0.1180827245116234,0.1133952587842941,0.0132435662671924,0.1060045510530472,-0.1247289627790451,-0.0492945238947868,0.0873006954789162,-0.2079968899488449,0.0602515600621700,0.2395029217004776,-0.1352541893720627) * MODEL22_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [547] res += mat4(0.1150800585746765,-0.2130348682403564,-0.1119843721389771,-0.1227252334356308,-0.0955257937312126,0.2480934262275696,-0.0111157353967428,0.1311787962913513,0.1526826024055481,-0.0223417356610298,0.0739590153098106,-0.0481651462614536,-0.0804295837879181,-0.0389968454837799,-0.0625433549284935,0.0543623231351376) * MODEL23_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [548] res += mat4(0.0361396707594395,0.0296336356550455,0.1750188916921616,-0.1519836783409119,0.0162350311875343,-0.1338425129652023,-0.1135003790259361,0.0374445058405399,0.0949324071407318,0.0364654883742332,-0.0947682112455368,0.0463851653039455,0.1055105850100517,0.1499112248420715,0.0958667322993279,-0.0349789112806320) * MODEL24_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [549] res += mat4(0.0335129462182522,0.0428050272166729,0.0509153790771961,0.0379510596394539,-0.0178432818502188,0.1240853592753410,0.1084208562970161,0.0035838780459017,-0.1191760227084160,-0.3277745246887207,-0.0355614908039570,-0.2248533219099045,-0.1414517760276794,0.0640492141246796,0.1741104423999786,0.0384984835982323) * MODEL21_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [550] res += mat4(0.0007695676176809,-0.1972276717424393,0.0029564294964075,0.0754513815045357,-0.0537735819816589,0.2086908072233200,0.0307790040969849,0.1193686425685883,-0.1628971099853516,0.0022039418108761,0.1920519322156906,0.1291958838701248,-0.1244471892714500,-0.1340852081775665,-0.1556957662105560,0.1235789656639099) * MODEL22_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [551] res += mat4(0.0121951168403029,0.2273150086402893,0.0990521609783173,0.0550243407487869,-0.0612697005271912,-0.1683522760868073,0.1213394924998283,-0.0726550966501236,-0.0293549261987209,-0.1659870743751526,0.0168997850269079,0.0877104401588440,0.2721689939498901,-0.4388065934181213,-0.0915758162736893,-0.0231107920408249) * MODEL23_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [552] res += mat4(-0.1505561470985413,-0.0439922027289867,-0.0247748792171478,0.0848891362547874,0.0513998530805111,0.1589653044939041,-0.0003475825651549,0.0383524037897587,-0.1249711364507675,-0.2005844861268997,0.0720970481634140,-0.0005939776310697,-0.0706073492765427,-0.1407299935817719,0.0299627427011728,0.1136663109064102) * MODEL24_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [553] res += mat4(0.2135996818542480,0.2963324189186096,-0.0597860775887966,0.1724555790424347,-0.1320177018642426,0.1785143017768860,-0.1814694553613663,-0.0943221226334572,0.0590678341686726,-0.2324758917093277,-0.0872668847441673,-0.0634911581873894,0.1402362734079361,0.0035077689681202,0.0041122860275209,0.1941866129636765) * MODEL21_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [554] res += mat4(-0.0014266478829086,0.1091222763061523,0.2763024270534515,0.0375470593571663,0.1410333663225174,0.0072009870782495,-0.0820102766156197,0.1130331456661224,-0.2596918940544128,0.3680086135864258,-0.1441335082054138,0.1512158364057541,0.0632457733154297,-0.1289600133895874,-0.0239693094044924,-0.0755910500884056) * MODEL22_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [555] res += mat4(-0.0697470307350159,0.2321290969848633,0.0965754240751266,0.2174303680658340,-0.0845984369516373,0.1617104709148407,-0.2481762468814850,-0.1070342287421227,-0.0730159655213356,0.1370415836572647,-0.0302251055836678,-0.2314860671758652,-0.1372090876102448,-0.1742094308137894,-0.1067313402891159,-0.3790873587131500) * MODEL23_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [556] res += mat4(0.1651351004838943,-0.1991675049066544,-0.0099022816866636,0.2849749326705933,-0.0591459758579731,-0.1929800063371658,-0.0472643934190273,0.0479192845523357,-0.0837826579809189,0.1051614731550217,0.0691604614257812,0.1877252012491226,0.2782741487026215,-0.1949436962604523,0.0015928996726871,0.0484849028289318) * MODEL24_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [557] res += mat4(-0.1445056796073914,0.1106163188815117,-0.0092492094263434,0.0412899442017078,-0.0960058644413948,0.0294550489634275,-0.1975658684968948,-0.1197390705347061,-0.2530917823314667,-0.1585791260004044,0.0379120036959648,-0.0545626319944859,-0.1231669262051582,0.0308206696063280,0.0223998818546534,-0.1297578960657120) * MODEL21_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [558] res += mat4(-0.0123862475156784,0.2020634114742279,0.2371166795492172,0.0025295689702034,-0.1535065174102783,-0.0326876118779182,0.0469858162105083,-0.0063881147652864,0.0504077374935150,0.2487214356660843,0.0804338827729225,-0.0228144638240337,-0.1986591517925262,0.2256969809532166,0.0163792762905359,0.0209483671933413) * MODEL22_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [559] res += mat4(-0.0020803855732083,0.0473951436579227,0.0373679585754871,-0.0170538891106844,0.0731633901596069,-0.1969023048877716,0.0017634986434132,0.0272224806249142,0.1534947603940964,-0.0576414130628109,0.2062073051929474,0.2338484823703766,0.0272667519748211,-0.0157661326229572,0.0151125816628337,-0.0408271066844463) * MODEL23_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [560] res += mat4(-0.0359436161816120,-0.0802042931318283,-0.1251512616872787,0.0919738039374352,0.0100309969857335,0.0923718139529228,-0.0305849611759186,0.0868588313460350,-0.0382435917854309,-0.0286568589508533,-0.0163926277309656,-0.0322794467210770,-0.1390175670385361,-0.0400823466479778,-0.3385815620422363,0.0410657785832882) * MODEL24_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [561] res = max(res, vec4(0.0)) + vec4(0.0059091644361615,-0.0854371860623360,0.8381890654563904,0.1018658727407455) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [562] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [563] }
[ 397.805][d][vo/gpu-next/libplacebo] [564] 
[ 397.805][d][vo/gpu-next/libplacebo] [565] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [566] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [567] //!DESC mapping 3_1
[ 397.805][d][vo/gpu-next/libplacebo] [568] //!BIND MODEL1
[ 397.805][d][vo/gpu-next/libplacebo] [569] //!BIND MODEL2
[ 397.805][d][vo/gpu-next/libplacebo] [570] //!BIND MODEL3
[ 397.805][d][vo/gpu-next/libplacebo] [571] //!BIND MODEL4
[ 397.805][d][vo/gpu-next/libplacebo] [572] //!SAVE MODEL21
[ 397.805][d][vo/gpu-next/libplacebo] [573] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [574] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [575] {
[ 397.805][d][vo/gpu-next/libplacebo] [576] vec4 res = vec4(-0.0297627914696932,0.0233479980379343,-0.0115727400407195,-0.0482516959309578);
[ 397.805][d][vo/gpu-next/libplacebo] [577] res += mat4(-0.0715292766690254,0.1731889694929123,-0.1162043735384941,0.0872703641653061,-0.2417438626289368,-0.0727714076638222,-0.2988421916961670,-0.0814571157097816,-0.2005476653575897,-0.4621191620826721,-0.0479162558913231,-0.1643854230642319,0.1635089218616486,-0.0513518676161766,0.0216251611709595,-0.0309571940451860) * MODEL1_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [578] res += mat4(0.2955695986747742,0.0290399901568890,0.0901379436254501,0.0232001598924398,-0.1361453980207443,-0.0441172905266285,-0.1232148632407188,-0.1881834864616394,-0.1755786687135696,0.0273663830012083,0.0352580323815346,-0.1844559758901596,0.1430568099021912,-0.0159279126673937,-0.0572498738765717,0.2306421548128128) * MODEL2_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [579] res += mat4(-0.0425388365983963,-0.4139533340930939,0.0307378526777029,-0.0169012229889631,-0.0730413347482681,-0.0284235645085573,0.0335348658263683,-0.1478556990623474,-0.1122370585799217,0.0734600499272346,-0.3432141244411469,0.1191490739583969,-0.0025841903407127,0.2022673934698105,0.0554979182779789,0.1086086034774780) * MODEL3_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [580] res += mat4(0.0961083024740219,0.0671017393469810,0.2176315486431122,0.0922382175922394,-0.1009929105639458,-0.2450343519449234,0.0942095145583153,-0.2570039033889771,0.1358351260423660,0.2908486425876617,0.0804413855075836,0.2006997317075729,-0.0039052485954016,-0.3626460731029510,-0.1014555469155312,0.0964331626892090) * MODEL4_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [581] res += mat4(-0.0971006974577904,-0.0389276780188084,-0.0314850024878979,0.1350336670875549,-0.1409024894237518,0.2274368256330490,-0.0384895429015160,0.1151232644915581,0.0557192787528038,0.1984881460666656,0.0361695736646652,-0.0761853829026222,0.3261531591415405,-0.2390181273221970,0.0646768063306808,-0.4328581988811493) * MODEL1_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [582] res += mat4(0.0424791388213634,-0.1023455262184143,0.1806970685720444,-0.1666750311851501,-0.0449250824749470,-0.1187220439314842,-0.0273436456918716,-0.1562639772891998,-0.0410354509949684,-0.1975276321172714,0.0507811903953552,-0.0285244584083557,0.0516933687031269,0.0260300971567631,0.1281289011240005,-0.1290910094976425) * MODEL2_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [583] res += mat4(-0.0054361149668694,0.1182830706238747,0.1460492610931396,0.0969894230365753,0.0206248629838228,-0.0626167058944702,-0.1278409957885742,-0.1629029363393784,-0.0706755444407463,-0.1237544268369675,-0.2320539802312851,-0.0318306237459183,0.1231760755181313,0.0763057097792625,0.2986172735691071,0.0250785630196333) * MODEL3_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [584] res += mat4(0.0164651423692703,-0.1196076050400734,0.1230581402778625,-0.0607432350516319,-0.0185629073530436,0.1791573613882065,0.0020981710404158,0.1651514917612076,-0.0724884122610092,-0.0995426848530769,0.0572612322866917,-0.3528264164924622,-0.2358582317829132,-0.2111662477254868,0.0493735782802105,0.0648812726140022) * MODEL4_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [585] res += mat4(0.0344358943402767,0.0501006059348583,0.0922572016716003,-0.1580057293176651,-0.0618764460086823,0.1898567527532578,-0.2313892990350723,-0.0437577478587627,-0.1074003204703331,0.0724723264575005,0.1629010885953903,-0.2902281880378723,0.3717532455921173,0.0426183342933655,0.2241628617048264,-0.2138456553220749) * MODEL1_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [586] res += mat4(0.1172804757952690,-0.1180629804730415,-0.2417578548192978,0.0614611729979515,0.0425940379500389,-0.1815277636051178,-0.1933870613574982,-0.0141492756083608,-0.1804371625185013,0.2301990389823914,0.0540209971368313,-0.1831404864788055,-0.1223548874258995,0.0078023592941463,-0.1561884582042694,-0.2083907127380371) * MODEL2_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [587] res += mat4(-0.0922567769885063,0.0089658750221133,0.0659577623009682,-0.1610008925199509,0.0017648991197348,0.0358518138527870,-0.1354992985725403,-0.1005416512489319,0.0062369303777814,-0.1174328997731209,-0.1278121620416641,-0.0396228507161140,-0.0913600921630859,0.1509602367877960,-0.1314618289470673,-0.1133467033505440) * MODEL3_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [588] res += mat4(0.0772512182593346,0.1695914715528488,-0.0474010258913040,0.2802786529064178,0.0793515369296074,0.0706179738044739,0.0741332024335861,0.1958376169204712,0.1784187406301498,-0.2275161892175674,-0.0998003110289574,-0.2057882398366928,0.0793297365307808,0.1075959205627441,0.1569192558526993,0.0729442909359932) * MODEL4_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [589] res += mat4(0.1060236990451813,0.1750700324773788,-0.2424502372741699,0.1836295574903488,-0.0729414299130440,0.2677886188030243,0.1813510656356812,-0.1192134618759155,0.0619709230959415,-0.2674448788166046,-0.1404004693031311,-0.0665189176797867,0.2354937195777893,0.1137963756918907,0.1289096623659134,0.0566588677465916) * MODEL1_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [590] res += mat4(-0.4400564432144165,-0.1032809615135193,0.0991355329751968,-0.2288440167903900,0.0365141928195953,0.2145449817180634,0.1639973223209381,-0.2470153272151947,0.0611560009419918,-0.5086198449134827,-0.1124944239854813,-0.1122059151530266,0.0792017802596092,-0.3362250626087189,0.0555198341608047,-0.0117840450257063) * MODEL2_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [591] res += mat4(0.0189359430223703,-0.1189534962177277,-0.0456363633275032,0.1897108405828476,-0.1838847398757935,-0.0457949526607990,-0.0067561594769359,0.1434890478849411,0.0710982680320740,0.5555889010429382,-0.6704337596893311,0.5087915062904358,-0.0185496620833874,0.0089266048744321,0.0404587946832180,0.1801371574401855) * MODEL3_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [592] res += mat4(-0.2432683408260345,-0.1026095002889633,-0.0076264631934464,-0.1037460938096046,-0.0556914620101452,-0.0127330999821424,0.3779183924198151,0.0614337101578712,-0.5866527557373047,-0.0280173663049936,0.0034598920028657,-0.0555214807391167,-0.0811494663357735,-0.1102497428655624,0.0646675080060959,0.1262950003147125) * MODEL4_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [593] res += mat4(-0.0120423305779696,-0.0798698291182518,0.0221858005970716,-0.1509526222944260,0.1418212652206421,-0.2525954544544220,-0.3720241487026215,0.2736712098121643,0.5123170018196106,0.0657052099704742,-0.0294907148927450,-0.0309825930744410,0.3348740935325623,-0.2012142241001129,0.3404463529586792,0.3223938047885895) * MODEL1_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [594] res += mat4(0.1102259904146194,0.1434698402881622,-0.0190608594566584,-0.0480098314583302,0.3206558525562286,0.2552843391895294,-0.1834485381841660,0.0623174123466015,-0.0348141454160213,-0.0332642346620560,0.1529613286256790,-0.2308061569929123,-0.3723647296428680,0.1673920899629593,0.0498706474900246,0.0080200415104628) * MODEL2_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [595] res += mat4(0.1342022120952606,0.0603547543287277,-0.0393932871520519,-0.0002555101236794,-0.4983746707439423,-0.2552239298820496,0.2994193434715271,-0.1050826087594032,0.0412684455513954,0.3281650543212891,-0.1364625394344330,-0.1520996093750000,-0.0200216863304377,0.1808800697326660,0.1866618096828461,-0.1548729389905930) * MODEL3_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [596] res += mat4(-0.0078444750979543,-0.3394804298877716,0.1295289695262909,0.3150773346424103,-0.0493267662823200,-0.0072879814542830,-0.0081665106117725,0.1606685966253281,0.1945202350616455,0.2314610034227371,-0.1509118676185608,-0.2771163284778595,0.2958357334136963,-0.0885516181588173,-0.0133015299215913,-0.1843660324811935) * MODEL4_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [597] res += mat4(0.0480885617434978,0.0323774702847004,-0.0954127907752991,-0.1053214296698570,0.1383039951324463,0.1125908717513084,-0.1513436585664749,0.0429621934890747,-0.0784374922513962,0.1787795126438141,0.0777130052447319,0.0281713493168354,0.2269771695137024,-0.0295456033200026,0.1302640289068222,0.0056475140154362) * MODEL1_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [598] res += mat4(-0.2305415272712708,0.0247770268470049,-0.0537786073982716,0.1316420286893845,0.1218414977192879,-0.0801476910710335,-0.1045630574226379,0.1675985008478165,-0.1182029843330383,0.0822740346193314,-0.1217971742153168,-0.1402949392795563,0.0714140906929970,0.1870041936635971,0.1519945859909058,0.0590374357998371) * MODEL2_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [599] res += mat4(-0.0781458616256714,0.0344348810613155,0.0634453967213631,0.0553996153175831,-0.1186586692929268,-0.2548364102840424,-0.1083709821105003,0.0475101880729198,0.0016270061023533,-0.0197218004614115,-0.0851529911160469,-0.0193429626524448,-0.0650094971060753,-0.0082867527380586,0.1789152026176453,0.0087337959557772) * MODEL3_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [600] res += mat4(0.0380182191729546,0.0805546790361404,0.0853904336690903,0.3015394806861877,-0.1203808486461639,-0.1158597096800804,-0.0749548003077507,-0.0736039206385612,-0.2853331565856934,0.1613106131553650,-0.1881097257137299,-0.1434740275144577,0.2444828003644943,0.0767208337783813,0.1300336718559265,0.2683191299438477) * MODEL4_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [601] res += mat4(0.2516354620456696,-0.2763525545597076,-0.2192989587783813,-0.0833095014095306,-0.1054624170064926,0.1675528883934021,-0.2412341386079788,-0.1867644637823105,-0.0114389210939407,-0.0876984819769859,-0.1035546809434891,-0.0818920433521271,0.3093723654747009,-0.0750116035342216,-0.1008756235241890,0.1671010404825211) * MODEL1_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [602] res += mat4(-0.0777968019247055,-0.1985371410846710,-0.1108896210789680,-0.1090433448553085,0.2224930375814438,-0.1180416420102119,0.0097308177500963,0.0291840676218271,0.2742662727832794,0.0690862834453583,0.0837093815207481,0.0157564114779234,0.0440957769751549,-0.0861890986561775,0.1341084688901901,-0.0812584385275841) * MODEL2_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [603] res += mat4(-0.4022336006164551,-0.4127708375453949,0.0929193645715714,-0.2897278666496277,0.0013798275031149,-0.0068782637827098,0.1896951496601105,-0.0676433593034744,-0.0508255623281002,0.2964664101600647,0.0516446232795715,0.1443179994821548,-0.0079805180430412,0.0374053753912449,-0.0660960003733635,0.0883784294128418) * MODEL3_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [604] res += mat4(-0.0790410488843918,0.2355205565690994,0.0249150935560465,0.1897345483303070,-0.1926058083772659,-0.0480735898017883,-0.0822572931647301,-0.0860691443085670,-0.2901045680046082,0.0417460016906261,0.1334455907344818,-0.1952150017023087,-0.1147861108183861,-0.1789643168449402,0.0322010070085526,0.0186598971486092) * MODEL4_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [605] res += mat4(0.0447808206081390,-0.1023604422807693,0.1684717535972595,-0.0343314968049526,-0.0360606126487255,0.0762954801321030,-0.0149607853963971,-0.0458645634353161,-0.2234648913145065,0.0108903571963310,0.0477869287133217,-0.1024054586887360,0.4338375627994537,-0.1089848652482033,-0.0315672196447849,-0.1828128397464752) * MODEL1_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [606] res += mat4(-0.0698782056570053,-0.0526008941233158,-0.0059318128041923,-0.0637117773294449,-0.3613477647304535,0.2313130050897598,-0.0845053344964981,0.3473417758941650,0.0910944789648056,-0.0538481920957565,-0.1723407953977585,-0.0286697242408991,-0.2669581770896912,-0.1145130991935730,0.0193807259202003,0.0991438403725624) * MODEL2_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [607] res += mat4(-0.0375632494688034,0.1044827178120613,-0.2070501148700714,-0.1334659010171890,0.2349299639463425,-0.1319794058799744,-0.0667172893881798,0.2251613587141037,-0.0021280336659402,0.1837325841188431,-0.1609080433845520,0.0536463446915150,0.1554988920688629,0.1297923475503922,-0.0393977239727974,0.0443111732602119) * MODEL3_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [608] res += mat4(0.0832540765404701,-0.3266498148441315,0.0853905305266380,0.3139798045158386,-0.1752324253320694,0.0766637027263641,0.1677532345056534,-0.0602337345480919,0.0050285942852497,0.1663813740015030,0.0677275061607361,0.1415241807699203,-0.0664775148034096,0.0230648573487997,0.0635749250650406,0.0723993480205536) * MODEL4_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [609] res += mat4(0.1006224155426025,-0.0025526825338602,0.1227661296725273,0.1252972632646561,0.1155267581343651,0.2424338012933731,-0.0294103678315878,0.0550847500562668,0.0468512065708637,0.1326158940792084,0.0777293890714645,0.0691974163055420,0.1524984836578369,0.0730992481112480,0.1470288932323456,-0.1010911092162132) * MODEL1_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [610] res += mat4(0.0226090233772993,-0.0166164021939039,-0.1414489448070526,-0.0171599909663200,0.0361442640423775,-0.1463174372911453,-0.0309545882046223,-0.0243033729493618,0.2668134868144989,0.0204597841948271,-0.0880827531218529,0.1350718438625336,0.0123260952532291,0.0660683289170265,-0.0053338371217251,-0.0361907482147217) * MODEL2_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [611] res += mat4(-0.2132165133953094,-0.0501527264714241,-0.1114194616675377,-0.0607117861509323,-0.2046028822660446,-0.0339597649872303,0.0324752517044544,0.0353318229317665,-0.0101127438247204,-0.0141535671427846,-0.0533845908939838,-0.0250125806778669,-0.1040155366063118,0.0770960003137589,-0.1025016754865646,-0.1379424780607224) * MODEL3_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [612] res += mat4(0.1468542963266373,-0.1379085779190063,-0.0828191116452217,0.3041104674339294,-0.1435108035802841,-0.1066760495305061,-0.0183106474578381,-0.1628599017858505,0.1388022005558014,0.1614157855510712,-0.2055707871913910,0.1166576966643333,0.0837028175592422,0.0104528190568089,0.0349433906376362,0.1418810933828354) * MODEL4_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [613] res = max(res, vec4(0.0)) + vec4(0.2206345945596695,-0.0747795924544334,0.2523925602436066,0.2096080034971237) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [614] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [615] }
[ 397.805][d][vo/gpu-next/libplacebo] [616] 
[ 397.805][d][vo/gpu-next/libplacebo] [617] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [618] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [619] //!DESC mapping 3_2
[ 397.805][d][vo/gpu-next/libplacebo] [620] //!BIND MODEL1
[ 397.805][d][vo/gpu-next/libplacebo] [621] //!BIND MODEL2
[ 397.805][d][vo/gpu-next/libplacebo] [622] //!BIND MODEL3
[ 397.805][d][vo/gpu-next/libplacebo] [623] //!BIND MODEL4
[ 397.805][d][vo/gpu-next/libplacebo] [624] //!SAVE MODEL22
[ 397.805][d][vo/gpu-next/libplacebo] [625] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [626] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [627] {
[ 397.805][d][vo/gpu-next/libplacebo] [628] vec4 res = vec4(-0.0800784528255463,0.0601661987602711,0.0555461533367634,-0.0429110191762447);
[ 397.805][d][vo/gpu-next/libplacebo] [629] res += mat4(0.0863433033227921,0.0334390997886658,-0.0621653236448765,0.0653314962983131,0.1396726071834564,-0.0640471726655960,-0.1288087069988251,0.1212515309453011,-0.2136863470077515,-0.0960292816162109,0.0721855387091637,-0.1794071793556213,0.0069377738982439,0.0272297523915768,0.0409870855510235,0.0519649572670460) * MODEL1_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [630] res += mat4(0.1870677918195724,0.0433751679956913,0.0256017949432135,0.2058046162128448,-0.1154645085334778,0.0400379225611687,-0.0797111764550209,0.2218296825885773,0.0921559780836105,-0.0263769291341305,-0.0388038419187069,-0.1850817799568176,0.0085366042330861,-0.0584974028170109,-0.0297010596841574,0.1992808133363724) * MODEL2_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [631] res += mat4(0.1012331768870354,0.0804755762219429,-0.0941932648420334,0.0458225086331367,-0.0620205365121365,-0.0149404061958194,-0.0899603590369225,0.1046710759401321,-0.0238595884293318,0.0389227606356144,-0.0804460421204567,-0.0363119058310986,0.0425472334027290,-0.0407178513705730,0.0772528797388077,0.0322242043912411) * MODEL3_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [632] res += mat4(-0.0650736913084984,-0.0228200815618038,-0.0261835921555758,-0.0941885486245155,0.0476304963231087,0.0326966010034084,0.1129198446869850,0.1000680103898048,0.0727651417255402,0.0556358322501183,0.0236402824521065,0.0225147940218449,-0.1910788714885712,-0.0391473062336445,-0.0581454150378704,0.1671700030565262) * MODEL4_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [633] res += mat4(0.0510326772928238,0.0524010248482227,-0.0744537040591240,0.2741810083389282,-0.0049108345992863,0.0166528634727001,-0.0641776621341705,0.2379382699728012,-0.0698776021599770,0.1681815981864929,-0.1129539459943771,-0.4060722887516022,-0.0847840160131454,0.1202128604054451,0.2729610204696655,0.0295240450650454) * MODEL1_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [634] res += mat4(-0.0323551073670387,0.0563962310552597,0.0331644825637341,-0.0592999793589115,-0.0331613346934319,0.0325570479035378,-0.0329815931618214,0.0358480177819729,-0.0119067728519440,0.0905536040663719,0.0057493858039379,-0.2372787743806839,-0.1135656535625458,-0.0602519325911999,0.1643085777759552,-0.0635964497923851) * MODEL2_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [635] res += mat4(-0.1173389032483101,0.0870412066578865,-0.0124353049322963,0.0109290564432740,-0.0661696642637253,-0.0552388504147530,0.0940502062439919,0.1866775602102280,0.1403413712978363,-0.0060512828640640,0.0463944673538208,-0.2095566093921661,-0.1576434373855591,0.0970999002456665,0.0084690190851688,-0.1011850386857986) * MODEL3_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [636] res += mat4(0.0924861058592796,-0.0852512866258621,0.0165553353726864,-0.0370170325040817,0.1282806396484375,0.0605795681476593,0.1016359180212021,0.2076728492975235,-0.0237870141863823,-0.1141432970762253,-0.1275070458650589,-0.4265718758106232,-0.2792766690254211,-0.0883191749453545,-0.3561577200889587,0.0227870903909206) * MODEL4_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [637] res += mat4(0.1265138983726501,0.0129980593919754,0.0030515147373080,0.0304887685924768,0.0573397651314735,-0.0378817282617092,0.0535683855414391,-0.2408693581819534,0.0809831991791725,0.1466208547353745,-0.2839826643466949,0.2594286203384399,-0.3518882989883423,0.0289344508200884,0.0082612773403525,0.3203260600566864) * MODEL1_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [638] res += mat4(0.0037346682511270,-0.0536200106143951,0.0688617751002312,0.1081459745764732,0.0130062531679869,0.0118753341957927,0.0201178062707186,0.1944747269153595,-0.1346909999847412,0.0025842562317848,-0.1166134774684906,-0.0573785975575447,0.1021115630865097,-0.1084905415773392,0.0301196128129959,-0.1353875100612640) * MODEL2_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [639] res += mat4(-0.1086315810680389,-0.0011917124502361,-0.0572568252682686,-0.0782897993922234,-0.2079094797372818,-0.0723908543586731,0.0895951837301254,0.0784161761403084,0.0604014731943607,0.0076951296068728,0.0534028448164463,0.0661691501736641,0.0473716892302036,-0.0051339743658900,0.0258535612374544,-0.1799471229314804) * MODEL3_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [640] res += mat4(0.0549066811800003,0.0139851383864880,-0.0178427230566740,0.1612012088298798,0.0791748687624931,0.0351423695683479,0.0910226628184319,0.1308324038982391,0.0671674534678459,-0.0172936040908098,-0.1453430205583572,-0.0209893751889467,-0.1704347729682922,0.0479662641882896,-0.0695061981678009,-0.1380490809679031) * MODEL4_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [641] res += mat4(0.1236884221434593,-0.1681620776653290,-0.0359426774084568,0.1273903995752335,0.0388387516140938,0.0945257619023323,-0.0164667069911957,-0.0906677693128586,-0.2841546833515167,0.0869230031967163,0.0048854467459023,0.0225474387407303,-0.1071107387542725,-0.0425997376441956,0.0262702610343695,0.1595077365636826) * MODEL1_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [642] res += mat4(0.0810801610350609,0.1038522720336914,0.0611485466361046,-0.3561405837535858,-0.1126693263649940,-0.0193360056728125,0.2583414316177368,0.0493115559220314,0.0586208440363407,0.0832251384854317,0.1226955577731133,0.2620749771595001,0.0347377024590969,0.1315771043300629,0.0588914379477501,-0.0532840602099895) * MODEL2_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [643] res += mat4(0.0211118329316378,-0.0980333834886551,-0.0601611472666264,-0.1176832690834999,0.0429638028144836,0.0498136132955551,-0.0770675167441368,0.0378206856548786,0.1800107657909393,0.0579029917716980,-0.1195740178227425,0.1883942782878876,-0.2072988748550415,-0.1080424338579178,-0.0765368565917015,0.0031384895555675) * MODEL3_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [644] res += mat4(-0.1974163204431534,0.0669385790824890,-0.0399899557232857,-0.0021619442850351,0.0714476481080055,-0.0476636625826359,0.1724044233560562,0.0511768497526646,-0.0297900792211294,0.0045102522708476,-0.1993372738361359,0.0003970525576733,0.0944883078336716,0.0310522653162479,-0.1421799510717392,0.2299052476882935) * MODEL4_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [645] res += mat4(-0.4208259582519531,-0.0986439138650894,-0.2835440635681152,-0.0294859316200018,0.3098984062671661,-0.3548800647258759,0.1317964643239975,-0.3272322714328766,0.1362514495849609,-0.0225639119744301,-0.1513630151748657,0.2643545866012573,-0.3470867276191711,-0.1904748082160950,-0.0340475328266621,0.0036768142599612) * MODEL1_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [646] res += mat4(-0.3138784170150757,0.1349462121725082,0.0676471963524818,-0.0738755986094475,0.0931943804025650,0.0283133592456579,0.1848180294036865,0.4050738811492920,-0.1050206199288368,0.2549298107624054,-0.0077893063426018,0.1486955732107162,0.3408862650394440,0.2523297369480133,0.1654416918754578,-0.2436395287513733) * MODEL2_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [647] res += mat4(0.1160446926951408,-0.0445879623293877,0.0247049350291491,0.0062570590525866,-0.0095159197226167,-0.1733140796422958,0.0147938905283809,-0.3889542520046234,0.1751366853713989,0.3155197203159332,0.1774994581937790,0.1649117618799210,-0.0973552092909813,0.0334740914404392,-0.0596772246062756,0.0606712251901627) * MODEL3_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [648] res += mat4(0.0495687201619148,-0.1258669793605804,-0.3740898370742798,0.0510187558829784,0.3157816231250763,-0.1562098413705826,-0.2688758075237274,-0.0247120093554258,-0.1825216710567474,0.0924213230609894,-0.1385088860988617,-0.0282515622675419,0.1964389532804489,0.2084290981292725,-0.0777302980422974,0.0454940609633923) * MODEL4_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [649] res += mat4(0.0398128330707550,-0.0636569485068321,0.2285985201597214,0.1998784095048904,0.0649731829762459,-0.0402531512081623,-0.0861508175730705,-0.0429575666785240,0.1125769540667534,0.0397732742130756,-0.1661550551652908,0.0124100502580404,-0.0354430302977562,-0.1435054391622543,0.3802306354045868,0.0552034787833691) * MODEL1_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [650] res += mat4(0.1569491624832153,-0.1376131474971771,0.0755141004920006,0.1995209455490112,0.2166555076837540,0.1464705616235733,0.1837598532438278,0.2612685561180115,-0.1439852863550186,0.0105508659034967,-0.0021957466378808,0.0539668090641499,-0.0431668572127819,0.1122226640582085,0.0703489556908607,-0.1301628351211548) * MODEL2_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [651] res += mat4(0.1784058511257172,-0.1897154748439789,-0.0813948437571526,-0.2006646990776062,-0.3066448271274567,-0.1359203904867172,-0.2612110972404480,-0.3761848509311676,0.1486855298280716,-0.0164698231965303,0.1649738699197769,0.1022843271493912,-0.2213058322668076,-0.0240025985985994,0.1120308935642242,0.2801203727722168) * MODEL3_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [652] res += mat4(-0.1468936353921890,-0.1115343868732452,-0.1008864566683769,0.1679542511701584,0.0682343542575836,-0.0933846607804298,-0.1216487064957619,0.0215309672057629,0.3337945640087128,-0.1034064590930939,-0.0418914258480072,0.2459131777286530,-0.1160580292344093,-0.0482158772647381,0.0026166387833655,-0.0920813977718353) * MODEL4_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [653] res += mat4(0.1546383500099182,-0.2084158211946487,-0.0629161596298218,0.0382492206990719,0.0363818258047104,0.1070410534739494,-0.2440635263919830,0.1225695013999939,0.0082456143572927,0.0509152486920357,-0.0462263077497482,-0.0612664781510830,0.0533767491579056,0.0171542651951313,0.1760072112083435,0.1567699164152145) * MODEL1_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [654] res += mat4(0.0501260757446289,0.1624817848205566,-0.0994203835725784,0.1496951133012772,-0.0092940349131823,-0.0021811302285641,0.1220175325870514,-0.1029831096529961,-0.1810260862112045,0.0452216267585754,-0.0700483173131943,-0.0073990244418383,0.0233491137623787,0.0639664903283119,0.0033932463265955,0.0026856572367251) * MODEL2_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [655] res += mat4(0.0693031847476959,0.0691053494811058,-0.1194150373339653,0.1388358920812607,0.0268444269895554,-0.0204365402460098,0.0676208585500717,-0.0291143395006657,-0.0574333146214485,-0.0424519926309586,0.1059494689106941,-0.3091750442981720,0.0728080272674561,0.0133934207260609,0.0024368793237954,0.0628931522369385) * MODEL3_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [656] res += mat4(-0.1174662485718727,-0.0503035746514797,-0.0459302477538586,-0.0110216075554490,-0.1104523167014122,0.0398254394531250,-0.0093393912538886,0.1539675146341324,0.2413459122180939,0.1055762097239494,-0.0573232248425484,-0.1879101991653442,-0.1273294389247894,0.0419450737535954,-0.0199493728578091,-0.2330601662397385) * MODEL4_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [657] res += mat4(-0.5350001454353333,0.0792906731367111,-0.6070886254310608,0.0410490185022354,-0.0040650777518749,-0.0375015363097191,-0.1596268117427826,0.3763470649719238,-0.1193742081522942,-0.1248183399438858,-0.0616754628717899,-0.0590279363095760,0.0816724002361298,0.1651408672332764,0.2055018842220306,0.2115255743265152) * MODEL1_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [658] res += mat4(0.1698383688926697,0.2165744304656982,0.0250760782510042,0.4334062337875366,0.1194914653897285,-0.0202713608741760,-0.0632882118225098,-0.3159449696540833,0.0858143046498299,0.1173080801963806,-0.0675364583730698,0.1761376708745956,-0.1331922411918640,-0.0177139788866043,-0.0009689324069768,-0.1748967915773392) * MODEL2_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [659] res += mat4(-0.0938843935728073,0.0975184291601181,-0.0466296896338463,-0.1564050465822220,0.1656891852617264,-0.1460378319025040,0.0891223251819611,-0.3876872062683105,0.0940548479557037,0.0884495303034782,-0.0538008287549019,-0.2723111212253571,-0.0747759714722633,0.0591395869851112,0.0179298967123032,0.2336586862802505) * MODEL3_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [660] res += mat4(-0.0501639097929001,-0.2750373780727386,-0.2088612616062164,-0.0149673502892256,0.0502762719988823,-0.0897532775998116,0.0738222971558571,0.0263248290866613,-0.0247221030294895,-0.1395880430936813,-0.0793300420045853,-0.2120912224054337,-0.0027842561248690,-0.0529177561402321,-0.1180143877863884,-0.0696875900030136) * MODEL4_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [661] res += mat4(0.0743287727236748,0.1019553393125534,0.1403583735227585,-0.1122184395790100,0.0438413321971893,0.0910496637225151,-0.0259966999292374,0.0126460017636418,0.0535386800765991,-0.0354689247906208,0.0292387548834085,-0.0350559130311012,-0.1343073695898056,-0.0303360968828201,-0.0147162759676576,0.3910517692565918) * MODEL1_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [662] res += mat4(0.0296588856726885,0.0881471559405327,0.1373856067657471,0.1019971445202827,0.1808454245328903,-0.0342220216989517,-0.0420944765210152,-0.6015358567237854,-0.0824508517980576,-0.0614192001521587,-0.1511265486478806,-0.0268887262791395,0.1406127065420151,-0.0385055989027023,0.0026537049561739,-0.0619195066392422) * MODEL2_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [663] res += mat4(0.0815850496292114,0.0216190237551928,-0.0230527929961681,0.1292114406824112,-0.0530555695295334,-0.0551730543375015,0.0577747412025928,-0.4221645891666412,0.1327895075082779,0.0557661950588226,0.0697323381900787,-0.1003646105527878,0.2528257071971893,0.0525607354938984,0.0019721537828445,-0.1408862769603729) * MODEL3_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [664] res += mat4(-0.0808433815836906,0.0381549894809723,0.3329754471778870,0.0940926894545555,-0.2884401679039001,-0.0174879282712936,0.0848725885152817,0.2811516821384430,0.1665766537189484,0.0793718621134758,-0.0282808560878038,-0.1818253695964813,0.2004560530185699,-0.0653514489531517,0.0182535219937563,-0.1846230179071426) * MODEL4_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [665] res = max(res, vec4(0.0)) + vec4(0.2951025664806366,0.0104029830545187,0.3520583510398865,-0.0831468254327774) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [666] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [667] }
[ 397.805][d][vo/gpu-next/libplacebo] [668] 
[ 397.805][d][vo/gpu-next/libplacebo] [669] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [670] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [671] //!DESC mapping 3_3
[ 397.805][d][vo/gpu-next/libplacebo] [672] //!BIND MODEL1
[ 397.805][d][vo/gpu-next/libplacebo] [673] //!BIND MODEL2
[ 397.805][d][vo/gpu-next/libplacebo] [674] //!BIND MODEL3
[ 397.805][d][vo/gpu-next/libplacebo] [675] //!BIND MODEL4
[ 397.805][d][vo/gpu-next/libplacebo] [676] //!SAVE MODEL23
[ 397.805][d][vo/gpu-next/libplacebo] [677] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [678] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [679] {
[ 397.805][d][vo/gpu-next/libplacebo] [680] vec4 res = vec4(0.1746275871992111,-0.0590484403073788,-0.0089031318202615,-0.0523327812552452);
[ 397.805][d][vo/gpu-next/libplacebo] [681] res += mat4(-0.1618440300226212,0.1998101621866226,0.0363544672727585,-0.0084984162822366,0.0566640384495258,-0.1314530521631241,-0.0012227683328092,0.1731732487678528,-0.0032935268245637,-0.0119246309623122,-0.2567175626754761,-0.0161339771002531,-0.3835589587688446,-0.0752625912427902,-0.0297644697129726,0.1196997761726379) * MODEL1_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [682] res += mat4(-0.0886861383914948,0.0609822086989880,-0.0716331601142883,0.0216699447482824,0.0389269441366196,-0.1181505918502808,-0.0079563437029719,-0.0071328696794808,0.1834140866994858,0.1714826822280884,0.1122098416090012,0.0143771339207888,-0.0134153505787253,-0.0004706718318630,0.0140235750004649,0.0439790822565556) * MODEL2_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [683] res += mat4(0.0736068710684776,0.0892857611179352,0.0518068447709084,-0.2669993042945862,0.1540975272655487,-0.0741725414991379,-0.0659676492214203,-0.0897356867790222,-0.1877833753824234,0.0616847351193428,-0.1482483744621277,0.0850742831826210,0.1595470011234283,-0.0773108601570129,-0.0038176451344043,0.0939897075295448) * MODEL3_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [684] res += mat4(0.1388837993144989,0.0909691229462624,0.0916827619075775,-0.0153467888012528,-0.1304012387990952,0.1147436723113060,0.1621006727218628,0.1165047138929367,0.0530585944652557,0.0884261131286621,-0.2454318404197693,0.0409914329648018,0.0999249517917633,-0.1600988060235977,0.2057314813137054,-0.0503270477056503) * MODEL4_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [685] res += mat4(-0.2773551940917969,0.0164455007761717,-0.0282629746943712,-0.0718697905540466,0.0216807797551155,-0.1762721538543701,-0.0330557860434055,-0.0133427372202277,-0.0652035996317863,0.1391272991895676,0.0346835255622864,-0.0829549878835678,-0.0764060765504837,0.0841292068362236,-0.0162147004157305,0.1265232712030411) * MODEL1_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [686] res += mat4(-0.0384266935288906,0.2094697058200836,0.0434814058244228,0.1931668370962143,-0.0421549454331398,-0.0404144041240215,0.3540922701358795,0.0685768425464630,0.1292446702718735,-0.1113322824239731,-0.0940167158842087,-0.1310491114854813,0.1797087639570236,-0.0236974377185106,-0.0342520624399185,0.1020634621381760) * MODEL2_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [687] res += mat4(-0.2036115825176239,0.0493447370827198,0.0103224804624915,-0.0486506260931492,0.1190761774778366,-0.0659776702523232,0.0043487008661032,0.1981432735919952,-0.0161624196916819,0.0095701944082975,-0.1929414868354797,-0.1498128324747086,0.0244247131049633,-0.0294941011816263,-0.1593476682901382,-0.2390577048063278) * MODEL3_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [688] res += mat4(0.1461759507656097,-0.0333313830196857,0.2513360977172852,-0.0733192265033722,-0.2597442269325256,0.1393863856792450,-0.1596230864524841,0.1083291769027710,0.0289973504841328,0.1984079331159592,-0.2306379973888397,0.2721081972122192,-0.1209474653005600,0.0339374281466007,0.0631600096821785,-0.1763547062873840) * MODEL4_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [689] res += mat4(-0.1701353490352631,-0.0010533564491197,0.0417569577693939,-0.1237900033593178,-0.0724800974130630,-0.0098223546519876,-0.1951402276754379,-0.0620634332299232,-0.1501645594835281,-0.2030186504125595,-0.1601891815662384,-0.0469152480363846,-0.2523838579654694,0.1351573020219803,0.0290035661309958,0.1247513815760612) * MODEL1_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [690] res += mat4(-0.1715105324983597,-0.0532081499695778,0.0303595159202814,0.0529790408909321,0.0857051908969879,-0.0636811256408691,-0.0519826374948025,-0.0080783143639565,0.1449438333511353,0.0579281374812126,-0.0591283552348614,-0.1420114785432816,0.1017266958951950,0.0260981004685163,-0.1132156699895859,-0.0123310508206487) * MODEL2_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [691] res += mat4(-0.1004902496933937,-0.0350278764963150,0.0552739128470421,-0.0165827367454767,0.1286463290452957,-0.0933677330613136,0.1091039329767227,0.0889736041426659,-0.0159152485430241,0.0340360663831234,0.0274331439286470,-0.0117006609216332,0.0735773965716362,0.0681686401367188,-0.1445219516754150,-0.1345229297876358) * MODEL3_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [692] res += mat4(-0.1990878432989120,0.0735282748937607,-0.0212247092276812,-0.0660919919610023,-0.0372283123433590,-0.3168454170227051,-0.3716911077499390,0.1660467982292175,-0.0575560033321381,0.1274176537990570,0.1047659814357758,-0.0062028449028730,-0.0264114364981651,-0.1146406605839729,0.2474736869335175,-0.1150093302130699) * MODEL4_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [693] res += mat4(-0.1852548420429230,0.0301817897707224,-0.1796306818723679,-0.0539536997675896,-0.0861544609069824,0.0272293239831924,-0.0961528494954109,0.0094875833019614,-0.1388956755399704,-0.0841658860445023,0.0099667571485043,0.0912980064749718,-0.2261441349983215,-0.0699356347322464,-0.0974724367260933,0.0007884879014455) * MODEL1_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [694] res += mat4(0.0196004565805197,0.0967165976762772,0.0510145463049412,-0.2971990704536438,-0.2075344324111938,-0.1337816119194031,0.0916421487927437,-0.1737786382436752,-0.0646101683378220,0.1077352613210678,-0.0202293433248997,0.1864847391843796,-0.1333149075508118,-0.1826637238264084,0.0886014327406883,-0.0865875110030174) * MODEL2_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [695] res += mat4(-0.0359812155365944,0.2326048165559769,-0.0102448798716068,-0.1014230772852898,-0.1426873505115509,0.0583809576928616,0.0015121867181733,0.0304742716252804,-0.2802968323230743,0.2814865410327911,-0.0140944560989738,0.2187573760747910,0.0958401560783386,-0.1116528436541557,0.1284672766923904,-0.1590556055307388) * MODEL3_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [696] res += mat4(-0.0153815429657698,0.0977058485150337,0.1896835118532181,-0.0771903172135353,0.1046055704355240,0.1246827319264412,0.1887676268815994,-0.0571716092526913,0.0184322372078896,0.0857969820499420,0.0730322748422623,0.0004153645422775,-0.0335378125309944,0.1585696637630463,0.0140486620366573,0.3349110782146454) * MODEL4_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [697] res += mat4(-0.0456557273864746,0.1787832677364349,0.0716037824749947,0.1728865951299667,0.2125745415687561,-0.0017559597035870,0.2089785188436508,0.0148878330364823,0.0034830330405384,0.0543410405516624,-0.0296627804636955,0.3388250172138214,-0.1204711720347404,-0.1216476336121559,-0.0212371069937944,0.0185126140713692) * MODEL1_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [698] res += mat4(0.0322685204446316,0.0645453408360481,-0.0318228974938393,-0.5770997405052185,-0.0841740369796753,-0.0493599027395248,-0.1073398739099503,0.2122568339109421,-0.0047964402474463,-0.2670905888080597,-0.0932159200310707,0.2880645692348480,-0.0302834697067738,0.3417943716049194,-0.0838492363691330,-0.0347214117646217) * MODEL2_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [699] res += mat4(0.0942589715123177,-0.3347375094890594,-0.2089314609766006,-0.0585087798535824,0.0209457054734230,-0.0036193837877363,-0.1519787460565567,0.0261379629373550,-0.4171157181262970,0.1723660975694656,-0.0120002934709191,-0.0741550922393799,0.0614670962095261,-0.3183984160423279,-0.1242398023605347,0.0456036888062954) * MODEL3_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [700] res += mat4(0.2504308819770813,-0.2908189296722412,0.0706233233213425,0.0229402594268322,0.1793572753667831,0.4399637579917908,0.1961695402860641,0.2600020170211792,0.0267500113695860,-0.2956083714962006,-0.1545525789260864,-0.0680101439356804,0.0772314816713333,0.1947140246629715,-0.2304847836494446,0.1559426635503769) * MODEL4_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [701] res += mat4(0.0254084020853043,0.0143640609458089,-0.1011864244937897,-0.0637633875012398,0.0066258278675377,0.0501989498734474,0.0472157597541809,0.0302973743528128,-0.2184672206640244,-0.2747908234596252,0.0688384771347046,-0.0086462032049894,-0.0253418385982513,0.3476903736591339,-0.0135789196938276,-0.1596286147832870) * MODEL1_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [702] res += mat4(-0.1426071077585220,-0.1022232100367546,0.1065651252865791,0.2090902626514435,0.1317799091339111,-0.0591793619096279,0.0090052448213100,-0.0339265801012516,0.1623293608427048,-0.0459783859550953,-0.0751388892531395,0.1850524693727493,-0.0826449170708656,0.0686464533209801,-0.2325639575719833,-0.1469850093126297) * MODEL2_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [703] res += mat4(-0.2151412367820740,-0.0676531940698624,-0.0429317690432072,-0.0649980604648590,0.1936004459857941,0.0002625535998959,0.1684567779302597,0.0310039315372705,-0.0775401666760445,0.0357225723564625,-0.1493204683065414,-0.0788859650492668,0.0883925035595894,-0.1610161513090134,-0.0558772087097168,-0.1929859071969986) * MODEL3_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [704] res += mat4(-0.3081156015396118,0.2264124602079391,0.1303359121084213,-0.1311945021152496,-0.0385647900402546,-0.0088353734463453,0.2643297016620636,0.0507023893296719,0.0390773490071297,-0.2826982438564301,-0.0494790114462376,0.1243329346179962,-0.1640353500843048,0.0131124975159764,-0.0968557670712471,0.1643428951501846) * MODEL4_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [705] res += mat4(-0.0989076346158981,-0.0334014482796192,-0.3113177716732025,0.0686458572745323,-0.1668999195098877,0.0651461035013199,0.0439879596233368,0.3751374185085297,0.0281269066035748,-0.0284191202372313,-0.0185704305768013,-0.0939012020826340,-0.4917090535163879,0.0625381022691727,-0.0613853000104427,0.0779522061347961) * MODEL1_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [706] res += mat4(-0.0728778094053268,-0.0275109652429819,-0.0418985672295094,0.1163628101348877,0.0401391871273518,-0.0631067529320717,0.0277893338352442,-0.0954257026314735,-0.0470459796488285,0.1047819703817368,0.0913279280066490,0.0249992460012436,0.1136940047144890,-0.2014856785535812,0.0985599905252457,-0.1122722849249840) * MODEL2_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [707] res += mat4(0.0956766679883003,-0.1262397319078445,0.0166769940406084,0.0468945465981960,-0.0274486690759659,-0.0854712650179863,0.1337692588567734,-0.2008243203163147,-0.1521631479263306,0.0212111305445433,0.0383604131639004,-0.0195516720414162,0.0198214910924435,0.1770288348197937,0.0368678346276283,0.1655136495828629) * MODEL3_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [708] res += mat4(0.1180694699287415,0.1039629802107811,0.0403625555336475,-0.1761263161897659,-0.0295404102653265,-0.0512598678469658,0.0247700307518244,-0.0967251881957054,0.1145866885781288,-0.1135821565985680,0.1203542724251747,-0.1189083904027939,0.0908341705799103,0.0376799516379833,0.1457102447748184,-0.0045865699648857) * MODEL4_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [709] res += mat4(0.1373792886734009,-0.0482295379042625,-0.3178740739822388,0.0062594260089099,0.0326205827295780,-0.1979365795850754,-0.1103377044200897,0.3276640176773071,0.1034870445728302,0.0701611638069153,-0.0422053523361683,-0.0349965393543243,-0.2665976285934448,0.0061737671494484,-0.2535285055637360,0.0681938156485558) * MODEL1_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [710] res += mat4(-0.1180967763066292,-0.3691545128822327,0.0975397154688835,0.0726222991943359,0.0440486706793308,0.0360046587884426,-0.0320130400359631,-0.2132626920938492,-0.0126434508711100,-0.0057320413179696,0.0735760778188705,-0.0725968852639198,-0.0195002797991037,0.1049626320600510,-0.0148137910291553,0.0647722929716110) * MODEL2_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [711] res += mat4(0.0097092175856233,-0.2370650321245193,0.0297642145305872,0.0636898577213287,0.1022664830088615,-0.2521987259387970,-0.0125537738204002,0.0030122662428766,-0.2327201366424561,0.1294907331466675,-0.0056548668071628,-0.1326764374971390,0.0026329485699534,0.2231305390596390,0.0888321921229362,0.0245353560894728) * MODEL3_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [712] res += mat4(-0.2372648864984512,-0.2223076969385147,0.1755518466234207,-0.0967209786176682,0.0053516509942710,-0.0253434944897890,0.0676113739609718,0.0832309424877167,0.0885825827717781,-0.1796900480985641,0.0941217839717865,0.0266025383025408,0.1529871970415115,0.0311777200549841,-0.1308124810457230,0.1173249036073685) * MODEL4_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [713] res += mat4(0.2355858385562897,-0.0161250513046980,-0.1165864318609238,-0.0023262593895197,0.0069537642411888,-0.1146456673741341,-0.0612708181142807,0.1533866822719574,0.0011828735005111,-0.0368986092507839,-0.1097171083092690,-0.0303024817258120,-0.0892137959599495,-0.3005513548851013,0.0144686242565513,0.0228804852813482) * MODEL1_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [714] res += mat4(0.0589909143745899,-0.1868754923343658,0.1008629575371742,0.0971835255622864,0.1638525426387787,-0.0178131945431232,0.0825938880443573,-0.0696079060435295,0.0306149572134018,-0.0429666899144650,-0.0001169422612293,0.0969540551304817,0.0822020322084427,0.0986539125442505,-0.0367026105523109,-0.1076621934771538) * MODEL2_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [715] res += mat4(0.0358192399144173,-0.1379347741603851,0.0518680214881897,-0.1362865269184113,0.0364480391144753,-0.1000291854143143,0.1347571909427643,-0.1371024399995804,-0.0178725812584162,-0.0215145014226437,-0.0576326176524162,-0.0130453128367662,0.0124894492328167,-0.0132130654528737,-0.0579834058880806,0.0457525141537189) * MODEL3_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [716] res += mat4(-0.3675563037395477,0.1724306344985962,0.1096320524811745,-0.2637751400470734,0.0581088587641716,0.0619215145707130,0.0129340672865510,0.0311038084328175,-0.1626955717802048,0.1913541108369827,0.1168983653187752,-0.0320205204188824,-0.1452983766794205,0.1460324823856354,-0.0126651180908084,0.0847869813442230) * MODEL4_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [717] res = max(res, vec4(0.0)) + vec4(0.0064368355087936,-0.0599537827074528,0.7356653809547424,-0.0830979347229004) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [718] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [719] }
[ 397.805][d][vo/gpu-next/libplacebo] [720] 
[ 397.805][d][vo/gpu-next/libplacebo] [721] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [722] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [723] //!DESC mapping 3_4
[ 397.805][d][vo/gpu-next/libplacebo] [724] //!BIND MODEL1
[ 397.805][d][vo/gpu-next/libplacebo] [725] //!BIND MODEL2
[ 397.805][d][vo/gpu-next/libplacebo] [726] //!BIND MODEL3
[ 397.805][d][vo/gpu-next/libplacebo] [727] //!BIND MODEL4
[ 397.805][d][vo/gpu-next/libplacebo] [728] //!SAVE MODEL24
[ 397.805][d][vo/gpu-next/libplacebo] [729] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [730] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [731] {
[ 397.805][d][vo/gpu-next/libplacebo] [732] vec4 res = vec4(0.0461147427558899,-0.0120034879073501,0.0273515135049820,0.0243768375366926);
[ 397.805][d][vo/gpu-next/libplacebo] [733] res += mat4(0.0060074115172029,0.2207488715648651,0.1044297516345978,-0.0314605683088303,-0.0534808039665222,0.2488775104284286,0.1019420027732849,-0.0809287056326866,-0.0531805455684662,-0.0510390065610409,-0.1737698912620544,0.1856619417667389,0.1017938777804375,0.0702183395624161,0.0870548263192177,-0.0747616738080978) * MODEL1_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [734] res += mat4(-0.0094744889065623,0.0576100498437881,0.0217750407755375,-0.0027546279598027,0.0273027233779430,-0.0413229689002037,0.0427047610282898,-0.0099019948393106,0.1676833778619766,-0.0397027544677258,0.0294998101890087,-0.1300226300954819,0.0075711007229984,0.0595151297748089,-0.0506487488746643,-0.0480958707630634) * MODEL2_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [735] res += mat4(0.0599877163767815,0.0105878561735153,-0.0032674681860954,0.1148747205734253,-0.1121257841587067,0.0698131620883942,-0.0219279993325472,-0.0558177195489407,-0.1219292208552361,-0.0235506836324930,0.0883483812212944,0.1164284721016884,-0.0457680597901344,0.1083591654896736,-0.0279626306146383,0.0356098301708698) * MODEL3_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [736] res += mat4(0.0599624700844288,-0.1387125104665756,0.0351434312760830,-0.0429556928575039,0.1185617223381996,-0.0643500387668610,0.0634371191263199,0.0653858855366707,-0.0867805853486061,0.0596882253885269,-0.0352161116898060,-0.0785199552774429,-0.0734189078211784,0.0208924449980259,0.0198888536542654,-0.0310864765197039) * MODEL4_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [737] res += mat4(0.1213063225150108,0.0603364109992981,-0.1066197231411934,-0.0044972454197705,-0.0946354940533638,-0.0499847196042538,-0.0556244365870953,-0.0457266308367252,0.0757296904921532,0.1569635868072510,-0.0482605472207069,-0.0589025728404522,-0.0454733557999134,0.2009361088275909,-0.0487583465874195,0.0871640965342522) * MODEL1_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [738] res += mat4(-0.0295043271034956,-0.1685239821672440,0.0911383628845215,-0.0060183531604707,-0.1161255836486816,-0.1125246137380600,0.1035758480429649,-0.0314676202833652,-0.0710696205496788,0.0750509351491928,-0.0363083295524120,0.1961462348699570,0.0269433837383986,-0.2264668643474579,-0.0282712746411562,-0.1127226427197456) * MODEL2_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [739] res += mat4(0.0634349212050438,-0.0331308767199516,0.0653550997376442,-0.0206641592085361,0.0281374659389257,0.0539534986019135,-0.1970105618238449,-0.0121004534885287,-0.0747145786881447,0.1484979540109634,0.0210344269871712,0.0323301590979099,0.0177238471806049,0.0544043704867363,-0.1810936033725739,0.0506396554410458) * MODEL3_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [740] res += mat4(-0.0176739711314440,0.1003051027655602,0.0366284996271133,-0.0660326033830643,-0.1114999800920486,0.1471468955278397,-0.0822408050298691,-0.2268454730510712,-0.0063908072188497,0.1641340404748917,0.0085185635834932,0.0284069329500198,0.0844939574599266,-0.0016259928233922,-0.1205195561051369,0.1047934368252754) * MODEL4_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [741] res += mat4(-0.0281592495739460,0.1176444217562675,-0.0251336041837931,0.1287141591310501,-0.1425689905881882,0.3827143013477325,-0.0427964143455029,0.1236991658806801,-0.0380968227982521,0.1499413251876831,0.1026009544730186,-0.1796231567859650,0.0922874882817268,-0.0601332411170006,-0.0263096559792757,-0.0226147584617138) * MODEL1_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [742] res += mat4(-0.0324916876852512,0.0298872813582420,0.0057610399089754,0.0680342614650726,-0.2175364643335342,-0.0588446408510208,0.0082299550995231,0.1559699177742004,0.0651763677597046,-0.0641697347164154,0.0509882383048534,0.0071386056952178,0.0630166083574295,0.0533893406391144,0.1176380813121796,0.0608720183372498) * MODEL2_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [743] res += mat4(0.1485216915607452,0.0658079534769058,-0.0597689487040043,-0.1286578029394150,-0.0900678932666779,-0.2987190186977386,0.1169696375727654,0.0687731951475143,-0.0511906556785107,0.0251907166093588,0.0045387633144855,0.1111728921532631,0.1211145371198654,0.1511317342519760,-0.0928584635257721,0.0798585116863251) * MODEL3_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [744] res += mat4(0.0162846613675356,0.0738218873739243,-0.1343379765748978,-0.1606522500514984,-0.0186370685696602,0.1373590528964996,-0.1318798512220383,0.1430330127477646,0.0887300148606300,-0.0246499236673117,-0.0147760873660445,0.1307861953973770,-0.1824202984571457,-0.0030121221207082,-0.0932729467749596,-0.1720006912946701) * MODEL4_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [745] res += mat4(-0.2150996178388596,0.0455644093453884,-0.1078609526157379,0.1735802441835403,-0.1301975548267365,0.1685937047004700,0.1911363303661346,-0.0891376733779907,-0.0364498421549797,0.0667242482304573,0.1034033522009850,0.0173498578369617,-0.0759475678205490,-0.1012467816472054,-0.0661595910787582,-0.0711040720343590) * MODEL1_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [746] res += mat4(0.0795376002788544,-0.0630012899637222,-0.0254351980984211,0.0470942482352257,0.0814805701375008,0.0405446551740170,0.1365794390439987,-0.1612278670072556,-0.1136572957038879,0.0060544367879629,0.2471180707216263,0.1093329787254333,-0.0581107586622238,0.1631389409303665,0.2181573361158371,0.0142594585195184) * MODEL2_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [747] res += mat4(-0.0590384602546692,-0.1919236183166504,0.1077950596809387,0.1355304718017578,-0.0094886217266321,0.1465269774198532,-0.0713021233677864,-0.1617381423711777,0.0031017146538943,-0.0611343868076801,-0.0718012824654579,-0.3817854523658752,0.0940945297479630,-0.1221695318818092,-0.0053516253829002,-0.1660410910844803) * MODEL3_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [748] res += mat4(0.0535830669105053,-0.0586577504873276,0.0649587139487267,0.0419045761227608,0.0018692668527365,0.0685357227921486,-0.0205108541995287,0.0530773773789406,0.0465269535779953,0.0222215298563242,0.1355331987142563,-0.1228150874376297,0.1565892100334167,-0.0927698835730553,0.0917807593941689,0.1539154350757599) * MODEL4_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [749] res += mat4(0.0090340804308653,-0.2130286842584610,-0.0233876369893551,-0.0654385164380074,-0.1145231798291206,0.0861955583095551,-0.1860310584306717,-0.1112443357706070,0.0197177473455667,-0.0538864098489285,-0.0266967788338661,0.2040428668260574,-0.2275297194719315,-0.1026256904006004,0.0469926670193672,0.0298950597643852) * MODEL1_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [750] res += mat4(0.1825171560049057,0.0170364808291197,0.2145848870277405,-0.0386943295598030,0.2625264823436737,0.1769100427627563,0.0087655792012811,-0.0004144945705775,-0.1045442447066307,-0.1227875649929047,0.1286858171224594,0.0426650308072567,0.1830211132764816,-0.0603344142436981,0.0272741150110960,0.3765966892242432) * MODEL2_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [751] res += mat4(-0.0752007439732552,0.2408396005630493,0.0992759242653847,0.0315074175596237,0.2725537717342377,-0.1701408177614212,-0.0642304867506027,-0.0587790608406067,-0.1628836244344711,0.1431336998939514,-0.1610722690820694,0.2190662026405334,0.0449019074440002,0.0818963199853897,0.1264521181583405,0.0088969189673662) * MODEL3_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [752] res += mat4(0.0582603104412556,0.0973093137145042,-0.0191185511648655,-0.0215654596686363,-0.0824003890156746,-0.0225835703313351,-0.1518614888191223,-0.2169683575630188,0.0831836536526680,0.0164752900600433,0.0778153613209724,-0.0850613713264465,0.0667014792561531,0.0038516391068697,0.1872790157794952,0.0480948314070702) * MODEL4_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [753] res += mat4(0.0888383761048317,0.0835947766900063,-0.1232017353177071,0.0280101820826530,-0.1994116306304932,-0.0356188192963600,0.1967804878950119,-0.0114974286407232,0.3202255666255951,-0.0016983132809401,-0.0367093719542027,-0.1333489567041397,-0.1250879019498825,-0.1763122975826263,0.0504228882491589,0.0030881476122886) * MODEL1_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [754] res += mat4(-0.0153876990079880,0.0446944907307625,-0.1979818344116211,-0.0534936636686325,0.1451451182365417,0.0568690486252308,-0.2717144191265106,0.0425464622676373,-0.0732646659016609,0.0743831694126129,-0.0530346594750881,-0.0019031401025131,0.1321124881505966,0.1035860851407051,0.0820627361536026,0.1278143078088760) * MODEL2_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [755] res += mat4(0.2153458297252655,0.0391175188124180,-0.0236182156950235,0.0404955409467220,0.0295149832963943,-0.1487762629985809,0.1640791893005371,0.0385955497622490,-0.0274684540927410,0.0448402203619480,0.0230138376355171,0.2305448502302170,0.2349425554275513,0.0347341261804104,-0.1812306940555573,0.0448086783289909) * MODEL3_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [756] res += mat4(0.0821553096175194,-0.2018666416406631,-0.1961932927370071,-0.2490227222442627,-0.0794398412108421,-0.1899710893630981,-0.0585319437086582,0.1173806637525558,0.0690401345491409,0.1784539520740509,-0.0726652741432190,0.0397658273577690,0.1332925111055374,-0.0743199735879898,-0.1693005412817001,-0.0287169832736254) * MODEL4_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [757] res += mat4(-0.1320780515670776,0.1219193637371063,-0.1138207986950874,-0.0141576780006289,0.1283804774284363,0.0673040524125099,-0.0495231337845325,-0.0292650591582060,-0.0581900738179684,-0.0373179689049721,-0.0465314462780952,0.1109184324741364,0.1175744384527206,-0.0329008996486664,-0.1010450571775436,-0.0011986799072474) * MODEL1_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [758] res += mat4(0.0098679577931762,0.0272576548159122,-0.0567160807549953,0.0065590757876635,0.0122767025604844,-0.0183790959417820,0.0509208813309669,0.0315469652414322,0.1159411296248436,-0.0938494279980659,-0.0296165347099304,-0.1612941622734070,0.0638355463743210,-0.0013110557338223,-0.0045966170728207,-0.0461147353053093) * MODEL2_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [759] res += mat4(-0.0107733188197017,0.0181073453277349,-0.0057433275505900,0.1069890558719635,0.0857119038701057,0.0759622603654861,0.0938105806708336,0.0635568946599960,0.0552852787077427,0.0822926685214043,-0.0221574269235134,-0.1184075251221657,0.0214842744171619,-0.0144939552992582,-0.0300573930144310,-0.0143279479816556) * MODEL3_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [760] res += mat4(0.1226008906960487,-0.0588289275765419,0.1121380403637886,-0.2353355139493942,-0.0671533271670341,0.0539816692471504,-0.0943918377161026,-0.0480185300111771,0.0463513582944870,0.1809400320053101,-0.0320061855018139,0.0128821898251772,-0.0186175126582384,-0.0647647753357887,0.0722306817770004,-0.1342751383781433) * MODEL4_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [761] res += mat4(-0.0327064730226994,-0.2066194117069244,0.0218781325966120,0.0181390158832073,0.0035486747510731,0.0545527115464211,0.2227300256490707,-0.2350160628557205,-0.0185456071048975,-0.0303886495530605,0.0601501576602459,0.1043350771069527,0.0620208457112312,-0.0458515845239162,-0.0780213847756386,-0.0179665479809046) * MODEL1_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [762] res += mat4(0.0488881096243858,-0.0708610564470291,-0.0012425658060238,-0.0412186346948147,0.0640096217393875,0.0626741796731949,0.0552340559661388,-0.3064629435539246,-0.0292783565819263,0.1167604699730873,-0.1134363487362862,0.1923737972974777,-0.0988217145204544,-0.0147633086889982,0.0631238743662834,-0.1074907258152962) * MODEL2_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [763] res += mat4(0.0131619926542044,-0.2013303041458130,-0.0602233745157719,0.0955137908458710,-0.1319464743137360,0.0221472568809986,-0.1470891684293747,-0.1646981388330460,0.0485235750675201,0.3194743990898132,-0.1101070642471313,-0.2113962918519974,0.0583330467343330,0.0081626567989588,-0.0439963042736053,0.0016609502490610) * MODEL3_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [764] res += mat4(0.1837371736764908,-0.2438327223062515,-0.0704804360866547,-0.2409804314374924,0.0515604801476002,-0.0290824491530657,-0.0245893429964781,0.1603142768144608,0.1606649309396744,-0.2307328581809998,-0.1058155596256256,-0.0788411498069763,0.0303703248500824,-0.0297486875206232,0.0340660288929939,-0.1469554007053375) * MODEL4_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [765] res += mat4(0.0502060949802399,0.0411885306239128,0.0010212846100330,0.0843432620167732,0.0001806462823879,0.0074967266991735,0.0222097355872393,-0.0946598649024963,0.0861231237649918,0.0012705585686490,-0.0371481589972973,0.0006548990495503,0.0356924943625927,-0.0702549368143082,0.0776697769761086,0.1263285875320435) * MODEL1_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [766] res += mat4(-0.1143549010157585,0.0929083451628685,-0.0439333021640778,-0.1125805154442787,-0.1066882833838463,-0.0348495431244373,-0.0054034423083067,0.1299663782119751,0.0082324920222163,-0.0758538544178009,0.0736239030957222,-0.1355893909931183,0.0710743591189384,0.1680320650339127,-0.0824335813522339,-0.0389037281274796) * MODEL2_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [767] res += mat4(0.0137959141284227,-0.0202024988830090,-0.0083243101835251,0.0881107375025749,-0.0052221990190446,-0.1068753376603127,0.0263776388019323,0.0399091839790344,-0.1103867068886757,0.1305039525032043,-0.0388842448592186,0.0683066993951797,-0.0747373327612877,0.1004664450883865,-0.0047122188843787,-0.1256082803010941) * MODEL3_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [768] res += mat4(0.0312461499124765,0.0551777333021164,0.0218436680734158,-0.0214927513152361,-0.0168972723186016,-0.0062185809947550,-0.1160231828689575,0.0052660536020994,-0.0647544413805008,0.0234192013740540,-0.0011579070705920,-0.0423905178904533,0.0257901065051556,0.0990991443395615,-0.1329589933156967,-0.0768146812915802) * MODEL4_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [769] res = max(res, vec4(0.0)) + vec4(0.8790985941886902,0.0867976248264313,1.2857843637466431,0.2769601047039032) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [770] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [771] }
[ 397.805][d][vo/gpu-next/libplacebo] [772] 
[ 397.805][d][vo/gpu-next/libplacebo] [773] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [774] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [775] //!DESC mapping 4_1
[ 397.805][d][vo/gpu-next/libplacebo] [776] //!BIND MODEL21
[ 397.805][d][vo/gpu-next/libplacebo] [777] //!BIND MODEL22
[ 397.805][d][vo/gpu-next/libplacebo] [778] //!BIND MODEL23
[ 397.805][d][vo/gpu-next/libplacebo] [779] //!BIND MODEL24
[ 397.805][d][vo/gpu-next/libplacebo] [780] //!SAVE MODEL1
[ 397.805][d][vo/gpu-next/libplacebo] [781] //!COMPONENTS 4
[ 397.805][d][vo/gpu-next/libplacebo] [782] vec4 hook()
[ 397.805][d][vo/gpu-next/libplacebo] [783] {
[ 397.805][d][vo/gpu-next/libplacebo] [784] vec4 res = vec4(0.0245896913111210,0.0564524903893471,-0.0258339159190655,-0.0441423952579498);
[ 397.805][d][vo/gpu-next/libplacebo] [785] res += mat4(-0.0653484389185905,-0.0171436872333288,-0.2532782256603241,0.0998985320329666,0.0924250781536102,-0.0163434278219938,0.0913933441042900,-0.1827297061681747,-0.0478271320462227,0.0587512925267220,0.1550112813711166,0.1029701605439186,0.0672952756285667,0.0320084653794765,0.2258289009332657,-0.0080792019143701) * MODEL21_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [786] res += mat4(-0.0188051648437977,0.1536642462015152,-0.0344853997230530,-0.1488827466964722,0.0151132596656680,-0.0673566460609436,-0.0215231124311686,0.0795399621129036,0.1174249723553658,0.1022302508354187,-0.0725360810756683,-0.1190352663397789,-0.0125633934512734,0.1520208865404129,0.0566303916275501,-0.3020266592502594) * MODEL22_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [787] res += mat4(0.2191436737775803,-0.0607945173978806,0.1564232110977173,0.2435040771961212,0.0963229313492775,-0.0474626980721951,-0.0709689185023308,-0.1175886690616608,0.0223026517778635,-0.1220858544111252,-0.1184478029608727,0.0506237372756004,-0.0162153337150812,0.0082820607349277,0.0274791847914457,0.0843581706285477) * MODEL23_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [788] res += mat4(-0.0087914550676942,0.0485048890113831,-0.0903512910008430,-0.0246761720627546,0.0823677033185959,-0.0376343242824078,0.1352162361145020,0.1135207340121269,0.1571764796972275,-0.0683304518461227,0.3254932761192322,-0.0424848347902298,-0.0391832776367664,0.0096993092447519,-0.1128944680094719,0.1890618950128555) * MODEL24_texOff(vec2(-1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [789] res += mat4(0.0143719799816608,-0.0904514864087105,0.1176171973347664,0.1804000288248062,0.0743178948760033,0.1240402832627296,0.1509943008422852,-0.1625838577747345,-0.0849058032035828,0.0785433426499367,0.1234269663691521,0.1407991945743561,0.0003905151970685,0.0627029240131378,0.0102879041805863,-0.1734748780727386) * MODEL21_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [790] res += mat4(-0.0844041407108307,0.0806053727865219,-0.0921724662184715,0.3410502076148987,-0.0075223105959594,-0.1158209443092346,0.0455959849059582,0.0638735145330429,-0.1112278923392296,-0.0356120951473713,-0.0087511669844389,-0.0614690035581589,-0.1354994624853134,0.3176909387111664,0.2936832904815674,-0.1059164479374886) * MODEL22_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [791] res += mat4(0.1398497223854065,0.0204981938004494,0.0164668224751949,-0.0517952330410480,-0.0288665182888508,-0.1311181634664536,0.4171459078788757,-0.1453948616981506,0.0298577379435301,-0.0949943661689758,-0.0907058566808701,-0.0276026632636786,-0.0896767973899841,0.1484858840703964,0.2206455618143082,-0.0860537812113762) * MODEL23_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [792] res += mat4(-0.0335331559181213,0.0025525190867484,-0.1560014337301254,-0.1342071741819382,-0.0677199065685272,-0.0089819738641381,-0.0495180077850819,-0.0632316395640373,-0.2128975391387939,0.0027543848846108,0.1108841449022293,-0.0570502988994122,0.0881383717060089,-0.0195535626262426,0.0762903094291687,-0.1264097839593887) * MODEL24_texOff(vec2(-1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [793] res += mat4(0.0529780499637127,0.1018974334001541,0.0326400659978390,-0.0962158590555191,-0.1468810141086578,-0.0256285909563303,-0.2588896453380585,0.0913029834628105,0.0253914948552847,-0.0553680919110775,0.1593533307313919,-0.0151518126949668,0.0131061058491468,-0.0042189368978143,0.0168147869408131,0.0464231371879578) * MODEL21_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [794] res += mat4(0.1347013115882874,0.0031280769035220,0.0632375553250313,0.0164458788931370,0.0929609835147858,0.0151070887222886,0.0347167067229748,-0.0317315049469471,-0.0255817957222462,0.0942514836788177,-0.0995384231209755,-0.0500684417784214,-0.0059168981388211,0.0258659869432449,-0.1869609057903290,0.0477692335844040) * MODEL22_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [795] res += mat4(0.1774889379739761,-0.0709905251860619,-0.0137063981965184,-0.2320486158132553,-0.0582067482173443,0.1536869853734970,-0.0009370255284011,-0.2110949903726578,0.0120139708742499,0.1462446749210358,0.0995438247919083,-0.0193443391472101,-0.0708608105778694,0.0948539301753044,0.0479873456060886,-0.0760522559285164) * MODEL23_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [796] res += mat4(0.1423541754484177,-0.1337492018938065,-0.1060811132192612,-0.0105242654681206,0.1306200772523880,-0.0282976534217596,-0.0137293385341763,-0.1783144325017929,0.0872784107923508,0.0001822611666285,0.0101514179259539,0.0383956469595432,0.0876951217651367,-0.0862476155161858,0.0772039666771889,0.0118202529847622) * MODEL24_texOff(vec2(-1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [797] res += mat4(0.0319972261786461,-0.0206712689250708,0.0106683243066072,0.1148343607783318,0.0913600474596024,0.0260466169565916,0.0186695586889982,-0.1306256651878357,0.0765640065073967,-0.0614291317760944,0.1938241273164749,-0.0539899244904518,-0.0587648041546345,0.0778395086526871,-0.0711869001388550,0.0332156717777252) * MODEL21_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [798] res += mat4(-0.0126498322933912,0.0334200374782085,-0.0785960629582405,-0.3546700179576874,-0.1116795912384987,-0.1195055320858955,0.1249141097068787,-0.1378840357065201,0.0378439798951149,0.1871648728847504,0.0051422608084977,-0.1834005266427994,-0.1288445740938187,0.1087067052721977,0.3449945151805878,-0.3748841583728790) * MODEL22_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [799] res += mat4(0.0620118416845798,0.1118181794881821,0.0328355953097343,0.0980391725897789,-0.0299117844551802,0.1445594280958176,0.0518078617751598,-0.0655557587742805,0.0243519898504019,0.0146929537877440,0.0193250346928835,-0.0788926407694817,0.0568324290215969,-0.0458735823631287,-0.0368785671889782,0.1402463763952255) * MODEL23_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [800] res += mat4(-0.1870654374361038,0.0894448459148407,-0.1889628916978836,-0.0232791528105736,-0.0138780958950520,0.0512575805187225,0.0174714457243681,0.2192083597183228,0.0869019702076912,0.0481701642274857,0.3518438935279846,0.0262693818658590,-0.0312276221811771,-0.0027679880149662,-0.1179760694503784,0.1436907798051834) * MODEL24_texOff(vec2(0,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [801] res += mat4(-0.1315789818763733,0.0194391217082739,-0.0995545163750648,-0.0072876387275755,0.0138440541923046,0.1586909145116806,0.1120520308613777,-0.6375424265861511,0.1209003403782845,-0.0651459246873856,0.0752716138958931,-0.0102750072255731,-0.0261461716145277,-0.1390973180532455,-0.0382248312234879,-0.0030483892187476) * MODEL21_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [802] res += mat4(-0.4304977953433990,-0.0095329973846674,-0.2512598037719727,0.0471396297216415,-0.1743258684873581,0.2160708457231522,0.0403432995080948,-0.1732864826917648,-0.3874642252922058,0.1046387627720833,-0.2529928982257843,0.0244380701333284,-0.3292799592018127,-0.2356676012277603,-0.2959703505039215,-0.2189486324787140) * MODEL22_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [803] res += mat4(0.0365215316414833,0.1002634093165398,0.0619824491441250,0.1369695365428925,-0.1063488647341728,0.0098725482821465,-0.1356381028890610,-0.5006310343742371,-0.0639387145638466,-0.1120544373989105,0.0129344556480646,0.2065624594688416,0.2725291550159454,-0.0516843423247337,-0.0092691034078598,-0.2097492069005966) * MODEL23_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [804] res += mat4(0.2406554371118546,0.1975058168172836,-0.1539026647806168,-0.0882489830255508,-0.0756465122103691,0.0439450852572918,-0.2869063913822174,-0.1570243090391159,-0.0749546140432358,0.2968116998672485,0.3528815805912018,-0.2398973256349564,0.2514208555221558,0.0626198798418045,0.1455227732658386,0.0944792181253433) * MODEL24_texOff(vec2(0,0));
[ 397.805][d][vo/gpu-next/libplacebo] [805] res += mat4(-0.4595023393630981,-0.2058207839727402,0.0502749308943748,0.3694543838500977,-0.2910492718219757,-0.0441987328231335,-0.4320786893367767,0.2074717730283737,0.3730063438415527,-0.0257667601108551,0.2656162977218628,-0.3614572882652283,-0.0178579371422529,0.0130779799073935,0.1697733700275421,-0.0385593473911285) * MODEL21_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [806] res += mat4(0.1124547794461250,0.0423551425337791,0.4898521006107330,-0.0329426936805248,0.1709355264902115,0.0682674571871758,-0.0483704023063183,0.0013539963401854,0.0816856399178505,-0.0228508021682501,-0.1024779230356216,0.0399373695254326,-0.1708602011203766,-0.0475707314908504,-0.0181731060147285,0.1983705759048462) * MODEL22_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [807] res += mat4(0.1453388035297394,-0.0507464557886124,0.1711730211973190,-0.1609306186437607,0.0158013831824064,-0.0628019198775291,-0.3184438943862915,0.0517499297857285,-0.1600885987281799,-0.0093765668570995,0.1485843211412430,0.1046434864401817,0.1017120182514191,-0.0877534523606300,0.1898654252290726,-0.1564996391534805) * MODEL23_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [808] res += mat4(0.1107233688235283,0.0811155214905739,-0.1743934601545334,0.1445496082305908,-0.0408654026687145,-0.1263519078493118,0.0121899815276265,0.1858384013175964,-0.0182942561805248,0.0504682287573814,0.0897843763232231,0.0821224376559258,0.0429486185312271,-0.0226930510252714,-0.0250590406358242,0.0927384421229362) * MODEL24_texOff(vec2(0,1));
[ 397.805][d][vo/gpu-next/libplacebo] [809] res += mat4(0.0107231596484780,0.0384478829801083,0.0747210234403610,0.0388660915195942,0.0261439718306065,-0.0546189658343792,0.0177107993513346,-0.0028901547193527,0.0029605559539050,0.0865470096468925,0.0161688849329948,0.0452424027025700,0.0247271750122309,-0.0205207131803036,-0.0088375331833959,-0.0019766588229686) * MODEL21_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [810] res += mat4(0.0094255693256855,-0.0921519324183464,-0.1327351927757263,-0.0381416976451874,-0.0038110411260277,0.0171951055526733,-0.1711906045675278,-0.1367378234863281,0.0920925959944725,-0.0710203573107719,0.0996406897902489,-0.0582377053797245,-0.0266940034925938,0.0448273010551929,-0.1979091763496399,0.1335388720035553) * MODEL22_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [811] res += mat4(0.0238035824149847,-0.0133999036625028,0.0061529395170510,0.1255139410495758,0.0388781055808067,0.0291835684329271,0.0551339872181416,-0.1606706529855728,0.0338330194354057,-0.1037900745868683,-0.0328014530241489,-0.0198868066072464,0.0230250116437674,-0.0231587272137403,0.0623753778636456,0.0465454682707787) * MODEL23_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [812] res += mat4(0.1033568680286407,-0.0034395102411509,-0.0732170641422272,-0.1395775675773621,0.0008408227004111,-0.0524956099689007,0.2917293012142181,0.0606278106570244,0.0586279667913914,-0.0644974112510681,0.2248893529176712,0.1098565012216568,-0.0196710061281919,-0.0490864627063274,-0.0968969017267227,0.1817520260810852) * MODEL24_texOff(vec2(1,-1));
[ 397.805][d][vo/gpu-next/libplacebo] [813] res += mat4(-0.1345648318529129,-0.1313161551952362,-0.1336174458265305,-0.2252556085586548,0.0636816993355751,-0.0965770184993744,0.1143066585063934,0.1710583716630936,-0.0250703692436218,-0.0009792899945751,0.1436624974012375,0.3651139140129089,-0.0845746025443077,0.0219677351415157,0.0115714222192764,-0.1153914406895638) * MODEL21_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [814] res += mat4(-0.0202999673783779,0.0672200024127960,0.1436795294284821,0.0992530584335327,-0.1629952490329742,0.0349263064563274,0.0618989691138268,0.1392581909894943,0.1946942061185837,0.0765725672245026,-0.1634234935045242,0.0089409062638879,-0.0010639271931723,-0.1904647648334503,-0.0474357940256596,0.3164717555046082) * MODEL22_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [815] res += mat4(-0.0075370194390416,0.0082064233720303,0.0952156335115433,-0.0231044236570597,0.0292573478072882,-0.0110807241871953,0.0130898989737034,0.0586067922413349,0.0328429341316223,-0.0809331387281418,0.0385117083787918,0.0483587346971035,-0.0352002419531345,0.1854575872421265,0.1936850994825363,-0.2298589944839478) * MODEL23_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [816] res += mat4(0.0270163342356682,0.0122284442186356,-0.2171431928873062,-0.0998823270201683,-0.1082078143954277,-0.0760262757539749,-0.1542190909385681,0.0349837131798267,-0.0979675129055977,0.0823767483234406,-0.0079912403598428,-0.0388192124664783,-0.0414294898509979,-0.0379936695098877,0.1669883877038956,-0.0869284644722939) * MODEL24_texOff(vec2(1,0));
[ 397.805][d][vo/gpu-next/libplacebo] [817] res += mat4(-0.0828094929456711,0.1256643533706665,-0.0979614257812500,-0.0854950547218323,-0.0014640224399045,0.0192003473639488,0.0466261431574821,-0.1341795623302460,0.0154160819947720,-0.0386534146964550,0.1002370417118073,-0.0650761500000954,0.0323768630623817,0.1333772838115692,-0.1987136155366898,0.1546087563037872) * MODEL21_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [818] res += mat4(0.1159242987632751,0.0006910369265825,0.1308811455965042,-0.0213402658700943,0.0405803546309471,-0.0383512564003468,0.0890353694558144,0.1099917590618134,0.1611964702606201,-0.1116045713424683,0.1646122187376022,0.0474735125899315,0.1015052795410156,0.1022351980209351,0.1142621859908104,-0.0429832041263580) * MODEL22_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [819] res += mat4(0.1612645834684372,-0.0498285554349422,0.0914964154362679,-0.0059407050721347,-0.0165884681046009,-0.0184176061302423,-0.1091514974832535,0.1211658716201782,-0.0366156250238419,0.0675899907946587,-0.0267470702528954,-0.0996635481715202,0.1509227156639099,-0.1126389577984810,0.2691150307655334,-0.1196719333529472) * MODEL23_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [820] res += mat4(-0.0719074979424477,-0.1210005432367325,-0.0384017266333103,0.1585819125175476,0.0496928170323372,0.1353731751441956,0.0899796411395073,-0.0481677874922752,0.0372412055730820,-0.0392692834138870,0.0295560974627733,0.0012322159018368,-0.0087124463170767,0.0922929421067238,0.0146871637552977,-0.0052666170522571) * MODEL24_texOff(vec2(1,1));
[ 397.805][d][vo/gpu-next/libplacebo] [821] res = max(res, vec4(0.0)) + vec4(0.8464692234992981,0.5500837564468384,-0.1248027756810188,0.2187583744525909) * min(res, vec4(0.0));
[ 397.805][d][vo/gpu-next/libplacebo] [822] return res;
[ 397.805][d][vo/gpu-next/libplacebo] [823] }
[ 397.805][d][vo/gpu-next/libplacebo] [824] 
[ 397.805][d][vo/gpu-next/libplacebo] [825] //!HOOK LUMA
[ 397.805][d][vo/gpu-next/libplacebo] [826] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.805][d][vo/gpu-next/libplacebo] [827] //!DESC mapping 4_2
[ 397.805][d][vo/gpu-next/libplacebo] [828] //!BIND MODEL21
[ 397.805][d][vo/gpu-next/libplacebo] [829] //!BIND MODEL22
[ 397.806][d][vo/gpu-next/libplacebo] [830] //!BIND MODEL23
[ 397.806][d][vo/gpu-next/libplacebo] [831] //!BIND MODEL24
[ 397.806][d][vo/gpu-next/libplacebo] [832] //!SAVE MODEL2
[ 397.806][d][vo/gpu-next/libplacebo] [833] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [834] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [835] {
[ 397.806][d][vo/gpu-next/libplacebo] [836] vec4 res = vec4(0.0175074525177479,-0.0047364882193506,-0.0084411334246397,0.0035256391856819);
[ 397.806][d][vo/gpu-next/libplacebo] [837] res += mat4(-0.0480010136961937,-0.1343079656362534,0.0645311027765274,-0.0644031465053558,-0.0538113787770271,-0.0227606464177370,-0.0423174388706684,-0.0261141508817673,-0.1440474241971970,0.1288496255874634,0.1799035966396332,-0.0223238989710808,-0.0740576013922691,0.0981010049581528,-0.1037731990218163,0.0416370891034603) * MODEL21_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [838] res += mat4(-0.0417819097638130,0.1551035344600677,-0.0239609945565462,0.0304872877895832,-0.0691562667489052,-0.2267636209726334,-0.0630688667297363,-0.0703103616833687,-0.1503293067216873,0.1167647615075111,-0.3796092271804810,-0.0008291414706036,0.0197293329983950,0.3391273021697998,0.1915420293807983,0.0008481143158861) * MODEL22_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [839] res += mat4(-0.2060295492410660,-0.0914813131093979,-0.2207963615655899,0.0459092557430267,0.1682387292385101,-0.0664327740669250,-0.3226602971553802,-0.0534421056509018,-0.1546132266521454,-0.1516201794147491,-0.0316327884793282,-0.0623282082378864,-0.1816293448209763,-0.0685993954539299,-0.2880327999591827,-0.0051845279522240) * MODEL23_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [840] res += mat4(0.0786298960447311,0.0270987283438444,-0.3566032648086548,0.1891276985406876,0.0286210849881172,0.1369487494230270,-0.1538154333829880,0.1552916914224625,0.0612586475908756,0.0444604717195034,0.1713744103908539,-0.0052093677222729,-0.4477379918098450,0.0646615847945213,0.0873522907495499,0.0386319421231747) * MODEL24_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [841] res += mat4(0.2086060345172882,-0.1614016145467758,0.0190296415239573,0.0740138590335846,0.1525633186101913,0.0877423286437988,0.0534576699137688,-0.0874929428100586,0.0251203868538141,0.0813786834478378,0.0072769154794514,-0.0213872659951448,-0.1514928340911865,-0.1249638646841049,0.0269498638808727,-0.0403702668845654) * MODEL21_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [842] res += mat4(-0.0573907643556595,0.1777344793081284,-0.0208020638674498,0.1082416549324989,-0.0066461754031479,-0.1471273750066757,-0.1109659671783447,-0.1967584490776062,0.0520027615129948,0.1744100600481033,-0.0866893455386162,0.0521196126937866,-0.1111962720751762,0.2578849494457245,0.0758958086371422,-0.0219332072883844) * MODEL22_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [843] res += mat4(-0.0983687564730644,-0.1850960999727249,-0.0071408874355257,-0.1401805728673935,-0.0220640227198601,0.0299275238066912,-0.0515552386641502,0.0965097919106483,-0.1162311807274818,-0.1869183778762817,-0.0949063077569008,-0.0229981746524572,0.2898806333541870,-0.0298093520104885,-0.0481651835143566,-0.0288270357996225) * MODEL23_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [844] res += mat4(-0.1003090888261795,0.0436553694307804,0.1775131076574326,-0.1477206498384476,-0.0298471394926310,0.0205325130373240,0.0586276613175869,-0.1037211269140244,-0.0695721209049225,0.0549397654831409,0.0947181135416031,0.0529413968324661,0.0863253995776176,0.0469287596642971,0.0449821725487709,-0.0241899043321609) * MODEL24_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [845] res += mat4(-0.1211910247802734,-0.3052413761615753,0.0169579628854990,-0.0641336143016815,0.1699889749288559,0.1745817065238953,0.0080171367153525,0.0268176067620516,0.1161174401640892,0.1034058853983879,-0.1357428133487701,0.1994089782238007,-0.0745746344327927,-0.0363201685249805,0.0364447906613350,0.0110124265775084) * MODEL21_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [846] res += mat4(-0.0487930662930012,0.0618621483445168,-0.0395322144031525,-0.0195404980331659,-0.0302182529121637,-0.0480493493378162,-0.0577133707702160,-0.1336986720561981,-0.0101361190900207,0.0313749276101589,0.0325442813336849,-0.2634004950523376,-0.0831234455108643,0.1967868804931641,0.0048729451373219,0.1039245948195457) * MODEL22_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [847] res += mat4(0.0409979224205017,-0.2442563772201538,-0.0236967988312244,-0.3859650790691376,-0.0643352568149567,-0.0728686898946762,0.0049785948358476,-0.1437445580959320,0.1004550606012344,-0.0772348940372467,-0.0482463613152504,-0.3332922458648682,0.0256427358835936,0.1685166358947754,0.0272788256406784,-0.4085102081298828) * MODEL23_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [848] res += mat4(-0.0211565401405096,-0.1626104116439819,0.0284491907805204,-0.1418842077255249,0.0103359222412109,-0.1527252644300461,-0.0928445905447006,-0.5329686403274536,0.0327462218701839,0.1604103296995163,-0.0178291033953428,0.0588009394705296,0.0411824546754360,-0.0159548502415419,-0.0018045334145427,0.0286312848329544) * MODEL24_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [849] res += mat4(-0.0309444386512041,0.0231781564652920,0.1852395534515381,-0.0168346129357815,-0.2314974367618561,-0.0360039956867695,-0.2159185707569122,-0.0130332857370377,-0.5791385173797607,-0.0737100690603256,0.1887456774711609,-0.0219424348324537,-0.1909762620925903,0.1152988150715828,-0.4957872331142426,0.0618326328694820) * MODEL21_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [850] res += mat4(0.2506857514381409,-0.0043585551902652,-0.1934715062379837,0.0649409368634224,-0.2589422166347504,0.0400143414735794,-0.2337707579135895,0.0399382933974266,-0.1424361616373062,0.0392200648784637,-0.1813862323760986,0.0080322762951255,0.1221851557493210,0.0111790243536234,-0.2193935960531235,0.0059386924840510) * MODEL22_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [851] res += mat4(-0.1597285121679306,0.0889686718583107,-0.2236305326223373,0.0588147006928921,0.1574491709470749,-0.0964525118470192,-0.5783151984214783,-0.0340328738093376,0.0633905678987503,0.0708716139197350,0.2274163514375687,-0.1210286617279053,-0.2061548084020615,-0.0207926221191883,-0.3335348963737488,0.0423245169222355) * MODEL23_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [852] res += mat4(0.0488459095358849,0.1095822602510452,-0.4207163453102112,0.2414125651121140,0.1407435983419418,-0.1845635920763016,-0.1378209739923477,-0.0200054123997688,-0.0694461315870285,-0.0022526558022946,0.1342491358518600,-0.0023073400370777,-0.6095444560050964,-0.0950125902891159,-0.7251784205436707,0.2423328310251236) * MODEL24_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [853] res += mat4(0.2415496855974197,-0.0585765317082405,0.1593109816312790,0.0626687258481979,0.2224820852279663,-0.2307796925306320,0.0768452435731888,0.0829574316740036,-0.2597571909427643,0.1257913708686829,-0.2896285355091095,0.0643807947635651,0.0096511272713542,0.3747943937778473,-0.2029984444379807,-0.3848374783992767) * MODEL21_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [854] res += mat4(-0.3095230162143707,0.2932464480400085,-0.0855004340410233,0.0083002299070358,0.3269173502922058,-0.0519075430929661,0.3341305553913116,0.3832143247127533,0.1612893491983414,-0.0617025941610336,-0.1096682175993919,0.0501950569450855,-0.2666099369525909,-0.1698767989873886,-0.0136316046118736,0.0491012446582317) * MODEL22_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [855] res += mat4(-0.0336366519331932,0.1908683478832245,0.1038978844881058,0.0770497694611549,0.0243871454149485,-0.1141177415847778,0.1508713364601135,0.0266605950891972,-0.1041049361228943,-0.0613549947738647,-0.1496941000223160,-0.0195678863674402,-0.1927543431520462,0.5222921967506409,-0.0823149234056473,-0.1889417171478271) * MODEL23_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [856] res += mat4(0.1135266348719597,-0.0783745273947716,0.2007993757724762,-0.0049735582433641,-0.0252500716596842,-0.3737607002258301,-0.0556491278111935,0.0795422121882439,0.0116529790684581,0.0503573492169380,0.1911917924880981,0.2337296158075333,0.1673430800437927,-0.0949500054121017,0.2264642864465714,-0.0315525829792023) * MODEL24_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [857] res += mat4(-0.2343485802412033,-0.0328138172626495,-0.1651944816112518,0.0622981637716293,-0.1078934818506241,0.2200268507003784,0.0088709210976958,0.0555980317294598,0.2523943483829498,-0.1903018802404404,-0.0166855063289404,0.2306086122989655,0.1289296597242355,0.2200663685798645,0.0551473647356033,-0.3149621486663818) * MODEL21_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [858] res += mat4(0.0586751662194729,-0.0210384558886290,-0.0078766560181975,0.1684098541736603,-0.0545115098357201,0.0242117270827293,0.1112878993153572,-0.4243190884590149,-0.0121069345623255,0.1292012184858322,0.0321275703608990,-0.1330144554376602,-0.0052329269237816,-0.0779407694935799,-0.0065684798173606,0.0945652946829796) * MODEL22_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [859] res += mat4(-0.0808705165982246,0.2083110064268112,0.0547761693596840,0.0629885494709015,-0.0259653050452471,-0.1610417962074280,0.0354182496666908,0.2539297342300415,0.0564526654779911,0.0116546684876084,0.0827979519963264,-0.0922497585415840,0.1620248705148697,-0.1411380916833878,0.0317143760621548,-0.4140007793903351) * MODEL23_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [860] res += mat4(-0.0079142926260829,0.1761204898357391,0.1732344329357147,-0.4134854972362518,0.0666125044226646,-0.1625220179557800,-0.0747211650013924,-0.4102232456207275,0.0521195605397224,0.0368953160941601,0.0288705062121153,-0.2275051027536392,0.0675053298473358,-0.1371494978666306,0.1073148176074028,-0.3119347989559174) * MODEL24_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [861] res += mat4(0.0425270758569241,-0.0121485972777009,0.0492199510335922,-0.0782034844160080,0.0106110442429781,0.0853165537118912,0.1500597000122070,-0.0181301571428776,-0.0109501825645566,-0.1417730301618576,-0.0842627733945847,-0.0908534601330757,-0.1158139705657959,0.0286298859864473,-0.3223731517791748,0.1028749719262123) * MODEL21_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [862] res += mat4(0.0805253610014915,0.0109049547463655,-0.0458406098186970,-0.0049118604511023,0.0904860198497772,-0.0089266989380121,-0.0167122501879930,0.0270462818443775,-0.1938736587762833,0.1555731147527695,-0.0593015253543854,0.0280027929693460,0.1048444956541061,-0.0406579747796059,-0.0615625157952309,-0.0331872440874577) * MODEL22_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [863] res += mat4(-0.2327779531478882,0.0329849272966385,-0.1623415797948837,0.0083680246025324,0.1032922863960266,-0.0156815294176340,-0.1052279546856880,-0.0187984835356474,0.0758428871631622,-0.0048917727544904,0.0344694219529629,0.0444982834160328,-0.1529745906591415,-0.0052001937292516,-0.1587759703397751,-0.0336425453424454) * MODEL23_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [864] res += mat4(-0.0257025174796581,-0.0040141055360436,-0.3719777464866638,0.0573239177465439,-0.0020842440426350,-0.0197563245892525,-0.0304100364446640,0.1044722199440002,-0.0242116656154394,0.0490843094885349,-0.0778329670429230,0.0320032611489296,-0.3334720730781555,0.1162063479423523,-0.1302220076322556,0.0898239836096764) * MODEL24_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [865] res += mat4(0.0875360742211342,-0.0629862695932388,0.0866272896528244,0.1105561330914497,-0.0112289702519774,0.1278416514396667,0.0802348330616951,0.0050262757577002,-0.0343172699213028,0.0421633198857307,-0.0134135019034147,-0.0774805471301079,-0.0790307223796844,-0.0922354683279991,0.0584085583686829,-0.0520883835852146) * MODEL21_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [866] res += mat4(0.0629564747214317,-0.1351821273565292,0.0057818810455501,0.1968969553709030,-0.0816558375954628,0.0789685621857643,-0.0734527409076691,-0.1895557194948196,-0.0863811969757080,0.0354627221822739,0.0529425740242004,-0.0985165610909462,-0.0472868420183659,-0.0534044057130814,0.0101880514994264,0.0065605933777988) * MODEL22_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [867] res += mat4(0.0411140210926533,0.0144859859719872,0.0901028364896774,-0.0718500241637230,0.0292038619518280,-0.0150161208584905,0.0004369194793981,0.0518936663866043,-0.2220512777566910,-0.2208508253097534,0.0055782920680940,0.2157303839921951,-0.0984404012560844,-0.0246922131627798,0.1181163340806961,0.0611343681812286) * MODEL23_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [868] res += mat4(0.0351291187107563,-0.2039385437965393,-0.0989137813448906,-0.1192292794585228,-0.0524929203093052,-0.1637245267629623,0.0460922606289387,-0.0161760784685612,-0.0679446235299110,-0.0270092394202948,-0.0426139943301678,0.0696119517087936,0.1520447134971619,0.0686637833714485,-0.0776527896523476,-0.1115356981754303) * MODEL24_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [869] res += mat4(-0.0046180183999240,0.0369833558797836,0.0404264405369759,-0.0623192936182022,0.0854179039597511,-0.0458836145699024,-0.0178796537220478,0.1139144077897072,0.1425072401762009,-0.0549886040389538,-0.0429124943912029,-0.1102680116891861,-0.0140088936313987,-0.1966787874698639,-0.0187178570777178,-0.2688732743263245) * MODEL21_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [870] res += mat4(-0.0201405826956034,-0.0003204592503607,0.0155736273154616,-0.0407894887030125,0.0052045774646103,-0.0149925695732236,0.1135430261492729,-0.1049654409289360,-0.1113180741667747,0.1370368748903275,0.0468706823885441,0.0490963570773602,0.0591805279254913,-0.1837010383605957,-0.0099695781245828,0.0272822417318821) * MODEL22_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [871] res += mat4(-0.0838884636759758,0.0723510459065437,-0.0194400921463966,-0.2932559549808502,-0.0946610793471336,0.0256035514175892,-0.0332412123680115,0.0286165382713079,0.1424466520547867,-0.1534937918186188,0.0124909579753876,0.0654073581099510,0.0635404512286186,-0.0278029665350914,-0.0532654747366905,-0.1842209249734879) * MODEL23_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [872] res += mat4(0.0477955602109432,0.0092833358794451,0.1226876825094223,-0.1572142392396927,-0.0288075916469097,-0.0426263399422169,-0.0582065619528294,-0.1701389253139496,0.0516848787665367,-0.0004363019252196,-0.0101538971066475,-0.0517657250165939,0.0250354222953320,-0.0702493637800217,0.0250621661543846,-0.2345757335424423) * MODEL24_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [873] res = max(res, vec4(0.0)) + vec4(-0.0156004903838038,0.2320144325494766,0.0725832730531693,0.1990820169448853) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [874] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [875] }
[ 397.806][d][vo/gpu-next/libplacebo] [876] 
[ 397.806][d][vo/gpu-next/libplacebo] [877] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [878] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [879] //!DESC mapping 4_3
[ 397.806][d][vo/gpu-next/libplacebo] [880] //!BIND MODEL21
[ 397.806][d][vo/gpu-next/libplacebo] [881] //!BIND MODEL22
[ 397.806][d][vo/gpu-next/libplacebo] [882] //!BIND MODEL23
[ 397.806][d][vo/gpu-next/libplacebo] [883] //!BIND MODEL24
[ 397.806][d][vo/gpu-next/libplacebo] [884] //!SAVE MODEL3
[ 397.806][d][vo/gpu-next/libplacebo] [885] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [886] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [887] {
[ 397.806][d][vo/gpu-next/libplacebo] [888] vec4 res = vec4(0.0322209298610687,0.0264516212046146,0.0015088251093403,0.0198396854102612);
[ 397.806][d][vo/gpu-next/libplacebo] [889] res += mat4(-0.0530160404741764,0.1508722901344299,0.1079955622553825,0.0300025809556246,0.0137404110282660,0.2337019592523575,-0.0001720965083223,-0.0518192835152149,0.1454936116933823,-0.2925386726856232,-0.1483015716075897,-0.2183369100093842,0.1184778586030006,-0.0184598658233881,-0.1061896607279778,-0.0226287040859461) * MODEL21_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [890] res += mat4(-0.0183052942156792,0.0004932378651574,-0.0723117366433144,0.0028606737032533,-0.0634466037154198,0.0581901520490646,0.0271214656531811,0.0534862615168095,0.0138405198231339,-0.3260147571563721,-0.1395155340433121,0.1717628836631775,-0.1574239730834961,-0.1369933933019638,-0.0663596242666245,-0.2833394110202789) * MODEL22_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [891] res += mat4(-0.0404975377023220,-0.0229157768189907,-0.0761882290244102,0.1311472654342651,-0.1061947420239449,0.2193466871976852,0.0951497182250023,-0.0171177443116903,-0.1114674806594849,0.1779413372278214,0.1603179872035980,-0.0140460235998034,0.1482050716876984,-0.2464582920074463,-0.0311267375946045,-0.0210690945386887) * MODEL23_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [892] res += mat4(0.0411420539021492,0.2096384465694427,0.0036847917363048,0.1137418970465660,0.1077406853437424,0.0430511012673378,0.0215481817722321,-0.0184625554829836,0.0347729474306107,-0.1028166636824608,0.0370523072779179,0.0183408390730619,0.0857607945799828,0.0635680630803108,-0.0434173494577408,-0.0509345121681690) * MODEL24_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [893] res += mat4(-0.0628312230110168,-0.0071972454898059,0.0958025157451630,-0.0055120233446360,0.0270797852426767,0.1018741577863693,-0.0697955936193466,-0.0328848473727703,0.1482519358396530,-0.0829186439514160,-0.2041188329458237,-0.0879839807748795,-0.0344496890902519,-0.0157856084406376,0.0729290023446083,0.0624026916921139) * MODEL21_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [894] res += mat4(-0.0084484210237861,-0.0809915140271187,-0.0856484770774841,0.1477434188127518,-0.0907665193080902,0.1726264655590057,0.0889183878898621,0.0156439393758774,-0.0045705796219409,-0.0618642270565033,-0.0346939004957676,-0.1018707305192947,0.0548687539994717,-0.2812403142452240,-0.2031181603670120,-0.3518426716327667) * MODEL22_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [895] res += mat4(-0.1798414736986160,0.0591769218444824,-0.0332097299396992,-0.0413125976920128,0.0545238070189953,0.2820108532905579,0.2421070784330368,-0.1302634924650192,-0.1245646178722382,0.1002791821956635,0.0487757101655006,-0.1013780161738396,0.1054092422127724,-0.0703308358788490,-0.2543160915374756,-0.0541868321597576) * MODEL23_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [896] res += mat4(-0.0330585017800331,-0.1302013099193573,0.0702736526727676,0.0257151890546083,0.1160490810871124,-0.0964858531951904,0.1320511698722839,0.0320505425333977,0.0665329173207283,0.1582752317190170,-0.0340278595685959,-0.0223891083151102,-0.1221479028463364,-0.0478289835155010,0.0164608545601368,-0.1922803521156311) * MODEL24_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [897] res += mat4(-0.0674839541316032,0.0696917325258255,0.0827664285898209,-0.1570045053958893,0.0026943956036121,-0.1184315383434296,-0.0404608882963657,0.1293547600507736,-0.0501571632921696,0.1074772700667381,0.1571674346923828,-0.0849431455135345,0.0322515070438385,-0.0208934992551804,-0.0687796249985695,0.0027464493177831) * MODEL21_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [898] res += mat4(-0.0875721350312233,-0.0539079532027245,-0.1337553262710571,-0.0391536392271519,-0.0636158958077431,0.0300986766815186,0.0288348458707333,-0.0602884255349636,0.0432372651994228,0.1203548982739449,-0.0314353667199612,0.0611286833882332,-0.0019649290479720,-0.4116021394729614,0.0751012042164803,-0.0681410133838654) * MODEL22_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [899] res += mat4(-0.0506019368767738,0.0832111611962318,-0.0817352831363678,0.0643434152007103,0.0229837223887444,-0.0083409436047077,-0.1267816722393036,-0.0323165282607079,0.0745629370212555,-0.0153434760868549,-0.0776494517922401,-0.1025954559445381,0.1386459916830063,-0.0643362775444984,-0.0885498970746994,-0.1540923863649368) * MODEL23_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [900] res += mat4(0.0369294807314873,-0.0685142800211906,0.0703863650560379,-0.0624157153069973,0.0251213982701302,-0.1587577909231186,0.0380910038948059,-0.1060256287455559,-0.0499012991786003,-0.1958295255899429,0.0012570954859257,0.0329552628099918,-0.0511822514235973,0.0069345394149423,-0.0517220087349415,-0.1371594667434692) * MODEL24_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [901] res += mat4(-0.2144107818603516,0.0572940744459629,0.1245516613125801,-0.1558901667594910,0.1010975241661072,0.1461923420429230,0.2301903963088989,0.0042080101557076,0.2017006427049637,0.1154438331723213,0.1365993767976761,0.0936587005853653,0.1147650480270386,-0.0912983268499374,-0.2377387881278992,0.1031112894415855) * MODEL21_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [902] res += mat4(-0.1348955631256104,0.0063952310010791,0.0809691250324249,-0.3488569259643555,0.0018600567709655,0.2283053100109100,0.3346227109432220,0.0810002237558365,0.1381026208400726,-0.1586197018623352,-0.1493727862834930,-0.0080615626648068,0.2790731191635132,0.1635467112064362,-0.0205844342708588,-0.3493023812770844) * MODEL22_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [903] res += mat4(-0.2744439244270325,-0.0908561423420906,-0.1111367195844650,-0.0539409518241882,-0.2106570303440094,-0.0930743291974068,-0.1867243498563766,-0.2687616646289825,-0.1963448822498322,0.2258308678865433,-0.0802407786250114,-0.1296043097972870,-0.0183895789086819,0.0813405588269234,0.3084571659564972,-0.0820955112576485) * MODEL23_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [904] res += mat4(-0.1263575851917267,-0.1224222779273987,-0.3099909126758575,-0.0810781344771385,0.0150673277676105,-0.1120872423052788,-0.2024748623371124,0.0504282303154469,0.1184204742312431,-0.1275306195020676,0.0165965296328068,-0.0285159740597010,0.3149848580360413,0.0531087182462215,-0.1000080406665802,0.1520777642726898) * MODEL24_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [905] res += mat4(0.0988607704639435,0.2705852687358856,-0.0458564683794975,-0.2002659887075424,0.0676436498761177,0.1225655823945999,0.1513168811798096,0.0127448141574860,0.1395792216062546,0.1041213348507881,-0.1162526980042458,-0.0052993716672063,-0.3183398842811584,0.1901548355817795,0.1058142036199570,-0.1314207315444946) * MODEL21_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [906] res += mat4(0.2395960092544556,-0.0347728766500950,0.1078833714127541,-0.1705690771341324,0.0879031419754028,-0.0534480623900890,-0.2954249680042267,0.1910795867443085,0.3147174417972565,-0.3278053104877472,-0.3025035560131073,0.0993809029459953,0.0006810872582719,-0.1995042115449905,0.0378547832369804,0.0394249707460403) * MODEL22_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [907] res += mat4(-0.2336557209491730,-0.1914284378290176,-0.0982096940279007,-0.1486793309450150,0.0251029971987009,0.1151035204529762,0.3038396537303925,-0.3642590939998627,-0.1017010137438774,0.0848965942859650,0.0779169350862503,-0.0596626140177250,-0.0164716746658087,0.1325942575931549,0.2201516777276993,-0.2742975950241089) * MODEL23_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [908] res += mat4(0.0552700236439705,-0.0548806600272655,0.0237489510327578,-0.0824937969446182,-0.0719374418258667,-0.0813402086496353,-0.0484442524611950,0.2009104937314987,0.2729600369930267,0.1242219656705856,-0.2219321429729462,0.1690969467163086,0.1500553339719772,-0.3050956428050995,-0.0601590164005756,0.0118164755403996) * MODEL24_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [909] res += mat4(-0.3088014125823975,-0.1880643069744110,0.1325395852327347,-0.2593610584735870,-0.1572742313146591,-0.2605040371417999,0.0285934992134571,-0.1921141892671585,0.1918125301599503,0.0063233086839318,-0.2360381335020065,-0.1077111288905144,0.1085546314716339,-0.1828500181436539,-0.2988452613353729,-0.2674467861652374) * MODEL21_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [910] res += mat4(0.0630771294236183,0.0219040717929602,-0.2678235471248627,-0.3158545792102814,-0.0291154161095619,0.1910605579614639,0.1425401717424393,0.1418512165546417,0.1296347826719284,-0.0939061045646667,0.0427730903029442,-0.0429896786808968,0.0841549038887024,-0.2298574745655060,0.0291986372321844,-0.1249061375856400) * MODEL22_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [911] res += mat4(-0.1636287420988083,-0.0491767860949039,-0.0431687235832214,-0.0443967692553997,0.0027327144052833,-0.0245789773762226,0.1065182983875275,0.0221976581960917,0.1379709690809250,0.2146781980991364,-0.0792908221483231,-0.1311895847320557,0.1666043847799301,0.0335677005350590,0.0754606649279594,-0.1501446813344955) * MODEL23_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [912] res += mat4(0.0050693098455667,-0.3240902125835419,0.2708447575569153,0.0220780055969954,0.2297111004590988,-0.2022836506366730,0.0569209195673466,0.1032692492008209,0.0925855338573456,-0.1065756380558014,-0.0545122437179089,0.0204759929329157,0.0958036556839943,0.0408487804234028,-0.0863467901945114,0.0373502299189568) * MODEL24_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [913] res += mat4(0.0117724249139428,-0.0966687798500061,0.0036357061471790,-0.1439649909734726,-0.0409303158521652,0.2080791145563126,0.2088145464658737,-0.0657911822199821,0.0218505356460810,-0.0410717502236366,-0.0386278405785561,-0.1001793965697289,0.1395841091871262,-0.0209278501570225,-0.1053753495216370,0.0859574899077415) * MODEL21_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [914] res += mat4(0.0316530689597130,0.1942488402128220,0.1667992770671844,0.0086539248004556,-0.0339049436151981,0.0216808915138245,-0.0097327483817935,-0.0859820470213890,0.1688135266304016,-0.1057464107871056,0.0628469213843346,0.1916459649801254,0.1026921048760414,0.0781133994460106,0.2098673582077026,-0.2724682986736298) * MODEL22_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [915] res += mat4(-0.0197118408977985,-0.0844836458563805,-0.2128427624702454,0.0575646571815014,0.0259915478527546,0.1625764220952988,-0.0501341857016087,0.0790882632136345,-0.0002396845084149,0.1174409762024879,0.2295692265033722,0.0973160043358803,0.1128536313772202,-0.1348016113042831,-0.1106924489140511,-0.0142235904932022) * MODEL23_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [916] res += mat4(-0.0139530375599861,-0.1116035208106041,-0.0169805884361267,-0.0464132912456989,0.1487662643194199,-0.0748727247118950,-0.1022699475288391,0.0346220768988132,0.0078831007704139,0.1502268165349960,0.0624455884099007,-0.0352291613817215,0.1165885850787163,0.0162278618663549,0.1126855537295341,0.1583648175001144) * MODEL24_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [917] res += mat4(-0.0118060670793056,0.1872533410787582,0.1929165571928024,-0.2203991413116455,0.0921460762619972,0.1884368211030960,0.2417603880167007,-0.0244794040918350,0.1441189944744110,0.1210942715406418,0.0442231670022011,-0.1021122336387634,0.0995335504412651,-0.0808146148920059,-0.0675391182303429,-0.2205165922641754) * MODEL21_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [918] res += mat4(0.2506988048553467,-0.1092722862958908,-0.0948333665728569,0.0986849516630173,-0.0468105189502239,-0.1879943013191223,-0.0441485792398453,-0.0022310914937407,-0.0247033983469009,-0.0390827022492886,-0.0580774508416653,0.0529652349650860,0.2445233762264252,-0.0953920409083366,0.0605605505406857,-0.3391091823577881) * MODEL22_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [919] res += mat4(-0.0258255582302809,0.0547841787338257,0.0112547175958753,0.0993019714951515,0.0071678487583995,0.1219164356589317,0.2528086602687836,-0.1376780271530151,0.1800783425569534,-0.1342762410640717,0.0575909130275249,0.4046945869922638,-0.2086132466793060,-0.1277881860733032,-0.3664705157279968,-0.0916004106402397) * MODEL23_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [920] res += mat4(-0.0434218458831310,-0.0139228422194719,0.1392665505409241,0.0490094572305679,-0.0911372527480125,-0.0906111672520638,-0.0729891657829285,0.2243857085704803,0.0589152462780476,0.0206097103655338,-0.0064465459436178,0.0213193651288748,0.1540566384792328,0.0360502265393734,-0.0973282009363174,0.2366738021373749) * MODEL24_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [921] res += mat4(0.1767374128103256,-0.1210842952132225,0.0482791028916836,-0.2874787747859955,-0.0268840324133635,0.0543563403189182,-0.0558155216276646,-0.0116835655644536,0.0583704039454460,0.1446028500795364,-0.1986986249685287,0.1167799085378647,0.1738255918025970,0.0403821915388107,0.0138144548982382,0.2506314218044281) * MODEL21_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [922] res += mat4(0.1281960159540176,0.0038417505566031,-0.0608053095638752,0.1497981846332550,-0.0436575599014759,0.0453804023563862,-0.0118483807891607,-0.0707118809223175,-0.0960147008299828,-0.0204534474760294,0.0147367604076862,-0.1484529525041580,0.2489298135042191,-0.0377908535301685,0.0409927926957607,-0.1853159219026566) * MODEL22_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [923] res += mat4(0.0719330757856369,-0.0757265016436577,-0.0676425397396088,0.0000323264430335,-0.0321726612746716,0.1389194577932358,0.0610749758780003,0.0341844521462917,0.1036318168044090,0.1737107783555984,0.0246418360620737,0.2469015270471573,-0.0115509266033769,0.0708109065890312,0.0838148370385170,-0.1665687412023544) * MODEL23_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [924] res += mat4(0.0426297709345818,0.1220960840582848,0.1911008507013321,0.1121460720896721,0.1469508111476898,-0.0308260414749384,-0.0801657736301422,0.1645783036947250,0.0911497324705124,-0.0325943157076836,0.0339022539556026,-0.0386684909462929,-0.0751888975501060,-0.1183962002396584,-0.0296682696789503,0.1590248346328735) * MODEL24_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [925] res = max(res, vec4(0.0)) + vec4(0.0828684195876122,0.1087924838066101,0.2538014650344849,0.2789690494537354) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [926] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [927] }
[ 397.806][d][vo/gpu-next/libplacebo] [928] 
[ 397.806][d][vo/gpu-next/libplacebo] [929] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [930] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [931] //!DESC mapping 4_4
[ 397.806][d][vo/gpu-next/libplacebo] [932] //!BIND MODEL21
[ 397.806][d][vo/gpu-next/libplacebo] [933] //!BIND MODEL22
[ 397.806][d][vo/gpu-next/libplacebo] [934] //!BIND MODEL23
[ 397.806][d][vo/gpu-next/libplacebo] [935] //!BIND MODEL24
[ 397.806][d][vo/gpu-next/libplacebo] [936] //!SAVE MODEL4
[ 397.806][d][vo/gpu-next/libplacebo] [937] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [938] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [939] {
[ 397.806][d][vo/gpu-next/libplacebo] [940] vec4 res = vec4(-0.0319044366478920,-0.0593544840812683,-0.0063880118541420,0.0536783412098885);
[ 397.806][d][vo/gpu-next/libplacebo] [941] res += mat4(-0.1049769371747971,0.0530018322169781,-0.1046573221683502,0.1049640327692032,0.0154508100822568,-0.0014283000491560,0.0827952772378922,0.0064285881817341,0.0377579852938652,0.1602229177951813,0.1259868592023849,-0.0402139835059643,0.0242196395993233,-0.0192059781402349,0.0784901678562164,-0.0492622405290604) * MODEL21_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [942] res += mat4(0.0988065898418427,0.0558996312320232,0.0429891832172871,0.0290305726230145,-0.0289836153388023,-0.0719404965639114,-0.0399442017078400,0.0864284634590149,0.0730557218194008,-0.0314551442861557,-0.0075137382373214,0.0245214663445950,0.0374762341380119,0.1111276373267174,0.0930574163794518,-0.1286909282207489) * MODEL22_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [943] res += mat4(-0.0584235303103924,0.0709189400076866,-0.1062056124210358,0.0119586577638984,-0.0583901405334473,0.0176343489438295,-0.2544578909873962,-0.0469160191714764,0.0293099917471409,0.1078486591577530,-0.0145962322130799,0.0663851052522659,0.0585160404443741,-0.0085935741662979,0.0363007746636868,-0.0097911478951573) * MODEL23_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [944] res += mat4(0.0795985683798790,-0.1238443106412888,0.0008071123738773,0.0253353826701641,-0.0376159362494946,0.0330759435892105,0.0392076708376408,-0.0906358435750008,-0.0147637743502855,-0.0119982864707708,-0.0173608139157295,-0.1548472940921783,0.0184103511273861,-0.0208488833159208,0.0026534744538367,-0.0035306960344315) * MODEL24_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [945] res += mat4(-0.0063085122965276,0.1236624866724014,0.0335280597209930,-0.1275150328874588,0.0463291220366955,-0.1848209798336029,0.0558458790183067,-0.0238664597272873,0.0921169072389603,-0.0398014858365059,0.0775154158473015,-0.0140515323728323,0.0642737820744514,-0.0007273547234945,-0.0195787176489830,-0.0235000308603048) * MODEL21_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [946] res += mat4(0.0837357938289642,0.1834318488836288,0.0930924639105797,0.0904168337583542,-0.1281350702047348,0.0027755603659898,0.0132647203281522,-0.0385007113218307,-0.0405268743634224,-0.0412026755511761,-0.0958623886108398,0.0124941188842058,0.1301915943622589,-0.2062162160873413,0.2302663028240204,-0.1843820214271545) * MODEL22_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [947] res += mat4(-0.0444810874760151,-0.1452791839838028,-0.1051607280969620,-0.0037997374311090,0.1972191631793976,0.2487480491399765,0.1079482063651085,-0.0719112083315849,0.0246634893119335,-0.1668282896280289,-0.0134556964039803,0.0239032879471779,0.1651775091886520,0.0196664985269308,0.1805219650268555,0.0285266842693090) * MODEL23_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [948] res += mat4(-0.0875505730509758,0.0837789177894592,-0.0129913315176964,0.0340819247066975,-0.0212335586547852,-0.2016090005636215,-0.0643151402473450,-0.0590226203203201,-0.0964769199490547,-0.0694736540317535,-0.0542995780706406,-0.0832787677645683,0.1099074259400368,-0.0196969695389271,0.1310003548860550,0.0811747014522552) * MODEL24_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [949] res += mat4(0.0047104074619710,-0.0282204467803240,0.0984812751412392,0.0191335435956717,-0.1582766175270081,-0.1351978331804276,-0.1520056873559952,-0.1318402141332626,0.0604211874306202,0.0606412440538406,0.1178724616765976,0.0108723761513829,-0.0465345457196236,-0.1133893579244614,0.0675329640507698,0.0480175390839577) * MODEL21_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [950] res += mat4(0.0959218963980675,-0.2212718725204468,0.0894490182399750,0.0131204547360539,0.0545177236199379,-0.0288275703787804,0.0245627798140049,0.0217808689922094,0.0607562400400639,-0.1358110606670380,-0.0350213497877121,-0.0318414233624935,-0.0401774272322655,0.1384418159723282,0.0225264690816402,0.0016238500829786) * MODEL22_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [951] res += mat4(-0.0157364327460527,-0.0566317848861217,0.0033653660211712,0.1080024912953377,-0.0967782586812973,-0.2857748270034790,-0.2085265368223190,0.0197349302470684,0.0933917835354805,-0.1873927712440491,0.0288235787302256,-0.0117855127900839,0.0233719181269407,-0.1566993147134781,0.1610490381717682,-0.1314767152070999) * MODEL23_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [952] res += mat4(0.0984380245208740,0.1530470103025436,0.0297245793044567,0.0079924380406737,0.0044109639711678,0.0184676554054022,-0.0020322001073509,-0.0739230960607529,0.0559958629310131,0.0264653861522675,0.0348221100866795,0.0837754011154175,-0.0370579436421394,0.0804572775959969,0.0423889756202698,-0.0568444430828094) * MODEL24_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [953] res += mat4(0.0223456677049398,0.1345537900924683,-0.0114704454317689,0.0192960277199745,0.1383964419364929,0.0709870830178261,0.0493518188595772,0.0315994769334793,0.0406982824206352,-0.1496467590332031,0.0350671298801899,0.1099814698100090,0.1025168672204018,-0.0085557270795107,0.0462385229766369,0.0087464489042759) * MODEL21_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [954] res += mat4(0.0725811645388603,-0.0078941881656647,0.1098996773362160,-0.2021800279617310,0.0332895331084728,-0.1520113945007324,0.1540423631668091,0.0577330365777016,0.1468109786510468,-0.0131514435634017,0.1934793740510941,-0.0930755585432053,0.3369615674018860,0.1139491423964500,0.2406831234693527,-0.1210564821958542) * MODEL22_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [955] res += mat4(0.0342860221862793,0.1693054735660553,-0.0245284475386143,-0.0474616214632988,-0.0401609912514687,-0.0291214212775230,0.0208399519324303,-0.0658942386507988,-0.0574564076960087,0.2002377063035965,0.0437284335494041,-0.1219547688961029,-0.1023088023066521,0.0191416908055544,-0.1077913343906403,-0.0930133834481239) * MODEL23_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [956] res += mat4(0.0584708601236343,-0.1535180360078812,-0.0119048496708274,-0.0146380318328738,0.1522436290979385,0.2029572576284409,-0.0915258601307869,0.0646188557147980,0.1124635711312294,0.0143247852101922,0.0369974747300148,0.0865768566727638,-0.0005834616022184,0.0590733028948307,0.0522760041058064,0.1423606723546982) * MODEL24_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [957] res += mat4(0.0832947120070457,-0.1659611612558365,-0.0430100597441196,0.0169967804104090,0.2446910142898560,-0.0024086623452604,0.1061681956052780,0.1473223865032196,-0.0451019778847694,-0.0968872681260109,-0.1252156496047974,0.0651009753346443,-0.1487540453672409,-0.1364714056253433,-0.1448062062263489,-0.0324841588735580) * MODEL21_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [958] res += mat4(-0.0490125901997089,0.4423136413097382,-0.0704349130392075,-0.2154809683561325,0.3586983084678650,0.0802443698048592,-0.2119029611349106,0.0976425632834435,-0.1338178813457489,0.0833210051059723,0.2181421220302582,-0.0985689088702202,0.0539677180349827,-0.0552677884697914,-0.1076588854193687,0.0665355622768402) * MODEL22_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [959] res += mat4(0.0933762341737747,-0.1874220967292786,0.0296995192766190,-0.1018379479646683,0.1016159281134605,0.2458875179290771,0.1322410702705383,-0.1783373504877090,-0.0358742922544479,-0.1346556395292282,0.0792141854763031,0.0113624166697264,-0.0487725250422955,-0.2280908823013306,-0.1435510069131851,-0.1495662182569504) * MODEL23_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [960] res += mat4(0.1955887824296951,0.0015727523714304,0.0173319857567549,0.0855350568890572,-0.0828279480338097,-0.4258889555931091,-0.0727782472968102,0.3167108297348022,0.0193311404436827,-0.0385273508727551,0.1105341538786888,0.1693043112754822,-0.0086681032553315,0.1243010014295578,-0.1422148048877716,0.2096032500267029) * MODEL24_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [961] res += mat4(-0.1056698858737946,0.1697898209095001,-0.1174520179629326,-0.3891111314296722,-0.3951943814754486,0.0955362692475319,-0.0011043249396607,-0.1948882043361664,0.0523583926260471,-0.3666047751903534,0.1224011033773422,0.1049802005290985,-0.0039958748966455,0.0537789352238178,0.1965005397796631,-0.3598505854606628) * MODEL21_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [962] res += mat4(-0.0696330145001411,-0.3264731168746948,0.1232996061444283,-0.1282946169376373,0.1031132414937019,-0.0014537264360115,0.1199942156672478,0.1914149224758148,0.0464945808053017,0.1578139513731003,0.1042746081948280,0.1073048561811447,-0.0951004251837730,0.0690534487366676,-0.1132716462016106,-0.2959117591381073) * MODEL22_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [963] res += mat4(-0.0063548935577273,-0.1339095532894135,0.0423612669110298,-0.1214815601706505,-0.0761892870068550,0.0188857093453407,-0.0480861291289330,0.0921485871076584,-0.0540754348039627,0.1062150970101357,0.0385954827070236,-0.0876506567001343,0.1119642704725266,-0.0114633506163955,0.1415599286556244,0.0167306922376156) * MODEL23_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [964] res += mat4(0.0076094884425402,0.0957226306200027,0.0134012559428811,0.0287293214350939,0.0624926649034023,0.3065398037433624,0.0403901040554047,-0.0260085742920637,0.0088108722120523,0.2126857340335846,0.0254359431564808,0.0661587566137314,0.0266350097954273,-0.0415457449853420,0.0960029587149620,0.0903137028217316) * MODEL24_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [965] res += mat4(0.2011361718177795,0.0513363182544708,0.0426048710942268,-0.0341306589543819,0.0546924509108067,-0.0009473076206632,0.0832077190279961,-0.0404908806085587,0.0223969146609306,0.1469400823116302,-0.0101996315643191,0.0512978285551071,-0.0182012710720301,-0.0268129613250494,0.0305796377360821,0.0353515036404133) * MODEL21_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [966] res += mat4(-0.0501724295318127,0.1036518365144730,-0.0582247488200665,0.0586184002459049,-0.0985071435570717,-0.0378162339329720,-0.0175979062914848,0.0914201065897942,0.1339682489633560,-0.2411471456289291,0.0442742519080639,-0.1315496563911438,-0.0235163830220699,-0.0793496072292328,0.0001856182061601,0.0100199077278376) * MODEL22_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [967] res += mat4(0.0169272385537624,-0.0373814180493355,-0.0670064836740494,-0.0757538005709648,0.0539115741848946,-0.0363459698855877,-0.0705795958638191,0.0161958131939173,0.0749965235590935,0.0864845067262650,0.0935057625174522,0.0006394926458597,0.0258790254592896,0.0487536191940308,-0.0003778598329518,-0.0603443086147308) * MODEL23_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [968] res += mat4(0.0326713137328625,-0.0643305927515030,-0.0873011052608490,-0.0115476315841079,0.0404307320713997,0.0908514112234116,0.0900304168462753,-0.1224276497960091,0.0797611474990845,0.0716477409005165,0.0858778432011604,0.0648527666926384,-0.0038425601087511,-0.0272151939570904,0.0454981327056885,-0.0211941953748465) * MODEL24_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [969] res += mat4(-0.0283515322953463,0.0367869697511196,-0.0186204202473164,-0.0924160853028297,0.0107743376865983,0.0281303916126490,0.0326650589704514,-0.1486970037221909,-0.0027698453050107,-0.0639929920434952,0.1789113283157349,0.0581709817051888,-0.2201839685440063,-0.0327146798372269,0.0408661887049675,-0.0269158463925123) * MODEL21_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [970] res += mat4(-0.0014567035250366,0.2100255340337753,-0.1271950453519821,0.2373086959123611,-0.1213726848363876,0.1297481060028076,0.0348963104188442,-0.1987402439117432,-0.0976094901561737,-0.2369550317525864,-0.0735042020678520,-0.0119079472497106,-0.2870939373970032,0.1397193372249603,0.0431725420057774,0.2128784358501434) * MODEL22_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [971] res += mat4(0.0908681750297546,-0.0524830892682076,0.0303087439388037,-0.0453457012772560,0.1000418588519096,0.0236405488103628,0.0258009564131498,0.1112060993909836,0.0640080943703651,-0.0699638351798058,-0.1770147979259491,0.2103097587823868,0.0199909508228302,-0.0458192676305771,0.0364487096667290,0.0132334362715483) * MODEL23_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [972] res += mat4(-0.0097952354699373,0.0897864028811455,-0.0383929386734962,-0.0215702615678310,-0.0684881284832954,-0.0852887779474258,-0.0572886057198048,-0.0302985794842243,-0.0247614216059446,-0.0832997038960457,0.0505135357379913,-0.0984577909111977,0.1210204735398293,0.0378841683268547,-0.0086145019158721,-0.1914091110229492) * MODEL24_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [973] res += mat4(-0.0352214053273201,0.0617239885032177,-0.1066936105489731,0.1240716800093651,0.0154035771265626,-0.0039620101451874,-0.0473034456372261,0.1120819970965385,0.0723939165472984,-0.1512170135974884,0.0552674271166325,-0.1259092688560486,0.1716865301132202,-0.1634209156036377,-0.0173642020672560,0.1488591283559799) * MODEL21_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [974] res += mat4(-0.0257812645286322,-0.1662807315587997,-0.0307093542069197,-0.0163865722715855,0.0053951707668602,-0.1635815203189850,0.0542286410927773,-0.0992496609687805,-0.0330333039164543,0.0809587910771370,0.0687506720423698,-0.0905106365680695,-0.1323373317718506,-0.0549141764640808,-0.0887765660881996,0.0622096359729767) * MODEL22_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [975] res += mat4(-0.0183376763015985,0.0646332651376724,0.1040980592370033,-0.0814767554402351,-0.0334680825471878,-0.0398129373788834,-0.0160571653395891,0.0422923043370247,-0.0084744850173593,-0.1092973351478577,-0.0894353166222572,0.0973920226097107,0.0375577360391617,0.0674358531832695,0.1098990961909294,-0.0763874053955078) * MODEL23_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [976] res += mat4(-0.0124416314065456,0.0742118582129478,0.0940349251031876,-0.0382819510996342,0.0759040415287018,0.0381188578903675,-0.0316764861345291,0.0674401819705963,0.0492107681930065,-0.0515618398785591,0.0284187551587820,-0.1154354289174080,0.0918822139501572,-0.2824964523315430,-0.0006838684203103,0.0264801792800426) * MODEL24_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [977] res = max(res, vec4(0.0)) + vec4(0.6147719025611877,0.5175681114196777,0.4380105137825012,0.5494819879531860) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [978] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [979] }
[ 397.806][d][vo/gpu-next/libplacebo] [980] 
[ 397.806][d][vo/gpu-next/libplacebo] [981] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [982] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [983] //!DESC sub-band residuals 1
[ 397.806][d][vo/gpu-next/libplacebo] [984] //!BIND MODEL1
[ 397.806][d][vo/gpu-next/libplacebo] [985] //!BIND MODEL2
[ 397.806][d][vo/gpu-next/libplacebo] [986] //!BIND MODEL3
[ 397.806][d][vo/gpu-next/libplacebo] [987] //!BIND MODEL4
[ 397.806][d][vo/gpu-next/libplacebo] [988] //!BIND FEATURE1
[ 397.806][d][vo/gpu-next/libplacebo] [989] //!SAVE RES1
[ 397.806][d][vo/gpu-next/libplacebo] [990] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [991] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [992] {
[ 397.806][d][vo/gpu-next/libplacebo] [993] vec4 res = vec4(-0.0398302078247070,0.0660750269889832,-0.0841118618845940,0.0219727028161287);
[ 397.806][d][vo/gpu-next/libplacebo] [994] res += mat4(-0.0904332101345062,-0.0306175798177719,-0.3741730153560638,0.1997887939214706,-0.2946400046348572,0.2973574101924896,0.0410949923098087,-0.1586445868015289,-0.0828583687543869,-0.3139174282550812,0.2640713751316071,-0.0488730296492577,-0.7438945174217224,0.0566509030759335,-0.5147728919982910,-0.2992146611213684) * MODEL1_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [995] res += mat4(0.1015158519148827,-0.3609340488910675,0.1689718514680862,-0.1110829189419746,-0.0476337634027004,0.2617297470569611,-0.1404774487018585,-0.1450887620449066,0.1395564079284668,0.5448970794677734,-0.0253072511404753,-0.3947534263134003,0.0721325427293777,-0.0309048965573311,0.1761575192213058,-0.1208819076418877) * MODEL2_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [996] res += mat4(0.2857233881950378,-0.1422258764505386,-0.3782327473163605,0.4563027918338776,-0.2952436208724976,0.3302968740463257,-0.3229986131191254,-0.1016059294342995,-0.0963005796074867,-0.3688750267028809,0.5499234199523926,-0.0264915507286787,-0.2069931328296661,-0.1944057494401932,0.0649016797542572,-0.3279161155223846) * MODEL3_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [997] res += mat4(0.2572792172431946,-0.1334799677133560,-0.3845744132995605,0.1328283995389938,0.0985411405563354,0.3047459721565247,-0.3787862658500671,-0.0171573292464018,-0.3674299716949463,0.5497399568557739,0.3637700974941254,-0.2624555528163910,-0.0789092257618904,-0.0317787751555443,0.5096421837806702,-0.2790692448616028) * MODEL4_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [998] res += FEATURE1_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [999] res = max(res, vec4(0.0)) + vec4(0.2817154526710510,1.0948476791381836,0.0402555316686630,1.0271319150924683) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [1000] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [1001] }
[ 397.806][d][vo/gpu-next/libplacebo] [1002] 
[ 397.806][d][vo/gpu-next/libplacebo] [1003] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [1004] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [1005] //!DESC sub-band residuals 2
[ 397.806][d][vo/gpu-next/libplacebo] [1006] //!BIND MODEL1
[ 397.806][d][vo/gpu-next/libplacebo] [1007] //!BIND MODEL2
[ 397.806][d][vo/gpu-next/libplacebo] [1008] //!BIND MODEL3
[ 397.806][d][vo/gpu-next/libplacebo] [1009] //!BIND MODEL4
[ 397.806][d][vo/gpu-next/libplacebo] [1010] //!BIND FEATURE2
[ 397.806][d][vo/gpu-next/libplacebo] [1011] //!SAVE RES2
[ 397.806][d][vo/gpu-next/libplacebo] [1012] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [1013] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [1014] {
[ 397.806][d][vo/gpu-next/libplacebo] [1015] vec4 res = vec4(-0.0461901836097240,0.0530942864716053,0.0271403957158327,0.0411806441843510);
[ 397.806][d][vo/gpu-next/libplacebo] [1016] res += mat4(0.0738934054970741,-0.2037661522626877,-0.1792543530464172,-0.4172675609588623,-0.2763709425926208,0.4561605155467987,0.3568621575832367,0.0137832751497626,0.1816250383853912,-0.0061804065480828,0.1263318061828613,0.0403790846467018,-0.0831830352544785,-0.0097673377022147,-0.4521633982658386,0.2323414534330368) * MODEL1_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1017] res += mat4(0.2010818868875504,0.3050879836082458,-0.3157728612422943,0.2607783675193787,0.0006519685848616,-0.4897803962230682,-0.1639468371868134,0.0466666072607040,-0.1436393857002258,-0.0465407036244869,-0.3949580192565918,0.2522305548191071,0.0030875655356795,0.2679564058780670,-0.4573816061019897,-0.1078201681375504) * MODEL2_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1018] res += mat4(0.0782144740223885,0.2111432999372482,-0.1693306416273117,0.0013240760890767,-0.2316610366106033,-0.0633072555065155,0.0141694881021976,0.0620704144239426,-0.0284209419041872,0.4983933866024017,0.1883008033037186,-0.2767302393913269,0.0240764264017344,-0.1085244938731194,-0.1406991630792618,-0.0268744882196188) * MODEL3_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1019] res += mat4(-0.1764771938323975,-0.5322185754776001,-0.0553879812359810,0.3041559159755707,0.0178847815841436,-0.0217217803001404,0.2784402072429657,-0.2342455834150314,-0.3351868391036987,0.5513092875480652,-0.0409503988921642,0.0373148135840893,0.5087109208106995,-0.1079629659652710,-0.1364635974168777,0.4860048592090607) * MODEL4_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1020] res += FEATURE2_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1021] res = max(res, vec4(0.0)) + vec4(0.5130507349967957,0.5871294140815735,0.6904820203781128,0.8461173772811890) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [1022] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [1023] }
[ 397.806][d][vo/gpu-next/libplacebo] [1024] 
[ 397.806][d][vo/gpu-next/libplacebo] [1025] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [1026] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [1027] //!DESC sub-band residuals 3
[ 397.806][d][vo/gpu-next/libplacebo] [1028] //!BIND MODEL1
[ 397.806][d][vo/gpu-next/libplacebo] [1029] //!BIND MODEL2
[ 397.806][d][vo/gpu-next/libplacebo] [1030] //!BIND MODEL3
[ 397.806][d][vo/gpu-next/libplacebo] [1031] //!BIND MODEL4
[ 397.806][d][vo/gpu-next/libplacebo] [1032] //!BIND FEATURE3
[ 397.806][d][vo/gpu-next/libplacebo] [1033] //!SAVE RES3
[ 397.806][d][vo/gpu-next/libplacebo] [1034] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [1035] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [1036] {
[ 397.806][d][vo/gpu-next/libplacebo] [1037] vec4 res = vec4(0.0188962463289499,-0.0084412479773164,0.0280361603945494,-0.0605330765247345);
[ 397.806][d][vo/gpu-next/libplacebo] [1038] res += mat4(0.5421599149703979,0.1329087018966675,-0.3954503238201141,0.1098926663398743,0.0777832418680191,-0.0029588076286018,-0.0738613232970238,0.2883999347686768,0.1578751951456070,0.1009015291929245,0.0899816378951073,-0.0768480151891708,-0.0422229021787643,-0.0029287845827639,0.3087403774261475,-0.1859038174152374) * MODEL1_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1039] res += mat4(-0.0108895516023040,0.0989515781402588,0.3503252863883972,0.3484955430030823,-0.0404920727014542,-0.1470296829938889,0.2214413881301880,-0.0954751223325729,0.2693351805210114,-0.0185806397348642,0.0298380702733994,0.4743294715881348,0.4794802665710449,0.4391559660434723,0.6163290143013000,0.1765650212764740) * MODEL2_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1040] res += mat4(-0.5071405172348022,0.4026553630828857,-0.1654408276081085,-0.2291442304849625,-0.2127622663974762,-0.2153157889842987,0.0970067679882050,0.0963988304138184,0.3915210068225861,-0.0641773641109467,-0.1831475794315338,-0.2212396860122681,0.6210712790489197,-0.6296228170394897,-0.1813391298055649,0.0598836950957775) * MODEL3_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1041] res += mat4(-0.0450354963541031,-0.1741295307874680,0.2741636931896210,0.2587634921073914,0.2397177517414093,0.0307989809662104,-0.2174167335033417,0.3825699388980865,-0.3681959807872772,-0.3784009218215942,-0.4029824435710907,0.1595714539289474,-0.3686595857143402,0.4213712513446808,0.0666239708662033,-0.3322808444499969) * MODEL4_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1042] res += FEATURE3_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1043] res = max(res, vec4(0.0)) + vec4(0.9967825412750244,0.1328349411487579,0.3181226253509521,0.4911010563373566) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [1044] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [1045] }
[ 397.806][d][vo/gpu-next/libplacebo] [1046] 
[ 397.806][d][vo/gpu-next/libplacebo] [1047] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [1048] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [1049] //!DESC sub-band residuals 4
[ 397.806][d][vo/gpu-next/libplacebo] [1050] //!BIND MODEL1
[ 397.806][d][vo/gpu-next/libplacebo] [1051] //!BIND MODEL2
[ 397.806][d][vo/gpu-next/libplacebo] [1052] //!BIND MODEL3
[ 397.806][d][vo/gpu-next/libplacebo] [1053] //!BIND MODEL4
[ 397.806][d][vo/gpu-next/libplacebo] [1054] //!BIND FEATURE4
[ 397.806][d][vo/gpu-next/libplacebo] [1055] //!SAVE RES4
[ 397.806][d][vo/gpu-next/libplacebo] [1056] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [1057] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [1058] {
[ 397.806][d][vo/gpu-next/libplacebo] [1059] vec4 res = vec4(0.0029921564273536,-0.0270903781056404,0.0255143754184246,-0.0184149276465178);
[ 397.806][d][vo/gpu-next/libplacebo] [1060] res += mat4(-0.2108196020126343,-0.2185097634792328,-0.1150923520326614,-0.2773406505584717,-0.0519551075994968,-0.0543617308139801,0.3245669901371002,0.3976034522056580,0.0392675884068012,-0.0570353642106056,0.0335133336484432,0.0519896373152733,0.0767750144004822,-0.3414104878902435,-0.3815031647682190,0.3476504087448120) * MODEL1_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1061] res += mat4(0.0712867751717567,0.1004567891359329,-0.0822078958153725,-0.1712695807218552,0.0996699407696724,-0.4046521782875061,-0.1560784429311752,-0.2510003447532654,-0.0086810048669577,0.1553008109331131,-0.0590447708964348,0.2843724489212036,-0.5681545138359070,-0.0159357115626335,-0.0047869379632175,0.6510519981384277) * MODEL2_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1062] res += mat4(-0.0673058703541756,0.1657533198595047,-0.0670174360275269,0.0306193791329861,-0.6315240263938904,-0.3187874257564545,-0.0869498848915100,0.2592973113059998,0.2773531079292297,-0.3216951191425323,0.1533942073583603,-0.1491241008043289,0.2170121371746063,-0.1478294134140015,0.0233438313007355,-0.0146541036665440) * MODEL3_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1063] res += mat4(-0.1280820816755295,0.0763763189315796,-0.0739043205976486,-0.0476034060120583,0.4246569573879242,0.4332760274410248,0.1480301767587662,-0.2644723951816559,-0.0805236026644707,0.1453001648187637,0.0421080626547337,-0.3843654394149780,0.1520981937646866,-0.1582884788513184,-0.0312596336007118,-0.2096437215805054) * MODEL4_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1064] res += FEATURE4_texOff(0);
[ 397.806][d][vo/gpu-next/libplacebo] [1065] res = max(res, vec4(0.0)) + vec4(0.1206123828887939,-0.0085650878027081,0.5806476473808289,0.0062637194059789) * min(res, vec4(0.0));
[ 397.806][d][vo/gpu-next/libplacebo] [1066] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [1067] }
[ 397.806][d][vo/gpu-next/libplacebo] [1068] 
[ 397.806][d][vo/gpu-next/libplacebo] [1069] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [1070] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [1071] //!DESC sub-pixel convolution 1
[ 397.806][d][vo/gpu-next/libplacebo] [1072] //!BIND RES1
[ 397.806][d][vo/gpu-next/libplacebo] [1073] //!BIND RES2
[ 397.806][d][vo/gpu-next/libplacebo] [1074] //!BIND RES3
[ 397.806][d][vo/gpu-next/libplacebo] [1075] //!BIND RES4
[ 397.806][d][vo/gpu-next/libplacebo] [1076] //!SAVE SUBCONV1
[ 397.806][d][vo/gpu-next/libplacebo] [1077] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [1078] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [1079] {
[ 397.806][d][vo/gpu-next/libplacebo] [1080] vec4 res = vec4(0.0702711343765259,0.0664050132036209,0.0686390176415443,0.0644881501793861);
[ 397.806][d][vo/gpu-next/libplacebo] [1081] res += mat4x4(-0.0220870003104210,-0.0026495878119022,0.0011225421912968,0.0059517049230635,-0.0158754698932171,-0.0073457080870867,-0.0168286003172398,-0.0071252095513046,-0.0185480788350105,-0.0129991667345166,-0.0103834569454193,0.0045425617136061,-0.0202563088387251,-0.0097796274349093,-0.0157800465822220,-0.0125904576852918) * RES1_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1082] res += mat4x4(0.0959623232483864,0.0172646623104811,0.0135546457022429,-0.0047857575118542,-0.0189756304025650,-0.0088604958727956,-0.0153466761112213,-0.0061616809107363,0.0245400369167328,0.0080278720706701,-0.0050234026275575,-0.0085535012185574,0.0122431647032499,-0.0008322863141075,0.0062835766002536,0.0011176555417478) * RES2_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1083] res += mat4x4(-0.0080512277781963,0.0010662876302376,-0.0028354951646179,0.0022695218212903,-0.0442206338047981,-0.0157682765275240,-0.0661408230662346,-0.0098552983254194,-0.0216109957545996,0.0006023725727573,-0.0127598075196147,0.0019905669614673,0.0135405464097857,-0.0048485524021089,0.0033436624798924,-0.0089380955323577) * RES3_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1084] res += mat4x4(-0.0011910855537280,-0.0039172959513962,0.0057305907830596,0.0114189386367798,-0.0073232934810221,0.0018632245482877,0.0032367329113185,0.0048749968409538,0.0485895648598671,0.0222841333597898,0.0201927367597818,0.0175225101411343,0.0173806007951498,-0.0129096359014511,0.0220123063772917,-0.0007566481363028) * RES4_texOff(vec2(-1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1085] res += mat4x4(0.0541077852249146,0.0088849775493145,-0.0352222919464111,-0.0336082167923450,0.0348937772214413,0.0094135040417314,0.0109726833179593,-0.0020038345828652,-0.0654385611414909,0.0616397634148598,-0.0108097661286592,-0.0074262339621782,0.0255410205572844,0.0318369790911674,0.0302448887377977,0.0464591495692730) * RES1_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1086] res += mat4x4(0.0914473757147789,0.1183946132659912,0.0183039177209139,0.0108801443129778,0.0087016746401787,-0.0187510885298252,0.0164879057556391,-0.0078554116189480,0.0339316464960575,0.0363024957478046,0.0246983356773853,0.0141928847879171,0.0447472482919693,0.0682304278016090,0.0301067382097244,0.0500068999826908) * RES2_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1087] res += mat4x4(0.0067629739642143,0.0114591401070356,0.0187604539096355,0.0211918894201517,0.0194796156138182,-0.0079339090734720,-0.0436643138527870,-0.0870464146137238,-0.0010849037207663,0.0042736041359603,0.0021966963540763,0.0032921251840889,0.0154978670179844,0.0028710442129523,0.0019292244687676,-0.0085603129118681) * RES3_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1088] res += mat4x4(0.0080668851733208,-0.0225392915308475,0.0091220829635859,0.0036618844605982,-0.0468714684247971,-0.0325540266931057,0.0194284059107304,0.0099906679242849,-0.0350779667496681,0.0147823467850685,-0.0409614332020283,-0.0162197984755039,-0.0118040712550282,-0.0107394354417920,-0.0058304341509938,-0.0179357603192329) * RES4_texOff(vec2(-1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1089] res += mat4x4(-0.0072065959684551,0.0059087206609547,0.0042072930373251,-0.0125489430502057,-0.0079884817823768,0.0017780022462830,-0.0096861450001597,-0.0143716456368566,0.0178131069988012,0.0077008674852550,-0.0104778651148081,0.0178307909518480,-0.0125649496912956,-0.0223310422152281,-0.0174152608960867,-0.0288079623132944) * RES1_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1090] res += mat4x4(-0.0089945588260889,-0.0105278370901942,-0.0087794493883848,-0.0200581382960081,-0.0070241875946522,-0.0100495256483555,-0.0065141017548740,-0.0025615154299885,0.0096025029197335,-0.0005133956437930,-0.0020267993677408,-0.0070255715399981,-0.0100025376304984,-0.0236529950052500,-0.0137209612876177,-0.0302035361528397) * RES2_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1091] res += mat4x4(-0.0032405662350357,-0.0148320076987147,-0.0076260948553681,-0.0124788954854012,-0.0087069822475314,0.0110121816396713,-0.0021906285546720,0.0014071050100029,0.0135683985427022,-0.0078443791717291,0.0062457872554660,0.0043241265229881,0.0002743605873547,-0.0032806890085340,-0.0032846797257662,0.0150700956583023) * RES3_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1092] res += mat4x4(-0.0027850405313075,0.0053440136834979,-0.0017873296746984,-0.0044526602141559,0.0054683117195964,-0.0244847126305103,-0.0001234160299646,0.0006427325424738,-0.0021922208834440,0.0216671191155910,0.0118218520656228,0.0052054254338145,-0.0060959886759520,0.0006872841622680,0.0020801757927984,-0.0042533921077847) * RES4_texOff(vec2(-1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1093] res += mat4x4(-0.0559481568634510,-0.0195591971278191,-0.0200900416821241,-0.0259768385440111,0.0271696113049984,0.0055345161817968,0.0060981209389865,-0.0034072615671903,-0.0195017755031586,-0.0191524475812912,-0.0099942665547132,-0.0354959741234779,0.0537344738841057,0.0157418027520180,0.0418605282902718,0.0278326217085123) * RES1_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1094] res += mat4x4(-0.0036691017448902,-0.0047218333929777,0.0207924265414476,-0.0047244532033801,0.0225677359849215,0.0167649295181036,0.0061167129315436,0.0114347161725163,0.0303734224289656,0.0355883352458477,0.0568233802914619,0.0352237112820148,0.0735053122043610,0.0266380403190851,0.0783454328775406,0.0347369872033596) * RES2_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1095] res += mat4x4(0.0483660250902176,0.0143020860850811,0.0473622940480709,0.0214125514030457,0.0189097002148628,0.0047973231412470,0.0452921539545059,-0.0065782419405878,-0.0629488378763199,0.0243484787642956,-0.0135263381525874,0.0123279569670558,-0.0082848174497485,0.0024778738152236,-0.0106893666088581,-0.0001850607804954) * RES3_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1096] res += mat4x4(-0.0339773818850517,0.0586699061095715,-0.0195228401571512,0.0464928857982159,-0.0197486504912376,-0.0043210862204432,-0.0319182090461254,-0.0084351114928722,0.0396042764186859,-0.0236901417374611,0.0147373573854566,-0.0199888627976179,0.0884112045168877,-0.1296077072620392,0.0369938686490059,-0.0849645882844925) * RES4_texOff(vec2(0,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1097] res += mat4x4(-0.1179696097970009,-0.1306988149881363,0.2269905507564545,0.1376847475767136,0.1460490524768829,0.1386509090662003,0.1258177161216736,0.0984488725662231,-0.0484265647828579,0.0311658699065447,-0.1097578033804893,0.1228798478841782,0.2591285407543182,0.2391219735145569,0.1856463700532913,0.1675472557544708) * RES1_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1098] res += mat4x4(0.0581708513200283,-0.0032117022201419,-0.0482851490378380,-0.0706159919500351,0.1523579508066177,0.1061967536807060,0.0877194479107857,0.0380293950438499,-0.1161146983504295,-0.1074958667159081,-0.0130370790138841,-0.0006071503157727,0.2575406432151794,0.2458014935255051,0.3011408150196075,0.2888701260089874) * RES2_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1099] res += mat4x4(0.1877700835466385,0.1970345824956894,0.1723081618547440,0.1863754689693451,-0.0168692730367184,0.0111087076365948,0.0554454214870930,0.1145997643470764,-0.0071506653912365,-0.0326027795672417,0.0248421318829060,0.0405052118003368,0.0787657722830772,-0.1041176393628120,-0.0092452019453049,-0.1300307959318161) * RES3_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1100] res += mat4x4(0.0406596362590790,-0.1513831019401550,0.0393252559006214,-0.1172746941447258,0.1404846608638763,0.1068493574857712,-0.0144858211278915,-0.0008008934091777,0.0232940409332514,0.1414675712585449,-0.1191455051302910,0.0037538856267929,-0.0403815843164921,0.1713769584894180,-0.0346005111932755,0.0877283737063408) * RES4_texOff(vec2(0,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1101] res += mat4x4(-0.0165363755077124,-0.0626669824123383,-0.0024954087566584,0.0600780025124550,0.0172574203461409,0.0353372246026993,0.0204393472522497,0.0417744480073452,0.0082517173141241,0.0452848188579082,0.0406533293426037,0.0093610836192966,0.0395939871668816,0.0931207016110420,0.0435328558087349,0.0769012123346329) * RES1_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1102] res += mat4x4(-0.0319104157388210,-0.0375522784888744,-0.0398675724864006,-0.0675119608640671,-0.0148185798898339,0.0121404305100441,-0.0029036172199994,0.0020732285920531,0.0234324168413877,-0.0399785749614239,0.0323737785220146,-0.0093255508691072,0.0102615375071764,0.0678639039397240,0.0368196740746498,0.0896952524781227) * RES2_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1103] res += mat4x4(0.0159728452563286,0.0416712239384651,0.0347425043582916,0.0421460643410683,0.0008081028936431,0.0116949938237667,0.0074917669408023,0.0192919857800007,0.0171711537986994,-0.0101426783949137,0.0068109538406134,-0.0176109261810780,-0.0443183854222298,0.0764245316386223,-0.0322800390422344,-0.0020600541029125) * RES3_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1104] res += mat4x4(-0.0010740647558123,0.0388096384704113,0.0010552684543654,0.0432058833539486,-0.0049798754043877,0.0053115054033697,0.0019503619987518,-0.0387431308627129,-0.0065949987620115,0.0505174398422241,-0.0543942712247372,-0.0015275976620615,-0.0083921244367957,-0.0187719315290451,-0.0109476409852505,-0.0106759341433644) * RES4_texOff(vec2(0,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1105] res += mat4x4(0.0051117250695825,-0.0033410859759897,-0.0040079299360514,0.0055306786671281,-0.0019510040292516,-0.0010836309520528,-0.0033211021218449,-0.0065903887152672,0.0022529305424541,-0.0041433679871261,-0.0084395809099078,0.0007058104965836,-0.0140225086361170,-0.0102671803906560,-0.0249901991337538,-0.0303833615034819) * RES1_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1106] res += mat4x4(0.0125678768381476,-0.0151942037045956,0.0075833774171770,-0.0155235687270761,-0.0000200544054678,0.0030575830023736,-0.0039111212827265,-0.0032847151160240,0.0061915065161884,-0.0008134687086567,0.0243571326136589,0.0230383742600679,-0.0146478731185198,-0.0092745777219534,0.0046072923578322,-0.0079534733667970) * RES2_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1107] res += mat4x4(-0.0097588589414954,-0.0035078686196357,-0.0105109121650457,-0.0140263410285115,-0.0005829505971633,0.0068487222306430,0.0070274472236633,0.0080682458356023,0.0208634454756975,0.0100151635706425,-0.0521877855062485,0.0083464942872524,-0.0010621200781316,-0.0108121363446116,0.0063104690052569,-0.0056940545327961) * RES3_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1108] res += mat4x4(0.0162853933870792,0.0076454998925328,0.0107743749395013,0.0216084551066160,-0.0002642004692461,-0.0012697440106422,-0.0232997462153435,-0.0066385669633746,-0.0032070311717689,-0.0034522172063589,0.0067081819288433,-0.0237586386501789,-0.0137327276170254,-0.0097812153398991,0.0457961820065975,-0.0641853287816048) * RES4_texOff(vec2(1,-1));
[ 397.806][d][vo/gpu-next/libplacebo] [1109] res += mat4x4(0.0082530006766319,-0.0048218108713627,-0.0260043144226074,-0.0322636663913727,0.0245403517037630,0.0189718026667833,0.0201180893927813,0.0223731752485037,-0.0154254138469696,0.0161295570433140,-0.0136728994548321,-0.0050735161639750,0.0149836223572493,0.0346523150801659,0.0397907048463821,0.0489960424602032) * RES1_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1110] res += mat4x4(0.0220018606632948,0.0093919858336449,0.0140580376610160,-0.0072062858380377,0.0157827660441399,-0.0008420076919720,0.0502980016171932,0.0254325121641159,0.0137034645304084,0.0052674622274935,-0.0317771695554256,-0.0357571057975292,0.0275730285793543,0.0288176275789738,0.0530282929539680,0.0572183132171631) * RES2_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1111] res += mat4x4(0.0274036191403866,0.0304108746349812,0.0443621836602688,0.0470876954495907,-0.0105204451829195,-0.0062582152895629,0.0051971892826259,0.0052137244492769,0.0080892154946923,0.0526603050529957,-0.0614838302135468,-0.0719057247042656,-0.0146499508991838,-0.0301279500126839,0.0551207289099693,-0.0202790498733521) * RES3_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1112] res += mat4x4(0.0030307257547975,0.0016283076256514,0.0093603916466236,-0.0393031202256680,0.0047102752141654,0.0021207178942859,-0.0415569059550762,-0.0410857200622559,-0.0234171319752932,0.0070652165450156,-0.0060949386097491,0.0579068884253502,-0.0032723729964346,-0.0345389954745770,-0.0146396216005087,0.0664585530757904) * RES4_texOff(vec2(1,0));
[ 397.806][d][vo/gpu-next/libplacebo] [1113] res += mat4x4(-0.0060492716729641,0.0030178369488567,-0.0014131128555164,-0.0104836737737060,0.0005349104176275,-0.0066002658568323,-0.0107689173892140,-0.0154894515872002,-0.0021532929968089,0.0003043189935852,0.0000212212416955,0.0262770242989063,-0.0061991675756872,-0.0229524057358503,-0.0179380439221859,-0.0190318487584591) * RES1_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1114] res += mat4x4(0.0100620929151773,-0.0013402060139924,-0.0202538128942251,-0.0282459985464811,-0.0005023539997637,0.0015169888501987,-0.0186713207513094,-0.0053251008503139,0.0104408143088222,-0.0009164076182060,0.0141644142568111,-0.0118004251271486,-0.0117476247251034,-0.0188432894647121,-0.0273562390357256,-0.0195445436984301) * RES2_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1115] res += mat4x4(-0.0005210597882979,-0.0122195687144995,-0.0171017311513424,-0.0154880527406931,-0.0067425114102662,0.0001912614097819,-0.0035711112432182,0.0169256068766117,0.0115485033020377,-0.0041601392440498,0.0142273167148232,-0.0184783581644297,-0.0127313714474440,0.0051582138985395,-0.0165696628391743,0.0555390641093254) * RES3_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1116] res += mat4x4(-0.0041520586237311,-0.0031902645714581,-0.0041864593513310,0.0066329599358141,0.0084658414125443,-0.0048282416537404,-0.0054575288668275,-0.0444690361618996,-0.0055003603920341,0.0066882940009236,0.0179758612066507,0.0327335819602013,0.0022823568433523,0.0029537994414568,0.0003775391378440,-0.0003992885467596) * RES4_texOff(vec2(1,1));
[ 397.806][d][vo/gpu-next/libplacebo] [1117] return res;
[ 397.806][d][vo/gpu-next/libplacebo] [1118] }
[ 397.806][d][vo/gpu-next/libplacebo] [1119] 
[ 397.806][d][vo/gpu-next/libplacebo] [1120] //!HOOK LUMA
[ 397.806][d][vo/gpu-next/libplacebo] [1121] //!WHEN OUTPUT.w LUMA.w / 1.200 > OUTPUT.h LUMA.h / 1.200 > *
[ 397.806][d][vo/gpu-next/libplacebo] [1122] //!WIDTH LUMA.w 2 *
[ 397.806][d][vo/gpu-next/libplacebo] [1123] //!HEIGHT LUMA.h 2 *
[ 397.806][d][vo/gpu-next/libplacebo] [1124] //!DESC aggregation
[ 397.806][d][vo/gpu-next/libplacebo] [1125] //!BIND SUBCONV1
[ 397.806][d][vo/gpu-next/libplacebo] [1126] vec4 hook()
[ 397.806][d][vo/gpu-next/libplacebo] [1127] {
[ 397.806][d][vo/gpu-next/libplacebo] [1128] vec2 fcoord = fract(SUBCONV1_pos * SUBCONV1_size);
[ 397.806][d][vo/gpu-next/libplacebo] [1129] vec2 base = SUBCONV1_pos + (vec2(0.5) - fcoord) * SUBCONV1_pt;
[ 397.806][d][vo/gpu-next/libplacebo] [1130] ivec2 index = ivec2(fcoord * vec2(2));
[ 397.806][d][vo/gpu-next/libplacebo] [1131] vec4 res = SUBCONV1_tex(base);
[ 397.806][d][vo/gpu-next/libplacebo] [1132] return vec4(res[index.x * 2 + index.y], 0, 0, 1);
[ 397.806][d][vo/gpu-next/libplacebo] [1133] }
[ 397.806][d][global] config path: 'shaders/igv/SSimSuperRes.glsl' -> '/home/zen/.config/mpv/shaders/igv/SSimSuperRes.glsl'
[ 397.806][d][global] user path: '~~/shaders/igv/SSimSuperRes.glsl' -> '/home/zen/.config/mpv/shaders/igv/SSimSuperRes.glsl'
[ 397.806][v][vo/gpu-next/libplacebo] Registering hook pass: SSSR Downscaling I
[ 397.806][v][vo/gpu-next/libplacebo] Registering hook pass: SSSR Downscaling II
[ 397.806][v][vo/gpu-next/libplacebo] Registering hook pass: SSSR var
[ 397.806][v][vo/gpu-next/libplacebo] Registering hook pass: SSSR final pass
[ 397.806][d][vo/gpu-next/libplacebo] Loaded user shader:
[ 397.806][d][vo/gpu-next/libplacebo] [  1] // SSimSuperRes by Shiandow
[ 397.806][d][vo/gpu-next/libplacebo] [  2] //
[ 397.806][d][vo/gpu-next/libplacebo] [  3] // This library is free software; you can redistribute it and/or
[ 397.806][d][vo/gpu-next/libplacebo] [  4] // modify it under the terms of the GNU Lesser General Public
[ 397.806][d][vo/gpu-next/libplacebo] [  5] // License as published by the Free Software Foundation; either
[ 397.806][d][vo/gpu-next/libplacebo] [  6] // version 3.0 of the License, or (at your option) any later version.
[ 397.806][d][vo/gpu-next/libplacebo] [  7] // 
[ 397.806][d][vo/gpu-next/libplacebo] [  8] // This library is distributed in the hope that it will be useful,
[ 397.806][d][vo/gpu-next/libplacebo] [  9] // but WITHOUT ANY WARRANTY; without even the implied warranty of
[ 397.806][d][vo/gpu-next/libplacebo] [ 10] // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
[ 397.806][d][vo/gpu-next/libplacebo] [ 11] // Lesser General Public License for more details.
[ 397.806][d][vo/gpu-next/libplacebo] [ 12] // 
[ 397.806][d][vo/gpu-next/libplacebo] [ 13] // You should have received a copy of the GNU Lesser General Public
[ 397.806][d][vo/gpu-next/libplacebo] [ 14] // License along with this library.
[ 397.806][d][vo/gpu-next/libplacebo] [ 15] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 16] //!HOOK POSTKERNEL
[ 397.806][d][vo/gpu-next/libplacebo] [ 17] //!BIND HOOKED
[ 397.806][d][vo/gpu-next/libplacebo] [ 18] //!SAVE LOWRES
[ 397.806][d][vo/gpu-next/libplacebo] [ 19] //!HEIGHT NATIVE_CROPPED.h
[ 397.806][d][vo/gpu-next/libplacebo] [ 20] //!WHEN NATIVE_CROPPED.h OUTPUT.h <
[ 397.806][d][vo/gpu-next/libplacebo] [ 21] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [ 22] //!DESC SSSR Downscaling I
[ 397.806][d][vo/gpu-next/libplacebo] [ 23] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 24] #define axis        1
[ 397.806][d][vo/gpu-next/libplacebo] [ 25] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 26] #define offset      vec2(0,0)
[ 397.806][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 28] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[ 397.806][d][vo/gpu-next/libplacebo] [ 29] #define Kernel(x)   MN(0.334, 0.333, abs(x))
[ 397.806][d][vo/gpu-next/libplacebo] [ 30] #define taps        2.0
[ 397.806][d][vo/gpu-next/libplacebo] [ 31] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 32] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.806][d][vo/gpu-next/libplacebo] [ 33] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 34] vec4 hook() {
[ 397.806][d][vo/gpu-next/libplacebo] [ 35]     float low  = ceil((HOOKED_pos - taps/input_size) * HOOKED_size - offset - 0.5)[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 36]     float high = floor((HOOKED_pos + taps/input_size) * HOOKED_size - offset - 0.5)[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 37] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 38]     float W = 0.0;
[ 397.806][d][vo/gpu-next/libplacebo] [ 39]     vec4 avg = vec4(0);
[ 397.806][d][vo/gpu-next/libplacebo] [ 40]     vec2 pos = HOOKED_pos;
[ 397.806][d][vo/gpu-next/libplacebo] [ 41]     vec4 tex;
[ 397.806][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 43]     for (float k = low; k <= high; k++) {
[ 397.806][d][vo/gpu-next/libplacebo] [ 44]         pos[axis] = HOOKED_pt[axis] * (k - offset[axis] + 0.5);
[ 397.806][d][vo/gpu-next/libplacebo] [ 45]         float rel = (pos[axis] - HOOKED_pos[axis])*input_size[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 46]         float w = Kernel(rel);
[ 397.806][d][vo/gpu-next/libplacebo] [ 47] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 48]         tex.rgb = textureLod(HOOKED_raw, pos, 0.0).rgb * HOOKED_mul;
[ 397.806][d][vo/gpu-next/libplacebo] [ 49]         tex.a = Luma(tex.rgb);
[ 397.806][d][vo/gpu-next/libplacebo] [ 50]         avg += w * tex;
[ 397.806][d][vo/gpu-next/libplacebo] [ 51]         W += w;
[ 397.806][d][vo/gpu-next/libplacebo] [ 52]     }
[ 397.806][d][vo/gpu-next/libplacebo] [ 53]     avg /= W;
[ 397.806][d][vo/gpu-next/libplacebo] [ 54] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 55]     return vec4(avg.rgb, max(abs(avg.a - Luma(avg.rgb)), 5e-7));
[ 397.806][d][vo/gpu-next/libplacebo] [ 56] }
[ 397.806][d][vo/gpu-next/libplacebo] [ 57] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 58] //!HOOK POSTKERNEL
[ 397.806][d][vo/gpu-next/libplacebo] [ 59] //!BIND LOWRES
[ 397.806][d][vo/gpu-next/libplacebo] [ 60] //!SAVE LOWRES
[ 397.806][d][vo/gpu-next/libplacebo] [ 61] //!WIDTH NATIVE_CROPPED.w
[ 397.806][d][vo/gpu-next/libplacebo] [ 62] //!HEIGHT NATIVE_CROPPED.h
[ 397.806][d][vo/gpu-next/libplacebo] [ 63] //!WHEN NATIVE_CROPPED.w OUTPUT.w <
[ 397.806][d][vo/gpu-next/libplacebo] [ 64] //!COMPONENTS 4
[ 397.806][d][vo/gpu-next/libplacebo] [ 65] //!DESC SSSR Downscaling II
[ 397.806][d][vo/gpu-next/libplacebo] [ 66] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 67] #define axis        0
[ 397.806][d][vo/gpu-next/libplacebo] [ 68] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 69] #define offset      vec2(0,0)
[ 397.806][d][vo/gpu-next/libplacebo] [ 70] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 71] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[ 397.806][d][vo/gpu-next/libplacebo] [ 72] #define Kernel(x)   MN(0.334, 0.333, abs(x))
[ 397.806][d][vo/gpu-next/libplacebo] [ 73] #define taps        2.0
[ 397.806][d][vo/gpu-next/libplacebo] [ 74] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 75] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.806][d][vo/gpu-next/libplacebo] [ 76] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 77] vec4 hook() {
[ 397.806][d][vo/gpu-next/libplacebo] [ 78]     float low  = ceil((LOWRES_pos - taps/input_size) * LOWRES_size - offset - 0.5)[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 79]     float high = floor((LOWRES_pos + taps/input_size) * LOWRES_size - offset - 0.5)[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 80] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 81]     float W = 0.0;
[ 397.806][d][vo/gpu-next/libplacebo] [ 82]     vec4 avg = vec4(0);
[ 397.806][d][vo/gpu-next/libplacebo] [ 83]     vec2 pos = LOWRES_pos;
[ 397.806][d][vo/gpu-next/libplacebo] [ 84]     vec4 tex;
[ 397.806][d][vo/gpu-next/libplacebo] [ 85] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 86]     for (float k = low; k <= high; k++) {
[ 397.806][d][vo/gpu-next/libplacebo] [ 87]         pos[axis] = LOWRES_pt[axis] * (k - offset[axis] + 0.5);
[ 397.806][d][vo/gpu-next/libplacebo] [ 88]         float rel = (pos[axis] - LOWRES_pos[axis])*input_size[axis];
[ 397.806][d][vo/gpu-next/libplacebo] [ 89]         float w = Kernel(rel);
[ 397.806][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 91]         tex.rgb = textureLod(LOWRES_raw, pos, 0.0).rgb * LOWRES_mul;
[ 397.806][d][vo/gpu-next/libplacebo] [ 92]         tex.a = Luma(tex.rgb);
[ 397.806][d][vo/gpu-next/libplacebo] [ 93]         avg += w * tex;
[ 397.806][d][vo/gpu-next/libplacebo] [ 94]         W += w;
[ 397.806][d][vo/gpu-next/libplacebo] [ 95]     }
[ 397.806][d][vo/gpu-next/libplacebo] [ 96]     avg /= W;
[ 397.806][d][vo/gpu-next/libplacebo] [ 97] 
[ 397.806][d][vo/gpu-next/libplacebo] [ 98]     return vec4(avg.rgb, max(abs(avg.a - Luma(avg.rgb)), 5e-7) + LOWRES_texOff(0).a);
[ 397.806][d][vo/gpu-next/libplacebo] [ 99] }
[ 397.806][d][vo/gpu-next/libplacebo] [100] 
[ 397.806][d][vo/gpu-next/libplacebo] [101] //!HOOK POSTKERNEL
[ 397.806][d][vo/gpu-next/libplacebo] [102] //!BIND PREKERNEL
[ 397.806][d][vo/gpu-next/libplacebo] [103] //!BIND LOWRES
[ 397.806][d][vo/gpu-next/libplacebo] [104] //!SAVE var
[ 397.806][d][vo/gpu-next/libplacebo] [105] //!WIDTH NATIVE_CROPPED.w
[ 397.806][d][vo/gpu-next/libplacebo] [106] //!HEIGHT NATIVE_CROPPED.h
[ 397.806][d][vo/gpu-next/libplacebo] [107] //!WHEN NATIVE_CROPPED.h OUTPUT.h <
[ 397.806][d][vo/gpu-next/libplacebo] [108] //!COMPONENTS 2
[ 397.806][d][vo/gpu-next/libplacebo] [109] //!DESC SSSR var
[ 397.806][d][vo/gpu-next/libplacebo] [110] 
[ 397.806][d][vo/gpu-next/libplacebo] [111] #define spread      1.0 / 4.0
[ 397.806][d][vo/gpu-next/libplacebo] [112] 
[ 397.806][d][vo/gpu-next/libplacebo] [113] #define GetL(x,y)   PREKERNEL_tex(PREKERNEL_pt * (PREKERNEL_pos * input_size + tex_offset + vec2(x,y))).rgb
[ 397.806][d][vo/gpu-next/libplacebo] [114] #define GetH(x,y)   LOWRES_texOff(vec2(x,y)).rgb
[ 397.806][d][vo/gpu-next/libplacebo] [115] 
[ 397.806][d][vo/gpu-next/libplacebo] [116] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.806][d][vo/gpu-next/libplacebo] [117] #define diff(x,y)   vec2(Luma((GetL(x,y) - meanL)), Luma((GetH(x,y) - meanH)))
[ 397.806][d][vo/gpu-next/libplacebo] [118] 
[ 397.806][d][vo/gpu-next/libplacebo] [119] vec4 hook() {
[ 397.806][d][vo/gpu-next/libplacebo] [120]     vec3 meanL = GetL(0,0);
[ 397.807][d][vo/gpu-next/libplacebo] [121]     vec3 meanH = GetH(0,0);
[ 397.807][d][vo/gpu-next/libplacebo] [122]     for (int X=-1; X<=1; X+=2) {
[ 397.807][d][vo/gpu-next/libplacebo] [123]         meanL += GetL(X,0) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [124]         meanH += GetH(X,0) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [125]     }
[ 397.807][d][vo/gpu-next/libplacebo] [126]     for (int Y=-1; Y<=1; Y+=2) {
[ 397.807][d][vo/gpu-next/libplacebo] [127]         meanL += GetL(0,Y) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [128]         meanH += GetH(0,Y) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [129]     }
[ 397.807][d][vo/gpu-next/libplacebo] [130]     meanL /= (1.0 + 4.0*spread);
[ 397.807][d][vo/gpu-next/libplacebo] [131]     meanH /= (1.0 + 4.0*spread);
[ 397.807][d][vo/gpu-next/libplacebo] [132] 
[ 397.807][d][vo/gpu-next/libplacebo] [133]     vec2 var = diff(0,0);
[ 397.807][d][vo/gpu-next/libplacebo] [134]     for (int X=-1; X<=1; X+=2)
[ 397.807][d][vo/gpu-next/libplacebo] [135]         var += diff(X,0) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [136] 
[ 397.807][d][vo/gpu-next/libplacebo] [137]     for (int Y=-1; Y<=1; Y+=2)
[ 397.807][d][vo/gpu-next/libplacebo] [138]         var += diff(0,Y) * spread;
[ 397.807][d][vo/gpu-next/libplacebo] [139] 
[ 397.807][d][vo/gpu-next/libplacebo] [140]     return vec4(max(var / (1.0 + 4.0*spread), vec2(1e-6)), 0, 0);
[ 397.807][d][vo/gpu-next/libplacebo] [141] }
[ 397.807][d][vo/gpu-next/libplacebo] [142] 
[ 397.807][d][vo/gpu-next/libplacebo] [143] //!HOOK POSTKERNEL
[ 397.807][d][vo/gpu-next/libplacebo] [144] //!BIND HOOKED
[ 397.807][d][vo/gpu-next/libplacebo] [145] //!BIND PREKERNEL
[ 397.807][d][vo/gpu-next/libplacebo] [146] //!BIND LOWRES
[ 397.807][d][vo/gpu-next/libplacebo] [147] //!BIND var
[ 397.807][d][vo/gpu-next/libplacebo] [148] //!WHEN NATIVE_CROPPED.h OUTPUT.h <
[ 397.807][d][vo/gpu-next/libplacebo] [149] //!DESC SSSR final pass
[ 397.807][d][vo/gpu-next/libplacebo] [150] 
[ 397.807][d][vo/gpu-next/libplacebo] [151] #define oversharp   0.5
[ 397.807][d][vo/gpu-next/libplacebo] [152] 
[ 397.807][d][vo/gpu-next/libplacebo] [153] // -- Window Size --
[ 397.807][d][vo/gpu-next/libplacebo] [154] #define taps        3.0
[ 397.807][d][vo/gpu-next/libplacebo] [155] #define even        (taps - 2.0 * floor(taps / 2.0) == 0.0)
[ 397.807][d][vo/gpu-next/libplacebo] [156] #define minX        int(1.0-ceil(taps/2.0))
[ 397.807][d][vo/gpu-next/libplacebo] [157] #define maxX        int(floor(taps/2.0))
[ 397.807][d][vo/gpu-next/libplacebo] [158] 
[ 397.807][d][vo/gpu-next/libplacebo] [159] #define Kernel(x)   cos(acos(-1.0)*(x)/taps) // Hann kernel
[ 397.807][d][vo/gpu-next/libplacebo] [160] 
[ 397.807][d][vo/gpu-next/libplacebo] [161] // -- Input processing --
[ 397.807][d][vo/gpu-next/libplacebo] [162] #define var(x,y)    var_tex(var_pt * (pos + vec2(x,y) + 0.5)).rg
[ 397.807][d][vo/gpu-next/libplacebo] [163] #define GetL(x,y)   PREKERNEL_tex(PREKERNEL_pt * (pos + tex_offset + vec2(x,y) + 0.5)).rgb
[ 397.807][d][vo/gpu-next/libplacebo] [164] #define GetH(x,y)   LOWRES_tex(LOWRES_pt * (pos + vec2(x,y) + 0.5))
[ 397.807][d][vo/gpu-next/libplacebo] [165] 
[ 397.807][d][vo/gpu-next/libplacebo] [166] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.807][d][vo/gpu-next/libplacebo] [167] 
[ 397.807][d][vo/gpu-next/libplacebo] [168] vec4 hook() {
[ 397.807][d][vo/gpu-next/libplacebo] [169]     vec4 c0 = HOOKED_texOff(0);
[ 397.807][d][vo/gpu-next/libplacebo] [170] 
[ 397.807][d][vo/gpu-next/libplacebo] [171]     vec2 pos = HOOKED_pos * LOWRES_size - vec2(0.5);
[ 397.807][d][vo/gpu-next/libplacebo] [172]     vec2 offset = pos - (even ? floor(pos) : round(pos));
[ 397.807][d][vo/gpu-next/libplacebo] [173]     pos -= offset;
[ 397.807][d][vo/gpu-next/libplacebo] [174] 
[ 397.807][d][vo/gpu-next/libplacebo] [175]     vec2 mVar = vec2(0.0);
[ 397.807][d][vo/gpu-next/libplacebo] [176]     for (int X=-1; X<=1; X++)
[ 397.807][d][vo/gpu-next/libplacebo] [177]     for (int Y=-1; Y<=1; Y++) {
[ 397.807][d][vo/gpu-next/libplacebo] [178]         vec2 w = clamp(1.5 - abs(vec2(X,Y)), 0.0, 1.0);
[ 397.807][d][vo/gpu-next/libplacebo] [179]         mVar += w.r * w.g * vec2(GetH(X,Y).a, 1.0);
[ 397.807][d][vo/gpu-next/libplacebo] [180]     }
[ 397.807][d][vo/gpu-next/libplacebo] [181]     mVar.r /= mVar.g;
[ 397.807][d][vo/gpu-next/libplacebo] [182] 
[ 397.807][d][vo/gpu-next/libplacebo] [183]     // Calculate faithfulness force
[ 397.807][d][vo/gpu-next/libplacebo] [184]     float weightSum = 0.0;
[ 397.807][d][vo/gpu-next/libplacebo] [185]     vec3 diff = vec3(0);
[ 397.807][d][vo/gpu-next/libplacebo] [186] 
[ 397.807][d][vo/gpu-next/libplacebo] [187]     for (int X = minX; X <= maxX; X++)
[ 397.807][d][vo/gpu-next/libplacebo] [188]     for (int Y = minX; Y <= maxX; Y++)
[ 397.807][d][vo/gpu-next/libplacebo] [189]     {
[ 397.807][d][vo/gpu-next/libplacebo] [190]         float R = (-1.0 - oversharp) * sqrt(var(X,Y).r / (var(X,Y).g + mVar.r));
[ 397.807][d][vo/gpu-next/libplacebo] [191] 
[ 397.807][d][vo/gpu-next/libplacebo] [192]         vec2 krnl = Kernel(vec2(X,Y) - offset);
[ 397.807][d][vo/gpu-next/libplacebo] [193]         float weight = krnl.r * krnl.g / (Luma((c0.rgb - GetH(X,Y).rgb)) + GetH(X,Y).a);
[ 397.807][d][vo/gpu-next/libplacebo] [194] 
[ 397.807][d][vo/gpu-next/libplacebo] [195]         diff += weight * (GetL(X,Y) + GetH(X,Y).rgb * R + (-1.0 - R) * (c0.rgb));
[ 397.807][d][vo/gpu-next/libplacebo] [196]         weightSum += weight;
[ 397.807][d][vo/gpu-next/libplacebo] [197]     }
[ 397.807][d][vo/gpu-next/libplacebo] [198]     diff /= weightSum;
[ 397.807][d][vo/gpu-next/libplacebo] [199] 
[ 397.807][d][vo/gpu-next/libplacebo] [200]     c0.rgb = ((c0.rgb) + diff);
[ 397.807][d][vo/gpu-next/libplacebo] [201] 
[ 397.807][d][vo/gpu-next/libplacebo] [202]     return c0;
[ 397.807][d][vo/gpu-next/libplacebo] [203] }
[ 397.807][d][vo/gpu-next] Render options updated, resetting render state.
[ 397.807][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 397.196800
[ 397.807][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 397.807][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.807][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.807][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.807][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.807][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.807][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.807][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.807][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.807][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.807][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.807][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.807][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.807][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.807][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.807][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.807][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.807][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.807][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.807][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.807][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.807][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.807][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.807][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.807][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.807][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.807][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.807][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.807][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.807][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.807][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.807][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.807][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.807][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.807][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.807][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.807][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.807][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.807][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.807][d][vo/gpu-next/libplacebo] [ 28] #define LUMA_raw _2 
[ 397.807][d][vo/gpu-next/libplacebo] [ 29] #define LUMA_pos _3 
[ 397.807][d][vo/gpu-next/libplacebo] [ 30] #define LUMA_map _3_map 
[ 397.807][d][vo/gpu-next/libplacebo] [ 31] #define LUMA_size vec2(textureSize(_2, 0)) 
[ 397.807][d][vo/gpu-next/libplacebo] [ 32] #define LUMA_pt _4 
[ 397.807][d][vo/gpu-next/libplacebo] [ 33] #define LUMA_off _5 
[ 397.807][d][vo/gpu-next/libplacebo] [ 34] #define LUMA_mul _6 
[ 397.807][d][vo/gpu-next/libplacebo] [ 35] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.807][d][vo/gpu-next/libplacebo] [ 36] #define LUMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.807][d][vo/gpu-next/libplacebo] [ 37] #define LUMA_texOff(off) (LUMA_tex(_3 + _4 * vec2(off))) 
[ 397.807][d][vo/gpu-next/libplacebo] [ 38] #define LUMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.807][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.807][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.807][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.807][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.807][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.807][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.807][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.807][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.807][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.807][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.807][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.807][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.807][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.807][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.807][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.807][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.807][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.807][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.807][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.807][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.807][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.807][d][vo/gpu-next/libplacebo] [ 60] vec4 hook()
[ 397.807][d][vo/gpu-next/libplacebo] [ 61] {
[ 397.807][d][vo/gpu-next/libplacebo] [ 62] vec4 res = vec4(0.0147628486156464,-0.1012328118085861,0.0125125292688608,-0.0872502326965332);
[ 397.807][d][vo/gpu-next/libplacebo] [ 63] res += vec4(0.0258867852389812,-0.0340782813727856,0.0420042425394058,0.0325760319828987) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 64] res += vec4(-0.0042444774881005,-0.0015453429659829,0.0189028624445200,-0.0475430712103844) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 65] res += vec4(0.0567907728254795,0.0873767733573914,0.0567022338509560,-0.0621563792228699) * float(LUMA_texOff(vec2(-2,0)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 66] res += vec4(-0.0306649338454008,-0.0714163482189178,0.0473429188132286,0.1008332893252373) * float(LUMA_texOff(vec2(-2,1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 67] res += vec4(0.0152249755337834,0.0639158412814140,-0.0300818998366594,-0.0612861253321171) * float(LUMA_texOff(vec2(-2,2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 68] res += vec4(0.0408086255192757,0.0875807404518127,0.0317574664950371,0.1191576942801476) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 69] res += vec4(-0.1050408855080605,0.0589458979666233,0.0660466924309731,-0.0352053083479404) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 70] res += vec4(-0.3237755596637726,0.1804163157939911,-0.0379739888012409,0.1372951567173004) * float(LUMA_texOff(vec2(-1,0)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 71] res += vec4(-0.0318203978240490,0.0038085589185357,-0.1028131842613220,0.0520160682499409) * float(LUMA_texOff(vec2(-1,1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 72] res += vec4(-0.0142179057002068,-0.0404687039554119,0.0323907770216465,0.0430089049041271) * float(LUMA_texOff(vec2(-1,2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 73] res += vec4(-0.0298593845218420,0.0694253444671631,0.0555122569203377,0.1005806028842926) * float(LUMA_texOff(vec2(0,-2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 74] res += vec4(-0.0350390858948231,-0.0044562439434230,-0.0801842734217644,0.2329425364732742) * float(LUMA_texOff(vec2(0,-1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 75] res += vec4(0.4449002444744110,0.1544224023818970,-0.1345878094434738,0.2600763738155365) * float(LUMA_texOff(vec2(0,0)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 76] res += vec4(-0.0495627783238888,-0.1202057301998138,0.3168737590312958,0.1082767471671104) * float(LUMA_texOff(vec2(0,1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 77] res += vec4(-0.0142364865168929,-0.0569389946758747,-0.0300011597573757,-0.0413980036973953) * float(LUMA_texOff(vec2(0,2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 78] res += vec4(-0.0005151761579327,-0.0952512174844742,-0.0208353623747826,0.0199232511222363) * float(LUMA_texOff(vec2(1,-2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 79] res += vec4(0.0601653940975666,0.0493328794836998,-0.1787780970335007,-0.0561225190758705) * float(LUMA_texOff(vec2(1,-1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 80] res += vec4(0.2522509992122650,-0.0372882746160030,0.0964855477213860,0.0540010221302509) * float(LUMA_texOff(vec2(1,0)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 81] res += vec4(-0.1415692716836929,-0.0229692179709673,0.0637697577476501,-0.1182228699326515) * float(LUMA_texOff(vec2(1,1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 82] res += vec4(0.0687273889780045,-0.0198110770434141,-0.0516268573701382,0.0656097158789635) * float(LUMA_texOff(vec2(1,2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 83] res += vec4(-0.0328949801623821,0.0751283690333366,0.0083597749471664,0.0140956267714500) * float(LUMA_texOff(vec2(2,-2)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 84] res += vec4(0.0248807389289141,-0.0190096721053123,0.0093385083600879,-0.0304660033434629) * float(LUMA_texOff(vec2(2,-1)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 85] res += vec4(-0.1160471588373184,0.0223725475370884,-0.2164965867996216,-0.0070583499036729) * float(LUMA_texOff(vec2(2,0)));
[ 397.807][d][vo/gpu-next/libplacebo] [ 86] res += vec4(-0.0276862345635891,-0.0283980723470449,0.0453952662646770,0.0049119470641017) * float(LUMA_texOff(vec2(2,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 87] res += vec4(-0.0414730980992317,0.0231062546372414,-0.0347512997686863,-0.0328228026628494) * float(LUMA_texOff(vec2(2,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 88] return res;
[ 397.808][d][vo/gpu-next/libplacebo] [ 89] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 91] vec4 _1() {
[ 397.808][d][vo/gpu-next/libplacebo] [ 92] vec4 color = hook(); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 93] return color;
[ 397.808][d][vo/gpu-next/libplacebo] [ 94] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 95] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 96] void main() {
[ 397.808][d][vo/gpu-next/libplacebo] [ 97] out_color = _1();
[ 397.808][d][vo/gpu-next/libplacebo] [ 98] }
[ 397.808][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.808][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.808][d][vo/gpu-next] cache_load_obj: key(419a127412f1f162), size(7372), load time(0.143 ms)
[ 397.808][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x419a127412f1f162
[ 397.808][d][vo/gpu-next] cache_load_obj: key(521d80a3cb499a4b), size(17371), load time(0.139 ms)
[ 397.808][d][vo/gpu-next/libplacebo] Spent 0.012 ms compiling shader
[ 397.808][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.808][d][vo/gpu-next] cache_save_obj: key(419a127412f1f162), size(7372)
[ 397.808][d][vo/gpu-next/libplacebo] Spent 0.085 ms creating pipeline
[ 397.808][d][vo/gpu-next] cache_save_obj: key(521d80a3cb499a4b), size(17371)
[ 397.808][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.808][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.808][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.808][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.808][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.808][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.808][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.808][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.808][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.808][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.808][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.808][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.808][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.808][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.808][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.808][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.808][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.808][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.808][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.808][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.808][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.808][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.808][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.808][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.808][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.808][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.808][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.808][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.808][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.808][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.808][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.808][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.808][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.808][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.808][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.808][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.808][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.808][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 28] #define LUMA_raw _2 
[ 397.808][d][vo/gpu-next/libplacebo] [ 29] #define LUMA_pos _3 
[ 397.808][d][vo/gpu-next/libplacebo] [ 30] #define LUMA_map _3_map 
[ 397.808][d][vo/gpu-next/libplacebo] [ 31] #define LUMA_size vec2(textureSize(_2, 0)) 
[ 397.808][d][vo/gpu-next/libplacebo] [ 32] #define LUMA_pt _4 
[ 397.808][d][vo/gpu-next/libplacebo] [ 33] #define LUMA_off _5 
[ 397.808][d][vo/gpu-next/libplacebo] [ 34] #define LUMA_mul _6 
[ 397.808][d][vo/gpu-next/libplacebo] [ 35] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.808][d][vo/gpu-next/libplacebo] [ 36] #define LUMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.808][d][vo/gpu-next/libplacebo] [ 37] #define LUMA_texOff(off) (LUMA_tex(_3 + _4 * vec2(off))) 
[ 397.808][d][vo/gpu-next/libplacebo] [ 38] #define LUMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.808][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.808][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.808][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.808][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.808][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.808][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.808][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.808][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.808][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.808][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.808][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.808][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.808][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.808][d][vo/gpu-next/libplacebo] [ 60] vec4 hook()
[ 397.808][d][vo/gpu-next/libplacebo] [ 61] {
[ 397.808][d][vo/gpu-next/libplacebo] [ 62] vec4 res = vec4(0.0029151507187635,-0.0613294094800949,0.0008914369973354,-0.0767232030630112);
[ 397.808][d][vo/gpu-next/libplacebo] [ 63] res += vec4(0.0135127231478691,-0.0165634769946337,0.0435598008334637,-0.0149057637900114) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 64] res += vec4(-0.0228847339749336,0.0010997278150171,0.0216255430132151,0.0310201775282621) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 65] res += vec4(0.0263330750167370,0.1414172500371933,0.0920841321349144,-0.0657699853181839) * float(LUMA_texOff(vec2(-2,0)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 66] res += vec4(0.0158146508038044,-0.0184755995869637,0.0141742452979088,-0.0165870897471905) * float(LUMA_texOff(vec2(-2,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 67] res += vec4(-0.0132065815851092,-0.0751400440931320,-0.0428155101835728,0.0052004638127983) * float(LUMA_texOff(vec2(-2,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 68] res += vec4(0.0716190189123154,0.0045931492932141,0.0975653976202011,-0.0400408394634724) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 69] res += vec4(0.0715559795498848,0.1788620352745056,-0.1724022328853607,-0.0984080582857132) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 70] res += vec4(0.1811059415340424,0.0456536896526814,-0.1703828871250153,0.0498118251562119) * float(LUMA_texOff(vec2(-1,0)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 71] res += vec4(-0.0097249904647470,0.0977436900138855,0.1316085010766983,-0.0342273637652397) * float(LUMA_texOff(vec2(-1,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 72] res += vec4(0.0428396761417389,0.0155571792274714,-0.0170442368835211,0.0395168215036392) * float(LUMA_texOff(vec2(-1,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 73] res += vec4(-0.1028733700513840,-0.0809405446052551,0.1166266947984695,-0.0673500820994377) * float(LUMA_texOff(vec2(0,-2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 74] res += vec4(0.0798736959695816,0.1202776357531548,0.0907938107848167,0.1063688993453979) * float(LUMA_texOff(vec2(0,-1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 75] res += vec4(-0.1435703784227371,0.2803598642349243,-0.3220657706260681,0.4127312004566193) * float(LUMA_texOff(vec2(0,0)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 76] res += vec4(0.0352024137973785,-0.0811312496662140,-0.1050737351179123,0.1529482305049896) * float(LUMA_texOff(vec2(0,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 77] res += vec4(-0.0548246912658215,-0.0066257156431675,-0.0384114645421505,0.0332037955522537) * float(LUMA_texOff(vec2(0,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 78] res += vec4(-0.0205884110182524,-0.1069750636816025,-0.0073009179905057,0.0592166967689991) * float(LUMA_texOff(vec2(1,-2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 79] res += vec4(0.0253312829881907,0.0051871533505619,0.1640746146440506,0.0306565817445517) * float(LUMA_texOff(vec2(1,-1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 80] res += vec4(0.0892853885889053,-0.1487601995468140,0.2865480482578278,0.2875403165817261) * float(LUMA_texOff(vec2(1,0)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 81] res += vec4(-0.0835615247488022,-0.0581778027117252,-0.0550909973680973,0.1425815075635910) * float(LUMA_texOff(vec2(1,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 82] res += vec4(0.0309277195483446,-0.0506685487926006,-0.0266683306545019,-0.0472095124423504) * float(LUMA_texOff(vec2(1,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 83] res += vec4(-0.0409559160470963,0.0094648934900761,0.0351537279784679,-0.0076995193958282) * float(LUMA_texOff(vec2(2,-2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 84] res += vec4(0.0409245006740093,0.1342664659023285,-0.1063540428876877,-0.0468707382678986) * float(LUMA_texOff(vec2(2,-1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 85] res += vec4(-0.1835696250200272,-0.0999113172292709,-0.0240161959081888,0.0508222617208958) * float(LUMA_texOff(vec2(2,0)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 86] res += vec4(0.0175041966140270,-0.0365947335958481,0.0317368693649769,0.0590598061680794) * float(LUMA_texOff(vec2(2,1)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 87] res += vec4(-0.0800161138176918,-0.0124522168189287,-0.0041967704892159,0.0315603762865067) * float(LUMA_texOff(vec2(2,2)));
[ 397.808][d][vo/gpu-next/libplacebo] [ 88] return res;
[ 397.808][d][vo/gpu-next/libplacebo] [ 89] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 91] vec4 _1() {
[ 397.808][d][vo/gpu-next/libplacebo] [ 92] vec4 color = hook(); 
[ 397.808][d][vo/gpu-next/libplacebo] [ 93] return color;
[ 397.808][d][vo/gpu-next/libplacebo] [ 94] }
[ 397.808][d][vo/gpu-next/libplacebo] [ 95] 
[ 397.808][d][vo/gpu-next/libplacebo] [ 96] void main() {
[ 397.808][d][vo/gpu-next/libplacebo] [ 97] out_color = _1();
[ 397.808][d][vo/gpu-next/libplacebo] [ 98] }
[ 397.808][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.808][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.808][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.808][d][vo/gpu-next] cache_load_obj: key(6ad58eda09246018), size(7372), load time(0.123 ms)
[ 397.808][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x6ad58eda09246018
[ 397.808][d][vo/gpu-next] cache_load_obj: key(33b08396abc5f36c), size(17423), load time(0.129 ms)
[ 397.808][d][vo/gpu-next/libplacebo] Spent 0.010 ms compiling shader
[ 397.808][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.808][d][vo/gpu-next] cache_save_obj: key(6ad58eda09246018), size(7372)
[ 397.810][d][vo/gpu-next/libplacebo] Spent 1.606 ms creating pipeline
[ 397.810][d][vo/gpu-next] cache_save_obj: key(33b08396abc5f36c), size(17423)
[ 397.810][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.810][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.810][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.810][d][vo/gpu-next/libplacebo] Spent 0.110 ms allocating slab
[ 397.810][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.810][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.810][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.810][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.810][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.810][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.810][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.810][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.810][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.810][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.810][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.810][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.810][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.810][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.810][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.810][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.810][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.810][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.810][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.810][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.810][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.810][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.810][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.810][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.810][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.810][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.810][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.810][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.811][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.811][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.811][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.811][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.811][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.811][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.811][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.811][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.811][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 28] #define LUMA_raw _2 
[ 397.811][d][vo/gpu-next/libplacebo] [ 29] #define LUMA_pos _3 
[ 397.811][d][vo/gpu-next/libplacebo] [ 30] #define LUMA_map _3_map 
[ 397.811][d][vo/gpu-next/libplacebo] [ 31] #define LUMA_size vec2(textureSize(_2, 0)) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 32] #define LUMA_pt _4 
[ 397.811][d][vo/gpu-next/libplacebo] [ 33] #define LUMA_off _5 
[ 397.811][d][vo/gpu-next/libplacebo] [ 34] #define LUMA_mul _6 
[ 397.811][d][vo/gpu-next/libplacebo] [ 35] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 36] #define LUMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 37] #define LUMA_texOff(off) (LUMA_tex(_3 + _4 * vec2(off))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 38] #define LUMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.811][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.811][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.811][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.811][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.811][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.811][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.811][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.811][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.811][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.811][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.811][d][vo/gpu-next/libplacebo] [ 60] vec4 hook()
[ 397.811][d][vo/gpu-next/libplacebo] [ 61] {
[ 397.811][d][vo/gpu-next/libplacebo] [ 62] vec4 res = vec4(-0.1264328211545944,-0.0279394891113043,-0.0064888978376985,0.0420002378523350);
[ 397.811][d][vo/gpu-next/libplacebo] [ 63] res += vec4(-0.0131980935111642,0.0266927909106016,0.0695492923259735,-0.0063398526981473) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 64] res += vec4(0.0159970503300428,0.0148094780743122,0.0719174891710281,0.0041566533036530) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 65] res += vec4(0.0399939678609371,0.0506784133613110,0.0477518960833549,-0.0844549685716629) * float(LUMA_texOff(vec2(-2,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 66] res += vec4(-0.0162003915756941,0.0667246878147125,0.0661090239882469,0.0736296772956848) * float(LUMA_texOff(vec2(-2,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 67] res += vec4(0.0187468398362398,0.0019713738001883,0.0874735563993454,-0.0255339350551367) * float(LUMA_texOff(vec2(-2,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 68] res += vec4(-0.0850194543600082,0.0163485687226057,-0.1212844401597977,-0.0479937046766281) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 69] res += vec4(0.0732808113098145,-0.0097687849774957,0.0417790748178959,0.0896924287080765) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 70] res += vec4(0.1258524060249329,-0.3104827105998993,-0.0218985043466091,0.1121514812111855) * float(LUMA_texOff(vec2(-1,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 71] res += vec4(0.0074320179410279,-0.0256812535226345,0.0645651295781136,-0.1755836457014084) * float(LUMA_texOff(vec2(-1,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 72] res += vec4(-0.0393245257437229,-0.0383107811212540,0.1041718125343323,0.0366581790149212) * float(LUMA_texOff(vec2(-1,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 73] res += vec4(0.0145607199519873,0.0456735864281654,-0.1359732300043106,0.0837914943695068) * float(LUMA_texOff(vec2(0,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 74] res += vec4(-0.0148519007489085,-0.0929340571165085,0.0423509478569031,0.2566445469856262) * float(LUMA_texOff(vec2(0,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 75] res += vec4(0.1964939236640930,0.3518604338169098,-0.0973007753491402,0.1974137276411057) * float(LUMA_texOff(vec2(0,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 76] res += vec4(0.1888202577829361,0.2577683329582214,-0.1013639196753502,-0.2581922709941864) * float(LUMA_texOff(vec2(0,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 77] res += vec4(0.0241410620510578,-0.0072364830411971,0.0341953933238983,0.0454998016357422) * float(LUMA_texOff(vec2(0,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 78] res += vec4(-0.0374109223484993,-0.0471867136657238,0.0710652917623520,0.0134411044418812) * float(LUMA_texOff(vec2(1,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 79] res += vec4(0.1920984536409378,-0.0478645265102386,-0.0647146105766296,0.0222374666482210) * float(LUMA_texOff(vec2(1,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 80] res += vec4(0.0602415762841702,-0.0288685746490955,0.0075958576053381,-0.2160810977220535) * float(LUMA_texOff(vec2(1,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 81] res += vec4(0.0850555971264839,-0.0782011076807976,-0.0114041855558753,-0.1209100186824799) * float(LUMA_texOff(vec2(1,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 82] res += vec4(-0.0049744024872780,-0.0065365592017770,-0.0089643299579620,-0.0742740705609322) * float(LUMA_texOff(vec2(1,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 83] res += vec4(-0.0137028237804770,0.0186147168278694,-0.0370406880974770,0.0295204035937786) * float(LUMA_texOff(vec2(2,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 84] res += vec4(-0.0895456820726395,-0.0375148542225361,-0.0313744619488716,-0.1119082570075989) * float(LUMA_texOff(vec2(2,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 85] res += vec4(0.0242840964347124,-0.0231526307761669,-0.0532953739166260,0.0544772148132324) * float(LUMA_texOff(vec2(2,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 86] res += vec4(-0.0712804645299911,-0.0538538359105587,-0.0336124263703823,-0.0369212552905083) * float(LUMA_texOff(vec2(2,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 87] res += vec4(-0.0017276481958106,0.0138095710426569,0.0136405434459448,0.0244382321834564) * float(LUMA_texOff(vec2(2,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 88] return res;
[ 397.811][d][vo/gpu-next/libplacebo] [ 89] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 91] vec4 _1() {
[ 397.811][d][vo/gpu-next/libplacebo] [ 92] vec4 color = hook(); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 93] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 94] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 95] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 96] void main() {
[ 397.811][d][vo/gpu-next/libplacebo] [ 97] out_color = _1();
[ 397.811][d][vo/gpu-next/libplacebo] [ 98] }
[ 397.811][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.811][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.811][d][vo/gpu-next] cache_load_obj: key(77616df37aa1dcd4), size(7372), load time(0.132 ms)
[ 397.811][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x77616df37aa1dcd4
[ 397.811][d][vo/gpu-next] cache_load_obj: key(4490392d41e690e7), size(17419), load time(0.132 ms)
[ 397.811][d][vo/gpu-next/libplacebo] Spent 0.008 ms compiling shader
[ 397.811][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.811][d][vo/gpu-next] cache_save_obj: key(77616df37aa1dcd4), size(7372)
[ 397.811][d][vo/gpu-next/libplacebo] Spent 0.065 ms creating pipeline
[ 397.811][d][vo/gpu-next] cache_save_obj: key(4490392d41e690e7), size(17419)
[ 397.811][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.811][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.811][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.811][d][vo/gpu-next/libplacebo] Spent 0.076 ms allocating slab
[ 397.811][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.811][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.811][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.811][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.811][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.811][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.811][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.811][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.811][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.811][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.811][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.811][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.811][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.811][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.811][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.811][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.811][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.811][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.811][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.811][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.811][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.811][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.811][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.811][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.811][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.811][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.811][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.811][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.811][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.811][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.811][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.811][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.811][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.811][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.811][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.811][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 28] #define LUMA_raw _2 
[ 397.811][d][vo/gpu-next/libplacebo] [ 29] #define LUMA_pos _3 
[ 397.811][d][vo/gpu-next/libplacebo] [ 30] #define LUMA_map _3_map 
[ 397.811][d][vo/gpu-next/libplacebo] [ 31] #define LUMA_size vec2(textureSize(_2, 0)) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 32] #define LUMA_pt _4 
[ 397.811][d][vo/gpu-next/libplacebo] [ 33] #define LUMA_off _5 
[ 397.811][d][vo/gpu-next/libplacebo] [ 34] #define LUMA_mul _6 
[ 397.811][d][vo/gpu-next/libplacebo] [ 35] #define LUMA_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 36] #define LUMA_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 37] #define LUMA_texOff(off) (LUMA_tex(_3 + _4 * vec2(off))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 38] #define LUMA_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.811][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.811][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.811][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.811][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.811][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.811][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.811][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.811][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.811][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.811][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.811][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.811][d][vo/gpu-next/libplacebo] [ 60] vec4 hook()
[ 397.811][d][vo/gpu-next/libplacebo] [ 61] {
[ 397.811][d][vo/gpu-next/libplacebo] [ 62] vec4 res = vec4(0.0070585198700428,0.0109722968190908,-0.0186138395220041,-0.0247610080987215);
[ 397.811][d][vo/gpu-next/libplacebo] [ 63] res += vec4(-0.0427159443497658,0.0345138609409332,-0.0043228855356574,0.0263762231916189) * float(LUMA_texOff(vec2(-2,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 64] res += vec4(-0.0215423200279474,-0.0201900992542505,-0.0263530425727367,-0.0075583830475807) * float(LUMA_texOff(vec2(-2,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 65] res += vec4(-0.0208488702774048,-0.0263796150684357,0.0048027029260993,-0.0180702358484268) * float(LUMA_texOff(vec2(-2,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 66] res += vec4(-0.0033123074099422,-0.0459871888160706,0.0074687330052257,-0.0531630516052246) * float(LUMA_texOff(vec2(-2,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 67] res += vec4(0.0712261721491814,0.0599316917359829,-0.0117431124672294,-0.0091551328077912) * float(LUMA_texOff(vec2(-2,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 68] res += vec4(0.1062309294939041,0.0316648185253143,0.0022315878886729,-0.0494135320186615) * float(LUMA_texOff(vec2(-1,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 69] res += vec4(0.0869664698839188,-0.0889192670583725,-0.0302817411720753,0.0871973037719727) * float(LUMA_texOff(vec2(-1,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 70] res += vec4(-0.1390235275030136,0.0109816743060946,0.1826847791671753,0.0588588342070580) * float(LUMA_texOff(vec2(-1,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 71] res += vec4(-0.0808288902044296,-0.0446107201278210,0.0685509145259857,0.1322640776634216) * float(LUMA_texOff(vec2(-1,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 72] res += vec4(-0.0431778207421303,-0.0715203061699867,0.0272494368255138,-0.0406388416886330) * float(LUMA_texOff(vec2(-1,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 73] res += vec4(-0.1043576672673225,0.0435773134231567,-0.0156023483723402,0.0003633489250205) * float(LUMA_texOff(vec2(0,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 74] res += vec4(0.3914019167423248,0.1128338500857353,-0.3622477650642395,-0.2134702056646347) * float(LUMA_texOff(vec2(0,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 75] res += vec4(-0.2566887140274048,0.4643316566944122,0.4298384189605713,0.2023355811834335) * float(LUMA_texOff(vec2(0,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 76] res += vec4(-0.0870738476514816,-0.2335397005081177,-0.0682953223586082,0.1927117854356766) * float(LUMA_texOff(vec2(0,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 77] res += vec4(0.1308144330978394,0.0925729721784592,0.0465335994958878,-0.1193709373474121) * float(LUMA_texOff(vec2(0,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 78] res += vec4(-0.0574972666800022,-0.0618521086871624,0.0282293409109116,0.0364051461219788) * float(LUMA_texOff(vec2(1,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 79] res += vec4(0.0559999272227287,-0.1199548989534378,0.0019089960260317,0.0112631628289819) * float(LUMA_texOff(vec2(1,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 80] res += vec4(0.0438338480889797,-0.0732697844505310,-0.2594016492366791,-0.0785673633217812) * float(LUMA_texOff(vec2(1,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 81] res += vec4(-0.0346798598766327,-0.1528525501489639,0.1528349220752716,-0.1032024696469307) * float(LUMA_texOff(vec2(1,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 82] res += vec4(0.0561404302716255,0.0303718857467175,-0.0542364232242107,0.0132365953177214) * float(LUMA_texOff(vec2(1,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 83] res += vec4(-0.0114848464727402,0.0516396202147007,-0.0230368301272392,-0.0116722676903009) * float(LUMA_texOff(vec2(2,-2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 84] res += vec4(0.0216846000403166,-0.0487921759486198,-0.0266283787786961,-0.0552150383591652) * float(LUMA_texOff(vec2(2,-1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 85] res += vec4(-0.1205942556262016,0.0671967938542366,-0.0458866842091084,0.0994790792465210) * float(LUMA_texOff(vec2(2,0)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 86] res += vec4(-0.0450517013669014,-0.0236119553446770,-0.0031007658690214,0.0068094953894615) * float(LUMA_texOff(vec2(2,1)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 87] res += vec4(0.0447798296809196,0.0324511975049973,0.0374569594860077,-0.0123012084513903) * float(LUMA_texOff(vec2(2,2)));
[ 397.811][d][vo/gpu-next/libplacebo] [ 88] return res;
[ 397.811][d][vo/gpu-next/libplacebo] [ 89] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 91] vec4 _1() {
[ 397.811][d][vo/gpu-next/libplacebo] [ 92] vec4 color = hook(); 
[ 397.811][d][vo/gpu-next/libplacebo] [ 93] return color;
[ 397.811][d][vo/gpu-next/libplacebo] [ 94] }
[ 397.811][d][vo/gpu-next/libplacebo] [ 95] 
[ 397.811][d][vo/gpu-next/libplacebo] [ 96] void main() {
[ 397.811][d][vo/gpu-next/libplacebo] [ 97] out_color = _1();
[ 397.811][d][vo/gpu-next/libplacebo] [ 98] }
[ 397.811][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.811][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.811][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.811][d][vo/gpu-next] cache_load_obj: key(27303bc7e6e3fd10), size(7372), load time(0.124 ms)
[ 397.811][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x27303bc7e6e3fd10
[ 397.812][d][vo/gpu-next] cache_load_obj: key(27958fbb4ba24e48), size(17465), load time(0.138 ms)
[ 397.812][d][vo/gpu-next/libplacebo] Spent 0.010 ms compiling shader
[ 397.812][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.812][d][vo/gpu-next] cache_save_obj: key(27303bc7e6e3fd10), size(7372)
[ 397.812][d][vo/gpu-next/libplacebo] Spent 0.059 ms creating pipeline
[ 397.812][d][vo/gpu-next] cache_save_obj: key(27958fbb4ba24e48), size(17465)
[ 397.812][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.812][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.812][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 397.812][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.812][d][vo/gpu-next/libplacebo] Spent 0.079 ms allocating slab
[ 397.812][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.812][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.812][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.812][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.812][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.812][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.812][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.812][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.812][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.812][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.812][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.812][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.812][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.812][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.812][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.812][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.812][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.812][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.812][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.812][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.812][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.812][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.812][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.812][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.812][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.812][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.812][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.812][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.812][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.812][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.812][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.812][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.812][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.812][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.812][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.812][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.812][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.812][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.812][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.812][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.812][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.812][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.812][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.812][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.812][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.812][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.812][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.812][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.812][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.812][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.812][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.812][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.812][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.812][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.812][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.812][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.812][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.812][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.812][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.812][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.812][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.812][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.812][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.812][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.812][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.812][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.812][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.812][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.812][d][vo/gpu-next/libplacebo] [ 43] #define FEATURE1_raw _2 
[ 397.812][d][vo/gpu-next/libplacebo] [ 44] #define FEATURE1_pos _3 
[ 397.812][d][vo/gpu-next/libplacebo] [ 45] #define FEATURE1_map _3_map 
[ 397.812][d][vo/gpu-next/libplacebo] [ 46] #define FEATURE1_size vec2(textureSize(_2, 0)) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 47] #define FEATURE1_pt _4 
[ 397.812][d][vo/gpu-next/libplacebo] [ 48] #define FEATURE1_off _5 
[ 397.812][d][vo/gpu-next/libplacebo] [ 49] #define FEATURE1_mul _6 
[ 397.812][d][vo/gpu-next/libplacebo] [ 50] #define FEATURE1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 51] #define FEATURE1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 52] #define FEATURE1_texOff(off) (FEATURE1_tex(_3 + _4 * vec2(off))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 53] #define FEATURE1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 54] #define FEATURE2_raw _7 
[ 397.812][d][vo/gpu-next/libplacebo] [ 55] #define FEATURE2_pos _8 
[ 397.812][d][vo/gpu-next/libplacebo] [ 56] #define FEATURE2_map _8_map 
[ 397.812][d][vo/gpu-next/libplacebo] [ 57] #define FEATURE2_size vec2(textureSize(_7, 0)) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 58] #define FEATURE2_pt _9 
[ 397.812][d][vo/gpu-next/libplacebo] [ 59] #define FEATURE2_off _a 
[ 397.812][d][vo/gpu-next/libplacebo] [ 60] #define FEATURE2_mul _b 
[ 397.812][d][vo/gpu-next/libplacebo] [ 61] #define FEATURE2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 62] #define FEATURE2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 63] #define FEATURE2_texOff(off) (FEATURE2_tex(_8 + _9 * vec2(off))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 64] #define FEATURE2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 65] #define FEATURE3_raw _c 
[ 397.812][d][vo/gpu-next/libplacebo] [ 66] #define FEATURE3_pos _d 
[ 397.812][d][vo/gpu-next/libplacebo] [ 67] #define FEATURE3_map _d_map 
[ 397.812][d][vo/gpu-next/libplacebo] [ 68] #define FEATURE3_size vec2(textureSize(_c, 0)) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 69] #define FEATURE3_pt _e 
[ 397.812][d][vo/gpu-next/libplacebo] [ 70] #define FEATURE3_off _f 
[ 397.812][d][vo/gpu-next/libplacebo] [ 71] #define FEATURE3_mul _10 
[ 397.812][d][vo/gpu-next/libplacebo] [ 72] #define FEATURE3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 73] #define FEATURE3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 74] #define FEATURE3_texOff(off) (FEATURE3_tex(_d + _e * vec2(off))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 75] #define FEATURE3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 76] #define FEATURE4_raw _11 
[ 397.812][d][vo/gpu-next/libplacebo] [ 77] #define FEATURE4_pos _12 
[ 397.812][d][vo/gpu-next/libplacebo] [ 78] #define FEATURE4_map _12_map 
[ 397.812][d][vo/gpu-next/libplacebo] [ 79] #define FEATURE4_size vec2(textureSize(_11, 0)) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 80] #define FEATURE4_pt _13 
[ 397.812][d][vo/gpu-next/libplacebo] [ 81] #define FEATURE4_off _14 
[ 397.812][d][vo/gpu-next/libplacebo] [ 82] #define FEATURE4_mul _15 
[ 397.812][d][vo/gpu-next/libplacebo] [ 83] #define FEATURE4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 84] #define FEATURE4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 85] #define FEATURE4_texOff(off) (FEATURE4_tex(_12 + _13 * vec2(off))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 86] #define FEATURE4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.812][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.812][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.812][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.812][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.812][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.812][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.812][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.812][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.812][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.812][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.812][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.812][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.812][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.812][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.812][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.812][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.812][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.812][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.812][d][vo/gpu-next/libplacebo] [105] }
[ 397.812][d][vo/gpu-next/libplacebo] [106] 
[ 397.812][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.812][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.812][d][vo/gpu-next/libplacebo] [109] {
[ 397.812][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0538579821586609,0.0207305960357189,0.0254634171724319,0.0153640825301409);
[ 397.812][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0942513421177864,0.0891742855310440,0.1703276932239532,0.0523716993629932,0.1674145758152008,-0.0544738620519638,-0.1198973059654236,-0.0423433668911457,0.0515154302120209,-0.0596617907285690,0.2768746614456177,0.3570924103260040,-0.2002887129783630,-0.1301720142364502,0.1128292605280876,0.0972013026475906) * FEATURE1_texOff(vec2(-1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [112] res += mat4(0.0506789609789848,0.2283374667167664,0.3002701997756958,0.0719720944762230,0.2141722440719604,-0.1343615055084229,0.1546344310045242,0.0621918700635433,-0.0544323623180389,-0.0221508406102657,0.4773038625717163,-0.0141492532566190,-0.0967316552996635,0.0168843884021044,0.0570617616176605,-0.1742728203535080) * FEATURE2_texOff(vec2(-1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [113] res += mat4(0.1996528208255768,0.0715565979480743,-0.0198881570249796,-0.2097080498933792,0.1386303305625916,-0.0629681572318077,-0.0573015734553337,0.1730632334947586,-0.0319919139146805,0.0613489709794521,0.0009632866713218,0.0963142737746239,0.0922120437026024,-0.1362144947052002,-0.1248387992382050,-0.0438973791897297) * FEATURE3_texOff(vec2(-1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0729181915521622,-0.0412426479160786,-0.0903936550021172,-0.0877909436821938,-0.0501929707825184,-0.1361309438943863,-0.1435612738132477,-0.3544941246509552,0.1188186258077621,0.0854843929409981,-0.1572271734476089,0.1614757478237152,-0.0394551232457161,0.0561030209064484,0.1981999427080154,0.1012751534581184) * FEATURE4_texOff(vec2(-1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.1364078372716904,-0.0915576890110970,0.0312875770032406,-0.0373064279556274,-0.1864551603794098,0.1270632743835449,0.0160129573196173,-0.2269953936338425,-0.1248846203088760,0.0047860695049167,0.1067357808351517,0.0389528647065163,0.0046090064570308,0.1194815561175346,0.0107140550389886,0.1202540248632431) * FEATURE1_texOff(vec2(-1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [116] res += mat4(0.0601032748818398,-0.2038935124874115,0.3221660852432251,0.1911306679248810,0.1072739660739899,0.0386378541588783,-0.2028579860925674,-0.1244315281510353,-0.0588039867579937,0.1519959121942520,0.1538249552249908,0.3218008279800415,-0.0203690603375435,-0.0309583507478237,-0.0803360491991043,0.1190733462572098) * FEATURE2_texOff(vec2(-1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.1834098100662231,-0.1000090688467026,0.0111735267564654,0.0360066965222359,-0.3350115418434143,0.1023564040660858,0.0298401378095150,0.1608188599348068,0.1666297018527985,-0.0028937852475792,0.2172369807958603,-0.1244791150093079,-0.1523841619491577,0.1347199827432632,-0.1450833082199097,-0.0060648908838630) * FEATURE3_texOff(vec2(-1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [118] res += mat4(0.0420283265411854,-0.1068769097328186,0.4277499914169312,-0.0138771189376712,-0.1625174582004547,0.1436374485492706,-0.0571523755788803,-0.0274514369666576,-0.0590669140219688,-0.0235943235456944,0.0200154744088650,-0.0343827977776527,-0.0585989430546761,-0.0086731221526861,-0.0286329183727503,0.0404300950467587) * FEATURE4_texOff(vec2(-1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [119] res += mat4(0.0019283422734588,0.2278475612401962,-0.0184804853051901,0.0763652250170708,0.0055652162991464,-0.0678962543606758,-0.0727402940392494,-0.0088435094803572,0.1559262871742249,-0.0718241333961487,-0.3270556628704071,-0.0119281299412251,-0.1585037857294083,-0.0271203480660915,-0.1241048276424408,-0.1096233353018761) * FEATURE1_texOff(vec2(-1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [120] res += mat4(0.1743012368679047,-0.1782766282558441,0.0913587436079979,-0.0247910134494305,0.1648189425468445,0.0423905961215496,-0.0372997410595417,-0.0980355441570282,-0.0360249131917953,0.1658414900302887,-0.1740437895059586,0.0990202873945236,0.0902439951896667,-0.0230961311608553,-0.2429363280534744,-0.0633871406316757) * FEATURE2_texOff(vec2(-1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0990383774042130,-0.0565105788409710,0.2761702835559845,0.0871174111962318,0.0381780490279198,-0.0729763880372047,0.1674342453479767,0.0289874579757452,0.0117457192391157,0.1226039305329323,0.1880341768264771,0.1736565828323364,0.1634613424539566,-0.2213666588068008,-0.0251860022544861,0.0209391023963690) * FEATURE3_texOff(vec2(-1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.0247564055025578,0.0445051491260529,0.1454031318426132,0.1105114370584488,-0.0754487141966820,-0.1011193692684174,-0.1713480800390244,-0.0486282519996166,0.1028212979435921,-0.0380472168326378,0.1385174542665482,0.2016232162714005,-0.0913221612572670,0.1636791229248047,-0.0015221120556816,0.1394934058189392) * FEATURE4_texOff(vec2(-1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.2109110355377197,-0.0351128168404102,0.1712934076786041,-0.1123685985803604,-0.0729602649807930,0.1665348112583160,0.2296800017356873,0.1969782263040543,0.1243449077010155,-0.0277454610913992,-0.0713174566626549,-0.2141246795654297,-0.0153689784929156,0.1890520006418228,-0.1286026239395142,0.0219256319105625) * FEATURE1_texOff(vec2(0,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.0438295155763626,-0.1626479178667068,-0.1232330128550529,-0.1845719069242477,-0.1844127029180527,0.0464013330638409,0.3269801437854767,0.0413873605430126,-0.0631050467491150,-0.0446006916463375,-0.1060080379247665,-0.0166274104267359,-0.0650791078805923,-0.2335784137248993,-0.1026779189705849,0.0378167182207108) * FEATURE2_texOff(vec2(0,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.1554500162601471,-0.1754475533962250,-0.0552926026284695,-0.0490237846970558,-0.0015100783202797,-0.0955125093460083,0.0477011203765869,-0.3376740217208862,0.0374519377946854,-0.0852863043546677,-0.0375335887074471,-0.1743462830781937,-0.1896701306104660,-0.0357031226158142,0.3129993081092834,0.1430367380380630) * FEATURE3_texOff(vec2(0,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.0428619198501110,-0.2211611419916153,-0.0617481805384159,-0.0345504581928253,-0.1697518676519394,-0.1951408386230469,0.1325777322053909,0.2924070656299591,-0.2159555554389954,0.1970866918563843,0.1946451216936111,-0.0279270336031914,-0.1987766176462173,0.0403713621199131,0.3247581720352173,-0.2781505882740021) * FEATURE4_texOff(vec2(0,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [127] res += mat4(0.4459752738475800,-0.2120098024606705,-0.3578203022480011,-0.2277844101190567,0.0322797335684299,0.0300148930400610,-0.2169913798570633,-0.0314500071108341,-0.1224590241909027,0.2108448296785355,-0.0568907819688320,0.3598763644695282,0.0357060506939888,-0.0424680560827255,-0.1881009638309479,0.1019125133752823) * FEATURE1_texOff(vec2(0,0));
[ 397.812][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.1538701802492142,0.4115009307861328,-0.2816752493381500,0.1506592929363251,-0.0253271460533142,-0.0399473570287228,-0.0093031516298652,-0.4269565343856812,-0.2753987312316895,0.1565917879343033,-0.0441544651985168,0.3552229702472687,0.3185600638389587,0.0603101029992104,-0.2451339662075043,-0.2411369383335114) * FEATURE2_texOff(vec2(0,0));
[ 397.812][d][vo/gpu-next/libplacebo] [129] res += mat4(0.1958894580602646,-0.2673653364181519,-0.1395241618156433,0.1446722447872162,0.5314681529998779,0.0796354189515114,-0.1473572105169296,-0.2334580719470978,-0.0118259964510798,-0.0133179081603885,0.1444961130619049,-0.0981970056891441,-0.4798493385314941,-0.0918875485658646,0.1868294477462769,-0.2451380342245102) * FEATURE3_texOff(vec2(0,0));
[ 397.812][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0867395997047424,0.0342525728046894,0.1998478621244431,0.1943975389003754,0.3717151880264282,-0.1969631165266037,-0.0676675811409950,-0.2403614819049835,0.1548621505498886,-0.1033347174525261,0.2075791805982590,-0.7434594631195068,0.1297969818115234,-0.3071094155311584,-0.2551306188106537,-0.1033857911825180) * FEATURE4_texOff(vec2(0,0));
[ 397.812][d][vo/gpu-next/libplacebo] [131] res += mat4(0.1910413950681686,-0.0454304032027721,-0.2005550116300583,0.2301318347454071,-0.1277633160352707,0.2670663893222809,-0.1828060597181320,0.1923152506351471,-0.0639155209064484,0.0946919098496437,0.1297533214092255,-0.0114321000874043,-0.0732707604765892,-0.0450826175510883,-0.0549302212893963,0.1134130135178566) * FEATURE1_texOff(vec2(0,1));
[ 397.812][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.1371006667613983,-0.0017097343225032,0.0003772592754103,0.1115825846791267,0.0546416267752647,-0.0000054702604757,0.2462200671434402,-0.1137474253773689,0.1809550523757935,0.0758358314633369,-0.5332003831863403,0.3873719871044159,0.0272153057157993,-0.2072244733572006,0.1103228032588959,0.0409625619649887) * FEATURE2_texOff(vec2(0,1));
[ 397.812][d][vo/gpu-next/libplacebo] [133] res += mat4(0.1801925897598267,0.1230550035834312,-0.1961367875337601,0.1255238950252533,-0.0885850787162781,-0.0268044397234917,0.2343062460422516,-0.0446412861347198,-0.0571067556738853,0.0261972416192293,0.2480108886957169,-0.1201685294508934,-0.0412609651684761,0.1934995651245117,0.1661445647478104,0.2297777235507965) * FEATURE3_texOff(vec2(0,1));
[ 397.812][d][vo/gpu-next/libplacebo] [134] res += mat4(0.1018679812550545,0.0478270761668682,0.1306073367595673,0.3471642732620239,0.0682028234004974,0.0713321119546890,0.1219814047217369,0.1942566037178040,-0.1766284108161926,0.0594538077712059,0.2545968890190125,0.0807048305869102,0.0677410215139389,-0.0419276766479015,0.0102333007380366,0.1901416778564453) * FEATURE4_texOff(vec2(0,1));
[ 397.812][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.1422130912542343,-0.0209633577615023,0.1563519537448883,0.0638999491930008,-0.0353768132627010,-0.0458791069686413,-0.0035924366675317,0.2189119011163712,-0.0782971233129501,0.1802898645401001,-0.3779482841491699,0.0555818416178226,-0.2072600871324539,0.1333364993333817,-0.0317861549556255,0.0318425223231316) * FEATURE1_texOff(vec2(1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.0286058560013771,0.1659249514341354,0.0012943913461640,0.0499969981610775,0.1422614604234695,0.0672997236251831,0.1053121238946915,0.0241394750773907,-0.0267950072884560,-0.2408446371555328,0.0689387544989586,-0.0353503115475178,-0.1775945425033569,0.0234226547181606,0.0756977722048759,0.0147098181769252) * FEATURE2_texOff(vec2(1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0543244630098343,0.1917871087789536,0.0193976480513811,-0.0431259982287884,-0.2033711969852448,0.0477821268141270,0.0067753521725535,-0.0682270526885986,0.1969993859529495,-0.0750918835401535,-0.2594552636146545,-0.1375313699245453,-0.0077267014421523,0.1274733394384384,0.0865155607461929,0.0472486987709999) * FEATURE3_texOff(vec2(1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [138] res += mat4(0.0638304129242897,-0.0325457416474819,-0.1572882980108261,-0.0546916499733925,0.0232818126678467,-0.0714884400367737,0.1627114564180374,-0.0557239502668381,0.0209975223988295,-0.0187117625027895,0.3106088042259216,-0.0053044236265123,0.1987716555595398,-0.0953556299209595,0.2629529833793640,-0.0071331881918013) * FEATURE4_texOff(vec2(1,-1));
[ 397.812][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.0421246476471424,0.2592750489711761,-0.0927281454205513,0.3078538775444031,0.2100289762020111,-0.0642854720354080,-0.0921883061528206,0.0326341763138771,-0.2644840776920319,0.1774180531501770,-0.1196464598178864,-0.4229507744312286,0.2510976195335388,0.0372096374630928,-0.2537170350551605,0.2260684221982956) * FEATURE1_texOff(vec2(1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [140] res += mat4(0.0206921920180321,-0.2198302298784256,-0.0701930820941925,-0.3230668008327484,-0.0217957627028227,0.1357497274875641,0.2323972135782242,-0.0309077259153128,-0.0590932071208954,-0.1639022678136826,-0.1563350111246109,-0.1444355696439743,0.0613540187478065,0.0601835064589977,-0.0287189222872257,-0.0357198491692543) * FEATURE2_texOff(vec2(1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0020270729437470,0.1621738374233246,0.0399310030043125,-0.0438883267343044,-0.0824203342199326,0.0099390773102641,-0.4241760969161987,0.1165389567613602,-0.1991093158721924,-0.1385766267776489,-0.3597168028354645,-0.2093434631824493,0.0716988667845726,0.0764024257659912,0.1949614137411118,-0.0398958511650562) * FEATURE3_texOff(vec2(1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.1486600339412689,-0.4024447798728943,0.1636409163475037,-0.0883854106068611,0.1269216090440750,0.2130152583122253,0.0226612426340580,0.0302033293992281,0.2051880210638046,-0.0517359860241413,0.1467522382736206,0.0957927107810974,0.0443594977259636,0.1177708283066750,0.0564442165195942,0.3151275515556335) * FEATURE4_texOff(vec2(1,0));
[ 397.812][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.2304142415523529,-0.0719510838389397,-0.0675006136298180,-0.3363347947597504,-0.1184817776083946,-0.1126850321888924,0.1518510878086090,-0.0257060509175062,0.0532785877585411,-0.0668446049094200,-0.0280778128653765,0.1538693457841873,-0.0306744184345007,0.2549984455108643,-0.1447070389986038,-0.0391077250242233) * FEATURE1_texOff(vec2(1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [144] res += mat4(0.0575510375201702,0.2173524498939514,-0.0927070975303650,-0.1615140885114670,0.0490588247776031,0.0307105164974928,-0.1662461310625076,0.0981267020106316,0.0214565992355347,0.0494793355464935,-0.1530900448560715,-0.2056774795055389,-0.0225916951894760,0.0415866039693356,-0.0117064453661442,-0.0291576590389013) * FEATURE2_texOff(vec2(1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0177033450454473,-0.1274748295545578,0.1430204361677170,-0.1192419081926346,-0.0703871473670006,-0.0706785991787910,0.2976159155368805,0.0470926500856876,-0.0072712986730039,0.1795812845230103,-0.0024556454736739,0.0982688292860985,-0.1377155184745789,-0.0327612347900867,-0.0722481608390808,-0.0682997331023216) * FEATURE3_texOff(vec2(1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.2610870897769928,0.1586860567331314,-0.0943611562252045,0.0243455953896046,-0.1236873045563698,0.1264219880104065,-0.1729681342840195,-0.2474125772714615,0.0177616085857153,-0.0425097197294235,0.1647205352783203,-0.2539803087711334,-0.1173504814505577,-0.0786687880754471,-0.0249674320220947,0.0602308809757233) * FEATURE4_texOff(vec2(1,1));
[ 397.812][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.4589389860630035,-0.0171027909964323,0.1109997034072876,0.7046035528182983) * min(res, vec4(0.0));
[ 397.812][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.812][d][vo/gpu-next/libplacebo] [149] }
[ 397.812][d][vo/gpu-next/libplacebo] [150] 
[ 397.812][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.812][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.812][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.812][d][vo/gpu-next/libplacebo] [154] }
[ 397.812][d][vo/gpu-next/libplacebo] [155] 
[ 397.812][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.812][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.812][d][vo/gpu-next/libplacebo] [158] }
[ 397.812][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.812][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.813][d][vo/gpu-next] cache_load_obj: key(3f99b590009ec6b0), size(1048), load time(0.028 ms)
[ 397.813][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.813][d][vo/gpu-next] cache_load_obj: key(f174f26b58e8eedb), size(20692), load time(0.137 ms)
[ 397.813][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xf174f26b58e8eedb
[ 397.813][d][vo/gpu-next] cache_load_obj: key(1cc7b62b4133379), size(27682), load time(0.133 ms)
[ 397.813][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.813][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.813][d][vo/gpu-next] cache_save_obj: key(f174f26b58e8eedb), size(20692)
[ 397.813][d][vo/gpu-next/libplacebo] Spent 0.138 ms creating pipeline
[ 397.813][d][vo/gpu-next] cache_save_obj: key(1cc7b62b4133379), size(27682)
[ 397.813][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.813][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.813][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 397.813][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.813][d][vo/gpu-next/libplacebo] Spent 0.053 ms allocating slab
[ 397.813][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.813][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.813][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.813][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.813][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.813][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.813][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.813][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.813][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.813][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.813][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.813][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.813][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.813][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.813][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.813][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.813][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.813][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.813][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.813][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.813][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.814][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.814][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.814][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.814][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.814][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.814][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.814][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.814][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.814][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.814][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.814][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.814][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.814][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.814][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.814][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.814][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.814][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.814][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.814][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.814][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.814][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.814][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.814][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.814][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.814][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.814][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.814][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.814][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.814][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.814][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.814][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.814][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.814][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.814][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.814][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.814][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.814][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.814][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.814][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.814][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.814][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.814][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.814][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.814][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.814][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.814][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.814][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.814][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.814][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.814][d][vo/gpu-next/libplacebo] [ 43] #define FEATURE1_raw _2 
[ 397.814][d][vo/gpu-next/libplacebo] [ 44] #define FEATURE1_pos _3 
[ 397.814][d][vo/gpu-next/libplacebo] [ 45] #define FEATURE1_map _3_map 
[ 397.814][d][vo/gpu-next/libplacebo] [ 46] #define FEATURE1_size vec2(textureSize(_2, 0)) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 47] #define FEATURE1_pt _4 
[ 397.814][d][vo/gpu-next/libplacebo] [ 48] #define FEATURE1_off _5 
[ 397.814][d][vo/gpu-next/libplacebo] [ 49] #define FEATURE1_mul _6 
[ 397.814][d][vo/gpu-next/libplacebo] [ 50] #define FEATURE1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 51] #define FEATURE1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 52] #define FEATURE1_texOff(off) (FEATURE1_tex(_3 + _4 * vec2(off))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 53] #define FEATURE1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 54] #define FEATURE2_raw _7 
[ 397.814][d][vo/gpu-next/libplacebo] [ 55] #define FEATURE2_pos _8 
[ 397.814][d][vo/gpu-next/libplacebo] [ 56] #define FEATURE2_map _8_map 
[ 397.814][d][vo/gpu-next/libplacebo] [ 57] #define FEATURE2_size vec2(textureSize(_7, 0)) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 58] #define FEATURE2_pt _9 
[ 397.814][d][vo/gpu-next/libplacebo] [ 59] #define FEATURE2_off _a 
[ 397.814][d][vo/gpu-next/libplacebo] [ 60] #define FEATURE2_mul _b 
[ 397.814][d][vo/gpu-next/libplacebo] [ 61] #define FEATURE2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 62] #define FEATURE2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 63] #define FEATURE2_texOff(off) (FEATURE2_tex(_8 + _9 * vec2(off))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 64] #define FEATURE2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 65] #define FEATURE3_raw _c 
[ 397.814][d][vo/gpu-next/libplacebo] [ 66] #define FEATURE3_pos _d 
[ 397.814][d][vo/gpu-next/libplacebo] [ 67] #define FEATURE3_map _d_map 
[ 397.814][d][vo/gpu-next/libplacebo] [ 68] #define FEATURE3_size vec2(textureSize(_c, 0)) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 69] #define FEATURE3_pt _e 
[ 397.814][d][vo/gpu-next/libplacebo] [ 70] #define FEATURE3_off _f 
[ 397.814][d][vo/gpu-next/libplacebo] [ 71] #define FEATURE3_mul _10 
[ 397.814][d][vo/gpu-next/libplacebo] [ 72] #define FEATURE3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 73] #define FEATURE3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 74] #define FEATURE3_texOff(off) (FEATURE3_tex(_d + _e * vec2(off))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 75] #define FEATURE3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 76] #define FEATURE4_raw _11 
[ 397.814][d][vo/gpu-next/libplacebo] [ 77] #define FEATURE4_pos _12 
[ 397.814][d][vo/gpu-next/libplacebo] [ 78] #define FEATURE4_map _12_map 
[ 397.814][d][vo/gpu-next/libplacebo] [ 79] #define FEATURE4_size vec2(textureSize(_11, 0)) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 80] #define FEATURE4_pt _13 
[ 397.814][d][vo/gpu-next/libplacebo] [ 81] #define FEATURE4_off _14 
[ 397.814][d][vo/gpu-next/libplacebo] [ 82] #define FEATURE4_mul _15 
[ 397.814][d][vo/gpu-next/libplacebo] [ 83] #define FEATURE4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 84] #define FEATURE4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 85] #define FEATURE4_texOff(off) (FEATURE4_tex(_12 + _13 * vec2(off))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 86] #define FEATURE4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.814][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.814][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.814][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.814][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.814][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.814][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.814][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.814][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.814][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.814][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.814][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.814][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.814][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.814][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.814][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.814][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.814][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.814][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.814][d][vo/gpu-next/libplacebo] [105] }
[ 397.814][d][vo/gpu-next/libplacebo] [106] 
[ 397.814][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.814][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.814][d][vo/gpu-next/libplacebo] [109] {
[ 397.814][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0050486661493778,-0.0228962972760201,-0.0334742926061153,-0.0749474465847015);
[ 397.814][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0636506080627441,0.0414536744356155,-0.0601340085268021,-0.1492895781993866,0.0266887508332729,0.1290355175733566,-0.1096160188317299,-0.0060973335057497,-0.1082219034433365,-0.2484298050403595,-0.0492997542023659,-0.1507269591093063,-0.0063208816573024,0.0278978366404772,0.0559392459690571,-0.0855900421738625) * FEATURE1_texOff(vec2(-1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0479767583310604,-0.1680374741554260,-0.0433681309223175,0.0709083005785942,-0.2127597928047180,0.0669720545411110,-0.0468601882457733,0.0844738036394119,0.0361499190330505,0.2795697748661041,-0.0900071188807487,0.0771756023168564,-0.0945145860314369,0.0329340286552906,-0.1299255639314651,-0.0251025389879942) * FEATURE2_texOff(vec2(-1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [113] res += mat4(0.1168580055236816,-0.1255342066287994,-0.0880676284432411,0.1660774797201157,-0.2297494858503342,0.0064496542327106,-0.0535941347479820,-0.2143118381500244,0.2292995154857635,0.1740189641714096,0.0004259505367372,-0.0690135732293129,0.1331175416707993,0.1003144457936287,-0.0844909623265266,0.0122939394786954) * FEATURE3_texOff(vec2(-1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [114] res += mat4(0.1027175262570381,-0.0609552152454853,0.0520542748272419,0.0642495974898338,0.1000228375196457,-0.1185205951333046,-0.0579122789204121,-0.1555659025907516,-0.0605787895619869,-0.2131439894437790,0.1039092391729355,0.2101044952869415,0.1405750513076782,0.0517179183661938,0.0021876082755625,-0.3164139688014984) * FEATURE4_texOff(vec2(-1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [115] res += mat4(0.2074049115180969,-0.0506212897598743,0.1249784007668495,0.1202733814716339,-0.0585046447813511,-0.1000120416283607,0.1991082876920700,-0.1943191587924957,-0.1808652281761169,0.0442306883633137,-0.1876850426197052,-0.0544150769710541,-0.0482590310275555,-0.1091798990964890,-0.1555807590484619,0.0641228109598160) * FEATURE1_texOff(vec2(-1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0516644716262817,0.2187380641698837,0.1580324769020081,-0.0298149734735489,0.1568845361471176,-0.0694709494709969,-0.0156475324183702,-0.1467818617820740,-0.3323013186454773,-0.1269628554582596,0.1774071902036667,0.0703119486570358,0.1119378954172134,0.0026767798699439,-0.0007590121240355,-0.0759204849600792) * FEATURE2_texOff(vec2(-1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [117] res += mat4(0.1218863129615784,-0.0142991924658418,-0.1754228770732880,0.1960164606571198,0.3764416575431824,-0.0640086159110069,-0.1760962009429932,0.2673647105693817,-0.3611862659454346,0.0912636891007423,-0.0847290754318237,-0.0417214743793011,-0.0578436329960823,-0.0263695251196623,-0.1327239871025085,-0.3475520014762878) * FEATURE3_texOff(vec2(-1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.2874909341335297,-0.0407578013837337,0.0599964335560799,-0.2408095449209213,-0.2017816752195358,-0.2848342955112457,-0.0796688795089722,-0.0723477452993393,0.1366535574197769,0.0102123394608498,-0.1985246092081070,0.1587944626808167,0.2955283522605896,0.0750069320201874,0.0187748130410910,0.1516282111406326) * FEATURE4_texOff(vec2(-1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [119] res += mat4(0.1594368070363998,-0.1468944847583771,0.0471258424222469,-0.0241045635193586,-0.0501801446080208,0.0218925625085831,0.0225021727383137,-0.0979235544800758,0.1620006114244461,0.1432553678750992,-0.1368250846862793,-0.1964376866817474,-0.0230209566652775,-0.0552996881306171,-0.1095163747668266,-0.1232675686478615) * FEATURE1_texOff(vec2(-1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [120] res += mat4(0.2003141194581985,0.0201547835022211,0.0051529011689126,-0.0014524413272738,0.0695162415504456,-0.0560750104486942,0.1347300708293915,0.1203261390328407,-0.2232214659452438,-0.0777770578861237,-0.1109718605875969,-0.0036153327673674,-0.1624626517295837,-0.1004763543605804,0.0409551188349724,-0.0183079633861780) * FEATURE2_texOff(vec2(-1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0283994600176811,0.0475098155438900,-0.0393812768161297,0.0898945406079292,-0.2062479108572006,-0.0960468500852585,0.0813136026263237,-0.0469682477414608,0.1563576310873032,-0.0207612141966820,0.0042922985740006,0.2140935212373734,-0.1559178084135056,0.0017188332276419,-0.1165986284613609,0.0095806019380689) * FEATURE3_texOff(vec2(-1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.0255314018577337,0.0053132837638259,-0.2335292100906372,0.1714269518852234,0.1378968954086304,-0.0134489014744759,-0.0610948204994202,-0.2788822054862976,0.3191868662834167,0.1429490745067596,0.1573762744665146,-0.0905571207404137,-0.2665251791477203,-0.0549174770712852,-0.0497622266411781,0.0014125620946288) * FEATURE4_texOff(vec2(-1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [123] res += mat4(0.2041343450546265,-0.0793451294302940,-0.1584397703409195,0.0189015548676252,0.0841031521558762,-0.0510663576424122,0.0782111138105392,-0.1774760782718658,0.1344453990459442,0.1194181516766548,0.0633851066231728,-0.1575935482978821,0.1386636048555374,-0.0103090191259980,0.1229354143142700,0.0644944533705711) * FEATURE1_texOff(vec2(0,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.4877364337444305,0.2027113735675812,-0.1288372576236725,-0.1133702546358109,0.0907325148582458,-0.0902310758829117,-0.0123172188177705,0.0125291664153337,-0.1056642383337021,-0.1495229005813599,0.1867364346981049,-0.0354580022394657,0.0589499361813068,0.1484927982091904,0.0824608951807022,0.0011405796976760) * FEATURE2_texOff(vec2(0,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.1545341163873672,-0.0932014808058739,-0.1113527715206146,-0.0319784991443157,0.0242115519940853,-0.1953306794166565,0.1512601375579834,0.0399545468389988,-0.1712766140699387,-0.1649830639362335,-0.1137973442673683,0.2562557160854340,0.4170604944229126,0.0485921874642372,0.0115369297564030,0.0471604056656361) * FEATURE3_texOff(vec2(0,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.0174177736043930,-0.0868183523416519,-0.1611233651638031,-0.1155694723129272,0.0565580539405346,-0.4630706608295441,0.0683171078562737,-0.0496649593114853,0.2282834798097610,-0.1620554924011230,0.0733736976981163,-0.2501778006553650,0.0369014106690884,0.0956562161445618,-0.1545992940664291,0.0942374169826508) * FEATURE4_texOff(vec2(0,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.0288630966097116,0.2024775445461273,0.2231666445732117,0.1415414363145828,-0.2260987460613251,0.1266845762729645,-0.0103499302640557,0.1321901828050613,-0.0433016680181026,0.0710583105683327,-0.4118835628032684,-0.1507381796836853,-0.0908712670207024,0.0622761659324169,0.2384989708662033,0.0809374526143074) * FEATURE1_texOff(vec2(0,0));
[ 397.814][d][vo/gpu-next/libplacebo] [128] res += mat4(0.3266247510910034,-0.0178601127117872,-0.2003595679998398,0.1144727766513824,0.0626943558454514,0.2073500007390976,0.2080030590295792,0.0128668304532766,0.7344420552253723,-0.1793971508741379,0.0798397064208984,-0.4412221014499664,0.0407845303416252,0.1131422445178032,0.2934736609458923,0.0625335574150085) * FEATURE2_texOff(vec2(0,0));
[ 397.814][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0319333635270596,0.1737762838602066,0.1869451403617859,0.1409240961074829,-0.1438102424144745,0.3691526055335999,-0.1304105222225189,0.2626801431179047,0.1752091795206070,-0.0515829734504223,-0.0831976905465126,0.0601379945874214,-0.2747399508953094,0.1969172060489655,0.3182463347911835,-0.0077942823991179) * FEATURE3_texOff(vec2(0,0));
[ 397.814][d][vo/gpu-next/libplacebo] [130] res += mat4(0.4369443356990814,-0.2348733842372894,0.1978072971105576,-0.1678612977266312,-0.1983436346054077,0.3403945565223694,0.4189101755619049,0.0315188989043236,-0.6563832163810730,0.3771362900733948,-0.0205766223371029,0.4802694916725159,-0.1200327053666115,0.0508982129395008,-0.1016638129949570,0.1347854137420654) * FEATURE4_texOff(vec2(0,0));
[ 397.814][d][vo/gpu-next/libplacebo] [131] res += mat4(0.0703062862157822,0.2102960497140884,0.0154892085120082,-0.2812403440475464,0.0107412738725543,-0.1078063398599625,-0.0538537353277206,0.2014517188072205,-0.0119203403592110,0.3250710070133209,0.1019796878099442,0.1494667232036591,-0.0774624198675156,0.2472514212131500,-0.1382634639739990,0.1727007627487183) * FEATURE1_texOff(vec2(0,1));
[ 397.814][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.3406212627887726,0.1102256178855896,0.0344245545566082,0.0535254664719105,-0.1131787896156311,-0.1116196066141129,-0.0361820906400681,0.2828329205513000,0.1532165110111237,0.1664879620075226,0.1495245248079300,-0.1846220791339874,-0.0863110795617104,0.1879447698593140,-0.2187136262655258,-0.0976269990205765) * FEATURE2_texOff(vec2(0,1));
[ 397.814][d][vo/gpu-next/libplacebo] [133] res += mat4(0.2498962283134460,0.0628746822476387,0.0752239376306534,0.0465303435921669,-0.3409739434719086,0.2857620120048523,0.0698532983660698,-0.1929524689912796,0.0117371957749128,-0.1592671424150467,-0.0443856492638588,-0.1500931084156036,-0.0638014823198318,0.2300414592027664,0.2772723138332367,0.0982782691717148) * FEATURE3_texOff(vec2(0,1));
[ 397.814][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.5059490203857422,-0.1311045885086060,0.0368731617927551,0.1761099994182587,-0.2564618289470673,0.3076902031898499,-0.1110099628567696,0.1084324046969414,0.2835643887519836,-0.1647099554538727,-0.1255061924457550,-0.2327279746532440,-0.0985080376267433,0.0366575457155704,-0.1026502773165703,-0.0330082252621651) * FEATURE4_texOff(vec2(0,1));
[ 397.814][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.3360988199710846,0.2244271785020828,-0.0387836545705795,0.1149037256836891,0.0972868502140045,-0.0944996923208237,-0.0228208024054766,0.0300375390797853,0.3410931825637817,0.0673678517341614,-0.1067329868674278,0.0460759624838829,-0.1416530013084412,0.0719029083848000,0.1737461686134338,-0.1460048109292984) * FEATURE1_texOff(vec2(1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [136] res += mat4(0.1348958611488342,-0.0217581838369370,-0.0246997904032469,-0.0370253399014473,-0.2199629992246628,-0.2583822607994080,-0.0932653769850731,-0.2328930199146271,-0.3985703587532043,-0.0800357311964035,-0.0502789840102196,-0.1894255578517914,0.0157703701406717,0.0064301551319659,-0.0858104750514030,0.0733424127101898) * FEATURE2_texOff(vec2(1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [137] res += mat4(0.1041419282555580,0.0518928579986095,-0.0646929740905762,-0.0370695181190968,0.0235015563666821,0.1457109898328781,-0.0695325955748558,0.1174258142709732,-0.2374160140752792,-0.1920933574438095,0.1244019418954849,0.0188022516667843,0.0602986663579941,-0.1103134676814079,0.0410128720104694,0.1191382408142090) * FEATURE3_texOff(vec2(1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [138] res += mat4(0.0710143893957138,0.1863823831081390,0.1069454997777939,-0.0628824830055237,-0.0817598104476929,-0.2282510697841644,-0.0731965005397797,-0.2010470926761627,0.0196697581559420,-0.0930084213614464,-0.2215146869421005,-0.0995974317193031,0.0197020657360554,-0.2077472507953644,-0.2745246887207031,-0.2016142755746841) * FEATURE4_texOff(vec2(1,-1));
[ 397.814][d][vo/gpu-next/libplacebo] [139] res += mat4(0.0337189361453056,0.0165102854371071,-0.0615520589053631,-0.0837895199656487,0.0536002889275551,-0.2178279608488083,0.2378123551607132,-0.0640304759144783,-0.1842651665210724,0.1383887231349945,-0.0163793954998255,0.0974779129028320,0.0414890572428703,-0.1716658025979996,-0.0911796241998672,0.2949803471565247) * FEATURE1_texOff(vec2(1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0948021039366722,-0.1160111948847771,0.1457199901342392,0.0830268114805222,-0.0575311966240406,-0.0802905112504959,0.1907799690961838,0.0806293338537216,-0.2138084769248962,-0.0966582298278809,-0.2017477154731750,0.1610527485609055,-0.0404433608055115,-0.2105194330215454,0.0839709937572479,-0.1883381307125092) * FEATURE2_texOff(vec2(1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0252135824412107,0.0330959074199200,0.0855813026428223,-0.0615275166928768,0.2952718436717987,-0.0192984342575073,-0.0794014632701874,-0.0708832591772079,-0.0284778289496899,0.0396614037454128,-0.0762029662728310,-0.0091145960614085,0.0112863909453154,-0.0858006030321121,0.2219867259263992,-0.0473073832690716) * FEATURE3_texOff(vec2(1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.0735780969262123,0.1588295102119446,0.0526467189192772,0.0841475054621696,0.2984561026096344,-0.0126614877954125,0.1053985804319382,-0.1054222360253334,-0.2275395393371582,0.0325669273734093,-0.1359508931636810,-0.0432912521064281,0.3476223051548004,0.0060007474385202,0.0478659644722939,0.0217769891023636) * FEATURE4_texOff(vec2(1,0));
[ 397.814][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.1700742095708847,0.1524066627025604,0.0056248060427606,-0.0194710157811642,0.1511547267436981,0.1654875576496124,0.1847568601369858,-0.1580300033092499,-0.1765314042568207,-0.0585254132747650,-0.0740904882550240,0.1187586858868599,0.0925130993127823,0.1622044593095779,-0.1567358523607254,-0.0668452009558678) * FEATURE1_texOff(vec2(1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [144] res += mat4(0.1341780424118042,-0.1721378117799759,0.1383672952651978,-0.3065282702445984,0.0086536090821028,-0.1854903697967529,0.0173848569393158,-0.0958723276853561,0.2456385642290115,0.1917649209499359,-0.2038490176200867,-0.1217347383499146,-0.0541911497712135,-0.2786482274532318,0.0933305397629738,0.0611389316618443) * FEATURE2_texOff(vec2(1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.0451022833585739,-0.0605932325124741,-0.0374172404408455,-0.0356340780854225,-0.0950141549110413,0.2326428592205048,0.0564964823424816,0.0559692643582821,-0.0715712606906891,-0.1021538227796555,-0.0026287697255611,0.0984951853752136,-0.1102745011448860,-0.0487639307975769,-0.1391361206769943,0.1251715570688248) * FEATURE3_texOff(vec2(1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [146] res += mat4(0.2046471387147903,0.1251144856214523,-0.0454968921840191,-0.0424325466156006,-0.0259405653923750,0.0798271521925926,-0.1830127239227295,-0.2307291328907013,-0.1853311359882355,-0.0832240208983421,-0.0404579453170300,-0.0428061001002789,-0.1496866494417191,-0.1584313660860062,0.1983799189329147,-0.0448243059217930) * FEATURE4_texOff(vec2(1,1));
[ 397.814][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(-0.2172160744667053,1.0248425006866455,0.7351635098457336,0.2249015122652054) * min(res, vec4(0.0));
[ 397.814][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.814][d][vo/gpu-next/libplacebo] [149] }
[ 397.814][d][vo/gpu-next/libplacebo] [150] 
[ 397.814][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.814][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.814][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.814][d][vo/gpu-next/libplacebo] [154] }
[ 397.814][d][vo/gpu-next/libplacebo] [155] 
[ 397.814][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.814][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.814][d][vo/gpu-next/libplacebo] [158] }
[ 397.814][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.814][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.814][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.814][d][vo/gpu-next] cache_load_obj: key(88f5e9abe9a050a7), size(20692), load time(0.155 ms)
[ 397.814][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x88f5e9abe9a050a7
[ 397.814][d][vo/gpu-next] cache_load_obj: key(c5692052caf4eca), size(27756), load time(0.137 ms)
[ 397.814][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.814][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.814][d][vo/gpu-next] cache_save_obj: key(88f5e9abe9a050a7), size(20692)
[ 397.814][d][vo/gpu-next/libplacebo] Spent 0.235 ms creating pipeline
[ 397.814][d][vo/gpu-next] cache_save_obj: key(c5692052caf4eca), size(27756)
[ 397.814][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.814][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.814][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.815][d][vo/gpu-next/libplacebo] Spent 0.083 ms allocating slab
[ 397.815][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.815][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.815][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.815][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.815][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.815][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.815][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.815][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.815][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.815][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.815][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.815][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.815][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.815][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.815][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.815][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.815][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.815][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.815][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.815][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.815][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.815][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.815][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.815][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.815][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.815][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.815][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.815][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.815][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.815][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.815][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.815][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.815][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.815][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.815][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.815][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.815][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.815][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.815][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.815][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.815][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.815][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.815][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.815][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.815][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.815][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.815][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.815][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.815][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.815][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.815][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.815][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.815][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.815][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.815][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.815][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.815][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.815][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.815][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.815][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.815][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.815][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.815][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.815][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.815][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.815][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.815][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.815][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.815][d][vo/gpu-next/libplacebo] [ 43] #define FEATURE1_raw _2 
[ 397.815][d][vo/gpu-next/libplacebo] [ 44] #define FEATURE1_pos _3 
[ 397.815][d][vo/gpu-next/libplacebo] [ 45] #define FEATURE1_map _3_map 
[ 397.815][d][vo/gpu-next/libplacebo] [ 46] #define FEATURE1_size vec2(textureSize(_2, 0)) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 47] #define FEATURE1_pt _4 
[ 397.815][d][vo/gpu-next/libplacebo] [ 48] #define FEATURE1_off _5 
[ 397.815][d][vo/gpu-next/libplacebo] [ 49] #define FEATURE1_mul _6 
[ 397.815][d][vo/gpu-next/libplacebo] [ 50] #define FEATURE1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 51] #define FEATURE1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 52] #define FEATURE1_texOff(off) (FEATURE1_tex(_3 + _4 * vec2(off))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 53] #define FEATURE1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 54] #define FEATURE2_raw _7 
[ 397.815][d][vo/gpu-next/libplacebo] [ 55] #define FEATURE2_pos _8 
[ 397.815][d][vo/gpu-next/libplacebo] [ 56] #define FEATURE2_map _8_map 
[ 397.815][d][vo/gpu-next/libplacebo] [ 57] #define FEATURE2_size vec2(textureSize(_7, 0)) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 58] #define FEATURE2_pt _9 
[ 397.815][d][vo/gpu-next/libplacebo] [ 59] #define FEATURE2_off _a 
[ 397.815][d][vo/gpu-next/libplacebo] [ 60] #define FEATURE2_mul _b 
[ 397.815][d][vo/gpu-next/libplacebo] [ 61] #define FEATURE2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 62] #define FEATURE2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 63] #define FEATURE2_texOff(off) (FEATURE2_tex(_8 + _9 * vec2(off))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 64] #define FEATURE2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 65] #define FEATURE3_raw _c 
[ 397.815][d][vo/gpu-next/libplacebo] [ 66] #define FEATURE3_pos _d 
[ 397.815][d][vo/gpu-next/libplacebo] [ 67] #define FEATURE3_map _d_map 
[ 397.815][d][vo/gpu-next/libplacebo] [ 68] #define FEATURE3_size vec2(textureSize(_c, 0)) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 69] #define FEATURE3_pt _e 
[ 397.815][d][vo/gpu-next/libplacebo] [ 70] #define FEATURE3_off _f 
[ 397.815][d][vo/gpu-next/libplacebo] [ 71] #define FEATURE3_mul _10 
[ 397.815][d][vo/gpu-next/libplacebo] [ 72] #define FEATURE3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 73] #define FEATURE3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 74] #define FEATURE3_texOff(off) (FEATURE3_tex(_d + _e * vec2(off))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 75] #define FEATURE3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 76] #define FEATURE4_raw _11 
[ 397.815][d][vo/gpu-next/libplacebo] [ 77] #define FEATURE4_pos _12 
[ 397.815][d][vo/gpu-next/libplacebo] [ 78] #define FEATURE4_map _12_map 
[ 397.815][d][vo/gpu-next/libplacebo] [ 79] #define FEATURE4_size vec2(textureSize(_11, 0)) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 80] #define FEATURE4_pt _13 
[ 397.815][d][vo/gpu-next/libplacebo] [ 81] #define FEATURE4_off _14 
[ 397.815][d][vo/gpu-next/libplacebo] [ 82] #define FEATURE4_mul _15 
[ 397.815][d][vo/gpu-next/libplacebo] [ 83] #define FEATURE4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 84] #define FEATURE4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 85] #define FEATURE4_texOff(off) (FEATURE4_tex(_12 + _13 * vec2(off))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 86] #define FEATURE4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.815][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.815][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.815][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.815][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.815][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.815][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.815][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.815][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.815][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.815][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.815][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.815][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.815][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.815][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.815][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.815][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.815][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.815][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.815][d][vo/gpu-next/libplacebo] [105] }
[ 397.815][d][vo/gpu-next/libplacebo] [106] 
[ 397.815][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.815][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.815][d][vo/gpu-next/libplacebo] [109] {
[ 397.815][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0511174127459526,0.0359574593603611,-0.0185840297490358,0.0512145012617111);
[ 397.815][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0578461475670338,0.2828919589519501,-0.1346452981233597,0.0320160463452339,-0.0698082149028778,0.1168579459190369,0.1400541961193085,0.0388100557029247,0.0376713834702969,0.0375407524406910,0.1184962242841721,0.0882366225123405,0.0020162458531559,-0.0868167132139206,0.0034549718257040,-0.0163146443665028) * FEATURE1_texOff(vec2(-1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [112] res += mat4(0.1800664067268372,-0.0640114471316338,0.2431817501783371,0.0366823226213455,-0.0444068312644958,-0.0690090730786324,0.0584501102566719,-0.1308096647262573,-0.0052478332072496,-0.1090428233146667,-0.0908301025629044,-0.0933984592556953,-0.0864761248230934,0.1372670531272888,0.0407580547034740,0.0705780163407326) * FEATURE2_texOff(vec2(-1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [113] res += mat4(0.1828511208295822,0.0576393343508244,0.0217101480811834,-0.0089030526578426,-0.0623153559863567,-0.1101517006754875,-0.0719603896141052,-0.1372530609369278,-0.1984188556671143,-0.1293830275535583,-0.0651546716690063,-0.0637928247451782,-0.1048893108963966,0.0154370125383139,0.0358166024088860,-0.3106870949268341) * FEATURE3_texOff(vec2(-1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0981069579720497,-0.1049205511808395,-0.2421268373727798,0.0293983612209558,-0.2442162781953812,0.2212668210268021,0.2120037823915482,-0.0813540369272232,0.0450910143554211,-0.3425211608409882,-0.1026159673929214,-0.0506544224917889,0.0712244138121605,0.1318957358598709,0.0610611140727997,-0.0272802803665400) * FEATURE4_texOff(vec2(-1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [115] res += mat4(0.0757116675376892,0.0171789843589067,0.1280157119035721,0.1780004650354385,0.1940336227416992,0.0905117467045784,0.1280143857002258,-0.0075025563128293,-0.0081007732078433,0.2032423913478851,0.1274915784597397,0.1291383504867554,-0.1648930013179779,0.0216276049613953,-0.1590877324342728,0.1075148805975914) * FEATURE1_texOff(vec2(-1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [116] res += mat4(0.2919487655162811,0.0159679595381021,0.0741899386048317,-0.1138671264052391,-0.1472337245941162,0.0585891306400299,-0.2953324615955353,0.0341861061751842,0.1097938418388367,-0.3058669269084930,-0.0194781050086021,-0.2184937149286270,0.0867074877023697,0.0781764239072800,0.0877893045544624,-0.0211875345557928) * FEATURE2_texOff(vec2(-1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0053484216332436,-0.0241691619157791,-0.2177040278911591,0.0781714171171188,-0.1637988239526749,-0.0008503105491400,0.0396153256297112,0.2763280868530273,-0.1462812572717667,-0.2049797475337982,0.1382520645856857,-0.0691982954740524,-0.1430344730615616,0.0482883676886559,-0.2159024178981781,0.0288316234946251) * FEATURE3_texOff(vec2(-1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [118] res += mat4(0.0257013905793428,-0.2157738357782364,-0.0104084108024836,0.1268256902694702,0.0796590447425842,-0.0404040142893791,-0.0645640641450882,-0.1908340603113174,0.0319073088467121,-0.1588334888219833,0.2061458826065063,-0.0268522966653109,0.0711527019739151,0.0515270642936230,0.0610213540494442,0.1500909030437469) * FEATURE4_texOff(vec2(-1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [119] res += mat4(0.0754264667630196,0.0516740866005421,-0.0874962434172630,0.0603918395936489,-0.0756956934928894,-0.1173401325941086,0.0785196125507355,-0.0671538934111595,-0.0816918089985847,-0.0357300601899624,-0.0434930622577667,-0.0150950783863664,-0.0413136780261993,-0.0122060971334577,-0.1442099362611771,-0.0745952427387238) * FEATURE1_texOff(vec2(-1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0170399695634842,-0.0806885212659836,0.3260264992713928,-0.0606914423406124,0.1005641967058182,0.3976904153823853,0.3015973865985870,0.0750900134444237,0.3002873361110687,0.1097188293933868,-0.0507142990827560,0.3961393535137177,0.0288244299590588,-0.0879809781908989,0.0269260630011559,0.0237243082374334) * FEATURE2_texOff(vec2(-1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0264652632176876,0.1016611754894257,0.0643393844366074,-0.0530705191195011,0.0024295691400766,0.0143215563148260,-0.1968523412942886,-0.1619118005037308,-0.0106757655739784,0.0187640935182571,0.0976292043924332,0.0248356256633997,-0.0410357415676117,0.0219711922109127,-0.0956720858812332,0.0902286618947983) * FEATURE3_texOff(vec2(-1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0231158118695021,0.2895714342594147,0.3024026155471802,0.2077331990003586,-0.0650042518973351,0.0217847023159266,-0.0772262811660767,-0.0283138379454613,0.2134558260440826,0.0431921556591988,-0.1028737574815750,0.0213085450232029,-0.0087573593482375,-0.1172112450003624,0.0229998510330915,-0.2088558822870255) * FEATURE4_texOff(vec2(-1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [123] res += mat4(0.3234306275844574,-0.0036758435890079,0.0758589431643486,-0.0505495630204678,-0.0476355440914631,-0.0742078125476837,-0.0672180801630020,-0.0859087854623795,0.2005819231271744,0.0526694320142269,0.0181618090718985,0.1270401477813721,0.0360271520912647,-0.0535571500658989,-0.2090791016817093,0.1898656040430069) * FEATURE1_texOff(vec2(0,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.1914348602294922,0.3021202683448792,0.0804308727383614,0.0203794166445732,0.0215651225298643,-0.2746695578098297,-0.2756184935569763,0.1516600549221039,-0.1790768355131149,-0.1245375573635101,0.1609978973865509,-0.1723066270351410,-0.1159619092941284,0.0524865239858627,0.0562714673578739,-0.0370114147663116) * FEATURE2_texOff(vec2(0,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [125] res += mat4(0.0319192595779896,-0.0397810451686382,0.1978694200515747,-0.1865420639514923,0.1077109277248383,0.0574462562799454,0.1544080823659897,-0.0755468830466270,-0.0234267488121986,0.0506254322826862,-0.1276153475046158,0.0454352833330631,0.1296306401491165,0.0681788548827171,-0.0031885858625174,0.2401781082153320) * FEATURE3_texOff(vec2(0,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [126] res += mat4(0.0883577913045883,-0.1225442066788673,-0.0518296025693417,-0.1428000628948212,-0.0082690687850118,-0.3502953946590424,0.0103399204090238,-0.0086328629404306,-0.1192949190735817,0.0245292577892542,-0.3912904560565948,0.1688191741704941,-0.0310530029237270,-0.2192679792642593,-0.0955478847026825,-0.2416780889034271) * FEATURE4_texOff(vec2(0,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [127] res += mat4(0.1438802629709244,0.4415321350097656,0.1194443255662918,-0.0833267197012901,0.1291743963956833,0.0808409601449966,-0.2797149121761322,0.0922314450144768,0.3578602969646454,-0.2166663557291031,0.1485640406608582,0.1230967789888382,0.2417494207620621,0.1943885535001755,-0.3441389501094818,0.0836386457085609) * FEATURE1_texOff(vec2(0,0));
[ 397.815][d][vo/gpu-next/libplacebo] [128] res += mat4(0.0140561945736408,-0.0930848121643066,-0.3222397863864899,0.3774345815181732,0.2496200799942017,0.1319408118724823,-0.4739931523799896,0.2975631058216095,-0.6283363103866577,0.4485394656658173,0.1579030901193619,0.2276044636964798,0.1954878866672516,0.0422135479748249,0.1251304894685745,-0.1129303053021431) * FEATURE2_texOff(vec2(0,0));
[ 397.815][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0721885040402412,0.1271906793117523,-0.2274189144372940,-0.0034560146741569,0.4503856897354126,0.3654197454452515,0.0625725463032722,-0.3701701760292053,0.0350647158920765,-0.3291721642017365,0.2419649809598923,0.1158339232206345,0.1363242119550705,-0.3370400965213776,-0.4590337574481964,-0.1087213605642319) * FEATURE3_texOff(vec2(0,0));
[ 397.815][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0425999015569687,-0.0803546756505966,-0.0682977288961411,0.1522664278745651,0.3394095897674561,0.0147661138325930,-0.2460791468620300,-0.1358268707990646,0.3123224675655365,0.0335265956819057,-0.1279314905405045,-0.2441596984863281,0.0691332891583443,-0.0065273907966912,0.0315024778246880,-0.2075266540050507) * FEATURE4_texOff(vec2(0,0));
[ 397.815][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.0352581776678562,0.1733648777008057,-0.2391406744718552,-0.1985583156347275,0.0307849999517202,0.1498878896236420,-0.0964969918131828,0.0610927008092403,0.0656357258558273,-0.3735375106334686,-0.1126287132501602,0.0810788348317146,0.2228245884180069,0.0629712119698524,-0.1089765280485153,0.1937741935253143) * FEATURE1_texOff(vec2(0,1));
[ 397.815][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.0714075788855553,0.1122887283563614,-0.0541789606213570,0.1050251945853233,0.2244011759757996,-0.2155403494834900,0.0281857214868069,-0.0192877724766731,0.0115881757810712,0.0295707397162914,-0.0402938537299633,-0.0159157104790211,-0.0322378501296043,0.0462084412574768,0.0796689689159393,-0.0045751547440886) * FEATURE2_texOff(vec2(0,1));
[ 397.815][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.1745322793722153,-0.1089341342449188,0.0311019849032164,0.1796688586473465,-0.0497992001473904,-0.3238902688026428,-0.1294999867677689,-0.1981544494628906,0.2647362053394318,-0.0497390553355217,0.1340302228927612,0.1089042499661446,0.3159225285053253,0.0749141424894333,-0.2068309783935547,0.2945960760116577) * FEATURE3_texOff(vec2(0,1));
[ 397.815][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0552009753882885,0.0791923254728317,-0.0234178118407726,-0.2137083113193512,0.2205381244421005,-0.1788860112428665,-0.0469832457602024,0.0188462510704994,-0.1843361705541611,-0.2105434536933899,-0.1968381106853485,0.2580736875534058,0.0339437164366245,-0.0693900063633919,-0.0590746030211449,0.3345184922218323) * FEATURE4_texOff(vec2(0,1));
[ 397.815][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.0714576318860054,-0.1314765065908432,0.0044849822297692,-0.0384970940649509,0.2241345494985580,-0.0324452109634876,0.2159636765718460,0.1048837751150131,-0.1070954799652100,-0.0161915589123964,-0.0572434253990650,-0.1844666749238968,0.0281824711710215,-0.1263117045164108,-0.2617301940917969,0.0878679007291794) * FEATURE1_texOff(vec2(1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.1100168824195862,-0.0780089497566223,0.1974209547042847,-0.0670912265777588,0.1407631486654282,0.1423299312591553,0.1635863184928894,-0.0288321077823639,0.3278575837612152,-0.1082433238625526,0.2574056684970856,0.1123920455574989,-0.1196926757693291,-0.0249382574111223,0.0006079469458200,-0.1647489219903946) * FEATURE2_texOff(vec2(1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [137] res += mat4(0.1526419073343277,0.0477463267743587,-0.0402963794767857,-0.0688054859638214,-0.0743660777807236,-0.1399626880884171,-0.2718788683414459,0.3125098943710327,0.1716637760400772,-0.1604706645011902,-0.1242120563983917,0.0801826342940331,-0.0891780182719231,0.0744505822658539,-0.1075374931097031,-0.2213074415922165) * FEATURE3_texOff(vec2(1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.1353906840085983,-0.0651349574327469,-0.3486540019512177,0.0519254878163338,0.1884097605943680,-0.0021119879093021,0.1838577538728714,0.2008749395608902,0.1146747693419456,-0.0404230952262878,-0.0025575994513929,-0.1060535013675690,-0.0098623437806964,0.0988361388444901,0.0361230596899986,0.0778185352683067) * FEATURE4_texOff(vec2(1,-1));
[ 397.815][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.7296320796012878,-0.1005255207419395,-0.0297978557646275,-0.3341357111930847,0.1982498317956924,-0.2028026878833771,-0.1974771767854691,-0.1999196559190750,0.0944639220833778,-0.0612797103822231,0.0827406495809555,-0.0263017136603594,-0.1228519976139069,-0.3428965508937836,0.0960030034184456,0.1286140382289886) * FEATURE1_texOff(vec2(1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [140] res += mat4(0.2460274547338486,-0.0110488999634981,-0.0974549204111099,0.0422583743929863,0.2751173973083496,0.0678272098302841,-0.2969105541706085,0.1323045939207077,0.0380870699882507,0.3217476606369019,-0.0752521008253098,0.0459126196801662,-0.4058500826358795,0.0251078642904758,-0.0231282394379377,-0.1124168261885643) * FEATURE2_texOff(vec2(1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.2689310014247894,-0.2388662099838257,0.1936679780483246,-0.0622065514326096,-0.2855861485004425,0.0881438851356506,-0.1297691315412521,-0.0710278674960136,0.3021833598613739,0.0885890796780586,0.0518921613693237,0.2242880314588547,0.1547999829053879,-0.1480449587106705,0.1359568983316422,0.0099172536283731) * FEATURE3_texOff(vec2(1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [142] res += mat4(0.1443729847669601,-0.2127736210823059,-0.1425509303808212,-0.1897493451833725,-0.2638850510120392,-0.1273290663957596,-0.0896094292402267,-0.0437430441379547,0.1610110104084015,-0.1014155820012093,0.2710902988910675,-0.0327298417687416,-0.0324533618986607,0.0915087535977364,0.0798557400703430,-0.1547852903604507) * FEATURE4_texOff(vec2(1,0));
[ 397.815][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.2404520064592361,-0.0844260677695274,-0.2389319241046906,-0.1240477040410042,0.1413290798664093,0.3788705766201019,0.0120783364400268,0.0488567911088467,-0.1317554712295532,-0.2663916051387787,-0.0246596839278936,-0.0082284500822425,-0.1777968853712082,0.0150971999391913,-0.0495786853134632,-0.0782039240002632) * FEATURE1_texOff(vec2(1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [144] res += mat4(0.1535158157348633,-0.1182311400771141,-0.1546080559492111,0.0448417924344540,-0.0881625786423683,-0.0413807667791843,0.0816671028733253,0.2144964784383774,-0.4627449214458466,0.0498482473194599,-0.0300191771239042,0.0065994099713862,-0.0156666859984398,-0.1720254272222519,-0.0485287122428417,-0.1363081336021423) * FEATURE2_texOff(vec2(1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0021659194026142,-0.1300170868635178,-0.0059179398231208,0.0288986936211586,-0.0019816202111542,-0.0576530508697033,-0.1840831786394119,-0.0129501679912210,0.1544197946786880,0.2934990227222443,0.0106042763218284,-0.0419802144169807,-0.2079767584800720,-0.3180702328681946,0.1618657112121582,-0.0636325553059578) * FEATURE3_texOff(vec2(1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.3316137194633484,0.0584416948258877,0.2460993081331253,-0.0385730527341366,-0.1526068896055222,0.0712944641709328,0.0567634105682373,-0.1403829455375671,0.1281589567661285,0.1594053804874420,0.2744943499565125,0.0101370532065630,0.0462218746542931,-0.1511970162391663,-0.0000599296290602,-0.0264442525804043) * FEATURE4_texOff(vec2(1,1));
[ 397.815][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.1329186856746674,0.4945091009140015,-0.0285056717693806,0.5025353431701660) * min(res, vec4(0.0));
[ 397.815][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.815][d][vo/gpu-next/libplacebo] [149] }
[ 397.815][d][vo/gpu-next/libplacebo] [150] 
[ 397.815][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.815][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.815][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.815][d][vo/gpu-next/libplacebo] [154] }
[ 397.815][d][vo/gpu-next/libplacebo] [155] 
[ 397.815][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.815][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.815][d][vo/gpu-next/libplacebo] [158] }
[ 397.815][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.815][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.815][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.815][d][vo/gpu-next] cache_load_obj: key(27a91a697609d55a), size(20692), load time(0.152 ms)
[ 397.815][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x27a91a697609d55a
[ 397.815][d][vo/gpu-next] cache_load_obj: key(51cc82331332e500), size(27608), load time(0.146 ms)
[ 397.815][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.815][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.815][d][vo/gpu-next] cache_save_obj: key(27a91a697609d55a), size(20692)
[ 397.815][d][vo/gpu-next/libplacebo] Spent 0.106 ms creating pipeline
[ 397.815][d][vo/gpu-next] cache_save_obj: key(51cc82331332e500), size(27608)
[ 397.815][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.815][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.815][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.816][d][vo/gpu-next/libplacebo] Spent 0.075 ms allocating slab
[ 397.816][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.816][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.816][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.816][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.816][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.816][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.816][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.816][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.816][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.816][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.816][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.816][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.816][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.816][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.816][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.816][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.816][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.816][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.816][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.816][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.816][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.816][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.816][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.816][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.816][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.816][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.816][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.816][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.816][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.816][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.816][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.816][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.816][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.816][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.816][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.816][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.816][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.816][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.816][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.816][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.816][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.816][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.816][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.816][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.816][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.816][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.816][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.816][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.816][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.816][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.816][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.816][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.816][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.816][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.816][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.816][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.816][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.816][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.816][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.816][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.816][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.816][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.816][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.816][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.816][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.816][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.816][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.816][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.816][d][vo/gpu-next/libplacebo] [ 43] #define FEATURE1_raw _2 
[ 397.816][d][vo/gpu-next/libplacebo] [ 44] #define FEATURE1_pos _3 
[ 397.816][d][vo/gpu-next/libplacebo] [ 45] #define FEATURE1_map _3_map 
[ 397.816][d][vo/gpu-next/libplacebo] [ 46] #define FEATURE1_size vec2(textureSize(_2, 0)) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 47] #define FEATURE1_pt _4 
[ 397.816][d][vo/gpu-next/libplacebo] [ 48] #define FEATURE1_off _5 
[ 397.816][d][vo/gpu-next/libplacebo] [ 49] #define FEATURE1_mul _6 
[ 397.816][d][vo/gpu-next/libplacebo] [ 50] #define FEATURE1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 51] #define FEATURE1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 52] #define FEATURE1_texOff(off) (FEATURE1_tex(_3 + _4 * vec2(off))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 53] #define FEATURE1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 54] #define FEATURE2_raw _7 
[ 397.816][d][vo/gpu-next/libplacebo] [ 55] #define FEATURE2_pos _8 
[ 397.816][d][vo/gpu-next/libplacebo] [ 56] #define FEATURE2_map _8_map 
[ 397.816][d][vo/gpu-next/libplacebo] [ 57] #define FEATURE2_size vec2(textureSize(_7, 0)) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 58] #define FEATURE2_pt _9 
[ 397.816][d][vo/gpu-next/libplacebo] [ 59] #define FEATURE2_off _a 
[ 397.816][d][vo/gpu-next/libplacebo] [ 60] #define FEATURE2_mul _b 
[ 397.816][d][vo/gpu-next/libplacebo] [ 61] #define FEATURE2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 62] #define FEATURE2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 63] #define FEATURE2_texOff(off) (FEATURE2_tex(_8 + _9 * vec2(off))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 64] #define FEATURE2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 65] #define FEATURE3_raw _c 
[ 397.816][d][vo/gpu-next/libplacebo] [ 66] #define FEATURE3_pos _d 
[ 397.816][d][vo/gpu-next/libplacebo] [ 67] #define FEATURE3_map _d_map 
[ 397.816][d][vo/gpu-next/libplacebo] [ 68] #define FEATURE3_size vec2(textureSize(_c, 0)) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 69] #define FEATURE3_pt _e 
[ 397.816][d][vo/gpu-next/libplacebo] [ 70] #define FEATURE3_off _f 
[ 397.816][d][vo/gpu-next/libplacebo] [ 71] #define FEATURE3_mul _10 
[ 397.816][d][vo/gpu-next/libplacebo] [ 72] #define FEATURE3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 73] #define FEATURE3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 74] #define FEATURE3_texOff(off) (FEATURE3_tex(_d + _e * vec2(off))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 75] #define FEATURE3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 76] #define FEATURE4_raw _11 
[ 397.816][d][vo/gpu-next/libplacebo] [ 77] #define FEATURE4_pos _12 
[ 397.816][d][vo/gpu-next/libplacebo] [ 78] #define FEATURE4_map _12_map 
[ 397.816][d][vo/gpu-next/libplacebo] [ 79] #define FEATURE4_size vec2(textureSize(_11, 0)) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 80] #define FEATURE4_pt _13 
[ 397.816][d][vo/gpu-next/libplacebo] [ 81] #define FEATURE4_off _14 
[ 397.816][d][vo/gpu-next/libplacebo] [ 82] #define FEATURE4_mul _15 
[ 397.816][d][vo/gpu-next/libplacebo] [ 83] #define FEATURE4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 84] #define FEATURE4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 85] #define FEATURE4_texOff(off) (FEATURE4_tex(_12 + _13 * vec2(off))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 86] #define FEATURE4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.816][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.816][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.816][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.816][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.816][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.816][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.816][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.816][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.816][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.816][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.816][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.816][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.816][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.816][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.816][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.816][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.816][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.816][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.816][d][vo/gpu-next/libplacebo] [105] }
[ 397.816][d][vo/gpu-next/libplacebo] [106] 
[ 397.816][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.816][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.816][d][vo/gpu-next/libplacebo] [109] {
[ 397.816][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.4677113592624664,0.0596643872559071,-0.1394357085227966,-0.0474149025976658);
[ 397.816][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0283560287207365,0.1632403135299683,0.1545499116182327,-0.1395063996315002,-0.0688662007451057,-0.0736728757619858,-0.1194026470184326,0.0635547265410423,0.1496663391590118,-0.2046299278736115,-0.1990851163864136,0.1986444592475891,0.0938748717308044,0.0851655229926109,0.0643394067883492,0.0175190437585115) * FEATURE1_texOff(vec2(-1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.1706869602203369,0.0189472753554583,-0.1184043362736702,0.0998171344399452,-0.1032890230417252,0.1420563012361526,-0.0668720826506615,0.0394843854010105,-0.0842913612723351,0.1660422533750534,-0.5172500014305115,0.2054497301578522,-0.0657985284924507,0.1270816773176193,0.1796167194843292,0.0053847674280405) * FEATURE2_texOff(vec2(-1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [113] res += mat4(0.1217580363154411,0.1042716652154922,-0.1231716424226761,-0.1094131618738174,-0.0445660017430782,-0.0655702874064445,0.0594377182424068,-0.1643417626619339,-0.0057018632069230,-0.2968985736370087,-0.0090959724038839,0.1444288939237595,0.0278254449367523,0.0531919300556183,-0.0797978714108467,0.1580917537212372) * FEATURE3_texOff(vec2(-1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [114] res += mat4(0.1023867651820183,0.0782632082700729,0.1376877725124359,-0.2557797431945801,-0.0860542878508568,0.1032235845923424,-0.0648632198572159,0.1306759864091873,-0.0739438682794571,-0.0179721694439650,-0.0082308109849691,0.1747244745492935,-0.1365087479352951,-0.0927051901817322,0.0143458470702171,0.1506867408752441) * FEATURE4_texOff(vec2(-1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [115] res += mat4(0.2170464694499969,0.0002870913885999,0.1082361266016960,0.0810969695448875,-0.0233201589435339,0.0988461151719093,-0.0679773390293121,0.2193212807178497,-0.2105504870414734,-0.0245069134980440,-0.0248711705207825,-0.2008217871189117,-0.0665743276476860,-0.0864971727132797,-0.1867953538894653,-0.1417353451251984) * FEATURE1_texOff(vec2(-1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0060973879881203,0.2791217565536499,-0.1383740305900574,-0.0722776874899864,0.0468704253435135,0.0632910281419754,0.1379466801881790,0.0857292935252190,0.1201294362545013,-0.5738033652305603,-0.1481534987688065,0.1082581132650375,0.0583366453647614,-0.0605551861226559,0.0226882509887218,-0.1571758389472961) * FEATURE2_texOff(vec2(-1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0389893129467964,-0.1442680507898331,0.0443960465490818,-0.0106713678687811,0.0771727785468102,0.0900101289153099,-0.0914754047989845,-0.0729852244257927,0.0937186479568481,-0.1620398461818695,-0.1510852575302124,0.0379182845354080,-0.2640995085239410,0.1212409734725952,-0.0698653087019920,0.0764444917440414) * FEATURE3_texOff(vec2(-1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [118] res += mat4(0.0094550428912044,-0.1416580229997635,0.0040757483802736,0.0711589679121971,-0.0278622452169657,0.1276591867208481,-0.0185330137610435,0.0989640280604362,-0.0241079051047564,0.1958288699388504,-0.0341864079236984,-0.0203034970909357,0.1311966329813004,0.0726944506168365,-0.1139959171414375,0.0695756077766418) * FEATURE4_texOff(vec2(-1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.1046063899993896,0.0169014390558004,0.0566153712570667,-0.0909216180443764,0.1807488054037094,0.1575771272182465,-0.0805048644542694,-0.0666622519493103,-0.0279997456818819,0.3350932896137238,0.0631688386201859,-0.0093164052814245,-0.0619123466312885,0.0301001071929932,-0.0260559096932411,0.0059746033512056) * FEATURE1_texOff(vec2(-1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0143611505627632,0.2324832826852798,-0.0060990033671260,0.1127019226551056,0.0126230213791132,0.2339999228715897,0.1924626082181931,0.2061477303504944,0.0493903905153275,-0.1729395091533661,-0.1811242699623108,-0.6014294624328613,0.0342454761266708,-0.0274821706116199,0.1105191484093666,-0.1979669183492661) * FEATURE2_texOff(vec2(-1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [121] res += mat4(0.0304616615176201,-0.2031574547290802,-0.0807851925492287,-0.0697002559900284,-0.0698697268962860,0.0051260222680867,0.2499262094497681,-0.0973711311817169,-0.0771127119660378,-0.0720796883106232,-0.5590449571609497,-0.2520964741706848,-0.0163954924792051,0.0744133740663528,0.2196218222379684,-0.2336483448743820) * FEATURE3_texOff(vec2(-1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [122] res += mat4(0.1008921638131142,0.1226324513554573,0.1692889481782913,-0.1959094405174255,0.0208503510802984,0.1198548898100853,-0.0169574189931154,-0.0145710362121463,-0.0836949944496155,-0.0894491747021675,-0.0554155036807060,0.1527550071477890,-0.1670548170804977,0.0129694417119026,-0.1856075525283813,0.0408268384635448) * FEATURE4_texOff(vec2(-1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.0305163897573948,-0.0767870619893074,0.0613127462565899,0.1089824065566063,-0.0490215420722961,0.0649225413799286,-0.3888852000236511,0.2872225344181061,-0.0105518708005548,-0.0723692327737808,-0.0249940138310194,0.0244531538337469,-0.0104067716747522,0.0199929829686880,-0.0143613154068589,-0.1261249780654907) * FEATURE1_texOff(vec2(0,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [124] res += mat4(0.0417649522423744,0.1641997247934341,-0.3794211745262146,0.1482190340757370,0.0126221617683768,0.0924909561872482,-0.1544391512870789,-0.0747963562607765,0.0679167956113815,0.1877635866403580,0.0086008775979280,0.0841070786118507,-0.0103343576192856,-0.1396269202232361,0.0794675424695015,0.0356968715786934) * FEATURE2_texOff(vec2(0,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [125] res += mat4(0.1153599098324776,0.1380549669265747,0.0995968654751778,-0.1357073485851288,0.2307410091161728,-0.1676283031702042,-0.0096712857484818,-0.2089426666498184,-0.0020792745053768,0.1697451472282410,-0.1037141531705856,-0.0332836210727692,0.0217782165855169,0.0239152982831001,-0.1074517816305161,0.0315274447202682) * FEATURE3_texOff(vec2(0,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.1172794103622437,-0.1133701056241989,0.1197625696659088,0.2757594883441925,0.0907953381538391,0.1085178330540657,-0.0892044082283974,0.0410259068012238,-0.0039528561756015,0.1873635351657867,0.1140211671590805,-0.0239405203610659,0.0777708739042282,-0.2992796599864960,-0.0244610011577606,-0.1262238919734955) * FEATURE4_texOff(vec2(0,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [127] res += mat4(0.1601363271474838,-0.1024804711341858,0.0558576621115208,-0.0647795945405960,0.4536117613315582,-0.1438980698585510,0.0363552756607533,-0.0851869955658913,-0.0199466384947300,0.1326086074113846,-0.0915003195405006,-0.1175814792513847,0.0238959547132254,-0.1614147275686264,-0.0998204350471497,-0.2010682374238968) * FEATURE1_texOff(vec2(0,0));
[ 397.816][d][vo/gpu-next/libplacebo] [128] res += mat4(0.1476137489080429,0.2393688559532166,-0.2296492159366608,0.0042779981158674,0.1037053167819977,0.1472122520208359,0.0032886650878936,-0.2251711189746857,-0.0404342859983444,-0.0171687994152308,-0.2280301898717880,0.3987729549407959,0.4020861983299255,0.1607445031404495,0.1672488003969193,-0.3888488411903381) * FEATURE2_texOff(vec2(0,0));
[ 397.816][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0218454655259848,0.2671929895877838,-0.0119920698925853,-0.2715956568717957,0.1263071000576019,0.4152169823646545,0.0728624537587166,-0.3734714686870575,-0.0906806811690331,0.0673342943191528,-0.1451562941074371,-0.0111573236063123,0.1217871680855751,-0.4524103701114655,-0.1648243367671967,0.0074777076952159) * FEATURE3_texOff(vec2(0,0));
[ 397.816][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.1264527887105942,0.0800493806600571,-0.1353330612182617,0.3417861163616180,-0.0440137460827827,-0.3641567230224609,-0.1094656735658646,-0.2400032728910446,0.3886721134185791,-0.0321426466107368,0.1743922829627991,-0.2514666318893433,0.4774186313152313,0.1686504930257797,-0.1134199872612953,-0.0880033746361732) * FEATURE4_texOff(vec2(0,0));
[ 397.816][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.1341401636600494,0.0961203575134277,0.0174810066819191,-0.1315679401159286,0.2148621231317520,-0.0422738716006279,0.1060828566551208,-0.0043826033361256,-0.0195943713188171,0.0413073748350143,-0.0209606774151325,0.1535830348730087,0.0019101846264675,-0.0752144008874893,0.0543836802244186,0.0817238166928291) * FEATURE1_texOff(vec2(0,1));
[ 397.816][d][vo/gpu-next/libplacebo] [132] res += mat4(0.2039585858583450,0.0317360870540142,-0.1431615948677063,-0.0021050858777016,0.0781205222010612,-0.0810130387544632,0.0781239792704582,-0.0228356011211872,-0.0057179541327059,0.1765613555908203,0.1328212618827820,0.1162380650639534,0.0440343655645847,-0.0955794304609299,0.0061650266870856,-0.2743133902549744) * FEATURE2_texOff(vec2(0,1));
[ 397.816][d][vo/gpu-next/libplacebo] [133] res += mat4(0.0216834526509047,-0.0422806702554226,-0.0307590048760176,-0.0987641364336014,-0.0867971032857895,0.0247024279087782,-0.0049467366188765,0.2352760881185532,0.0741604268550873,0.2699835598468781,-0.2172181308269501,0.0214569829404354,0.0881326273083687,-0.3191315531730652,0.3460417091846466,-0.3118346929550171) * FEATURE3_texOff(vec2(0,1));
[ 397.816][d][vo/gpu-next/libplacebo] [134] res += mat4(0.2059896439313889,0.1252457946538925,-0.0074510029517114,-0.0691959038376808,0.1807214915752411,0.0027611132245511,0.0240095667541027,-0.0766959115862846,-0.2156358659267426,0.1172294840216637,-0.0495175346732140,-0.1693508028984070,-0.2264798283576965,0.1293796896934509,-0.0099031990393996,-0.0373347997665405) * FEATURE4_texOff(vec2(0,1));
[ 397.816][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.1486484259366989,-0.0883196964859962,-0.1987736970186234,-0.0938437283039093,0.0970940217375755,-0.0196071788668633,-0.1967689394950867,0.1610310226678848,-0.0768222808837891,0.1623231619596481,0.3253002166748047,-0.0089388052001595,-0.1180243045091629,-0.1877942830324173,-0.0183167178183794,0.0188101623207331) * FEATURE1_texOff(vec2(1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.1101450696587563,-0.0586120933294296,0.2209171354770660,-0.0070414175279438,0.2106666266918182,0.0642789304256439,-0.0919141173362732,0.0349143296480179,0.1890538632869720,-0.1068792790174484,0.0104350410401821,0.1184908673167229,-0.1089602261781693,-0.0094016948714852,0.0017966856248677,0.0176654886454344) * FEATURE2_texOff(vec2(1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [137] res += mat4(0.1723289191722870,0.1253015846014023,0.0129809668287635,-0.0096823889762163,0.0716049075126648,-0.0353725440800190,0.1567278355360031,0.1648248732089996,-0.0200736690312624,-0.0962075367569923,0.4105050861835480,-0.2045884430408478,-0.0749892368912697,0.1791831552982330,-0.0503315366804600,0.1393465697765350) * FEATURE3_texOff(vec2(1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.0570600554347038,-0.0980537757277489,0.1290795952081680,-0.2045826315879822,0.0843658223748207,0.1265690475702286,0.0357006937265396,-0.0056274337694049,-0.0230911634862423,-0.2809480428695679,0.0960148945450783,-0.0294854622334242,0.0398252755403519,-0.0827212855219841,0.3009684681892395,0.1364646106958389) * FEATURE4_texOff(vec2(1,-1));
[ 397.816][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.2818616926670074,0.1190070509910583,-0.0221457425504923,0.0436922684311867,0.2696960866451263,-0.0621693730354309,0.1205597668886185,-0.1424377113580704,0.1226921603083611,-0.1418399065732956,0.0728522315621376,-0.0041362936608493,0.0959575772285461,-0.1118893623352051,-0.0150952748954296,-0.1468373239040375) * FEATURE1_texOff(vec2(1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0212179757654667,-0.2112931758165359,0.4129287302494049,-0.2591953575611115,0.0837515369057655,0.2280779331922531,-0.0166412573307753,0.0318110287189484,0.0451285168528557,0.1645151078701019,-0.0918505042791367,-0.3413339257240295,-0.1391270756721497,0.1170434877276421,0.1808806508779526,0.1371048092842102) * FEATURE2_texOff(vec2(1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [141] res += mat4(0.2365919649600983,0.0929477214813232,0.0098810018971562,-0.0705359354615211,-0.0263667479157448,0.3372208178043365,-0.2670886814594269,0.1929598152637482,0.1251814067363739,0.1176949441432953,0.3895280361175537,0.0087956897914410,-0.1003661006689072,0.0438285619020462,0.0709054544568062,0.1750314384698868) * FEATURE3_texOff(vec2(1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.1494247168302536,-0.0427187569439411,0.1252926588058472,-0.0381422936916351,0.0603532493114471,0.0479200966656208,0.1253385990858078,-0.0344637632369995,0.2232175469398499,0.0041557680815458,0.1741494685411453,0.1342372000217438,0.0462950356304646,0.2518405318260193,0.1433944255113602,-0.2184360623359680) * FEATURE4_texOff(vec2(1,0));
[ 397.816][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.0174759086221457,0.1435166150331497,0.1709098070859909,0.0303303804248571,0.1366100013256073,-0.0466808117926121,-0.2585677206516266,-0.0260113924741745,0.0891791060566902,0.1636637747287750,-0.0108174066990614,-0.2410513609647751,-0.0733066499233246,-0.2842519283294678,0.0900657922029495,0.1629368662834167) * FEATURE1_texOff(vec2(1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.1839466094970703,-0.3148627281188965,0.4585924744606018,-0.1045131012797356,0.0372976958751678,-0.0834625810384750,0.1311012655496597,-0.1129970699548721,-0.0473304502665997,0.0826512053608894,0.3313356339931488,-0.2423646897077560,-0.1377865374088287,-0.0669801011681557,-0.1558588445186615,-0.1705927103757858) * FEATURE2_texOff(vec2(1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [145] res += mat4(0.1175539419054985,0.0567405335605145,0.1487032324075699,0.0238782912492752,0.0462666153907776,-0.0194517634809017,0.1340848952531815,0.3176729083061218,-0.0521196462213993,0.2000763863325119,0.2545012831687927,0.0430522076785564,-0.1516814082860947,-0.0023446544073522,0.1940542608499527,0.0857671871781349) * FEATURE3_texOff(vec2(1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.0185494329780340,-0.2759767770767212,-0.1199675053358078,-0.0520934872329235,-0.1969349235296249,-0.1761688590049744,-0.0436133332550526,0.0472480617463589,-0.0757623463869095,0.1956251859664917,-0.1295351535081863,0.0402258150279522,-0.0910124331712723,-0.1337720751762390,0.2972950339317322,0.0360797531902790) * FEATURE4_texOff(vec2(1,1));
[ 397.816][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(-0.0182641837745905,-0.0059784287586808,-0.3269565105438232,0.1502418369054794) * min(res, vec4(0.0));
[ 397.816][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.816][d][vo/gpu-next/libplacebo] [149] }
[ 397.816][d][vo/gpu-next/libplacebo] [150] 
[ 397.816][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.816][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.816][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.816][d][vo/gpu-next/libplacebo] [154] }
[ 397.816][d][vo/gpu-next/libplacebo] [155] 
[ 397.816][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.816][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.816][d][vo/gpu-next/libplacebo] [158] }
[ 397.816][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.816][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.816][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.816][d][vo/gpu-next] cache_load_obj: key(e1072d9ad0595810), size(20692), load time(0.151 ms)
[ 397.816][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xe1072d9ad0595810
[ 397.816][d][vo/gpu-next] cache_load_obj: key(46a3c061f8415861), size(27613), load time(0.152 ms)
[ 397.816][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.816][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.816][d][vo/gpu-next] cache_save_obj: key(e1072d9ad0595810), size(20692)
[ 397.816][d][vo/gpu-next/libplacebo] Spent 0.164 ms creating pipeline
[ 397.816][d][vo/gpu-next] cache_save_obj: key(46a3c061f8415861), size(27613)
[ 397.816][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.817][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.817][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.817][d][vo/gpu-next/libplacebo] Spent 0.118 ms allocating slab
[ 397.817][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.817][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.817][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.817][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.817][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.817][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.817][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.817][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.817][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.817][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.817][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.817][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.817][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.817][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.817][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.817][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.817][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.817][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.817][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.817][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.817][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.817][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.817][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.817][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.817][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.817][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.817][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.817][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.817][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.817][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.817][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.817][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.817][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.817][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.817][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.817][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.817][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.817][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.817][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.817][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.817][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.817][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.817][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.817][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.817][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.817][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.817][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.817][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.817][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.817][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.817][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.817][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.817][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.817][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.817][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.817][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.817][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.817][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.817][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.817][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.817][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.817][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.817][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.817][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.817][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.817][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.817][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.817][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.817][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.817][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.817][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.817][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.817][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.817][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.817][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.817][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.817][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.817][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.817][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.817][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.817][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.817][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.817][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.817][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.817][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.817][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.817][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.817][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.817][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.817][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.817][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.817][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.817][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.817][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.817][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.817][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.817][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.817][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.817][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.817][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.817][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.817][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.817][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.817][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.817][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.817][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.817][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.817][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.817][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.817][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.817][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.817][d][vo/gpu-next/libplacebo] [105] }
[ 397.817][d][vo/gpu-next/libplacebo] [106] 
[ 397.817][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.817][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.817][d][vo/gpu-next/libplacebo] [109] {
[ 397.817][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0289922468364239,-0.0046213301829994,0.0367466285824776,0.0247280076146126);
[ 397.817][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0143457781523466,-0.0190678630024195,-0.0258230697363615,0.1313548088073730,0.3141909837722778,-0.0069119986146688,-0.0645182058215141,-0.0854005292057991,0.1413416415452957,0.1722284108400345,-0.0839119851589203,0.1197172924876213,-0.3372162282466888,-0.1395767331123352,-0.0039571234956384,0.2856540679931641) * MODEL21_texOff(vec2(-1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [112] res += mat4(0.0069858012720942,0.1824326515197754,0.0518632940948009,-0.1651064753532410,-0.0377099290490150,0.1738090366125107,-0.0732944905757904,0.0683743804693222,0.1099290549755096,-0.0019769740756601,-0.0532479472458363,0.0886035263538361,0.0118701932951808,0.0399258546531200,0.0053707323968410,-0.2170725464820862) * MODEL22_texOff(vec2(-1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.0457811802625656,-0.0583812780678272,0.0106086488813162,-0.0548048131167889,0.2685912251472473,0.0483037903904915,-0.2051575630903244,-0.0179434139281511,-0.1426836252212524,-0.2228482961654663,0.0035537795629352,-0.0673922449350357,-0.0544852837920189,-0.2038804441690445,-0.0021089925430715,-0.1177326589822769) * MODEL23_texOff(vec2(-1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.1366073936223984,-0.0315098315477371,0.1321292817592621,0.2525149285793304,-0.1456605792045593,-0.0025319734122604,-0.0818520784378052,-0.0146102681756020,-0.1718215197324753,-0.1178970932960510,-0.0832295715808868,-0.0491813458502293,0.1259993761777878,-0.0999935120344162,0.0563119463622570,0.0435056872665882) * MODEL24_texOff(vec2(-1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.4573970437049866,0.1022815480828285,-0.0117169795557857,0.0031934282742441,0.0641026124358177,-0.2733633220195770,0.0072853905148804,-0.4380507767200470,0.2007429301738739,-0.0816889330744743,-0.0122506804764271,-0.0956504642963409,0.0294950269162655,-0.0895949974656105,-0.1854041069746017,-0.7676455378532410) * MODEL21_texOff(vec2(-1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [116] res += mat4(0.1377535015344620,0.3586088418960571,0.0549380332231522,-0.2113907039165497,-0.1651734709739685,0.0877330154180527,-0.3724181950092316,0.4033094644546509,0.1721396297216415,-0.2539699673652649,0.1025523915886879,0.0573127306997776,-0.2649540305137634,0.0996546223759651,-0.0322739854454994,-0.0665868520736694) * MODEL22_texOff(vec2(-1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.2230871468782425,0.0878259241580963,-0.0725827813148499,-0.2203043699264526,-0.0549901463091373,0.2613747119903564,-0.0657631829380989,0.2836516201496124,-0.2296158373355865,0.1444439440965652,-0.1738165020942688,-0.0411833599209785,0.2213525772094727,-0.1472615599632263,-0.0803443863987923,0.0813046768307686) * MODEL23_texOff(vec2(-1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [118] res += mat4(0.2197474390268326,-0.0366083644330502,0.0380731560289860,-0.0071744159795344,0.1010168194770813,0.1950140595436096,0.0008539655827917,-0.0120169641450047,-0.0898331403732300,-0.0149100609123707,0.0195039734244347,-0.0262539740651846,0.1531230509281158,0.0617115199565887,0.0106047820299864,0.1345859915018082) * MODEL24_texOff(vec2(-1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [119] res += mat4(0.1767730861902237,-0.0500057265162468,0.2573432922363281,-0.0796421468257904,0.0833976343274117,0.0809997841715813,-0.0547020621597767,-0.0294426903128624,0.0086969649419188,-0.0437616072595119,-0.0277936980128288,-0.0780489891767502,0.0786738246679306,0.1040676459670067,0.1303991526365280,-0.0775700286030769) * MODEL21_texOff(vec2(-1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.1780300885438919,0.2307239323854446,-0.0490200854837894,-0.1115287542343140,0.0413367860019207,-0.0131242256611586,-0.1669027954339981,-0.2644900381565094,-0.0998633503913879,0.0747515484690666,0.0838051065802574,0.1215404942631721,0.3635001182556152,-0.1774637252092361,0.0236857626587152,0.0582830198109150) * MODEL22_texOff(vec2(-1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [121] res += mat4(0.0588678158819675,-0.0194804612547159,-0.0146815674379468,0.1759945601224899,-0.0188863482326269,0.1450830698013306,-0.0976979285478592,-0.0334439128637314,0.1088448762893677,-0.2636922299861908,-0.0487314909696579,-0.1833051592111588,0.0295283142477274,-0.0965298935770988,0.0555295459926128,0.0416923537850380) * MODEL23_texOff(vec2(-1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.1194345131516457,0.1776950806379318,0.0304453447461128,-0.0358243547379971,0.0609029754996300,-0.2111077457666397,-0.0769061818718910,-0.0515557341277599,-0.0104961041361094,-0.0110840210691094,-0.0751237869262695,-0.0627719312906265,-0.0470809116959572,-0.0052316081710160,-0.0147776203230023,-0.0123609444126487) * MODEL24_texOff(vec2(-1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.0329177081584930,0.0750706046819687,0.1031253039836884,-0.2896055579185486,-0.0099481903016567,0.0257256161421537,0.1279631108045578,-0.1913103759288788,-0.1453415453433990,0.1676286458969116,-0.0144909946247935,-0.1456130743026733,0.1021625846624374,-0.0406420677900314,0.0150578496977687,-0.4707487821578979) * MODEL21_texOff(vec2(0,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.1022704094648361,0.1302301734685898,0.0201830789446831,-0.0964004769921303,0.0682998597621918,-0.0549241937696934,0.1587424874305725,0.1584217101335526,-0.0718813836574554,-0.1156852692365646,-0.1400242000818253,-0.0399557352066040,0.0212425049394369,-0.1191432029008865,0.0329345837235451,0.4230840206146240) * MODEL22_texOff(vec2(0,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.0670338720083237,-0.2093392014503479,-0.0664634555578232,0.1959116309881210,0.0310438647866249,0.0076268846169114,0.1642050594091415,0.0193996038287878,-0.1796613782644272,-0.0597044788300991,0.0265230983495712,0.1191902905702591,-0.3822203278541565,0.3378601372241974,-0.1067518070340157,0.2888302206993103) * MODEL23_texOff(vec2(0,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.2332227826118469,-0.0284878704696894,-0.3023777306079865,-0.2995139956474304,-0.2314976751804352,0.0214060395956039,-0.0834021866321564,0.0851880982518196,-0.2304719239473343,-0.1238549500703812,-0.1049085557460785,-0.0193341635167599,0.2219447493553162,0.2046199440956116,-0.3574564456939697,0.0140718510374427) * MODEL24_texOff(vec2(0,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.2188393920660019,-0.4000800251960754,0.3918939530849457,-0.1298827826976776,0.1075959801673889,-0.1363613456487656,0.1831594705581665,0.2557156085968018,0.2268265485763550,0.2713584303855896,-0.2952989339828491,0.2925834357738495,0.0425545200705528,0.1138439401984215,0.1610191315412521,0.9559882283210754) * MODEL21_texOff(vec2(0,0));
[ 397.817][d][vo/gpu-next/libplacebo] [128] res += mat4(0.0744557380676270,0.2223352193832397,0.0502287223935127,-0.2242146432399750,-0.1545594036579132,-0.2363180071115494,-0.1222988739609718,-0.6208294630050659,0.0146329915151000,-0.2016517817974091,0.1301292032003403,-0.2429598271846771,-0.2252487093210220,0.1148211881518364,-0.2663983106613159,0.0882013812661171) * MODEL22_texOff(vec2(0,0));
[ 397.817][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.3354397416114807,0.0556654334068298,-0.0877891853451729,-0.0723027586936951,-0.3086970150470734,-0.1458612978458405,0.4014125168323517,-0.3830009102821350,0.1983656138181686,0.0708551332354546,0.0551107563078403,-0.1499060690402985,-0.1816355586051941,0.5149498581886292,0.3547013998031616,-0.1821456700563431) * MODEL23_texOff(vec2(0,0));
[ 397.817][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0752305835485458,-0.5638636350631714,-0.1729134172201157,-0.1124454736709595,-0.2223979532718658,0.0704293176531792,0.0203290153294802,0.0351259820163250,-0.2848574817180634,-0.0418890938162804,0.0438340008258820,-0.0656529366970062,0.5115717649459839,-0.0562645904719830,-0.0825002789497375,0.2555425465106964) * MODEL24_texOff(vec2(0,0));
[ 397.817][d][vo/gpu-next/libplacebo] [131] res += mat4(0.2004646062850952,0.1638224869966507,-0.1880697011947632,0.1501211673021317,0.2122931629419327,-0.1741550713777542,-0.0958371013402939,0.2639476060867310,-0.0731826350092888,0.1258066147565842,-0.0688803344964981,0.0180414430797100,-0.1551354229450226,-0.5502672791481018,-0.1077943965792656,0.3587292730808258) * MODEL21_texOff(vec2(0,1));
[ 397.817][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.1024796217679977,0.0117322364822030,0.0363092422485352,-0.3492212295532227,-0.1270268261432648,0.3700734972953796,0.1422414183616638,0.2052343189716339,0.0445701442658901,0.2266556620597839,-0.0094319209456444,-0.2695310413837433,0.0328722782433033,0.0661893486976624,0.0490676239132881,-0.0614571534097195) * MODEL22_texOff(vec2(0,1));
[ 397.817][d][vo/gpu-next/libplacebo] [133] res += mat4(0.0252579115331173,-0.0622757449746132,-0.1155191510915756,0.0095673762261868,0.2282947450876236,-0.1837289184331894,0.2098618000745773,0.2425164282321930,0.2071875333786011,-0.0423258654773235,0.1215800791978836,-0.2211700975894928,0.2533731460571289,-0.2642615139484406,-0.1669356822967529,-0.0271653756499290) * MODEL23_texOff(vec2(0,1));
[ 397.817][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.3783554732799530,-0.2213269472122192,0.0566003434360027,0.1069133505225182,-0.1928440928459167,0.0262646768242121,0.1139844879508018,-0.0577131509780884,0.0568569041788578,0.0130691332742572,-0.0964337214827538,0.0457795709371567,0.0341121889650822,-0.2546681463718414,0.1275185793638229,0.2017956674098969) * MODEL24_texOff(vec2(0,1));
[ 397.817][d][vo/gpu-next/libplacebo] [135] res += mat4(0.0119640482589602,-0.0166406221687794,-0.0355323478579521,0.1206061542034149,-0.1953788399696350,-0.1345187425613403,-0.2710676789283752,0.2432325333356857,-0.0854752436280251,-0.0748339444398880,0.0688332170248032,0.0879098773002625,0.0928065180778503,-0.0478774271905422,-0.0570105016231537,0.1914014518260956) * MODEL21_texOff(vec2(1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0327945612370968,0.1210531443357468,0.0604318268597126,-0.1682498455047607,-0.1201471760869026,0.2245749533176422,-0.1314784586429596,-0.1008907631039619,-0.1534835845232010,-0.1206128746271133,-0.2142660170793533,-0.0132634229958057,-0.1433206051588058,0.2265839576721191,0.0331619083881378,-0.2093234360218048) * MODEL22_texOff(vec2(1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0044715465046465,-0.0260666087269783,0.1467585265636444,0.0128453513607383,-0.0823976099491119,-0.1707710772752762,-0.1588797867298126,-0.0293543972074986,-0.1192563101649284,-0.0611195191740990,0.0718725472688675,0.0444633997976780,0.0957413017749786,-0.1960238367319107,0.0240818299353123,-0.0480349957942963) * MODEL23_texOff(vec2(1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.2847678363323212,0.0091180726885796,-0.1650844961404800,0.0283044185489416,0.0206628590822220,-0.0847065672278404,-0.1033711507916451,-0.0802335217595100,-0.0624029077589512,-0.1719952672719955,0.0336383692920208,-0.0817446112632751,-0.0043347869068384,0.1867621392011642,0.0502996183931828,-0.1201890036463737) * MODEL24_texOff(vec2(1,-1));
[ 397.817][d][vo/gpu-next/libplacebo] [139] res += mat4(0.0815731957554817,-0.0435508787631989,-0.2562917470932007,0.0064125405624509,-0.0461699366569519,0.1964033395051956,-0.1910998821258545,-0.2282165735960007,-0.0438480488955975,-0.0490582957863808,0.0264722630381584,-0.1659971177577972,0.1226257011294365,0.1581728756427765,-0.4247716665267944,-0.4316994845867157) * MODEL21_texOff(vec2(1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [140] res += mat4(0.0344251990318298,0.1876997798681259,-0.1417787224054337,-0.0529508665204048,0.0177888758480549,0.0026195631362498,0.3623940646648407,0.1907893270254135,-0.0366006568074226,0.2961347401142120,0.0108891669660807,0.0844657123088837,-0.2957761287689209,-0.0912782400846481,0.0340089388191700,0.1253420263528824) * MODEL22_texOff(vec2(1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [141] res += mat4(0.1044647991657257,-0.1127108111977577,0.0742520391941071,0.0639538839459419,-0.1364147365093231,-0.0278452411293983,-0.1399204432964325,0.2784890234470367,-0.2201107293367386,0.0014376422623172,0.1261498481035233,-0.1247041970491409,-0.2303806096315384,0.0425361022353172,-0.0960937961935997,-0.1815907955169678) * MODEL23_texOff(vec2(1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.3495737016201019,0.0595081597566605,-0.3192266225814819,0.0244316663593054,-0.2647269666194916,0.0243924595415592,-0.4993122220039368,-0.0915616005659103,0.1351604163646698,-0.1538936793804169,-0.2260099053382874,-0.1273860484361649,-0.2565363049507141,-0.0097459377720952,-0.0185106173157692,-0.0524045601487160) * MODEL24_texOff(vec2(1,0));
[ 397.817][d][vo/gpu-next/libplacebo] [143] res += mat4(0.0769963115453720,-0.0613472089171410,-0.1491233408451080,-0.1099350675940514,0.0587296374142170,0.0251194182783365,0.1328753679990768,-0.0452027060091496,0.2108579874038696,0.0305243916809559,0.0046890387311578,-0.2101819813251495,-0.1994265615940094,0.1010351628065109,0.5569025278091431,-0.3144665062427521) * MODEL21_texOff(vec2(1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0655505955219269,0.0596943497657776,-0.1898400634527206,-0.0669943019747734,0.0620926916599274,-0.2699524760246277,-0.0210326462984085,-0.0196340642869473,-0.1571995764970779,-0.2119420468807220,-0.3458395898342133,0.2174158841371536,0.0422618687152863,-0.1147909015417099,0.1503390669822693,0.0818282887339592) * MODEL22_texOff(vec2(1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0324207395315170,-0.0160288829356432,0.1019040495157242,-0.0971354469656944,0.1254110783338547,0.0815148353576660,-0.0040160370990634,-0.2318838685750961,-0.0448244623839855,-0.3475115001201630,0.1322139948606491,0.1248756125569344,0.2238789945840836,0.2239783704280853,0.1129583045840263,0.1411372721195221) * MODEL23_texOff(vec2(1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.2598690688610077,-0.0924480780959129,0.2330809831619263,-0.0699106231331825,-0.0901900753378868,0.0221884120255709,-0.0161387491971254,-0.0535962954163551,-0.0453197881579399,-0.0677262395620346,-0.1407030820846558,-0.0269491802901030,-0.1986681818962097,-0.1218583211302757,0.2581350803375244,-0.1032286882400513) * MODEL24_texOff(vec2(1,1));
[ 397.817][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.1444300115108490,0.0811698511242867,0.2380373775959015,-0.0551525354385376) * min(res, vec4(0.0));
[ 397.817][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.817][d][vo/gpu-next/libplacebo] [149] }
[ 397.817][d][vo/gpu-next/libplacebo] [150] 
[ 397.817][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.817][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.817][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.817][d][vo/gpu-next/libplacebo] [154] }
[ 397.817][d][vo/gpu-next/libplacebo] [155] 
[ 397.817][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.817][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.817][d][vo/gpu-next/libplacebo] [158] }
[ 397.817][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.817][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.817][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.817][d][vo/gpu-next] cache_load_obj: key(4218bf44e3cb9f84), size(20692), load time(0.160 ms)
[ 397.817][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x4218bf44e3cb9f84
[ 397.818][d][vo/gpu-next] cache_load_obj: key(749dafedcd24e004), size(27306), load time(0.152 ms)
[ 397.818][d][vo/gpu-next/libplacebo] Spent 0.026 ms compiling shader
[ 397.818][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.818][d][vo/gpu-next] cache_save_obj: key(4218bf44e3cb9f84), size(20692)
[ 397.818][d][vo/gpu-next/libplacebo] Spent 0.111 ms creating pipeline
[ 397.818][d][vo/gpu-next] cache_save_obj: key(749dafedcd24e004), size(27306)
[ 397.818][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.818][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.818][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.818][d][vo/gpu-next/libplacebo] Spent 0.090 ms allocating slab
[ 397.818][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.818][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.818][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.818][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.818][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.818][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.818][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.818][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.818][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.818][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.818][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.818][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.818][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.818][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.818][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.818][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.818][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.818][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.818][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.818][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.818][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.818][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.818][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.818][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.818][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.818][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.818][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.818][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.818][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.818][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.818][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.818][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.818][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.818][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.818][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.818][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.818][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.818][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.818][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.818][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.818][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.818][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.818][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.818][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.818][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.818][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.818][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.818][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.818][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.818][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.818][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.818][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.818][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.818][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.818][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.818][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.818][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.818][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.818][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.818][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.818][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.818][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.818][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.818][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.818][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.818][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.818][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.818][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.818][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.818][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.818][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.818][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.818][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.818][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.818][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.818][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.818][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.818][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.818][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.818][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.818][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.818][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.818][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.818][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.818][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.818][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.818][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.818][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.818][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.818][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.818][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.818][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.818][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.818][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.818][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.818][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.818][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.818][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.818][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.818][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.818][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.818][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.818][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.818][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.818][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.818][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.818][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.818][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.818][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.818][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.818][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.818][d][vo/gpu-next/libplacebo] [105] }
[ 397.818][d][vo/gpu-next/libplacebo] [106] 
[ 397.818][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.818][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.818][d][vo/gpu-next/libplacebo] [109] {
[ 397.818][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.0080647552385926,-0.0841037333011627,-0.0345347858965397,-0.0046435240656137);
[ 397.818][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0514949448406696,-0.0195349659770727,-0.0553774349391460,0.0636545792222023,0.1359733939170837,-0.1403330415487289,-0.1598486304283142,0.0592918619513512,-0.0407843701541424,-0.3072011172771454,-0.1158820018172264,-0.0578623302280903,-0.1388145834207535,-0.0434607192873955,0.0151221435517073,0.0283437091857195) * MODEL21_texOff(vec2(-1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0148447081446648,-0.0011291034752503,0.0435503832995892,-0.0598094686865807,-0.0511103533208370,-0.0365611836314201,0.0455631166696548,0.0867569372057915,0.0477958917617798,0.0855460390448570,0.0229050423949957,-0.0388118885457516,-0.0507727414369583,0.1061691641807556,0.1198279187083244,0.0848968774080276) * MODEL22_texOff(vec2(-1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.0069508175365627,-0.1228519231081009,0.0253262501209974,-0.0378559790551662,0.1467339247465134,-0.1158478483557701,-0.1068108901381493,0.0627379044890404,-0.2429156601428986,-0.0409935936331749,-0.1167572066187859,0.1767156422138214,-0.1341967582702637,0.0469993613660336,0.0547994934022427,0.1689712703227997) * MODEL23_texOff(vec2(-1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.0820880457758904,0.0399885736405849,-0.0981159806251526,-0.1002681255340576,-0.1290888786315918,0.0368873812258244,-0.1092253178358078,0.0073415748775005,-0.0934184119105339,0.0151069313287735,-0.0192732363939285,0.0380824320018291,-0.0613358244299889,0.1173662766814232,0.1313189268112183,-0.0921110212802887) * MODEL24_texOff(vec2(-1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [115] res += mat4(0.0098996255546808,0.0312625244259834,-0.1832284927368164,0.1066081672906876,-0.0402730740606785,-0.0942633822560310,-0.1069478467106819,-0.1148846298456192,0.0798483416438103,-0.0506768226623535,-0.4664174318313599,-0.1142466217279434,0.1528352797031403,0.1847205907106400,-0.0349850691854954,-0.0741918385028839) * MODEL21_texOff(vec2(-1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [116] res += mat4(0.1102754846215248,-0.1074369102716446,-0.0651983171701431,0.0699046328663826,-0.0759588181972504,0.1463358849287033,-0.0985756441950798,0.0231575872749090,0.0208139587193727,-0.0964017882943153,-0.0419954620301723,0.0635820031166077,-0.3484080433845520,0.1240990608930588,-0.0308482125401497,0.0729894787073135) * MODEL22_texOff(vec2(-1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [117] res += mat4(0.2594768404960632,0.1165392622351646,-0.2245630919933319,-0.0496957376599312,-0.1046951040625572,0.1734437793493271,-0.0652893185615540,-0.0092790275812149,0.1586924642324448,0.1640542000532150,0.0196580439805984,-0.1081535294651985,0.0077492995187640,0.0407850369811058,-0.1291919499635696,0.1519178301095963) * MODEL23_texOff(vec2(-1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [118] res += mat4(0.1029526740312576,0.0660485774278641,0.1212314814329147,0.1897536814212799,0.0002048090100288,0.0255673751235008,-0.1060385853052139,0.0200774837285280,0.0062124803662300,0.0234904885292053,0.1536596268415451,-0.0485081151127815,-0.0124538373202085,0.1555083692073822,0.1307172477245331,0.0596063323318958) * MODEL24_texOff(vec2(-1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [119] res += mat4(0.1274900883436203,-0.0615960955619812,-0.0011545824818313,0.0187249369919300,-0.0517742522060871,-0.1474293470382690,-0.1384572833776474,-0.1142253652215004,-0.1599780023097992,-0.0045510027557611,0.0537799969315529,-0.0989719927310944,0.0614120811223984,-0.0065263318829238,0.0731932893395424,0.1176574006676674) * MODEL21_texOff(vec2(-1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [120] res += mat4(0.0679059028625488,0.0489907935261726,-0.0386480204761028,-0.0088006509467959,-0.1278632283210754,0.1026496812701225,0.2393069267272949,-0.1442947536706924,-0.1121301352977753,0.0131147149950266,0.0134216891601682,0.0449649542570114,0.0013345155166462,0.1510204374790192,0.0867359489202499,-0.0340320803225040) * MODEL22_texOff(vec2(-1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [121] res += mat4(0.1385339349508286,-0.0126309562474489,-0.0248520635068417,0.1041667088866234,-0.0101676015183330,-0.1773101538419724,-0.0992127656936646,-0.0877092033624649,-0.0962495133280754,-0.1400426775217056,0.0448617413640022,-0.0215080231428146,-0.0798614248633385,-0.0013233533827588,0.1995851993560791,-0.0098537430167198) * MODEL23_texOff(vec2(-1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.1314268857240677,0.0883787870407104,-0.1828433722257614,-0.0209707003086805,-0.0505778789520264,-0.1624096632003784,-0.0147311268374324,0.0453269891440868,-0.0248489864170551,-0.0089180208742619,-0.1016742363572121,0.0179600268602371,-0.0403063930571079,-0.0572606474161148,-0.0667501166462898,0.0397375524044037) * MODEL24_texOff(vec2(-1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.0810762420296669,0.0391263812780380,0.0641367137432098,0.0243103150278330,0.1766536235809326,-0.1969371587038040,0.2263849824666977,-0.0404553413391113,0.2390791475772858,-0.1145247817039490,-0.2748443782329559,-0.0572190880775452,0.0838880538940430,0.0736846774816513,0.0232369992882013,-0.0087333582341671) * MODEL21_texOff(vec2(0,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.0308689922094345,0.0805446729063988,0.0669609010219574,-0.1240565553307533,0.1614721864461899,-0.0397229865193367,-0.0074304589070380,0.1271419525146484,-0.0677013546228409,-0.1385257840156555,-0.0751412287354469,-0.1304943710565567,0.0683621093630791,-0.1514931470155716,0.0028100861236453,0.1105734407901764) * MODEL22_texOff(vec2(0,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.3092923462390900,-0.1926667094230652,-0.0141210667788982,0.2251794189214706,-0.1781981587409973,-0.4085194170475006,0.0880601853132248,-0.1117141172289848,0.3235633969306946,-0.0803129822015762,0.1887630671262741,-0.0385875925421715,0.1798022836446762,-0.0534458346664906,-0.1295908242464066,-0.0777843520045280) * MODEL23_texOff(vec2(0,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [126] res += mat4(0.2058505564928055,0.0038056622724980,-0.0336683429777622,0.0005303425132297,0.0219732206314802,0.0916120633482933,0.3742682337760925,-0.1028247624635696,-0.0757900401949883,0.0623364672064781,0.1084700226783752,-0.0482954978942871,0.0384275987744331,-0.3698539733886719,0.1275842338800430,-0.1164079979062080) * MODEL24_texOff(vec2(0,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [127] res += mat4(0.3891098201274872,0.3280866146087646,0.1308258622884750,-0.1806241273880005,-0.4164046347141266,-0.0303141847252846,0.1112162321805954,0.0804532319307327,-0.0049474453553557,-0.1725915819406509,-0.2230628728866577,-0.0468336455523968,-0.1930345594882965,0.0530356168746948,0.2353114038705826,-0.0930669531226158) * MODEL21_texOff(vec2(0,0));
[ 397.818][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.0894790366292000,0.1346593797206879,0.0954394042491913,0.1908129006624222,0.3153880834579468,-0.0197620224207640,0.0351910144090652,0.2379240691661835,0.1635813415050507,-0.2503397762775421,0.3663334846496582,0.3794072866439819,0.1699618399143219,-0.1566538512706757,-0.1967535763978958,-0.0601752363145351) * MODEL22_texOff(vec2(0,0));
[ 397.818][d][vo/gpu-next/libplacebo] [129] res += mat4(0.1261692494153976,0.1984932720661163,0.1669745743274689,0.3550611138343811,0.0926000624895096,0.3854622840881348,0.1828416436910629,-0.1837217211723328,-0.2419044226408005,0.1508911252021790,0.2734063565731049,-0.1536229699850082,-0.1761455088853836,-0.0087679559364915,-0.0522777661681175,0.2335962653160095) * MODEL23_texOff(vec2(0,0));
[ 397.818][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0700223445892334,-0.1252374947071075,0.1610522121191025,-0.0097315898165107,0.0193566624075174,0.4243805408477783,0.0916870310902596,-0.0976453423500061,0.1068030819296837,0.1044174805283546,0.0876776054501534,-0.0678445622324944,-0.1056139394640923,0.2123496681451797,-0.2564689218997955,-0.4195530712604523) * MODEL24_texOff(vec2(0,0));
[ 397.818][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.0280200876295567,0.1511713862419128,0.0646780878305435,0.1197788268327713,-0.0558574721217155,0.1370699554681778,-0.0261533521115780,-0.0355304442346096,-0.0121172796934843,-0.1500239223241806,0.0736288055777550,-0.0704763978719711,-0.0033017182722688,-0.1623643189668655,-0.1167406141757965,0.0434451103210449) * MODEL21_texOff(vec2(0,1));
[ 397.818][d][vo/gpu-next/libplacebo] [132] res += mat4(0.0401437804102898,0.0103358523920178,-0.0086319912225008,-0.0060997526161373,0.1433503031730652,-0.0325911603868008,-0.0835496336221695,-0.0093201883137226,0.0567993335425854,-0.0192108172923326,0.0510668270289898,0.1638691574335098,-0.0097630554810166,0.0808687806129456,-0.2234126031398773,0.1237059161067009) * MODEL22_texOff(vec2(0,1));
[ 397.818][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.0497405715286732,0.4061828851699829,-0.0815772265195847,0.1014231890439987,-0.0539616793394089,-0.0178455803543329,-0.0534149780869484,-0.1359462887048721,-0.2715366482734680,-0.0171669684350491,0.0495530515909195,-0.2839536964893341,0.0072996304370463,-0.2958453595638275,0.0515479855239391,-0.1211838126182556) * MODEL23_texOff(vec2(0,1));
[ 397.818][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.0477132201194763,-0.2299161255359650,0.0444511510431767,-0.0433127358555794,-0.1203790009021759,-0.2645773887634277,0.0285142175853252,-0.1575172841548920,0.0052798818796873,0.0491629466414452,0.0538714528083801,0.0105630606412888,-0.2005243599414825,-0.0291840154677629,0.0889622941613197,0.0987731963396072) * MODEL24_texOff(vec2(0,1));
[ 397.818][d][vo/gpu-next/libplacebo] [135] res += mat4(0.1197669059038162,-0.0475662164390087,0.0277559943497181,-0.0130590777844191,-0.1289554685354233,0.0296635199338198,0.0097988396883011,0.0873291045427322,0.3005311191082001,-0.0435284301638603,-0.0710076913237572,-0.0204364862293005,-0.0553197301924229,-0.0373280048370361,0.2277362346649170,-0.0861263275146484) * MODEL21_texOff(vec2(1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0555090308189392,-0.0903691351413727,0.1263573616743088,-0.0148489847779274,-0.0930994451045990,-0.0715782493352890,0.1449358016252518,-0.0363432206213474,-0.1212989315390587,0.0707705989480019,-0.0273582674562931,-0.0371941514313221,-0.0268990211188793,-0.0671620443463326,0.0596896111965179,-0.1522596776485443) * MODEL22_texOff(vec2(1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0652994811534882,0.0613018907606602,-0.0920564010739326,-0.0111955646425486,-0.0735834836959839,-0.0622859746217728,0.0051317238248885,0.1026467084884644,0.2248782068490982,-0.2628534138202667,0.1386217027902603,0.2451450377702713,0.0580524057149887,0.0073491157963872,0.0677551999688148,-0.0949436277151108) * MODEL23_texOff(vec2(1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [138] res += mat4(0.1321496218442917,-0.1297107636928558,0.1155429109930992,-0.0295177418738604,0.0626711621880531,-0.1081474721431732,0.2189140319824219,-0.0366330407559872,-0.0326425880193710,-0.0161970276385546,0.0265044234693050,-0.1087529137730598,-0.0190447792410851,-0.0556839294731617,-0.0329553820192814,-0.0108529813587666) * MODEL24_texOff(vec2(1,-1));
[ 397.818][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.1958976984024048,0.0969740152359009,0.0059621138498187,0.0309026166796684,-0.0737855210900307,-0.0605157762765884,0.0024988783989102,0.0126573219895363,0.0024309405125678,-0.0003274893388152,-0.0742101520299911,0.0544909201562405,-0.1171734780073166,0.1395827829837799,0.0226303096860647,0.0079891812056303) * MODEL21_texOff(vec2(1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [140] res += mat4(0.0991575717926025,-0.1500251591205597,0.0912138298153877,-0.0181505177170038,0.0323859006166458,0.2241065204143524,0.0743701830506325,-0.0856274142861366,0.0043774787336588,-0.0071415719576180,0.0017607586923987,-0.1086246892809868,0.2278621792793274,0.0901101455092430,0.0535765513777733,-0.0699984803795815) * MODEL22_texOff(vec2(1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0750623196363449,-0.0142483720555902,-0.0178784951567650,-0.0584332495927811,0.0574056766927242,0.0759046524763107,-0.0362865030765533,-0.0462523102760315,0.0687225088477135,-0.2080455422401428,-0.2318178564310074,-0.0726642087101936,0.3167002797126770,-0.0767177045345306,-0.0881855860352516,0.0590229481458664) * MODEL23_texOff(vec2(1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [142] res += mat4(0.0470520406961441,-0.1462315022945404,-0.0328058786690235,-0.2542710304260254,0.2595972716808319,-0.1078024283051491,-0.1181910112500191,-0.0611724667251110,-0.0948545932769775,-0.1300699114799500,0.0877934992313385,0.0825444981455803,-0.3653071522712708,-0.1159569695591927,-0.0348262637853622,-0.0957687422633171) * MODEL24_texOff(vec2(1,0));
[ 397.818][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.1683560609817505,0.0030932726804167,-0.1647853255271912,-0.0003509002272040,-0.0667054951190948,0.2200130373239517,-0.0516811013221741,0.0292137525975704,0.1835822612047195,-0.1109995171427727,0.2086427807807922,-0.0209745895117521,0.1276083141565323,-0.0533435083925724,-0.0032425487879664,0.0683360919356346) * MODEL21_texOff(vec2(1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0462751165032387,-0.0867139026522636,0.1111874580383301,0.0935514271259308,-0.0098298648372293,-0.0845700725913048,-0.0734221562743187,0.0857466235756874,0.1406754255294800,0.3167072832584381,-0.0067550130188465,0.0106154913082719,0.0347389988601208,0.0685004144906998,-0.1983510255813599,0.0179250929504633) * MODEL22_texOff(vec2(1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.0650234594941139,-0.0160508323460817,-0.0538002699613571,0.1724233031272888,-0.1072816923260689,0.0411335118114948,0.1160629838705063,0.0208706408739090,-0.1902277618646622,-0.0401286408305168,-0.0157187841832638,-0.0060412869788706,-0.0393065437674522,-0.2020249962806702,-0.0220919791609049,-0.2004323154687881) * MODEL23_texOff(vec2(1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [146] res += mat4(0.2424288094043732,0.1329905688762665,-0.0055388659238815,0.0238363780081272,0.1207244470715523,-0.0005906071164645,0.0595789365470409,-0.0554966293275356,-0.0188664458692074,0.0597569830715656,-0.1265683621168137,0.0122258746996522,0.0602672174572945,-0.1920576542615891,-0.2333943396806717,-0.1313648521900177) * MODEL24_texOff(vec2(1,1));
[ 397.818][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.3445472419261932,0.5009695887565613,0.1661557108163834,1.1569869518280029) * min(res, vec4(0.0));
[ 397.818][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.818][d][vo/gpu-next/libplacebo] [149] }
[ 397.818][d][vo/gpu-next/libplacebo] [150] 
[ 397.818][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.818][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.818][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.818][d][vo/gpu-next/libplacebo] [154] }
[ 397.818][d][vo/gpu-next/libplacebo] [155] 
[ 397.818][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.818][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.818][d][vo/gpu-next/libplacebo] [158] }
[ 397.818][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.818][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.818][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.818][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.818][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.819][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.819][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.819][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.819][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.819][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.819][d][vo/gpu-next] cache_load_obj: key(6e1f4aa3958b3b02), size(20692), load time(0.160 ms)
[ 397.819][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x6e1f4aa3958b3b02
[ 397.819][d][vo/gpu-next] cache_load_obj: key(3bbb7a635b49379d), size(27300), load time(0.162 ms)
[ 397.819][d][vo/gpu-next/libplacebo] Spent 0.025 ms compiling shader
[ 397.819][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.819][d][vo/gpu-next] cache_save_obj: key(6e1f4aa3958b3b02), size(20692)
[ 397.819][d][vo/gpu-next/libplacebo] Spent 0.107 ms creating pipeline
[ 397.819][d][vo/gpu-next] cache_save_obj: key(3bbb7a635b49379d), size(27300)
[ 397.819][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.819][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.819][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.819][d][vo/gpu-next/libplacebo] Spent 0.063 ms allocating slab
[ 397.819][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.819][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.819][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.819][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.819][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.819][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.819][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.819][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.819][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.819][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.819][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.819][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.819][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.819][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.819][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.819][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.819][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.819][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.819][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.819][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.819][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.819][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.819][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.819][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.819][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.819][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.819][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.819][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.819][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.819][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.819][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.819][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.819][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.819][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.819][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.819][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.819][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.819][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.819][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.819][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.819][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.819][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.819][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.819][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.819][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.819][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.819][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.819][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.819][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.819][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.819][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.819][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.819][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.819][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.819][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.819][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.819][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.819][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.819][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.819][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.819][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.819][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.819][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.819][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.819][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.819][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.819][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.819][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.819][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.819][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.819][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.819][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.819][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.819][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.819][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.819][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.819][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.819][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.819][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.819][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.819][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.819][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.819][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.819][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.819][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.819][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.819][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.819][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.819][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.819][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.819][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.819][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.819][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.819][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.819][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.819][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.819][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.819][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.819][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.819][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.819][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.819][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.819][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.819][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.819][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.819][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.819][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.819][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.819][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.819][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.819][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.819][d][vo/gpu-next/libplacebo] [105] }
[ 397.819][d][vo/gpu-next/libplacebo] [106] 
[ 397.819][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.819][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.819][d][vo/gpu-next/libplacebo] [109] {
[ 397.819][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.0030431493651122,0.0772903189063072,-0.0187399759888649,-0.0710480436682701);
[ 397.819][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0630776658654213,-0.0156661290675402,-0.0405465587973595,-0.0338476225733757,-0.0282611027359962,0.2571686506271362,0.1697734296321869,-0.0872390717267990,0.0397485978901386,0.3090895414352417,-0.3134531676769257,-0.1192939057946205,0.2721681594848633,-0.0167478378862143,-0.1397513300180435,-0.0548031628131866) * MODEL21_texOff(vec2(-1,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.1318342983722687,-0.0501545593142509,0.1291329711675644,-0.1016503497958183,0.1012440845370293,0.0461882278323174,0.1797344982624054,0.1079239994287491,-0.0815896093845367,0.0929149240255356,-0.0424860119819641,0.1146970540285110,-0.1831907033920288,-0.0413108095526695,-0.0068255756050348,-0.0800214409828186) * MODEL22_texOff(vec2(-1,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [113] res += mat4(0.0877645313739777,-0.1072989180684090,-0.2200396656990051,-0.0037374580278993,-0.0790953487157822,0.0755271315574646,0.0474142432212830,-0.0773731768131256,-0.0099691189825535,-0.3477037847042084,0.0682063102722168,0.1483027487993240,0.0829065367579460,0.1553632915019989,0.1872977912425995,0.1587218940258026) * MODEL23_texOff(vec2(-1,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.1909448504447937,-0.1900620609521866,0.0080121280625463,0.0393090993165970,0.0565608181059361,-0.0137943392619491,0.1410759538412094,-0.1537460386753082,0.1233773529529572,0.1025700196623802,-0.0166660584509373,-0.0503131486475468,-0.0601725652813911,0.2112258076667786,-0.1001082658767700,-0.1376190185546875) * MODEL24_texOff(vec2(-1,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [115] res += mat4(0.0971400663256645,0.0190913230180740,0.0646057352423668,0.0170308649539948,-0.0416023842990398,0.1902754008769989,0.0793102532625198,0.0713693052530289,-0.0401241183280945,0.1678720116615295,0.0291440747678280,0.0524650253355503,-0.1040422320365906,-0.0104328989982605,-0.1395813226699829,-0.0404534190893173) * MODEL21_texOff(vec2(-1,0));
[ 397.819][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.1533539742231369,-0.0675712078809738,0.1737787276506424,0.0134361702948809,0.0524101257324219,0.1048178821802139,-0.1665556132793427,0.0876842513680458,0.0705502256751060,-0.2661143839359283,0.2847896218299866,-0.1311216503381729,0.0924764275550842,0.1106167882680893,0.0937874242663383,-0.0774846002459526) * MODEL22_texOff(vec2(-1,0));
[ 397.819][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.4562861919403076,-0.1734165996313095,0.3422911465167999,-0.1925340294837952,0.0327902697026730,-0.2392490506172180,-0.1206030473113060,-0.2357721775770187,0.2271317094564438,-0.0530497878789902,0.0483286269009113,0.1063277050852776,0.0199932400137186,0.1523556411266327,0.1057730913162231,-0.2196847349405289) * MODEL23_texOff(vec2(-1,0));
[ 397.819][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.0489124208688736,-0.2881653308868408,0.0520398281514645,-0.3342506587505341,0.1777028590440750,0.0881835371255875,-0.1338129043579102,-0.0686874762177467,-0.0218005832284689,0.1372035145759583,-0.0582883283495903,0.1006423830986023,-0.0772568359971046,0.1407227367162704,0.0833180919289589,-0.0681120976805687) * MODEL24_texOff(vec2(-1,0));
[ 397.819][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.0371689051389694,0.0473397299647331,-0.1643261909484863,-0.1036504954099655,0.1803442537784576,0.1943777352571487,-0.1918847560882568,0.1054074317216873,-0.1592989861965179,0.2840387523174286,-0.0867500007152557,0.1634681671857834,-0.1577144116163254,0.0861068814992905,0.2544870674610138,-0.0183504782617092) * MODEL21_texOff(vec2(-1,1));
[ 397.819][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.1120471283793449,0.1204055920243263,-0.1750146299600601,-0.0942561253905296,-0.1838751435279846,0.0039609898813069,-0.0777691304683685,-0.0518617704510689,0.0514143742620945,-0.1477667987346649,-0.1996971368789673,-0.0032348544336855,0.2509424686431885,0.1136791333556175,0.0888099968433380,-0.0837909355759621) * MODEL22_texOff(vec2(-1,1));
[ 397.819][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0687133818864822,-0.0270413793623447,-0.0664285942912102,0.1152484267950058,-0.1331844180822372,0.0738074481487274,-0.0529414154589176,0.0388907752931118,0.0105007681995630,-0.1075217947363853,-0.0450529195368290,0.1841222643852234,0.0399711728096008,-0.0444593094289303,-0.1561354696750641,-0.0107559710741043) * MODEL23_texOff(vec2(-1,1));
[ 397.819][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0619415044784546,-0.0867511779069901,0.0338320508599281,-0.0743320137262344,0.1069674417376518,0.0521016456186771,0.0078780241310596,0.0025270218029618,0.1670740693807602,-0.0574002750217915,-0.0644577816128731,-0.0374347269535065,0.2109401673078537,-0.1343586444854736,0.3885019421577454,0.0634160861372948) * MODEL24_texOff(vec2(-1,1));
[ 397.819][d][vo/gpu-next/libplacebo] [123] res += mat4(0.0501961298286915,-0.1200719699263573,0.0870017856359482,0.0603387542068958,-0.0298256073147058,0.1005835160613060,0.2436549365520477,-0.1746886372566223,-0.1640983670949936,0.2111585140228271,-0.1956101059913635,-0.1028593182563782,0.0658186301589012,0.0651919320225716,-0.0343937613070011,0.2783910036087036) * MODEL21_texOff(vec2(0,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.3140862882137299,0.1927280873060226,0.0866174399852753,-0.0778658464550972,0.1708843410015106,-0.0771798267960548,0.2387497276067734,-0.0273820459842682,-0.0269722994416952,-0.1322530508041382,0.0175024475902319,-0.1998025774955750,-0.0956034064292908,-0.0310876704752445,0.0397771485149860,0.1369255781173706) * MODEL22_texOff(vec2(0,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.0654354989528656,-0.1777599751949310,-0.0638939961791039,0.0176162496209145,-0.1511016637086868,-0.0689900889992714,0.0882042497396469,-0.0371526740491390,-0.1841539293527603,-0.1932286024093628,0.0439552105963230,-0.1088663786649704,0.1958499252796173,-0.0090533858165145,-0.0804488509893417,-0.2405947297811508) * MODEL23_texOff(vec2(0,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.0707487538456917,0.1211814880371094,0.1198588982224464,0.2254535555839539,-0.3664198517799377,0.0149808581918478,0.1507129222154617,0.0658811405301094,-0.0454952195286751,0.0809907317161560,-0.0207222849130630,0.0306631941348314,-0.0945806577801704,0.5358731746673584,-0.1865912377834320,-0.0853623002767563) * MODEL24_texOff(vec2(0,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.0068992790766060,-0.2202512770891190,0.2473269402980804,0.2424443066120148,0.0678144246339798,-0.0401034764945507,0.1286835521459579,-0.0863844081759453,-0.1350753158330917,0.2628782093524933,-0.2170456498861313,-0.1734984964132309,-0.0481674820184708,-0.0981746390461922,0.0421205833554268,-0.0737363696098328) * MODEL21_texOff(vec2(0,0));
[ 397.819][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.4458754956722260,0.2320904284715652,-0.2159235626459122,0.1026738286018372,-0.0899752750992775,-0.1010135710239410,0.1128966957330704,-0.1413348764181137,0.2127014994621277,-0.1384209841489792,0.3861987590789795,0.1806972175836563,-0.2717109322547913,-0.0117673911154270,0.0094319004565477,-0.0842245742678642) * MODEL22_texOff(vec2(0,0));
[ 397.819][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.0710214599967003,-0.2646472752094269,0.3271702826023102,-0.0116354534402490,0.1118489429354668,-0.1219298616051674,0.2625328600406647,0.0976289808750153,-0.0211406741291285,0.2269163727760315,-0.3161485791206360,0.0318164750933647,-0.0988205298781395,0.1295432895421982,-0.2902800440788269,-0.0250033866614103) * MODEL23_texOff(vec2(0,0));
[ 397.819][d][vo/gpu-next/libplacebo] [130] res += mat4(0.0538521185517311,0.2303918153047562,-0.2087893038988113,-0.1191865280270576,0.1073722541332245,0.2815416157245636,-0.4466392695903778,0.1729597598314285,-0.0806390196084976,0.0974340066313744,0.0412844642996788,0.0934070646762848,-0.2061768174171448,0.3713734745979309,-0.2771237194538116,-0.0733152255415916) * MODEL24_texOff(vec2(0,0));
[ 397.819][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.2342527806758881,0.2152005285024643,-0.9918748736381531,0.0716865509748459,0.1332143396139145,0.0464978255331516,0.0156143531203270,0.0680264607071877,0.1988355815410614,0.2622185945510864,0.1213267073035240,0.0733644366264343,0.0674474164843559,-0.1983297020196915,0.4473591446876526,0.0038960615638644) * MODEL21_texOff(vec2(0,1));
[ 397.819][d][vo/gpu-next/libplacebo] [132] res += mat4(0.0429526977241039,-0.1869587749242783,0.3420941233634949,0.0159873683005571,-0.1732455193996429,0.0663870424032211,-0.4592063724994659,0.1675552725791931,-0.1775226444005966,-0.0392234809696674,-0.0205797571688890,-0.1784932613372803,-0.0597243607044220,-0.1177468746900558,-0.2349186539649963,-0.1273561120033264) * MODEL22_texOff(vec2(0,1));
[ 397.819][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.0448911860585213,0.1577339321374893,-0.2254225760698318,-0.2669016122817993,0.1060085296630859,0.0358660109341145,-0.0641159713268280,0.0469578914344311,-0.0395580641925335,0.0783664286136627,0.0441224910318851,-0.1656036078929901,0.0572852380573750,-0.0544466562569141,0.2231283485889435,0.0226800777018070) * MODEL23_texOff(vec2(0,1));
[ 397.819][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0345212593674660,-0.1193191856145859,-0.0147288320586085,-0.0228357277810574,-0.0712287127971649,-0.1548950672149658,0.1131501048803329,0.2758660912513733,0.1175094470381737,0.0173021890223026,-0.1270108819007874,-0.0371842570602894,-0.0399581193923950,0.0659863948822021,0.3494960963726044,-0.0086737563833594) * MODEL24_texOff(vec2(0,1));
[ 397.819][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.0335569679737091,0.0071173124015331,-0.0009998778114095,-0.0385203212499619,-0.0934615582227707,0.0114846546202898,0.0765226408839226,-0.0114618586376309,-0.0940322130918503,0.0047848355025053,0.0587064437568188,-0.1494884043931961,-0.0957998186349869,0.2229097187519073,-0.1365591734647751,0.1728390902280807) * MODEL21_texOff(vec2(1,-1));
[ 397.819][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.0540218725800514,-0.0514514185488224,0.2101804465055466,0.1000214070081711,-0.0574509575963020,0.0025572804734111,-0.0489990860223770,-0.0471749305725098,-0.1490073055028915,0.0434097945690155,-0.1229142695665359,-0.0924522653222084,-0.0135353617370129,-0.2028246372938156,-0.0518477670848370,-0.1171858832240105) * MODEL22_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0107182841747999,0.0337228961288929,-0.1105274632573128,-0.1475829035043716,0.0133261531591415,0.1065121889114380,0.0082426089793444,-0.2667810320854187,0.0844890177249908,-0.1486541330814362,0.0867980420589447,0.1195300891995430,-0.0313152074813843,-0.0572645887732506,0.0448432601988316,0.1734046489000320) * MODEL23_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [138] res += mat4(0.1070856079459190,-0.0753303840756416,0.2330440729856491,-0.1275107264518738,-0.1892447024583817,-0.1256609559059143,0.0203174930065870,0.0638692900538445,0.1604100018739700,0.1361071467399597,-0.1208712756633759,0.0372305475175381,-0.0216135419905186,0.3578442931175232,-0.0904160887002945,-0.1445161849260330) * MODEL24_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.1140949055552483,-0.0271944291889668,0.0720798894762993,0.3108873367309570,0.0159123893827200,-0.1695712506771088,-0.0388168990612030,-0.0151515733450651,-0.2938031852245331,-0.0276262480765581,0.1338917165994644,0.1782743930816650,-0.0389479994773865,0.0772067606449127,-0.1261728405952454,-0.1045076549053192) * MODEL21_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0763762295246124,-0.0278123728930950,-0.1374498754739761,-0.1697828322649002,-0.2410329729318619,0.1508295089006424,0.0413833409547806,0.1830170899629593,-0.0568674616515636,-0.0395617298781872,0.1605635136365891,0.0000087269254436,0.0810096859931946,-0.0268836729228497,-0.0715123489499092,0.2257166355848312) * MODEL22_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [141] res += mat4(0.1129608973860741,-0.0652779489755630,0.0561135299503803,-0.0241573434323072,0.2499233037233353,-0.0439478345215321,0.1476396769285202,0.0974217057228088,-0.0241416357457638,0.3258978426456451,-0.4621813893318176,0.2320890128612518,-0.0672435089945793,-0.2067757397890091,-0.1430984586477280,0.0043349214829504) * MODEL23_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [142] res += mat4(0.1733620464801788,-0.1643370240926743,-0.0752913206815720,0.1347340345382690,0.0656896457076073,-0.2200115323066711,0.0169694535434246,0.0821862965822220,0.1015946939587593,0.0676483958959579,-0.0447810590267181,-0.0935861468315125,0.0426611825823784,0.1123342514038086,-0.0464628525078297,-0.2030570954084396) * MODEL24_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.1864038705825806,0.0165662989020348,-0.0488956682384014,-0.0153512852266431,-0.0235369224101305,-0.0145505843684077,-0.0173839498311281,-0.0907464250922203,-0.1201626285910606,-0.0603120923042297,0.0652821362018585,0.1012448891997337,0.0660736858844757,-0.1003770679235458,-0.0489336960017681,-0.2438687384128571) * MODEL21_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0179918128997087,-0.0821196064352989,0.0647374913096428,-0.0502499751746655,-0.1018071547150612,-0.0849481150507927,-0.0124103799462318,-0.1430548429489136,-0.0160008184611797,0.0973308309912682,-0.0397349707782269,-0.1339930444955826,-0.0672484040260315,-0.0252381637692451,-0.1431783586740494,-0.0629890337586403) * MODEL22_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [145] res += mat4(0.1128788292407990,0.1258686035871506,-0.0225039813667536,-0.0375239513814449,0.0782041102647781,0.1055922359228134,-0.0804623141884804,-0.0400073342025280,-0.1114902570843697,-0.0244016293436289,-0.2829777002334595,0.0664623826742172,-0.0593721196055412,-0.0822532996535301,0.2071786373853683,0.1521076112985611) * MODEL23_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [146] res += mat4(0.0217540506273508,-0.0713581293821335,0.0360375493764877,0.2302846163511276,0.0024009081535041,-0.0166059006005526,-0.0505350604653358,0.2255921661853790,0.0422000996768475,-0.0159002691507339,-0.0521200112998486,0.1306321918964386,0.0802961289882660,-0.0393662862479687,0.2799265086650848,-0.1570998281240463) * MODEL24_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.4090864360332489,-0.0040581431239843,-0.1866522729396820,0.5624378919601440) * min(res, vec4(0.0));
[ 397.820][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.820][d][vo/gpu-next/libplacebo] [149] }
[ 397.820][d][vo/gpu-next/libplacebo] [150] 
[ 397.820][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.820][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.820][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.820][d][vo/gpu-next/libplacebo] [154] }
[ 397.820][d][vo/gpu-next/libplacebo] [155] 
[ 397.820][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.820][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.820][d][vo/gpu-next/libplacebo] [158] }
[ 397.820][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.820][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.820][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.820][d][vo/gpu-next] cache_load_obj: key(b8ed0d3be279c2d4), size(20692), load time(0.155 ms)
[ 397.820][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb8ed0d3be279c2d4
[ 397.820][d][vo/gpu-next] cache_load_obj: key(ba8f007bd895c566), size(27280), load time(0.152 ms)
[ 397.820][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.820][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.820][d][vo/gpu-next] cache_save_obj: key(b8ed0d3be279c2d4), size(20692)
[ 397.820][d][vo/gpu-next/libplacebo] Spent 0.110 ms creating pipeline
[ 397.820][d][vo/gpu-next] cache_save_obj: key(ba8f007bd895c566), size(27280)
[ 397.820][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.820][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.820][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.820][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[ 397.820][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.820][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.820][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.820][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.820][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.820][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.820][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.820][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.820][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.820][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.820][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.820][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.820][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.820][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.820][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.820][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.820][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.820][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.820][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.820][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.820][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.820][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.820][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.820][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.820][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.820][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.820][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.820][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.820][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.820][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.820][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.820][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.820][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.820][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.820][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.820][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.820][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.820][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.820][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.820][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.820][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.820][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.820][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.820][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.820][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.820][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.820][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.820][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.820][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.820][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.820][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.820][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.820][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.820][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.820][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.820][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.820][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.820][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.820][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.820][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.820][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.820][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.820][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.820][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.820][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.820][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.820][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.820][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.820][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.820][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.820][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.820][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.820][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.820][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.820][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.820][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.820][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.820][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.820][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.820][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.820][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.820][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.820][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.820][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.820][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.820][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.820][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.820][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.820][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.820][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.820][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.820][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.820][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.820][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.820][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.820][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.820][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.820][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.820][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.820][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.820][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.820][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.820][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.820][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.820][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.820][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.820][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.820][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.820][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.820][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.820][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.820][d][vo/gpu-next/libplacebo] [105] }
[ 397.820][d][vo/gpu-next/libplacebo] [106] 
[ 397.820][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.820][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.820][d][vo/gpu-next/libplacebo] [109] {
[ 397.820][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0032819050829858,-0.0068913456052542,-0.0168672092258930,0.0562067702412605);
[ 397.820][d][vo/gpu-next/libplacebo] [111] res += mat4(0.1641025543212891,0.0313241854310036,0.0711381211876869,-0.0296631902456284,-0.1502986103296280,-0.1068164110183716,-0.0381608307361603,0.0092772999778390,-0.1527430117130280,-0.0560315959155560,0.0389505252242088,0.1343159675598145,-0.3100968301296234,-0.0691766440868378,-0.0174769628793001,-0.1137761622667313) * MODEL21_texOff(vec2(-1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [112] res += mat4(0.0161639191210270,0.1862726509571075,0.1988800466060638,-0.0224490389227867,-0.1546811759471893,-0.0656597539782524,0.1375859528779984,0.0102049289271235,0.2183663100004196,-0.0581316426396370,-0.0591496415436268,0.1198177635669708,0.5113847255706787,0.0340892784297466,-0.0523570515215397,-0.0504959635436535) * MODEL22_texOff(vec2(-1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [113] res += mat4(0.0343936607241631,0.1063148081302643,0.0805083066225052,0.0396051108837128,-0.1236344054341316,-0.0233269948512316,0.1233193129301071,-0.2264101654291153,-0.2960208356380463,-0.1071716025471687,-0.1833824366331100,-0.0790851041674614,0.1837736070156097,0.0833743810653687,0.1230603456497192,0.0385375246405602) * MODEL23_texOff(vec2(-1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.0663255229592323,-0.0819603651762009,-0.1970731317996979,0.1191908717155457,-0.0865668952465057,-0.3306200504302979,0.0536981187760830,-0.0735869854688644,0.2214231342077255,-0.0135698653757572,0.1337730437517166,-0.0007018639007583,0.0386643111705780,0.2869086861610413,-0.0204952880740166,-0.0785670056939125) * MODEL24_texOff(vec2(-1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.5512277483940125,-0.0432629100978374,-0.0074420026503503,0.0599113143980503,-0.0683796256780624,-0.1501161009073257,0.1093824207782745,-0.1609797477722168,-0.1926446855068207,0.0696224570274353,0.1865710169076920,-0.0263149999082088,0.2819041907787323,0.1336970329284668,-0.1383060216903687,-0.0294327381998301) * MODEL21_texOff(vec2(-1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.2117140591144562,-0.1964783072471619,0.0209140237420797,-0.1468834728002548,-0.0388768389821053,0.0099467393010855,-0.0096735656261444,0.0119368890300393,0.0105373486876488,-0.0117405820637941,0.0939888283610344,-0.0859694704413414,0.0858618542551994,-0.0481163673102856,0.2874279022216797,-0.0189808309078217) * MODEL22_texOff(vec2(-1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0355829447507858,0.1019678786396980,-0.2398020476102829,-0.1328687220811844,-0.2580155134201050,-0.0937134549021721,0.0362211614847183,-0.0406967476010323,0.2681314349174500,-0.2669462859630585,-0.3174448907375336,-0.0182126667350531,0.0024880690034479,0.0660213157534599,0.0105634322389960,0.1912512183189392) * MODEL23_texOff(vec2(-1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.1245332434773445,0.0905841588973999,0.2586607336997986,-0.1941296160221100,-0.0360556505620480,-0.1410470008850098,-0.0345183834433556,-0.0158733837306499,-0.2102904766798019,-0.0320044979453087,-0.1005627065896988,0.0356406010687351,0.0979287698864937,0.1831983625888824,-0.0043986211530864,0.0148757481947541) * MODEL24_texOff(vec2(-1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [119] res += mat4(0.3109019398689270,0.0552714280784130,-0.0726910978555679,0.0104056596755981,0.0853902027010918,-0.0355966687202454,0.1460472345352173,-0.1897231042385101,0.0314988754689693,0.1150667071342468,0.0418409183621407,0.1117350310087204,0.0620010979473591,-0.0620957873761654,-0.0738903582096100,0.0698305815458298) * MODEL21_texOff(vec2(-1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0829380825161934,0.1496474444866180,0.0959206894040108,-0.2010160833597183,-0.0168314706534147,-0.0137099549174309,0.1006841659545898,-0.0071484511718154,-0.0873117819428444,-0.0358791500329971,0.0285834260284901,0.0123149370774627,-0.0544689930975437,-0.2894275784492493,-0.1473379582166672,0.0083891181275249) * MODEL22_texOff(vec2(-1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.1977951079607010,-0.0100609613582492,-0.1164959520101547,-0.0656628012657166,0.0203267224133015,-0.0295156929641962,-0.0500625744462013,-0.1956685781478882,0.0031584915705025,0.0104866456240416,0.1058313697576523,0.1084064468741417,0.0490563884377480,0.0155234616249800,0.1480228304862976,0.1603093147277832) * MODEL23_texOff(vec2(-1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [122] res += mat4(0.1918130517005920,0.0445322617888451,0.1228738129138947,-0.1334928870201111,0.0340709649026394,-0.0980764999985695,-0.0386491529643536,-0.0087758591398597,-0.0257204398512840,-0.1249853745102882,-0.0486717447638512,0.0040949913673103,-0.0177379343658686,-0.0854057148098946,0.1303411871194839,0.0381813757121563) * MODEL24_texOff(vec2(-1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.3268094956874847,-0.0587583854794502,-0.0753372758626938,-0.0717469453811646,-0.0948380231857300,0.2379926145076752,-0.1344134509563446,0.1646426320075989,-0.2222341299057007,0.0496150217950344,-0.1110209971666336,-0.1986591368913651,0.0837696939706802,-0.1599014550447464,0.0698972865939140,-0.1346876621246338) * MODEL21_texOff(vec2(0,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.0088008726015687,0.0928560346364975,0.1201700568199158,-0.0589695684611797,0.0742420107126236,-0.2886217534542084,-0.1916337311267853,-0.1743781715631485,0.3392179906368256,-0.0635917037725449,-0.0728326812386513,0.0600978694856167,-0.0625639706850052,0.0922416672110558,-0.2094564437866211,0.0675566419959068) * MODEL22_texOff(vec2(0,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.0475945174694061,-0.6589110493659973,0.2246629893779755,0.0212813597172499,-0.3203825354576111,-0.0757866054773331,-0.0717910528182983,0.0750807374715805,-0.3471343517303467,-0.0157684087753296,-0.0413894765079021,-0.0321107469499111,0.1142143234610558,-0.1607771664857864,-0.0635187104344368,-0.0914107412099838) * MODEL23_texOff(vec2(0,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.0765698701143265,0.1051954478025436,-0.1580289453268051,0.1240042373538017,-0.1146782189607620,-0.2974278032779694,-0.1153521612286568,-0.0505782365798950,-0.0114173181355000,0.1053626239299774,-0.0833419337868690,-0.0015653657028452,0.0449684411287308,0.0872889980673790,0.0055605149827898,-0.0759068205952644) * MODEL24_texOff(vec2(0,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.1162151694297791,-0.1879661232233047,0.1471571922302246,0.2256650924682617,0.1338957995176315,-0.0661436468362808,0.0708340033888817,0.0204926915466785,0.2562061846256256,0.2182419449090958,-0.1013555973768234,-0.0519635267555714,0.4835367500782013,0.1160502731800079,-0.2073138803243637,-0.1113100200891495) * MODEL21_texOff(vec2(0,0));
[ 397.820][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.1780631393194199,-0.0397111028432846,0.1546480953693390,-0.0341892130672932,0.1070734411478043,0.0416513606905937,0.0254482682794333,0.1617107987403870,-0.3465618193149567,-0.1205257773399353,-0.0438895002007484,0.0651826635003090,-0.2734737694263458,0.1171417087316513,0.3170448839664459,-0.0755234733223915) * MODEL22_texOff(vec2(0,0));
[ 397.820][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.1574621051549911,-1.0492645502090454,0.1584949642419815,-0.1538892239332199,0.2216238677501678,-0.0618984177708626,0.1072544455528259,0.1084627807140350,-0.2063041478395462,0.2229731529951096,-0.2824307680130005,-0.1881915926933289,0.0544787198305130,-0.0355097949504852,-0.1704217791557312,0.0130623206496239) * MODEL23_texOff(vec2(0,0));
[ 397.820][d][vo/gpu-next/libplacebo] [130] res += mat4(0.0266278758645058,0.2311389744281769,0.3218958079814911,-0.1309652477502823,0.1176318153738976,-0.0573505945503712,-0.1852329820394516,-0.0377184376120567,-0.2539016604423523,-0.1384127885103226,-0.0018377456581220,-0.1079373210668564,0.4843352735042572,0.0736699700355530,0.1098218485713005,-0.1038916707038879) * MODEL24_texOff(vec2(0,0));
[ 397.820][d][vo/gpu-next/libplacebo] [131] res += mat4(0.1099128574132919,0.0438408479094505,-0.0166533365845680,-0.0350774340331554,-0.0442881993949413,-0.1052688732743263,-0.0115521410480142,0.1902013570070267,-0.0444535575807095,0.0750951319932938,-0.2052775919437408,0.0231947842985392,-0.1450876593589783,0.0867368802428246,-0.1092976033687592,0.1778948009014130) * MODEL21_texOff(vec2(0,1));
[ 397.820][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.0359055474400520,-0.3305373191833496,0.1462755799293518,-0.2761049866676331,0.1002137586474419,0.1180827245116234,0.1133952587842941,0.0132435662671924,0.1060045510530472,-0.1247289627790451,-0.0492945238947868,0.0873006954789162,-0.2079968899488449,0.0602515600621700,0.2395029217004776,-0.1352541893720627) * MODEL22_texOff(vec2(0,1));
[ 397.820][d][vo/gpu-next/libplacebo] [133] res += mat4(0.1150800585746765,-0.2130348682403564,-0.1119843721389771,-0.1227252334356308,-0.0955257937312126,0.2480934262275696,-0.0111157353967428,0.1311787962913513,0.1526826024055481,-0.0223417356610298,0.0739590153098106,-0.0481651462614536,-0.0804295837879181,-0.0389968454837799,-0.0625433549284935,0.0543623231351376) * MODEL23_texOff(vec2(0,1));
[ 397.820][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0361396707594395,0.0296336356550455,0.1750188916921616,-0.1519836783409119,0.0162350311875343,-0.1338425129652023,-0.1135003790259361,0.0374445058405399,0.0949324071407318,0.0364654883742332,-0.0947682112455368,0.0463851653039455,0.1055105850100517,0.1499112248420715,0.0958667322993279,-0.0349789112806320) * MODEL24_texOff(vec2(0,1));
[ 397.820][d][vo/gpu-next/libplacebo] [135] res += mat4(0.0335129462182522,0.0428050272166729,0.0509153790771961,0.0379510596394539,-0.0178432818502188,0.1240853592753410,0.1084208562970161,0.0035838780459017,-0.1191760227084160,-0.3277745246887207,-0.0355614908039570,-0.2248533219099045,-0.1414517760276794,0.0640492141246796,0.1741104423999786,0.0384984835982323) * MODEL21_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0007695676176809,-0.1972276717424393,0.0029564294964075,0.0754513815045357,-0.0537735819816589,0.2086908072233200,0.0307790040969849,0.1193686425685883,-0.1628971099853516,0.0022039418108761,0.1920519322156906,0.1291958838701248,-0.1244471892714500,-0.1340852081775665,-0.1556957662105560,0.1235789656639099) * MODEL22_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [137] res += mat4(0.0121951168403029,0.2273150086402893,0.0990521609783173,0.0550243407487869,-0.0612697005271912,-0.1683522760868073,0.1213394924998283,-0.0726550966501236,-0.0293549261987209,-0.1659870743751526,0.0168997850269079,0.0877104401588440,0.2721689939498901,-0.4388065934181213,-0.0915758162736893,-0.0231107920408249) * MODEL23_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.1505561470985413,-0.0439922027289867,-0.0247748792171478,0.0848891362547874,0.0513998530805111,0.1589653044939041,-0.0003475825651549,0.0383524037897587,-0.1249711364507675,-0.2005844861268997,0.0720970481634140,-0.0005939776310697,-0.0706073492765427,-0.1407299935817719,0.0299627427011728,0.1136663109064102) * MODEL24_texOff(vec2(1,-1));
[ 397.820][d][vo/gpu-next/libplacebo] [139] res += mat4(0.2135996818542480,0.2963324189186096,-0.0597860775887966,0.1724555790424347,-0.1320177018642426,0.1785143017768860,-0.1814694553613663,-0.0943221226334572,0.0590678341686726,-0.2324758917093277,-0.0872668847441673,-0.0634911581873894,0.1402362734079361,0.0035077689681202,0.0041122860275209,0.1941866129636765) * MODEL21_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0014266478829086,0.1091222763061523,0.2763024270534515,0.0375470593571663,0.1410333663225174,0.0072009870782495,-0.0820102766156197,0.1130331456661224,-0.2596918940544128,0.3680086135864258,-0.1441335082054138,0.1512158364057541,0.0632457733154297,-0.1289600133895874,-0.0239693094044924,-0.0755910500884056) * MODEL22_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0697470307350159,0.2321290969848633,0.0965754240751266,0.2174303680658340,-0.0845984369516373,0.1617104709148407,-0.2481762468814850,-0.1070342287421227,-0.0730159655213356,0.1370415836572647,-0.0302251055836678,-0.2314860671758652,-0.1372090876102448,-0.1742094308137894,-0.1067313402891159,-0.3790873587131500) * MODEL23_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [142] res += mat4(0.1651351004838943,-0.1991675049066544,-0.0099022816866636,0.2849749326705933,-0.0591459758579731,-0.1929800063371658,-0.0472643934190273,0.0479192845523357,-0.0837826579809189,0.1051614731550217,0.0691604614257812,0.1877252012491226,0.2782741487026215,-0.1949436962604523,0.0015928996726871,0.0484849028289318) * MODEL24_texOff(vec2(1,0));
[ 397.820][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.1445056796073914,0.1106163188815117,-0.0092492094263434,0.0412899442017078,-0.0960058644413948,0.0294550489634275,-0.1975658684968948,-0.1197390705347061,-0.2530917823314667,-0.1585791260004044,0.0379120036959648,-0.0545626319944859,-0.1231669262051582,0.0308206696063280,0.0223998818546534,-0.1297578960657120) * MODEL21_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0123862475156784,0.2020634114742279,0.2371166795492172,0.0025295689702034,-0.1535065174102783,-0.0326876118779182,0.0469858162105083,-0.0063881147652864,0.0504077374935150,0.2487214356660843,0.0804338827729225,-0.0228144638240337,-0.1986591517925262,0.2256969809532166,0.0163792762905359,0.0209483671933413) * MODEL22_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.0020803855732083,0.0473951436579227,0.0373679585754871,-0.0170538891106844,0.0731633901596069,-0.1969023048877716,0.0017634986434132,0.0272224806249142,0.1534947603940964,-0.0576414130628109,0.2062073051929474,0.2338484823703766,0.0272667519748211,-0.0157661326229572,0.0151125816628337,-0.0408271066844463) * MODEL23_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.0359436161816120,-0.0802042931318283,-0.1251512616872787,0.0919738039374352,0.0100309969857335,0.0923718139529228,-0.0305849611759186,0.0868588313460350,-0.0382435917854309,-0.0286568589508533,-0.0163926277309656,-0.0322794467210770,-0.1390175670385361,-0.0400823466479778,-0.3385815620422363,0.0410657785832882) * MODEL24_texOff(vec2(1,1));
[ 397.820][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.0059091644361615,-0.0854371860623360,0.8381890654563904,0.1018658727407455) * min(res, vec4(0.0));
[ 397.820][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.821][d][vo/gpu-next/libplacebo] [149] }
[ 397.821][d][vo/gpu-next/libplacebo] [150] 
[ 397.821][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.821][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.821][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.821][d][vo/gpu-next/libplacebo] [154] }
[ 397.821][d][vo/gpu-next/libplacebo] [155] 
[ 397.821][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.821][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.821][d][vo/gpu-next/libplacebo] [158] }
[ 397.821][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.821][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.821][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.821][d][vo/gpu-next] cache_load_obj: key(b1f690fd847577ac), size(20692), load time(0.157 ms)
[ 397.821][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb1f690fd847577ac
[ 397.821][d][vo/gpu-next] cache_load_obj: key(38b55fc3c728c96c), size(27810), load time(0.144 ms)
[ 397.821][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.821][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.821][d][vo/gpu-next] cache_save_obj: key(b1f690fd847577ac), size(20692)
[ 397.821][d][vo/gpu-next/libplacebo] Spent 0.109 ms creating pipeline
[ 397.821][d][vo/gpu-next] cache_save_obj: key(38b55fc3c728c96c), size(27810)
[ 397.821][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.821][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.821][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.821][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[ 397.821][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.821][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.821][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.821][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.821][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.821][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.821][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.821][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.821][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.821][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.821][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.821][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.821][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.821][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.821][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.821][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.821][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.821][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.821][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.821][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.821][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.821][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.821][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.821][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.821][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.821][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.821][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.821][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.821][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.821][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.821][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.821][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.821][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.821][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.821][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.821][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.821][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.821][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.821][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.821][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.821][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.821][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.821][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.821][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.821][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.821][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.821][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.821][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.821][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.821][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.821][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.821][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.821][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.821][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.821][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.821][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.821][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.821][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.821][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.821][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.821][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.821][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.821][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.821][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.821][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.821][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.821][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.821][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.821][d][vo/gpu-next/libplacebo] [ 43] #define MODEL1_raw _2 
[ 397.821][d][vo/gpu-next/libplacebo] [ 44] #define MODEL1_pos _3 
[ 397.821][d][vo/gpu-next/libplacebo] [ 45] #define MODEL1_map _3_map 
[ 397.821][d][vo/gpu-next/libplacebo] [ 46] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 47] #define MODEL1_pt _4 
[ 397.821][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_off _5 
[ 397.821][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_mul _6 
[ 397.821][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 54] #define MODEL2_raw _7 
[ 397.821][d][vo/gpu-next/libplacebo] [ 55] #define MODEL2_pos _8 
[ 397.821][d][vo/gpu-next/libplacebo] [ 56] #define MODEL2_map _8_map 
[ 397.821][d][vo/gpu-next/libplacebo] [ 57] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 58] #define MODEL2_pt _9 
[ 397.821][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_off _a 
[ 397.821][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_mul _b 
[ 397.821][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 65] #define MODEL3_raw _c 
[ 397.821][d][vo/gpu-next/libplacebo] [ 66] #define MODEL3_pos _d 
[ 397.821][d][vo/gpu-next/libplacebo] [ 67] #define MODEL3_map _d_map 
[ 397.821][d][vo/gpu-next/libplacebo] [ 68] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 69] #define MODEL3_pt _e 
[ 397.821][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_off _f 
[ 397.821][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_mul _10 
[ 397.821][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 76] #define MODEL4_raw _11 
[ 397.821][d][vo/gpu-next/libplacebo] [ 77] #define MODEL4_pos _12 
[ 397.821][d][vo/gpu-next/libplacebo] [ 78] #define MODEL4_map _12_map 
[ 397.821][d][vo/gpu-next/libplacebo] [ 79] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 80] #define MODEL4_pt _13 
[ 397.821][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_off _14 
[ 397.821][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_mul _15 
[ 397.821][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.821][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.821][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.821][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.821][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.821][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.821][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.821][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.821][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.821][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.821][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.821][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.821][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.821][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.821][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.821][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.821][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.821][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.821][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.821][d][vo/gpu-next/libplacebo] [105] }
[ 397.821][d][vo/gpu-next/libplacebo] [106] 
[ 397.821][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.821][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.821][d][vo/gpu-next/libplacebo] [109] {
[ 397.821][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.0297627914696932,0.0233479980379343,-0.0115727400407195,-0.0482516959309578);
[ 397.821][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0715292766690254,0.1731889694929123,-0.1162043735384941,0.0872703641653061,-0.2417438626289368,-0.0727714076638222,-0.2988421916961670,-0.0814571157097816,-0.2005476653575897,-0.4621191620826721,-0.0479162558913231,-0.1643854230642319,0.1635089218616486,-0.0513518676161766,0.0216251611709595,-0.0309571940451860) * MODEL1_texOff(vec2(-1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [112] res += mat4(0.2955695986747742,0.0290399901568890,0.0901379436254501,0.0232001598924398,-0.1361453980207443,-0.0441172905266285,-0.1232148632407188,-0.1881834864616394,-0.1755786687135696,0.0273663830012083,0.0352580323815346,-0.1844559758901596,0.1430568099021912,-0.0159279126673937,-0.0572498738765717,0.2306421548128128) * MODEL2_texOff(vec2(-1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.0425388365983963,-0.4139533340930939,0.0307378526777029,-0.0169012229889631,-0.0730413347482681,-0.0284235645085573,0.0335348658263683,-0.1478556990623474,-0.1122370585799217,0.0734600499272346,-0.3432141244411469,0.1191490739583969,-0.0025841903407127,0.2022673934698105,0.0554979182779789,0.1086086034774780) * MODEL3_texOff(vec2(-1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0961083024740219,0.0671017393469810,0.2176315486431122,0.0922382175922394,-0.1009929105639458,-0.2450343519449234,0.0942095145583153,-0.2570039033889771,0.1358351260423660,0.2908486425876617,0.0804413855075836,0.2006997317075729,-0.0039052485954016,-0.3626460731029510,-0.1014555469155312,0.0964331626892090) * MODEL4_texOff(vec2(-1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.0971006974577904,-0.0389276780188084,-0.0314850024878979,0.1350336670875549,-0.1409024894237518,0.2274368256330490,-0.0384895429015160,0.1151232644915581,0.0557192787528038,0.1984881460666656,0.0361695736646652,-0.0761853829026222,0.3261531591415405,-0.2390181273221970,0.0646768063306808,-0.4328581988811493) * MODEL1_texOff(vec2(-1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [116] res += mat4(0.0424791388213634,-0.1023455262184143,0.1806970685720444,-0.1666750311851501,-0.0449250824749470,-0.1187220439314842,-0.0273436456918716,-0.1562639772891998,-0.0410354509949684,-0.1975276321172714,0.0507811903953552,-0.0285244584083557,0.0516933687031269,0.0260300971567631,0.1281289011240005,-0.1290910094976425) * MODEL2_texOff(vec2(-1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0054361149668694,0.1182830706238747,0.1460492610931396,0.0969894230365753,0.0206248629838228,-0.0626167058944702,-0.1278409957885742,-0.1629029363393784,-0.0706755444407463,-0.1237544268369675,-0.2320539802312851,-0.0318306237459183,0.1231760755181313,0.0763057097792625,0.2986172735691071,0.0250785630196333) * MODEL3_texOff(vec2(-1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [118] res += mat4(0.0164651423692703,-0.1196076050400734,0.1230581402778625,-0.0607432350516319,-0.0185629073530436,0.1791573613882065,0.0020981710404158,0.1651514917612076,-0.0724884122610092,-0.0995426848530769,0.0572612322866917,-0.3528264164924622,-0.2358582317829132,-0.2111662477254868,0.0493735782802105,0.0648812726140022) * MODEL4_texOff(vec2(-1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [119] res += mat4(0.0344358943402767,0.0501006059348583,0.0922572016716003,-0.1580057293176651,-0.0618764460086823,0.1898567527532578,-0.2313892990350723,-0.0437577478587627,-0.1074003204703331,0.0724723264575005,0.1629010885953903,-0.2902281880378723,0.3717532455921173,0.0426183342933655,0.2241628617048264,-0.2138456553220749) * MODEL1_texOff(vec2(-1,1));
[ 397.821][d][vo/gpu-next/libplacebo] [120] res += mat4(0.1172804757952690,-0.1180629804730415,-0.2417578548192978,0.0614611729979515,0.0425940379500389,-0.1815277636051178,-0.1933870613574982,-0.0141492756083608,-0.1804371625185013,0.2301990389823914,0.0540209971368313,-0.1831404864788055,-0.1223548874258995,0.0078023592941463,-0.1561884582042694,-0.2083907127380371) * MODEL2_texOff(vec2(-1,1));
[ 397.821][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0922567769885063,0.0089658750221133,0.0659577623009682,-0.1610008925199509,0.0017648991197348,0.0358518138527870,-0.1354992985725403,-0.1005416512489319,0.0062369303777814,-0.1174328997731209,-0.1278121620416641,-0.0396228507161140,-0.0913600921630859,0.1509602367877960,-0.1314618289470673,-0.1133467033505440) * MODEL3_texOff(vec2(-1,1));
[ 397.821][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0772512182593346,0.1695914715528488,-0.0474010258913040,0.2802786529064178,0.0793515369296074,0.0706179738044739,0.0741332024335861,0.1958376169204712,0.1784187406301498,-0.2275161892175674,-0.0998003110289574,-0.2057882398366928,0.0793297365307808,0.1075959205627441,0.1569192558526993,0.0729442909359932) * MODEL4_texOff(vec2(-1,1));
[ 397.821][d][vo/gpu-next/libplacebo] [123] res += mat4(0.1060236990451813,0.1750700324773788,-0.2424502372741699,0.1836295574903488,-0.0729414299130440,0.2677886188030243,0.1813510656356812,-0.1192134618759155,0.0619709230959415,-0.2674448788166046,-0.1404004693031311,-0.0665189176797867,0.2354937195777893,0.1137963756918907,0.1289096623659134,0.0566588677465916) * MODEL1_texOff(vec2(0,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.4400564432144165,-0.1032809615135193,0.0991355329751968,-0.2288440167903900,0.0365141928195953,0.2145449817180634,0.1639973223209381,-0.2470153272151947,0.0611560009419918,-0.5086198449134827,-0.1124944239854813,-0.1122059151530266,0.0792017802596092,-0.3362250626087189,0.0555198341608047,-0.0117840450257063) * MODEL2_texOff(vec2(0,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [125] res += mat4(0.0189359430223703,-0.1189534962177277,-0.0456363633275032,0.1897108405828476,-0.1838847398757935,-0.0457949526607990,-0.0067561594769359,0.1434890478849411,0.0710982680320740,0.5555889010429382,-0.6704337596893311,0.5087915062904358,-0.0185496620833874,0.0089266048744321,0.0404587946832180,0.1801371574401855) * MODEL3_texOff(vec2(0,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.2432683408260345,-0.1026095002889633,-0.0076264631934464,-0.1037460938096046,-0.0556914620101452,-0.0127330999821424,0.3779183924198151,0.0614337101578712,-0.5866527557373047,-0.0280173663049936,0.0034598920028657,-0.0555214807391167,-0.0811494663357735,-0.1102497428655624,0.0646675080060959,0.1262950003147125) * MODEL4_texOff(vec2(0,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.0120423305779696,-0.0798698291182518,0.0221858005970716,-0.1509526222944260,0.1418212652206421,-0.2525954544544220,-0.3720241487026215,0.2736712098121643,0.5123170018196106,0.0657052099704742,-0.0294907148927450,-0.0309825930744410,0.3348740935325623,-0.2012142241001129,0.3404463529586792,0.3223938047885895) * MODEL1_texOff(vec2(0,0));
[ 397.821][d][vo/gpu-next/libplacebo] [128] res += mat4(0.1102259904146194,0.1434698402881622,-0.0190608594566584,-0.0480098314583302,0.3206558525562286,0.2552843391895294,-0.1834485381841660,0.0623174123466015,-0.0348141454160213,-0.0332642346620560,0.1529613286256790,-0.2308061569929123,-0.3723647296428680,0.1673920899629593,0.0498706474900246,0.0080200415104628) * MODEL2_texOff(vec2(0,0));
[ 397.821][d][vo/gpu-next/libplacebo] [129] res += mat4(0.1342022120952606,0.0603547543287277,-0.0393932871520519,-0.0002555101236794,-0.4983746707439423,-0.2552239298820496,0.2994193434715271,-0.1050826087594032,0.0412684455513954,0.3281650543212891,-0.1364625394344330,-0.1520996093750000,-0.0200216863304377,0.1808800697326660,0.1866618096828461,-0.1548729389905930) * MODEL3_texOff(vec2(0,0));
[ 397.821][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0078444750979543,-0.3394804298877716,0.1295289695262909,0.3150773346424103,-0.0493267662823200,-0.0072879814542830,-0.0081665106117725,0.1606685966253281,0.1945202350616455,0.2314610034227371,-0.1509118676185608,-0.2771163284778595,0.2958357334136963,-0.0885516181588173,-0.0133015299215913,-0.1843660324811935) * MODEL4_texOff(vec2(0,0));
[ 397.821][d][vo/gpu-next/libplacebo] [131] res += mat4(0.0480885617434978,0.0323774702847004,-0.0954127907752991,-0.1053214296698570,0.1383039951324463,0.1125908717513084,-0.1513436585664749,0.0429621934890747,-0.0784374922513962,0.1787795126438141,0.0777130052447319,0.0281713493168354,0.2269771695137024,-0.0295456033200026,0.1302640289068222,0.0056475140154362) * MODEL1_texOff(vec2(0,1));
[ 397.821][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.2305415272712708,0.0247770268470049,-0.0537786073982716,0.1316420286893845,0.1218414977192879,-0.0801476910710335,-0.1045630574226379,0.1675985008478165,-0.1182029843330383,0.0822740346193314,-0.1217971742153168,-0.1402949392795563,0.0714140906929970,0.1870041936635971,0.1519945859909058,0.0590374357998371) * MODEL2_texOff(vec2(0,1));
[ 397.821][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.0781458616256714,0.0344348810613155,0.0634453967213631,0.0553996153175831,-0.1186586692929268,-0.2548364102840424,-0.1083709821105003,0.0475101880729198,0.0016270061023533,-0.0197218004614115,-0.0851529911160469,-0.0193429626524448,-0.0650094971060753,-0.0082867527380586,0.1789152026176453,0.0087337959557772) * MODEL3_texOff(vec2(0,1));
[ 397.821][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0380182191729546,0.0805546790361404,0.0853904336690903,0.3015394806861877,-0.1203808486461639,-0.1158597096800804,-0.0749548003077507,-0.0736039206385612,-0.2853331565856934,0.1613106131553650,-0.1881097257137299,-0.1434740275144577,0.2444828003644943,0.0767208337783813,0.1300336718559265,0.2683191299438477) * MODEL4_texOff(vec2(0,1));
[ 397.821][d][vo/gpu-next/libplacebo] [135] res += mat4(0.2516354620456696,-0.2763525545597076,-0.2192989587783813,-0.0833095014095306,-0.1054624170064926,0.1675528883934021,-0.2412341386079788,-0.1867644637823105,-0.0114389210939407,-0.0876984819769859,-0.1035546809434891,-0.0818920433521271,0.3093723654747009,-0.0750116035342216,-0.1008756235241890,0.1671010404825211) * MODEL1_texOff(vec2(1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.0777968019247055,-0.1985371410846710,-0.1108896210789680,-0.1090433448553085,0.2224930375814438,-0.1180416420102119,0.0097308177500963,0.0291840676218271,0.2742662727832794,0.0690862834453583,0.0837093815207481,0.0157564114779234,0.0440957769751549,-0.0861890986561775,0.1341084688901901,-0.0812584385275841) * MODEL2_texOff(vec2(1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.4022336006164551,-0.4127708375453949,0.0929193645715714,-0.2897278666496277,0.0013798275031149,-0.0068782637827098,0.1896951496601105,-0.0676433593034744,-0.0508255623281002,0.2964664101600647,0.0516446232795715,0.1443179994821548,-0.0079805180430412,0.0374053753912449,-0.0660960003733635,0.0883784294128418) * MODEL3_texOff(vec2(1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.0790410488843918,0.2355205565690994,0.0249150935560465,0.1897345483303070,-0.1926058083772659,-0.0480735898017883,-0.0822572931647301,-0.0860691443085670,-0.2901045680046082,0.0417460016906261,0.1334455907344818,-0.1952150017023087,-0.1147861108183861,-0.1789643168449402,0.0322010070085526,0.0186598971486092) * MODEL4_texOff(vec2(1,-1));
[ 397.821][d][vo/gpu-next/libplacebo] [139] res += mat4(0.0447808206081390,-0.1023604422807693,0.1684717535972595,-0.0343314968049526,-0.0360606126487255,0.0762954801321030,-0.0149607853963971,-0.0458645634353161,-0.2234648913145065,0.0108903571963310,0.0477869287133217,-0.1024054586887360,0.4338375627994537,-0.1089848652482033,-0.0315672196447849,-0.1828128397464752) * MODEL1_texOff(vec2(1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0698782056570053,-0.0526008941233158,-0.0059318128041923,-0.0637117773294449,-0.3613477647304535,0.2313130050897598,-0.0845053344964981,0.3473417758941650,0.0910944789648056,-0.0538481920957565,-0.1723407953977585,-0.0286697242408991,-0.2669581770896912,-0.1145130991935730,0.0193807259202003,0.0991438403725624) * MODEL2_texOff(vec2(1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0375632494688034,0.1044827178120613,-0.2070501148700714,-0.1334659010171890,0.2349299639463425,-0.1319794058799744,-0.0667172893881798,0.2251613587141037,-0.0021280336659402,0.1837325841188431,-0.1609080433845520,0.0536463446915150,0.1554988920688629,0.1297923475503922,-0.0393977239727974,0.0443111732602119) * MODEL3_texOff(vec2(1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [142] res += mat4(0.0832540765404701,-0.3266498148441315,0.0853905305266380,0.3139798045158386,-0.1752324253320694,0.0766637027263641,0.1677532345056534,-0.0602337345480919,0.0050285942852497,0.1663813740015030,0.0677275061607361,0.1415241807699203,-0.0664775148034096,0.0230648573487997,0.0635749250650406,0.0723993480205536) * MODEL4_texOff(vec2(1,0));
[ 397.821][d][vo/gpu-next/libplacebo] [143] res += mat4(0.1006224155426025,-0.0025526825338602,0.1227661296725273,0.1252972632646561,0.1155267581343651,0.2424338012933731,-0.0294103678315878,0.0550847500562668,0.0468512065708637,0.1326158940792084,0.0777293890714645,0.0691974163055420,0.1524984836578369,0.0730992481112480,0.1470288932323456,-0.1010911092162132) * MODEL1_texOff(vec2(1,1));
[ 397.821][d][vo/gpu-next/libplacebo] [144] res += mat4(0.0226090233772993,-0.0166164021939039,-0.1414489448070526,-0.0171599909663200,0.0361442640423775,-0.1463174372911453,-0.0309545882046223,-0.0243033729493618,0.2668134868144989,0.0204597841948271,-0.0880827531218529,0.1350718438625336,0.0123260952532291,0.0660683289170265,-0.0053338371217251,-0.0361907482147217) * MODEL2_texOff(vec2(1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.2132165133953094,-0.0501527264714241,-0.1114194616675377,-0.0607117861509323,-0.2046028822660446,-0.0339597649872303,0.0324752517044544,0.0353318229317665,-0.0101127438247204,-0.0141535671427846,-0.0533845908939838,-0.0250125806778669,-0.1040155366063118,0.0770960003137589,-0.1025016754865646,-0.1379424780607224) * MODEL3_texOff(vec2(1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [146] res += mat4(0.1468542963266373,-0.1379085779190063,-0.0828191116452217,0.3041104674339294,-0.1435108035802841,-0.1066760495305061,-0.0183106474578381,-0.1628599017858505,0.1388022005558014,0.1614157855510712,-0.2055707871913910,0.1166576966643333,0.0837028175592422,0.0104528190568089,0.0349433906376362,0.1418810933828354) * MODEL4_texOff(vec2(1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.2206345945596695,-0.0747795924544334,0.2523925602436066,0.2096080034971237) * min(res, vec4(0.0));
[ 397.822][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.822][d][vo/gpu-next/libplacebo] [149] }
[ 397.822][d][vo/gpu-next/libplacebo] [150] 
[ 397.822][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.822][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.822][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.822][d][vo/gpu-next/libplacebo] [154] }
[ 397.822][d][vo/gpu-next/libplacebo] [155] 
[ 397.822][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.822][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.822][d][vo/gpu-next/libplacebo] [158] }
[ 397.822][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.822][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.822][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.822][d][vo/gpu-next] cache_load_obj: key(9207d7afe8141368), size(20692), load time(0.189 ms)
[ 397.822][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x9207d7afe8141368
[ 397.822][d][vo/gpu-next] cache_load_obj: key(da1e4b4defa409a0), size(27520), load time(0.160 ms)
[ 397.822][d][vo/gpu-next/libplacebo] Spent 0.024 ms compiling shader
[ 397.822][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.822][d][vo/gpu-next] cache_save_obj: key(9207d7afe8141368), size(20692)
[ 397.822][d][vo/gpu-next/libplacebo] Spent 0.110 ms creating pipeline
[ 397.822][d][vo/gpu-next] cache_save_obj: key(da1e4b4defa409a0), size(27520)
[ 397.822][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.822][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.822][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.822][d][vo/gpu-next/libplacebo] Spent 0.063 ms allocating slab
[ 397.822][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.822][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.822][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.822][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.822][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.822][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.822][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.822][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.822][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.822][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.822][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.822][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.822][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.822][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.822][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.822][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.822][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.822][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.822][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.822][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.822][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.822][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.822][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.822][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.822][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.822][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.822][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.822][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.822][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.822][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.822][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.822][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.822][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.822][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.822][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.822][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.822][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.822][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.822][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.822][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.822][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.822][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.822][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.822][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.822][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.822][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.822][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.822][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.822][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.822][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.822][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.822][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.822][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.822][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.822][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.822][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.822][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.822][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.822][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.822][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.822][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.822][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.822][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.822][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.822][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.822][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.822][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.822][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.822][d][vo/gpu-next/libplacebo] [ 43] #define MODEL1_raw _2 
[ 397.822][d][vo/gpu-next/libplacebo] [ 44] #define MODEL1_pos _3 
[ 397.822][d][vo/gpu-next/libplacebo] [ 45] #define MODEL1_map _3_map 
[ 397.822][d][vo/gpu-next/libplacebo] [ 46] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 47] #define MODEL1_pt _4 
[ 397.822][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_off _5 
[ 397.822][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_mul _6 
[ 397.822][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 54] #define MODEL2_raw _7 
[ 397.822][d][vo/gpu-next/libplacebo] [ 55] #define MODEL2_pos _8 
[ 397.822][d][vo/gpu-next/libplacebo] [ 56] #define MODEL2_map _8_map 
[ 397.822][d][vo/gpu-next/libplacebo] [ 57] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 58] #define MODEL2_pt _9 
[ 397.822][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_off _a 
[ 397.822][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_mul _b 
[ 397.822][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 65] #define MODEL3_raw _c 
[ 397.822][d][vo/gpu-next/libplacebo] [ 66] #define MODEL3_pos _d 
[ 397.822][d][vo/gpu-next/libplacebo] [ 67] #define MODEL3_map _d_map 
[ 397.822][d][vo/gpu-next/libplacebo] [ 68] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 69] #define MODEL3_pt _e 
[ 397.822][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_off _f 
[ 397.822][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_mul _10 
[ 397.822][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 76] #define MODEL4_raw _11 
[ 397.822][d][vo/gpu-next/libplacebo] [ 77] #define MODEL4_pos _12 
[ 397.822][d][vo/gpu-next/libplacebo] [ 78] #define MODEL4_map _12_map 
[ 397.822][d][vo/gpu-next/libplacebo] [ 79] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 80] #define MODEL4_pt _13 
[ 397.822][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_off _14 
[ 397.822][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_mul _15 
[ 397.822][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.822][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.822][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.822][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.822][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.822][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.822][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.822][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.822][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.822][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.822][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.822][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.822][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.822][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.822][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.822][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.822][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.822][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.822][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.822][d][vo/gpu-next/libplacebo] [105] }
[ 397.822][d][vo/gpu-next/libplacebo] [106] 
[ 397.822][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.822][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.822][d][vo/gpu-next/libplacebo] [109] {
[ 397.822][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.0800784528255463,0.0601661987602711,0.0555461533367634,-0.0429110191762447);
[ 397.822][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0863433033227921,0.0334390997886658,-0.0621653236448765,0.0653314962983131,0.1396726071834564,-0.0640471726655960,-0.1288087069988251,0.1212515309453011,-0.2136863470077515,-0.0960292816162109,0.0721855387091637,-0.1794071793556213,0.0069377738982439,0.0272297523915768,0.0409870855510235,0.0519649572670460) * MODEL1_texOff(vec2(-1,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [112] res += mat4(0.1870677918195724,0.0433751679956913,0.0256017949432135,0.2058046162128448,-0.1154645085334778,0.0400379225611687,-0.0797111764550209,0.2218296825885773,0.0921559780836105,-0.0263769291341305,-0.0388038419187069,-0.1850817799568176,0.0085366042330861,-0.0584974028170109,-0.0297010596841574,0.1992808133363724) * MODEL2_texOff(vec2(-1,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [113] res += mat4(0.1012331768870354,0.0804755762219429,-0.0941932648420334,0.0458225086331367,-0.0620205365121365,-0.0149404061958194,-0.0899603590369225,0.1046710759401321,-0.0238595884293318,0.0389227606356144,-0.0804460421204567,-0.0363119058310986,0.0425472334027290,-0.0407178513705730,0.0772528797388077,0.0322242043912411) * MODEL3_texOff(vec2(-1,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.0650736913084984,-0.0228200815618038,-0.0261835921555758,-0.0941885486245155,0.0476304963231087,0.0326966010034084,0.1129198446869850,0.1000680103898048,0.0727651417255402,0.0556358322501183,0.0236402824521065,0.0225147940218449,-0.1910788714885712,-0.0391473062336445,-0.0581454150378704,0.1671700030565262) * MODEL4_texOff(vec2(-1,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [115] res += mat4(0.0510326772928238,0.0524010248482227,-0.0744537040591240,0.2741810083389282,-0.0049108345992863,0.0166528634727001,-0.0641776621341705,0.2379382699728012,-0.0698776021599770,0.1681815981864929,-0.1129539459943771,-0.4060722887516022,-0.0847840160131454,0.1202128604054451,0.2729610204696655,0.0295240450650454) * MODEL1_texOff(vec2(-1,0));
[ 397.822][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0323551073670387,0.0563962310552597,0.0331644825637341,-0.0592999793589115,-0.0331613346934319,0.0325570479035378,-0.0329815931618214,0.0358480177819729,-0.0119067728519440,0.0905536040663719,0.0057493858039379,-0.2372787743806839,-0.1135656535625458,-0.0602519325911999,0.1643085777759552,-0.0635964497923851) * MODEL2_texOff(vec2(-1,0));
[ 397.822][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.1173389032483101,0.0870412066578865,-0.0124353049322963,0.0109290564432740,-0.0661696642637253,-0.0552388504147530,0.0940502062439919,0.1866775602102280,0.1403413712978363,-0.0060512828640640,0.0463944673538208,-0.2095566093921661,-0.1576434373855591,0.0970999002456665,0.0084690190851688,-0.1011850386857986) * MODEL3_texOff(vec2(-1,0));
[ 397.822][d][vo/gpu-next/libplacebo] [118] res += mat4(0.0924861058592796,-0.0852512866258621,0.0165553353726864,-0.0370170325040817,0.1282806396484375,0.0605795681476593,0.1016359180212021,0.2076728492975235,-0.0237870141863823,-0.1141432970762253,-0.1275070458650589,-0.4265718758106232,-0.2792766690254211,-0.0883191749453545,-0.3561577200889587,0.0227870903909206) * MODEL4_texOff(vec2(-1,0));
[ 397.822][d][vo/gpu-next/libplacebo] [119] res += mat4(0.1265138983726501,0.0129980593919754,0.0030515147373080,0.0304887685924768,0.0573397651314735,-0.0378817282617092,0.0535683855414391,-0.2408693581819534,0.0809831991791725,0.1466208547353745,-0.2839826643466949,0.2594286203384399,-0.3518882989883423,0.0289344508200884,0.0082612773403525,0.3203260600566864) * MODEL1_texOff(vec2(-1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [120] res += mat4(0.0037346682511270,-0.0536200106143951,0.0688617751002312,0.1081459745764732,0.0130062531679869,0.0118753341957927,0.0201178062707186,0.1944747269153595,-0.1346909999847412,0.0025842562317848,-0.1166134774684906,-0.0573785975575447,0.1021115630865097,-0.1084905415773392,0.0301196128129959,-0.1353875100612640) * MODEL2_texOff(vec2(-1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.1086315810680389,-0.0011917124502361,-0.0572568252682686,-0.0782897993922234,-0.2079094797372818,-0.0723908543586731,0.0895951837301254,0.0784161761403084,0.0604014731943607,0.0076951296068728,0.0534028448164463,0.0661691501736641,0.0473716892302036,-0.0051339743658900,0.0258535612374544,-0.1799471229314804) * MODEL3_texOff(vec2(-1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0549066811800003,0.0139851383864880,-0.0178427230566740,0.1612012088298798,0.0791748687624931,0.0351423695683479,0.0910226628184319,0.1308324038982391,0.0671674534678459,-0.0172936040908098,-0.1453430205583572,-0.0209893751889467,-0.1704347729682922,0.0479662641882896,-0.0695061981678009,-0.1380490809679031) * MODEL4_texOff(vec2(-1,1));
[ 397.822][d][vo/gpu-next/libplacebo] [123] res += mat4(0.1236884221434593,-0.1681620776653290,-0.0359426774084568,0.1273903995752335,0.0388387516140938,0.0945257619023323,-0.0164667069911957,-0.0906677693128586,-0.2841546833515167,0.0869230031967163,0.0048854467459023,0.0225474387407303,-0.1071107387542725,-0.0425997376441956,0.0262702610343695,0.1595077365636826) * MODEL1_texOff(vec2(0,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [124] res += mat4(0.0810801610350609,0.1038522720336914,0.0611485466361046,-0.3561405837535858,-0.1126693263649940,-0.0193360056728125,0.2583414316177368,0.0493115559220314,0.0586208440363407,0.0832251384854317,0.1226955577731133,0.2620749771595001,0.0347377024590969,0.1315771043300629,0.0588914379477501,-0.0532840602099895) * MODEL2_texOff(vec2(0,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [125] res += mat4(0.0211118329316378,-0.0980333834886551,-0.0601611472666264,-0.1176832690834999,0.0429638028144836,0.0498136132955551,-0.0770675167441368,0.0378206856548786,0.1800107657909393,0.0579029917716980,-0.1195740178227425,0.1883942782878876,-0.2072988748550415,-0.1080424338579178,-0.0765368565917015,0.0031384895555675) * MODEL3_texOff(vec2(0,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.1974163204431534,0.0669385790824890,-0.0399899557232857,-0.0021619442850351,0.0714476481080055,-0.0476636625826359,0.1724044233560562,0.0511768497526646,-0.0297900792211294,0.0045102522708476,-0.1993372738361359,0.0003970525576733,0.0944883078336716,0.0310522653162479,-0.1421799510717392,0.2299052476882935) * MODEL4_texOff(vec2(0,-1));
[ 397.822][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.4208259582519531,-0.0986439138650894,-0.2835440635681152,-0.0294859316200018,0.3098984062671661,-0.3548800647258759,0.1317964643239975,-0.3272322714328766,0.1362514495849609,-0.0225639119744301,-0.1513630151748657,0.2643545866012573,-0.3470867276191711,-0.1904748082160950,-0.0340475328266621,0.0036768142599612) * MODEL1_texOff(vec2(0,0));
[ 397.822][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.3138784170150757,0.1349462121725082,0.0676471963524818,-0.0738755986094475,0.0931943804025650,0.0283133592456579,0.1848180294036865,0.4050738811492920,-0.1050206199288368,0.2549298107624054,-0.0077893063426018,0.1486955732107162,0.3408862650394440,0.2523297369480133,0.1654416918754578,-0.2436395287513733) * MODEL2_texOff(vec2(0,0));
[ 397.822][d][vo/gpu-next/libplacebo] [129] res += mat4(0.1160446926951408,-0.0445879623293877,0.0247049350291491,0.0062570590525866,-0.0095159197226167,-0.1733140796422958,0.0147938905283809,-0.3889542520046234,0.1751366853713989,0.3155197203159332,0.1774994581937790,0.1649117618799210,-0.0973552092909813,0.0334740914404392,-0.0596772246062756,0.0606712251901627) * MODEL3_texOff(vec2(0,0));
[ 397.822][d][vo/gpu-next/libplacebo] [130] res += mat4(0.0495687201619148,-0.1258669793605804,-0.3740898370742798,0.0510187558829784,0.3157816231250763,-0.1562098413705826,-0.2688758075237274,-0.0247120093554258,-0.1825216710567474,0.0924213230609894,-0.1385088860988617,-0.0282515622675419,0.1964389532804489,0.2084290981292725,-0.0777302980422974,0.0454940609633923) * MODEL4_texOff(vec2(0,0));
[ 397.822][d][vo/gpu-next/libplacebo] [131] res += mat4(0.0398128330707550,-0.0636569485068321,0.2285985201597214,0.1998784095048904,0.0649731829762459,-0.0402531512081623,-0.0861508175730705,-0.0429575666785240,0.1125769540667534,0.0397732742130756,-0.1661550551652908,0.0124100502580404,-0.0354430302977562,-0.1435054391622543,0.3802306354045868,0.0552034787833691) * MODEL1_texOff(vec2(0,1));
[ 397.822][d][vo/gpu-next/libplacebo] [132] res += mat4(0.1569491624832153,-0.1376131474971771,0.0755141004920006,0.1995209455490112,0.2166555076837540,0.1464705616235733,0.1837598532438278,0.2612685561180115,-0.1439852863550186,0.0105508659034967,-0.0021957466378808,0.0539668090641499,-0.0431668572127819,0.1122226640582085,0.0703489556908607,-0.1301628351211548) * MODEL2_texOff(vec2(0,1));
[ 397.822][d][vo/gpu-next/libplacebo] [133] res += mat4(0.1784058511257172,-0.1897154748439789,-0.0813948437571526,-0.2006646990776062,-0.3066448271274567,-0.1359203904867172,-0.2612110972404480,-0.3761848509311676,0.1486855298280716,-0.0164698231965303,0.1649738699197769,0.1022843271493912,-0.2213058322668076,-0.0240025985985994,0.1120308935642242,0.2801203727722168) * MODEL3_texOff(vec2(0,1));
[ 397.822][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.1468936353921890,-0.1115343868732452,-0.1008864566683769,0.1679542511701584,0.0682343542575836,-0.0933846607804298,-0.1216487064957619,0.0215309672057629,0.3337945640087128,-0.1034064590930939,-0.0418914258480072,0.2459131777286530,-0.1160580292344093,-0.0482158772647381,0.0026166387833655,-0.0920813977718353) * MODEL4_texOff(vec2(0,1));
[ 397.822][d][vo/gpu-next/libplacebo] [135] res += mat4(0.1546383500099182,-0.2084158211946487,-0.0629161596298218,0.0382492206990719,0.0363818258047104,0.1070410534739494,-0.2440635263919830,0.1225695013999939,0.0082456143572927,0.0509152486920357,-0.0462263077497482,-0.0612664781510830,0.0533767491579056,0.0171542651951313,0.1760072112083435,0.1567699164152145) * MODEL1_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0501260757446289,0.1624817848205566,-0.0994203835725784,0.1496951133012772,-0.0092940349131823,-0.0021811302285641,0.1220175325870514,-0.1029831096529961,-0.1810260862112045,0.0452216267585754,-0.0700483173131943,-0.0073990244418383,0.0233491137623787,0.0639664903283119,0.0033932463265955,0.0026856572367251) * MODEL2_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [137] res += mat4(0.0693031847476959,0.0691053494811058,-0.1194150373339653,0.1388358920812607,0.0268444269895554,-0.0204365402460098,0.0676208585500717,-0.0291143395006657,-0.0574333146214485,-0.0424519926309586,0.1059494689106941,-0.3091750442981720,0.0728080272674561,0.0133934207260609,0.0024368793237954,0.0628931522369385) * MODEL3_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.1174662485718727,-0.0503035746514797,-0.0459302477538586,-0.0110216075554490,-0.1104523167014122,0.0398254394531250,-0.0093393912538886,0.1539675146341324,0.2413459122180939,0.1055762097239494,-0.0573232248425484,-0.1879101991653442,-0.1273294389247894,0.0419450737535954,-0.0199493728578091,-0.2330601662397385) * MODEL4_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.5350001454353333,0.0792906731367111,-0.6070886254310608,0.0410490185022354,-0.0040650777518749,-0.0375015363097191,-0.1596268117427826,0.3763470649719238,-0.1193742081522942,-0.1248183399438858,-0.0616754628717899,-0.0590279363095760,0.0816724002361298,0.1651408672332764,0.2055018842220306,0.2115255743265152) * MODEL1_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [140] res += mat4(0.1698383688926697,0.2165744304656982,0.0250760782510042,0.4334062337875366,0.1194914653897285,-0.0202713608741760,-0.0632882118225098,-0.3159449696540833,0.0858143046498299,0.1173080801963806,-0.0675364583730698,0.1761376708745956,-0.1331922411918640,-0.0177139788866043,-0.0009689324069768,-0.1748967915773392) * MODEL2_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0938843935728073,0.0975184291601181,-0.0466296896338463,-0.1564050465822220,0.1656891852617264,-0.1460378319025040,0.0891223251819611,-0.3876872062683105,0.0940548479557037,0.0884495303034782,-0.0538008287549019,-0.2723111212253571,-0.0747759714722633,0.0591395869851112,0.0179298967123032,0.2336586862802505) * MODEL3_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.0501639097929001,-0.2750373780727386,-0.2088612616062164,-0.0149673502892256,0.0502762719988823,-0.0897532775998116,0.0738222971558571,0.0263248290866613,-0.0247221030294895,-0.1395880430936813,-0.0793300420045853,-0.2120912224054337,-0.0027842561248690,-0.0529177561402321,-0.1180143877863884,-0.0696875900030136) * MODEL4_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [143] res += mat4(0.0743287727236748,0.1019553393125534,0.1403583735227585,-0.1122184395790100,0.0438413321971893,0.0910496637225151,-0.0259966999292374,0.0126460017636418,0.0535386800765991,-0.0354689247906208,0.0292387548834085,-0.0350559130311012,-0.1343073695898056,-0.0303360968828201,-0.0147162759676576,0.3910517692565918) * MODEL1_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [144] res += mat4(0.0296588856726885,0.0881471559405327,0.1373856067657471,0.1019971445202827,0.1808454245328903,-0.0342220216989517,-0.0420944765210152,-0.6015358567237854,-0.0824508517980576,-0.0614192001521587,-0.1511265486478806,-0.0268887262791395,0.1406127065420151,-0.0385055989027023,0.0026537049561739,-0.0619195066392422) * MODEL2_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0815850496292114,0.0216190237551928,-0.0230527929961681,0.1292114406824112,-0.0530555695295334,-0.0551730543375015,0.0577747412025928,-0.4221645891666412,0.1327895075082779,0.0557661950588226,0.0697323381900787,-0.1003646105527878,0.2528257071971893,0.0525607354938984,0.0019721537828445,-0.1408862769603729) * MODEL3_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.0808433815836906,0.0381549894809723,0.3329754471778870,0.0940926894545555,-0.2884401679039001,-0.0174879282712936,0.0848725885152817,0.2811516821384430,0.1665766537189484,0.0793718621134758,-0.0282808560878038,-0.1818253695964813,0.2004560530185699,-0.0653514489531517,0.0182535219937563,-0.1846230179071426) * MODEL4_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.2951025664806366,0.0104029830545187,0.3520583510398865,-0.0831468254327774) * min(res, vec4(0.0));
[ 397.823][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.823][d][vo/gpu-next/libplacebo] [149] }
[ 397.823][d][vo/gpu-next/libplacebo] [150] 
[ 397.823][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.823][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.823][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.823][d][vo/gpu-next/libplacebo] [154] }
[ 397.823][d][vo/gpu-next/libplacebo] [155] 
[ 397.823][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.823][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.823][d][vo/gpu-next/libplacebo] [158] }
[ 397.823][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.823][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.823][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.823][d][vo/gpu-next] cache_load_obj: key(dd4658760eefecec), size(20692), load time(0.153 ms)
[ 397.823][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xdd4658760eefecec
[ 397.823][d][vo/gpu-next] cache_load_obj: key(14eb056c168f512e), size(27709), load time(0.136 ms)
[ 397.823][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.823][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.823][d][vo/gpu-next] cache_save_obj: key(dd4658760eefecec), size(20692)
[ 397.823][d][vo/gpu-next/libplacebo] Spent 0.108 ms creating pipeline
[ 397.823][d][vo/gpu-next] cache_save_obj: key(14eb056c168f512e), size(27709)
[ 397.823][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.823][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.823][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.823][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[ 397.823][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.823][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.823][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.823][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.823][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.823][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.823][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.823][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.823][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.823][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.823][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.823][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.823][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.823][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.823][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.823][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.823][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.823][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.823][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.823][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.823][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.823][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.823][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.823][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.823][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.823][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.823][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.823][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.823][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.823][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.823][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.823][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.823][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.823][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.823][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.823][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.823][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.823][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.823][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.823][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.823][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.823][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.823][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.823][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.823][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.823][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.823][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.823][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.823][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.823][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.823][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.823][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.823][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.823][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.823][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.823][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.823][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.823][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.823][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.823][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.823][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.823][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.823][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.823][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.823][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.823][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.823][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.823][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.823][d][vo/gpu-next/libplacebo] [ 43] #define MODEL1_raw _2 
[ 397.823][d][vo/gpu-next/libplacebo] [ 44] #define MODEL1_pos _3 
[ 397.823][d][vo/gpu-next/libplacebo] [ 45] #define MODEL1_map _3_map 
[ 397.823][d][vo/gpu-next/libplacebo] [ 46] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 47] #define MODEL1_pt _4 
[ 397.823][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_off _5 
[ 397.823][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_mul _6 
[ 397.823][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 54] #define MODEL2_raw _7 
[ 397.823][d][vo/gpu-next/libplacebo] [ 55] #define MODEL2_pos _8 
[ 397.823][d][vo/gpu-next/libplacebo] [ 56] #define MODEL2_map _8_map 
[ 397.823][d][vo/gpu-next/libplacebo] [ 57] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 58] #define MODEL2_pt _9 
[ 397.823][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_off _a 
[ 397.823][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_mul _b 
[ 397.823][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 65] #define MODEL3_raw _c 
[ 397.823][d][vo/gpu-next/libplacebo] [ 66] #define MODEL3_pos _d 
[ 397.823][d][vo/gpu-next/libplacebo] [ 67] #define MODEL3_map _d_map 
[ 397.823][d][vo/gpu-next/libplacebo] [ 68] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 69] #define MODEL3_pt _e 
[ 397.823][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_off _f 
[ 397.823][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_mul _10 
[ 397.823][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 76] #define MODEL4_raw _11 
[ 397.823][d][vo/gpu-next/libplacebo] [ 77] #define MODEL4_pos _12 
[ 397.823][d][vo/gpu-next/libplacebo] [ 78] #define MODEL4_map _12_map 
[ 397.823][d][vo/gpu-next/libplacebo] [ 79] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 80] #define MODEL4_pt _13 
[ 397.823][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_off _14 
[ 397.823][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_mul _15 
[ 397.823][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.823][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.823][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.823][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.823][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.823][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.823][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.823][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.823][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.823][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.823][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.823][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.823][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.823][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.823][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.823][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.823][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.823][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.823][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.823][d][vo/gpu-next/libplacebo] [105] }
[ 397.823][d][vo/gpu-next/libplacebo] [106] 
[ 397.823][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.823][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.823][d][vo/gpu-next/libplacebo] [109] {
[ 397.823][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.1746275871992111,-0.0590484403073788,-0.0089031318202615,-0.0523327812552452);
[ 397.823][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.1618440300226212,0.1998101621866226,0.0363544672727585,-0.0084984162822366,0.0566640384495258,-0.1314530521631241,-0.0012227683328092,0.1731732487678528,-0.0032935268245637,-0.0119246309623122,-0.2567175626754761,-0.0161339771002531,-0.3835589587688446,-0.0752625912427902,-0.0297644697129726,0.1196997761726379) * MODEL1_texOff(vec2(-1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0886861383914948,0.0609822086989880,-0.0716331601142883,0.0216699447482824,0.0389269441366196,-0.1181505918502808,-0.0079563437029719,-0.0071328696794808,0.1834140866994858,0.1714826822280884,0.1122098416090012,0.0143771339207888,-0.0134153505787253,-0.0004706718318630,0.0140235750004649,0.0439790822565556) * MODEL2_texOff(vec2(-1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [113] res += mat4(0.0736068710684776,0.0892857611179352,0.0518068447709084,-0.2669993042945862,0.1540975272655487,-0.0741725414991379,-0.0659676492214203,-0.0897356867790222,-0.1877833753824234,0.0616847351193428,-0.1482483744621277,0.0850742831826210,0.1595470011234283,-0.0773108601570129,-0.0038176451344043,0.0939897075295448) * MODEL3_texOff(vec2(-1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [114] res += mat4(0.1388837993144989,0.0909691229462624,0.0916827619075775,-0.0153467888012528,-0.1304012387990952,0.1147436723113060,0.1621006727218628,0.1165047138929367,0.0530585944652557,0.0884261131286621,-0.2454318404197693,0.0409914329648018,0.0999249517917633,-0.1600988060235977,0.2057314813137054,-0.0503270477056503) * MODEL4_texOff(vec2(-1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.2773551940917969,0.0164455007761717,-0.0282629746943712,-0.0718697905540466,0.0216807797551155,-0.1762721538543701,-0.0330557860434055,-0.0133427372202277,-0.0652035996317863,0.1391272991895676,0.0346835255622864,-0.0829549878835678,-0.0764060765504837,0.0841292068362236,-0.0162147004157305,0.1265232712030411) * MODEL1_texOff(vec2(-1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0384266935288906,0.2094697058200836,0.0434814058244228,0.1931668370962143,-0.0421549454331398,-0.0404144041240215,0.3540922701358795,0.0685768425464630,0.1292446702718735,-0.1113322824239731,-0.0940167158842087,-0.1310491114854813,0.1797087639570236,-0.0236974377185106,-0.0342520624399185,0.1020634621381760) * MODEL2_texOff(vec2(-1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.2036115825176239,0.0493447370827198,0.0103224804624915,-0.0486506260931492,0.1190761774778366,-0.0659776702523232,0.0043487008661032,0.1981432735919952,-0.0161624196916819,0.0095701944082975,-0.1929414868354797,-0.1498128324747086,0.0244247131049633,-0.0294941011816263,-0.1593476682901382,-0.2390577048063278) * MODEL3_texOff(vec2(-1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [118] res += mat4(0.1461759507656097,-0.0333313830196857,0.2513360977172852,-0.0733192265033722,-0.2597442269325256,0.1393863856792450,-0.1596230864524841,0.1083291769027710,0.0289973504841328,0.1984079331159592,-0.2306379973888397,0.2721081972122192,-0.1209474653005600,0.0339374281466007,0.0631600096821785,-0.1763547062873840) * MODEL4_texOff(vec2(-1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.1701353490352631,-0.0010533564491197,0.0417569577693939,-0.1237900033593178,-0.0724800974130630,-0.0098223546519876,-0.1951402276754379,-0.0620634332299232,-0.1501645594835281,-0.2030186504125595,-0.1601891815662384,-0.0469152480363846,-0.2523838579654694,0.1351573020219803,0.0290035661309958,0.1247513815760612) * MODEL1_texOff(vec2(-1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.1715105324983597,-0.0532081499695778,0.0303595159202814,0.0529790408909321,0.0857051908969879,-0.0636811256408691,-0.0519826374948025,-0.0080783143639565,0.1449438333511353,0.0579281374812126,-0.0591283552348614,-0.1420114785432816,0.1017266958951950,0.0260981004685163,-0.1132156699895859,-0.0123310508206487) * MODEL2_texOff(vec2(-1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.1004902496933937,-0.0350278764963150,0.0552739128470421,-0.0165827367454767,0.1286463290452957,-0.0933677330613136,0.1091039329767227,0.0889736041426659,-0.0159152485430241,0.0340360663831234,0.0274331439286470,-0.0117006609216332,0.0735773965716362,0.0681686401367188,-0.1445219516754150,-0.1345229297876358) * MODEL3_texOff(vec2(-1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.1990878432989120,0.0735282748937607,-0.0212247092276812,-0.0660919919610023,-0.0372283123433590,-0.3168454170227051,-0.3716911077499390,0.1660467982292175,-0.0575560033321381,0.1274176537990570,0.1047659814357758,-0.0062028449028730,-0.0264114364981651,-0.1146406605839729,0.2474736869335175,-0.1150093302130699) * MODEL4_texOff(vec2(-1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.1852548420429230,0.0301817897707224,-0.1796306818723679,-0.0539536997675896,-0.0861544609069824,0.0272293239831924,-0.0961528494954109,0.0094875833019614,-0.1388956755399704,-0.0841658860445023,0.0099667571485043,0.0912980064749718,-0.2261441349983215,-0.0699356347322464,-0.0974724367260933,0.0007884879014455) * MODEL1_texOff(vec2(0,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [124] res += mat4(0.0196004565805197,0.0967165976762772,0.0510145463049412,-0.2971990704536438,-0.2075344324111938,-0.1337816119194031,0.0916421487927437,-0.1737786382436752,-0.0646101683378220,0.1077352613210678,-0.0202293433248997,0.1864847391843796,-0.1333149075508118,-0.1826637238264084,0.0886014327406883,-0.0865875110030174) * MODEL2_texOff(vec2(0,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.0359812155365944,0.2326048165559769,-0.0102448798716068,-0.1014230772852898,-0.1426873505115509,0.0583809576928616,0.0015121867181733,0.0304742716252804,-0.2802968323230743,0.2814865410327911,-0.0140944560989738,0.2187573760747910,0.0958401560783386,-0.1116528436541557,0.1284672766923904,-0.1590556055307388) * MODEL3_texOff(vec2(0,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.0153815429657698,0.0977058485150337,0.1896835118532181,-0.0771903172135353,0.1046055704355240,0.1246827319264412,0.1887676268815994,-0.0571716092526913,0.0184322372078896,0.0857969820499420,0.0730322748422623,0.0004153645422775,-0.0335378125309944,0.1585696637630463,0.0140486620366573,0.3349110782146454) * MODEL4_texOff(vec2(0,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.0456557273864746,0.1787832677364349,0.0716037824749947,0.1728865951299667,0.2125745415687561,-0.0017559597035870,0.2089785188436508,0.0148878330364823,0.0034830330405384,0.0543410405516624,-0.0296627804636955,0.3388250172138214,-0.1204711720347404,-0.1216476336121559,-0.0212371069937944,0.0185126140713692) * MODEL1_texOff(vec2(0,0));
[ 397.823][d][vo/gpu-next/libplacebo] [128] res += mat4(0.0322685204446316,0.0645453408360481,-0.0318228974938393,-0.5770997405052185,-0.0841740369796753,-0.0493599027395248,-0.1073398739099503,0.2122568339109421,-0.0047964402474463,-0.2670905888080597,-0.0932159200310707,0.2880645692348480,-0.0302834697067738,0.3417943716049194,-0.0838492363691330,-0.0347214117646217) * MODEL2_texOff(vec2(0,0));
[ 397.823][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0942589715123177,-0.3347375094890594,-0.2089314609766006,-0.0585087798535824,0.0209457054734230,-0.0036193837877363,-0.1519787460565567,0.0261379629373550,-0.4171157181262970,0.1723660975694656,-0.0120002934709191,-0.0741550922393799,0.0614670962095261,-0.3183984160423279,-0.1242398023605347,0.0456036888062954) * MODEL3_texOff(vec2(0,0));
[ 397.823][d][vo/gpu-next/libplacebo] [130] res += mat4(0.2504308819770813,-0.2908189296722412,0.0706233233213425,0.0229402594268322,0.1793572753667831,0.4399637579917908,0.1961695402860641,0.2600020170211792,0.0267500113695860,-0.2956083714962006,-0.1545525789260864,-0.0680101439356804,0.0772314816713333,0.1947140246629715,-0.2304847836494446,0.1559426635503769) * MODEL4_texOff(vec2(0,0));
[ 397.823][d][vo/gpu-next/libplacebo] [131] res += mat4(0.0254084020853043,0.0143640609458089,-0.1011864244937897,-0.0637633875012398,0.0066258278675377,0.0501989498734474,0.0472157597541809,0.0302973743528128,-0.2184672206640244,-0.2747908234596252,0.0688384771347046,-0.0086462032049894,-0.0253418385982513,0.3476903736591339,-0.0135789196938276,-0.1596286147832870) * MODEL1_texOff(vec2(0,1));
[ 397.823][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.1426071077585220,-0.1022232100367546,0.1065651252865791,0.2090902626514435,0.1317799091339111,-0.0591793619096279,0.0090052448213100,-0.0339265801012516,0.1623293608427048,-0.0459783859550953,-0.0751388892531395,0.1850524693727493,-0.0826449170708656,0.0686464533209801,-0.2325639575719833,-0.1469850093126297) * MODEL2_texOff(vec2(0,1));
[ 397.823][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.2151412367820740,-0.0676531940698624,-0.0429317690432072,-0.0649980604648590,0.1936004459857941,0.0002625535998959,0.1684567779302597,0.0310039315372705,-0.0775401666760445,0.0357225723564625,-0.1493204683065414,-0.0788859650492668,0.0883925035595894,-0.1610161513090134,-0.0558772087097168,-0.1929859071969986) * MODEL3_texOff(vec2(0,1));
[ 397.823][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.3081156015396118,0.2264124602079391,0.1303359121084213,-0.1311945021152496,-0.0385647900402546,-0.0088353734463453,0.2643297016620636,0.0507023893296719,0.0390773490071297,-0.2826982438564301,-0.0494790114462376,0.1243329346179962,-0.1640353500843048,0.0131124975159764,-0.0968557670712471,0.1643428951501846) * MODEL4_texOff(vec2(0,1));
[ 397.823][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.0989076346158981,-0.0334014482796192,-0.3113177716732025,0.0686458572745323,-0.1668999195098877,0.0651461035013199,0.0439879596233368,0.3751374185085297,0.0281269066035748,-0.0284191202372313,-0.0185704305768013,-0.0939012020826340,-0.4917090535163879,0.0625381022691727,-0.0613853000104427,0.0779522061347961) * MODEL1_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.0728778094053268,-0.0275109652429819,-0.0418985672295094,0.1163628101348877,0.0401391871273518,-0.0631067529320717,0.0277893338352442,-0.0954257026314735,-0.0470459796488285,0.1047819703817368,0.0913279280066490,0.0249992460012436,0.1136940047144890,-0.2014856785535812,0.0985599905252457,-0.1122722849249840) * MODEL2_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [137] res += mat4(0.0956766679883003,-0.1262397319078445,0.0166769940406084,0.0468945465981960,-0.0274486690759659,-0.0854712650179863,0.1337692588567734,-0.2008243203163147,-0.1521631479263306,0.0212111305445433,0.0383604131639004,-0.0195516720414162,0.0198214910924435,0.1770288348197937,0.0368678346276283,0.1655136495828629) * MODEL3_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [138] res += mat4(0.1180694699287415,0.1039629802107811,0.0403625555336475,-0.1761263161897659,-0.0295404102653265,-0.0512598678469658,0.0247700307518244,-0.0967251881957054,0.1145866885781288,-0.1135821565985680,0.1203542724251747,-0.1189083904027939,0.0908341705799103,0.0376799516379833,0.1457102447748184,-0.0045865699648857) * MODEL4_texOff(vec2(1,-1));
[ 397.823][d][vo/gpu-next/libplacebo] [139] res += mat4(0.1373792886734009,-0.0482295379042625,-0.3178740739822388,0.0062594260089099,0.0326205827295780,-0.1979365795850754,-0.1103377044200897,0.3276640176773071,0.1034870445728302,0.0701611638069153,-0.0422053523361683,-0.0349965393543243,-0.2665976285934448,0.0061737671494484,-0.2535285055637360,0.0681938156485558) * MODEL1_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.1180967763066292,-0.3691545128822327,0.0975397154688835,0.0726222991943359,0.0440486706793308,0.0360046587884426,-0.0320130400359631,-0.2132626920938492,-0.0126434508711100,-0.0057320413179696,0.0735760778188705,-0.0725968852639198,-0.0195002797991037,0.1049626320600510,-0.0148137910291553,0.0647722929716110) * MODEL2_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [141] res += mat4(0.0097092175856233,-0.2370650321245193,0.0297642145305872,0.0636898577213287,0.1022664830088615,-0.2521987259387970,-0.0125537738204002,0.0030122662428766,-0.2327201366424561,0.1294907331466675,-0.0056548668071628,-0.1326764374971390,0.0026329485699534,0.2231305390596390,0.0888321921229362,0.0245353560894728) * MODEL3_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.2372648864984512,-0.2223076969385147,0.1755518466234207,-0.0967209786176682,0.0053516509942710,-0.0253434944897890,0.0676113739609718,0.0832309424877167,0.0885825827717781,-0.1796900480985641,0.0941217839717865,0.0266025383025408,0.1529871970415115,0.0311777200549841,-0.1308124810457230,0.1173249036073685) * MODEL4_texOff(vec2(1,0));
[ 397.823][d][vo/gpu-next/libplacebo] [143] res += mat4(0.2355858385562897,-0.0161250513046980,-0.1165864318609238,-0.0023262593895197,0.0069537642411888,-0.1146456673741341,-0.0612708181142807,0.1533866822719574,0.0011828735005111,-0.0368986092507839,-0.1097171083092690,-0.0303024817258120,-0.0892137959599495,-0.3005513548851013,0.0144686242565513,0.0228804852813482) * MODEL1_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [144] res += mat4(0.0589909143745899,-0.1868754923343658,0.1008629575371742,0.0971835255622864,0.1638525426387787,-0.0178131945431232,0.0825938880443573,-0.0696079060435295,0.0306149572134018,-0.0429666899144650,-0.0001169422612293,0.0969540551304817,0.0822020322084427,0.0986539125442505,-0.0367026105523109,-0.1076621934771538) * MODEL2_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0358192399144173,-0.1379347741603851,0.0518680214881897,-0.1362865269184113,0.0364480391144753,-0.1000291854143143,0.1347571909427643,-0.1371024399995804,-0.0178725812584162,-0.0215145014226437,-0.0576326176524162,-0.0130453128367662,0.0124894492328167,-0.0132130654528737,-0.0579834058880806,0.0457525141537189) * MODEL3_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.3675563037395477,0.1724306344985962,0.1096320524811745,-0.2637751400470734,0.0581088587641716,0.0619215145707130,0.0129340672865510,0.0311038084328175,-0.1626955717802048,0.1913541108369827,0.1168983653187752,-0.0320205204188824,-0.1452983766794205,0.1460324823856354,-0.0126651180908084,0.0847869813442230) * MODEL4_texOff(vec2(1,1));
[ 397.823][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.0064368355087936,-0.0599537827074528,0.7356653809547424,-0.0830979347229004) * min(res, vec4(0.0));
[ 397.823][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.823][d][vo/gpu-next/libplacebo] [149] }
[ 397.823][d][vo/gpu-next/libplacebo] [150] 
[ 397.823][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.824][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.824][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.824][d][vo/gpu-next/libplacebo] [154] }
[ 397.824][d][vo/gpu-next/libplacebo] [155] 
[ 397.824][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.824][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.824][d][vo/gpu-next/libplacebo] [158] }
[ 397.824][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.824][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.824][d][vo/gpu-next] cache_load_obj: key(d4ecf4127689c12f), size(20692), load time(0.153 ms)
[ 397.824][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xd4ecf4127689c12f
[ 397.824][d][vo/gpu-next] cache_load_obj: key(fc3cac53d2306b70), size(27619), load time(0.143 ms)
[ 397.824][d][vo/gpu-next/libplacebo] Spent 0.024 ms compiling shader
[ 397.824][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.824][d][vo/gpu-next] cache_save_obj: key(d4ecf4127689c12f), size(20692)
[ 397.824][d][vo/gpu-next/libplacebo] Spent 0.109 ms creating pipeline
[ 397.824][d][vo/gpu-next] cache_save_obj: key(fc3cac53d2306b70), size(27619)
[ 397.824][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.824][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.824][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.824][d][vo/gpu-next/libplacebo] Spent 0.060 ms allocating slab
[ 397.824][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.824][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.824][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.824][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.824][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.824][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.824][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.824][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.824][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.824][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.824][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.824][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.824][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.824][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.824][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.824][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.824][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.824][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.824][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.824][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.824][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.824][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.824][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.824][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.824][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.824][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.824][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.824][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.824][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.824][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.824][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.824][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.824][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.824][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.824][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.824][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.824][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.824][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.824][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.824][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.824][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.824][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.824][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.824][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.824][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.824][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.824][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.824][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.824][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.824][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.824][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.824][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.824][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.824][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.824][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.824][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.824][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.824][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.824][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.824][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.824][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.824][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.824][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.824][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.824][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.824][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.824][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.824][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.824][d][vo/gpu-next/libplacebo] [ 43] #define MODEL1_raw _2 
[ 397.824][d][vo/gpu-next/libplacebo] [ 44] #define MODEL1_pos _3 
[ 397.824][d][vo/gpu-next/libplacebo] [ 45] #define MODEL1_map _3_map 
[ 397.824][d][vo/gpu-next/libplacebo] [ 46] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 47] #define MODEL1_pt _4 
[ 397.824][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_off _5 
[ 397.824][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_mul _6 
[ 397.824][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 54] #define MODEL2_raw _7 
[ 397.824][d][vo/gpu-next/libplacebo] [ 55] #define MODEL2_pos _8 
[ 397.824][d][vo/gpu-next/libplacebo] [ 56] #define MODEL2_map _8_map 
[ 397.824][d][vo/gpu-next/libplacebo] [ 57] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 58] #define MODEL2_pt _9 
[ 397.824][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_off _a 
[ 397.824][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_mul _b 
[ 397.824][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 65] #define MODEL3_raw _c 
[ 397.824][d][vo/gpu-next/libplacebo] [ 66] #define MODEL3_pos _d 
[ 397.824][d][vo/gpu-next/libplacebo] [ 67] #define MODEL3_map _d_map 
[ 397.824][d][vo/gpu-next/libplacebo] [ 68] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 69] #define MODEL3_pt _e 
[ 397.824][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_off _f 
[ 397.824][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_mul _10 
[ 397.824][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 76] #define MODEL4_raw _11 
[ 397.824][d][vo/gpu-next/libplacebo] [ 77] #define MODEL4_pos _12 
[ 397.824][d][vo/gpu-next/libplacebo] [ 78] #define MODEL4_map _12_map 
[ 397.824][d][vo/gpu-next/libplacebo] [ 79] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 80] #define MODEL4_pt _13 
[ 397.824][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_off _14 
[ 397.824][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_mul _15 
[ 397.824][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.824][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.824][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.824][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.824][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.824][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.824][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.824][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.824][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.824][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.824][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.824][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.824][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.824][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.824][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.824][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.824][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.824][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.824][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.824][d][vo/gpu-next/libplacebo] [105] }
[ 397.824][d][vo/gpu-next/libplacebo] [106] 
[ 397.824][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.824][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.824][d][vo/gpu-next/libplacebo] [109] {
[ 397.824][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0461147427558899,-0.0120034879073501,0.0273515135049820,0.0243768375366926);
[ 397.824][d][vo/gpu-next/libplacebo] [111] res += mat4(0.0060074115172029,0.2207488715648651,0.1044297516345978,-0.0314605683088303,-0.0534808039665222,0.2488775104284286,0.1019420027732849,-0.0809287056326866,-0.0531805455684662,-0.0510390065610409,-0.1737698912620544,0.1856619417667389,0.1017938777804375,0.0702183395624161,0.0870548263192177,-0.0747616738080978) * MODEL1_texOff(vec2(-1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0094744889065623,0.0576100498437881,0.0217750407755375,-0.0027546279598027,0.0273027233779430,-0.0413229689002037,0.0427047610282898,-0.0099019948393106,0.1676833778619766,-0.0397027544677258,0.0294998101890087,-0.1300226300954819,0.0075711007229984,0.0595151297748089,-0.0506487488746643,-0.0480958707630634) * MODEL2_texOff(vec2(-1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [113] res += mat4(0.0599877163767815,0.0105878561735153,-0.0032674681860954,0.1148747205734253,-0.1121257841587067,0.0698131620883942,-0.0219279993325472,-0.0558177195489407,-0.1219292208552361,-0.0235506836324930,0.0883483812212944,0.1164284721016884,-0.0457680597901344,0.1083591654896736,-0.0279626306146383,0.0356098301708698) * MODEL3_texOff(vec2(-1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0599624700844288,-0.1387125104665756,0.0351434312760830,-0.0429556928575039,0.1185617223381996,-0.0643500387668610,0.0634371191263199,0.0653858855366707,-0.0867805853486061,0.0596882253885269,-0.0352161116898060,-0.0785199552774429,-0.0734189078211784,0.0208924449980259,0.0198888536542654,-0.0310864765197039) * MODEL4_texOff(vec2(-1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [115] res += mat4(0.1213063225150108,0.0603364109992981,-0.1066197231411934,-0.0044972454197705,-0.0946354940533638,-0.0499847196042538,-0.0556244365870953,-0.0457266308367252,0.0757296904921532,0.1569635868072510,-0.0482605472207069,-0.0589025728404522,-0.0454733557999134,0.2009361088275909,-0.0487583465874195,0.0871640965342522) * MODEL1_texOff(vec2(-1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0295043271034956,-0.1685239821672440,0.0911383628845215,-0.0060183531604707,-0.1161255836486816,-0.1125246137380600,0.1035758480429649,-0.0314676202833652,-0.0710696205496788,0.0750509351491928,-0.0363083295524120,0.1961462348699570,0.0269433837383986,-0.2264668643474579,-0.0282712746411562,-0.1127226427197456) * MODEL2_texOff(vec2(-1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [117] res += mat4(0.0634349212050438,-0.0331308767199516,0.0653550997376442,-0.0206641592085361,0.0281374659389257,0.0539534986019135,-0.1970105618238449,-0.0121004534885287,-0.0747145786881447,0.1484979540109634,0.0210344269871712,0.0323301590979099,0.0177238471806049,0.0544043704867363,-0.1810936033725739,0.0506396554410458) * MODEL3_texOff(vec2(-1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.0176739711314440,0.1003051027655602,0.0366284996271133,-0.0660326033830643,-0.1114999800920486,0.1471468955278397,-0.0822408050298691,-0.2268454730510712,-0.0063908072188497,0.1641340404748917,0.0085185635834932,0.0284069329500198,0.0844939574599266,-0.0016259928233922,-0.1205195561051369,0.1047934368252754) * MODEL4_texOff(vec2(-1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.0281592495739460,0.1176444217562675,-0.0251336041837931,0.1287141591310501,-0.1425689905881882,0.3827143013477325,-0.0427964143455029,0.1236991658806801,-0.0380968227982521,0.1499413251876831,0.1026009544730186,-0.1796231567859650,0.0922874882817268,-0.0601332411170006,-0.0263096559792757,-0.0226147584617138) * MODEL1_texOff(vec2(-1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0324916876852512,0.0298872813582420,0.0057610399089754,0.0680342614650726,-0.2175364643335342,-0.0588446408510208,0.0082299550995231,0.1559699177742004,0.0651763677597046,-0.0641697347164154,0.0509882383048534,0.0071386056952178,0.0630166083574295,0.0533893406391144,0.1176380813121796,0.0608720183372498) * MODEL2_texOff(vec2(-1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [121] res += mat4(0.1485216915607452,0.0658079534769058,-0.0597689487040043,-0.1286578029394150,-0.0900678932666779,-0.2987190186977386,0.1169696375727654,0.0687731951475143,-0.0511906556785107,0.0251907166093588,0.0045387633144855,0.1111728921532631,0.1211145371198654,0.1511317342519760,-0.0928584635257721,0.0798585116863251) * MODEL3_texOff(vec2(-1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0162846613675356,0.0738218873739243,-0.1343379765748978,-0.1606522500514984,-0.0186370685696602,0.1373590528964996,-0.1318798512220383,0.1430330127477646,0.0887300148606300,-0.0246499236673117,-0.0147760873660445,0.1307861953973770,-0.1824202984571457,-0.0030121221207082,-0.0932729467749596,-0.1720006912946701) * MODEL4_texOff(vec2(-1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.2150996178388596,0.0455644093453884,-0.1078609526157379,0.1735802441835403,-0.1301975548267365,0.1685937047004700,0.1911363303661346,-0.0891376733779907,-0.0364498421549797,0.0667242482304573,0.1034033522009850,0.0173498578369617,-0.0759475678205490,-0.1012467816472054,-0.0661595910787582,-0.0711040720343590) * MODEL1_texOff(vec2(0,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [124] res += mat4(0.0795376002788544,-0.0630012899637222,-0.0254351980984211,0.0470942482352257,0.0814805701375008,0.0405446551740170,0.1365794390439987,-0.1612278670072556,-0.1136572957038879,0.0060544367879629,0.2471180707216263,0.1093329787254333,-0.0581107586622238,0.1631389409303665,0.2181573361158371,0.0142594585195184) * MODEL2_texOff(vec2(0,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.0590384602546692,-0.1919236183166504,0.1077950596809387,0.1355304718017578,-0.0094886217266321,0.1465269774198532,-0.0713021233677864,-0.1617381423711777,0.0031017146538943,-0.0611343868076801,-0.0718012824654579,-0.3817854523658752,0.0940945297479630,-0.1221695318818092,-0.0053516253829002,-0.1660410910844803) * MODEL3_texOff(vec2(0,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [126] res += mat4(0.0535830669105053,-0.0586577504873276,0.0649587139487267,0.0419045761227608,0.0018692668527365,0.0685357227921486,-0.0205108541995287,0.0530773773789406,0.0465269535779953,0.0222215298563242,0.1355331987142563,-0.1228150874376297,0.1565892100334167,-0.0927698835730553,0.0917807593941689,0.1539154350757599) * MODEL4_texOff(vec2(0,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [127] res += mat4(0.0090340804308653,-0.2130286842584610,-0.0233876369893551,-0.0654385164380074,-0.1145231798291206,0.0861955583095551,-0.1860310584306717,-0.1112443357706070,0.0197177473455667,-0.0538864098489285,-0.0266967788338661,0.2040428668260574,-0.2275297194719315,-0.1026256904006004,0.0469926670193672,0.0298950597643852) * MODEL1_texOff(vec2(0,0));
[ 397.824][d][vo/gpu-next/libplacebo] [128] res += mat4(0.1825171560049057,0.0170364808291197,0.2145848870277405,-0.0386943295598030,0.2625264823436737,0.1769100427627563,0.0087655792012811,-0.0004144945705775,-0.1045442447066307,-0.1227875649929047,0.1286858171224594,0.0426650308072567,0.1830211132764816,-0.0603344142436981,0.0272741150110960,0.3765966892242432) * MODEL2_texOff(vec2(0,0));
[ 397.824][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.0752007439732552,0.2408396005630493,0.0992759242653847,0.0315074175596237,0.2725537717342377,-0.1701408177614212,-0.0642304867506027,-0.0587790608406067,-0.1628836244344711,0.1431336998939514,-0.1610722690820694,0.2190662026405334,0.0449019074440002,0.0818963199853897,0.1264521181583405,0.0088969189673662) * MODEL3_texOff(vec2(0,0));
[ 397.824][d][vo/gpu-next/libplacebo] [130] res += mat4(0.0582603104412556,0.0973093137145042,-0.0191185511648655,-0.0215654596686363,-0.0824003890156746,-0.0225835703313351,-0.1518614888191223,-0.2169683575630188,0.0831836536526680,0.0164752900600433,0.0778153613209724,-0.0850613713264465,0.0667014792561531,0.0038516391068697,0.1872790157794952,0.0480948314070702) * MODEL4_texOff(vec2(0,0));
[ 397.824][d][vo/gpu-next/libplacebo] [131] res += mat4(0.0888383761048317,0.0835947766900063,-0.1232017353177071,0.0280101820826530,-0.1994116306304932,-0.0356188192963600,0.1967804878950119,-0.0114974286407232,0.3202255666255951,-0.0016983132809401,-0.0367093719542027,-0.1333489567041397,-0.1250879019498825,-0.1763122975826263,0.0504228882491589,0.0030881476122886) * MODEL1_texOff(vec2(0,1));
[ 397.824][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.0153876990079880,0.0446944907307625,-0.1979818344116211,-0.0534936636686325,0.1451451182365417,0.0568690486252308,-0.2717144191265106,0.0425464622676373,-0.0732646659016609,0.0743831694126129,-0.0530346594750881,-0.0019031401025131,0.1321124881505966,0.1035860851407051,0.0820627361536026,0.1278143078088760) * MODEL2_texOff(vec2(0,1));
[ 397.824][d][vo/gpu-next/libplacebo] [133] res += mat4(0.2153458297252655,0.0391175188124180,-0.0236182156950235,0.0404955409467220,0.0295149832963943,-0.1487762629985809,0.1640791893005371,0.0385955497622490,-0.0274684540927410,0.0448402203619480,0.0230138376355171,0.2305448502302170,0.2349425554275513,0.0347341261804104,-0.1812306940555573,0.0448086783289909) * MODEL3_texOff(vec2(0,1));
[ 397.824][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0821553096175194,-0.2018666416406631,-0.1961932927370071,-0.2490227222442627,-0.0794398412108421,-0.1899710893630981,-0.0585319437086582,0.1173806637525558,0.0690401345491409,0.1784539520740509,-0.0726652741432190,0.0397658273577690,0.1332925111055374,-0.0743199735879898,-0.1693005412817001,-0.0287169832736254) * MODEL4_texOff(vec2(0,1));
[ 397.824][d][vo/gpu-next/libplacebo] [135] res += mat4(-0.1320780515670776,0.1219193637371063,-0.1138207986950874,-0.0141576780006289,0.1283804774284363,0.0673040524125099,-0.0495231337845325,-0.0292650591582060,-0.0581900738179684,-0.0373179689049721,-0.0465314462780952,0.1109184324741364,0.1175744384527206,-0.0329008996486664,-0.1010450571775436,-0.0011986799072474) * MODEL1_texOff(vec2(1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0098679577931762,0.0272576548159122,-0.0567160807549953,0.0065590757876635,0.0122767025604844,-0.0183790959417820,0.0509208813309669,0.0315469652414322,0.1159411296248436,-0.0938494279980659,-0.0296165347099304,-0.1612941622734070,0.0638355463743210,-0.0013110557338223,-0.0045966170728207,-0.0461147353053093) * MODEL2_texOff(vec2(1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0107733188197017,0.0181073453277349,-0.0057433275505900,0.1069890558719635,0.0857119038701057,0.0759622603654861,0.0938105806708336,0.0635568946599960,0.0552852787077427,0.0822926685214043,-0.0221574269235134,-0.1184075251221657,0.0214842744171619,-0.0144939552992582,-0.0300573930144310,-0.0143279479816556) * MODEL3_texOff(vec2(1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [138] res += mat4(0.1226008906960487,-0.0588289275765419,0.1121380403637886,-0.2353355139493942,-0.0671533271670341,0.0539816692471504,-0.0943918377161026,-0.0480185300111771,0.0463513582944870,0.1809400320053101,-0.0320061855018139,0.0128821898251772,-0.0186175126582384,-0.0647647753357887,0.0722306817770004,-0.1342751383781433) * MODEL4_texOff(vec2(1,-1));
[ 397.824][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.0327064730226994,-0.2066194117069244,0.0218781325966120,0.0181390158832073,0.0035486747510731,0.0545527115464211,0.2227300256490707,-0.2350160628557205,-0.0185456071048975,-0.0303886495530605,0.0601501576602459,0.1043350771069527,0.0620208457112312,-0.0458515845239162,-0.0780213847756386,-0.0179665479809046) * MODEL1_texOff(vec2(1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [140] res += mat4(0.0488881096243858,-0.0708610564470291,-0.0012425658060238,-0.0412186346948147,0.0640096217393875,0.0626741796731949,0.0552340559661388,-0.3064629435539246,-0.0292783565819263,0.1167604699730873,-0.1134363487362862,0.1923737972974777,-0.0988217145204544,-0.0147633086889982,0.0631238743662834,-0.1074907258152962) * MODEL2_texOff(vec2(1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [141] res += mat4(0.0131619926542044,-0.2013303041458130,-0.0602233745157719,0.0955137908458710,-0.1319464743137360,0.0221472568809986,-0.1470891684293747,-0.1646981388330460,0.0485235750675201,0.3194743990898132,-0.1101070642471313,-0.2113962918519974,0.0583330467343330,0.0081626567989588,-0.0439963042736053,0.0016609502490610) * MODEL3_texOff(vec2(1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [142] res += mat4(0.1837371736764908,-0.2438327223062515,-0.0704804360866547,-0.2409804314374924,0.0515604801476002,-0.0290824491530657,-0.0245893429964781,0.1603142768144608,0.1606649309396744,-0.2307328581809998,-0.1058155596256256,-0.0788411498069763,0.0303703248500824,-0.0297486875206232,0.0340660288929939,-0.1469554007053375) * MODEL4_texOff(vec2(1,0));
[ 397.824][d][vo/gpu-next/libplacebo] [143] res += mat4(0.0502060949802399,0.0411885306239128,0.0010212846100330,0.0843432620167732,0.0001806462823879,0.0074967266991735,0.0222097355872393,-0.0946598649024963,0.0861231237649918,0.0012705585686490,-0.0371481589972973,0.0006548990495503,0.0356924943625927,-0.0702549368143082,0.0776697769761086,0.1263285875320435) * MODEL1_texOff(vec2(1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.1143549010157585,0.0929083451628685,-0.0439333021640778,-0.1125805154442787,-0.1066882833838463,-0.0348495431244373,-0.0054034423083067,0.1299663782119751,0.0082324920222163,-0.0758538544178009,0.0736239030957222,-0.1355893909931183,0.0710743591189384,0.1680320650339127,-0.0824335813522339,-0.0389037281274796) * MODEL2_texOff(vec2(1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0137959141284227,-0.0202024988830090,-0.0083243101835251,0.0881107375025749,-0.0052221990190446,-0.1068753376603127,0.0263776388019323,0.0399091839790344,-0.1103867068886757,0.1305039525032043,-0.0388842448592186,0.0683066993951797,-0.0747373327612877,0.1004664450883865,-0.0047122188843787,-0.1256082803010941) * MODEL3_texOff(vec2(1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [146] res += mat4(0.0312461499124765,0.0551777333021164,0.0218436680734158,-0.0214927513152361,-0.0168972723186016,-0.0062185809947550,-0.1160231828689575,0.0052660536020994,-0.0647544413805008,0.0234192013740540,-0.0011579070705920,-0.0423905178904533,0.0257901065051556,0.0990991443395615,-0.1329589933156967,-0.0768146812915802) * MODEL4_texOff(vec2(1,1));
[ 397.824][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.8790985941886902,0.0867976248264313,1.2857843637466431,0.2769601047039032) * min(res, vec4(0.0));
[ 397.824][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.824][d][vo/gpu-next/libplacebo] [149] }
[ 397.824][d][vo/gpu-next/libplacebo] [150] 
[ 397.824][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.824][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.824][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.824][d][vo/gpu-next/libplacebo] [154] }
[ 397.824][d][vo/gpu-next/libplacebo] [155] 
[ 397.824][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.824][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.824][d][vo/gpu-next/libplacebo] [158] }
[ 397.824][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.824][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.825][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.825][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.825][d][vo/gpu-next] cache_load_obj: key(af35e30b99a757ff), size(20692), load time(0.152 ms)
[ 397.825][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xaf35e30b99a757ff
[ 397.825][d][vo/gpu-next] cache_load_obj: key(9ec18876e21ca194), size(27382), load time(0.152 ms)
[ 397.825][d][vo/gpu-next/libplacebo] Spent 0.025 ms compiling shader
[ 397.825][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.825][d][vo/gpu-next] cache_save_obj: key(af35e30b99a757ff), size(20692)
[ 397.825][d][vo/gpu-next/libplacebo] Spent 0.193 ms creating pipeline
[ 397.825][d][vo/gpu-next] cache_save_obj: key(9ec18876e21ca194), size(27382)
[ 397.825][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.825][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.825][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.825][d][vo/gpu-next/libplacebo] Spent 0.059 ms allocating slab
[ 397.825][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.825][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.825][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.825][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.825][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.825][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.825][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.825][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.825][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.825][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.825][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.825][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.825][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.825][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.825][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.825][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.825][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.825][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.825][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.825][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.825][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.825][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.825][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.825][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.825][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.825][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.825][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.825][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.825][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.825][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.825][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.825][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.825][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.825][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.825][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.825][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.825][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.825][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.825][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.825][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.825][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.825][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.825][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.825][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.825][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.825][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.825][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.825][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.825][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.825][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.825][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.825][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.825][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.825][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.825][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.825][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.825][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.825][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.825][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.825][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.825][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.825][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.825][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.825][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.825][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.825][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.825][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.825][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.825][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.825][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.825][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.825][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.825][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.825][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.825][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.825][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.825][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.825][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.825][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.826][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.826][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.826][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.826][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.826][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.826][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.826][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.826][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.826][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.826][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.826][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.826][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.826][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.826][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.826][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.826][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.826][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.826][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.826][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.826][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.826][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.826][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.826][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.826][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.826][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.826][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.826][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.826][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.826][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.826][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.826][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.826][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.826][d][vo/gpu-next/libplacebo] [105] }
[ 397.826][d][vo/gpu-next/libplacebo] [106] 
[ 397.826][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.826][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.826][d][vo/gpu-next/libplacebo] [109] {
[ 397.826][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0245896913111210,0.0564524903893471,-0.0258339159190655,-0.0441423952579498);
[ 397.826][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0653484389185905,-0.0171436872333288,-0.2532782256603241,0.0998985320329666,0.0924250781536102,-0.0163434278219938,0.0913933441042900,-0.1827297061681747,-0.0478271320462227,0.0587512925267220,0.1550112813711166,0.1029701605439186,0.0672952756285667,0.0320084653794765,0.2258289009332657,-0.0080792019143701) * MODEL21_texOff(vec2(-1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0188051648437977,0.1536642462015152,-0.0344853997230530,-0.1488827466964722,0.0151132596656680,-0.0673566460609436,-0.0215231124311686,0.0795399621129036,0.1174249723553658,0.1022302508354187,-0.0725360810756683,-0.1190352663397789,-0.0125633934512734,0.1520208865404129,0.0566303916275501,-0.3020266592502594) * MODEL22_texOff(vec2(-1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [113] res += mat4(0.2191436737775803,-0.0607945173978806,0.1564232110977173,0.2435040771961212,0.0963229313492775,-0.0474626980721951,-0.0709689185023308,-0.1175886690616608,0.0223026517778635,-0.1220858544111252,-0.1184478029608727,0.0506237372756004,-0.0162153337150812,0.0082820607349277,0.0274791847914457,0.0843581706285477) * MODEL23_texOff(vec2(-1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [114] res += mat4(-0.0087914550676942,0.0485048890113831,-0.0903512910008430,-0.0246761720627546,0.0823677033185959,-0.0376343242824078,0.1352162361145020,0.1135207340121269,0.1571764796972275,-0.0683304518461227,0.3254932761192322,-0.0424848347902298,-0.0391832776367664,0.0096993092447519,-0.1128944680094719,0.1890618950128555) * MODEL24_texOff(vec2(-1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [115] res += mat4(0.0143719799816608,-0.0904514864087105,0.1176171973347664,0.1804000288248062,0.0743178948760033,0.1240402832627296,0.1509943008422852,-0.1625838577747345,-0.0849058032035828,0.0785433426499367,0.1234269663691521,0.1407991945743561,0.0003905151970685,0.0627029240131378,0.0102879041805863,-0.1734748780727386) * MODEL21_texOff(vec2(-1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0844041407108307,0.0806053727865219,-0.0921724662184715,0.3410502076148987,-0.0075223105959594,-0.1158209443092346,0.0455959849059582,0.0638735145330429,-0.1112278923392296,-0.0356120951473713,-0.0087511669844389,-0.0614690035581589,-0.1354994624853134,0.3176909387111664,0.2936832904815674,-0.1059164479374886) * MODEL22_texOff(vec2(-1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [117] res += mat4(0.1398497223854065,0.0204981938004494,0.0164668224751949,-0.0517952330410480,-0.0288665182888508,-0.1311181634664536,0.4171459078788757,-0.1453948616981506,0.0298577379435301,-0.0949943661689758,-0.0907058566808701,-0.0276026632636786,-0.0896767973899841,0.1484858840703964,0.2206455618143082,-0.0860537812113762) * MODEL23_texOff(vec2(-1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.0335331559181213,0.0025525190867484,-0.1560014337301254,-0.1342071741819382,-0.0677199065685272,-0.0089819738641381,-0.0495180077850819,-0.0632316395640373,-0.2128975391387939,0.0027543848846108,0.1108841449022293,-0.0570502988994122,0.0881383717060089,-0.0195535626262426,0.0762903094291687,-0.1264097839593887) * MODEL24_texOff(vec2(-1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [119] res += mat4(0.0529780499637127,0.1018974334001541,0.0326400659978390,-0.0962158590555191,-0.1468810141086578,-0.0256285909563303,-0.2588896453380585,0.0913029834628105,0.0253914948552847,-0.0553680919110775,0.1593533307313919,-0.0151518126949668,0.0131061058491468,-0.0042189368978143,0.0168147869408131,0.0464231371879578) * MODEL21_texOff(vec2(-1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [120] res += mat4(0.1347013115882874,0.0031280769035220,0.0632375553250313,0.0164458788931370,0.0929609835147858,0.0151070887222886,0.0347167067229748,-0.0317315049469471,-0.0255817957222462,0.0942514836788177,-0.0995384231209755,-0.0500684417784214,-0.0059168981388211,0.0258659869432449,-0.1869609057903290,0.0477692335844040) * MODEL22_texOff(vec2(-1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [121] res += mat4(0.1774889379739761,-0.0709905251860619,-0.0137063981965184,-0.2320486158132553,-0.0582067482173443,0.1536869853734970,-0.0009370255284011,-0.2110949903726578,0.0120139708742499,0.1462446749210358,0.0995438247919083,-0.0193443391472101,-0.0708608105778694,0.0948539301753044,0.0479873456060886,-0.0760522559285164) * MODEL23_texOff(vec2(-1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [122] res += mat4(0.1423541754484177,-0.1337492018938065,-0.1060811132192612,-0.0105242654681206,0.1306200772523880,-0.0282976534217596,-0.0137293385341763,-0.1783144325017929,0.0872784107923508,0.0001822611666285,0.0101514179259539,0.0383956469595432,0.0876951217651367,-0.0862476155161858,0.0772039666771889,0.0118202529847622) * MODEL24_texOff(vec2(-1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [123] res += mat4(0.0319972261786461,-0.0206712689250708,0.0106683243066072,0.1148343607783318,0.0913600474596024,0.0260466169565916,0.0186695586889982,-0.1306256651878357,0.0765640065073967,-0.0614291317760944,0.1938241273164749,-0.0539899244904518,-0.0587648041546345,0.0778395086526871,-0.0711869001388550,0.0332156717777252) * MODEL21_texOff(vec2(0,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.0126498322933912,0.0334200374782085,-0.0785960629582405,-0.3546700179576874,-0.1116795912384987,-0.1195055320858955,0.1249141097068787,-0.1378840357065201,0.0378439798951149,0.1871648728847504,0.0051422608084977,-0.1834005266427994,-0.1288445740938187,0.1087067052721977,0.3449945151805878,-0.3748841583728790) * MODEL22_texOff(vec2(0,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [125] res += mat4(0.0620118416845798,0.1118181794881821,0.0328355953097343,0.0980391725897789,-0.0299117844551802,0.1445594280958176,0.0518078617751598,-0.0655557587742805,0.0243519898504019,0.0146929537877440,0.0193250346928835,-0.0788926407694817,0.0568324290215969,-0.0458735823631287,-0.0368785671889782,0.1402463763952255) * MODEL23_texOff(vec2(0,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.1870654374361038,0.0894448459148407,-0.1889628916978836,-0.0232791528105736,-0.0138780958950520,0.0512575805187225,0.0174714457243681,0.2192083597183228,0.0869019702076912,0.0481701642274857,0.3518438935279846,0.0262693818658590,-0.0312276221811771,-0.0027679880149662,-0.1179760694503784,0.1436907798051834) * MODEL24_texOff(vec2(0,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.1315789818763733,0.0194391217082739,-0.0995545163750648,-0.0072876387275755,0.0138440541923046,0.1586909145116806,0.1120520308613777,-0.6375424265861511,0.1209003403782845,-0.0651459246873856,0.0752716138958931,-0.0102750072255731,-0.0261461716145277,-0.1390973180532455,-0.0382248312234879,-0.0030483892187476) * MODEL21_texOff(vec2(0,0));
[ 397.826][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.4304977953433990,-0.0095329973846674,-0.2512598037719727,0.0471396297216415,-0.1743258684873581,0.2160708457231522,0.0403432995080948,-0.1732864826917648,-0.3874642252922058,0.1046387627720833,-0.2529928982257843,0.0244380701333284,-0.3292799592018127,-0.2356676012277603,-0.2959703505039215,-0.2189486324787140) * MODEL22_texOff(vec2(0,0));
[ 397.826][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0365215316414833,0.1002634093165398,0.0619824491441250,0.1369695365428925,-0.1063488647341728,0.0098725482821465,-0.1356381028890610,-0.5006310343742371,-0.0639387145638466,-0.1120544373989105,0.0129344556480646,0.2065624594688416,0.2725291550159454,-0.0516843423247337,-0.0092691034078598,-0.2097492069005966) * MODEL23_texOff(vec2(0,0));
[ 397.826][d][vo/gpu-next/libplacebo] [130] res += mat4(0.2406554371118546,0.1975058168172836,-0.1539026647806168,-0.0882489830255508,-0.0756465122103691,0.0439450852572918,-0.2869063913822174,-0.1570243090391159,-0.0749546140432358,0.2968116998672485,0.3528815805912018,-0.2398973256349564,0.2514208555221558,0.0626198798418045,0.1455227732658386,0.0944792181253433) * MODEL24_texOff(vec2(0,0));
[ 397.826][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.4595023393630981,-0.2058207839727402,0.0502749308943748,0.3694543838500977,-0.2910492718219757,-0.0441987328231335,-0.4320786893367767,0.2074717730283737,0.3730063438415527,-0.0257667601108551,0.2656162977218628,-0.3614572882652283,-0.0178579371422529,0.0130779799073935,0.1697733700275421,-0.0385593473911285) * MODEL21_texOff(vec2(0,1));
[ 397.826][d][vo/gpu-next/libplacebo] [132] res += mat4(0.1124547794461250,0.0423551425337791,0.4898521006107330,-0.0329426936805248,0.1709355264902115,0.0682674571871758,-0.0483704023063183,0.0013539963401854,0.0816856399178505,-0.0228508021682501,-0.1024779230356216,0.0399373695254326,-0.1708602011203766,-0.0475707314908504,-0.0181731060147285,0.1983705759048462) * MODEL22_texOff(vec2(0,1));
[ 397.826][d][vo/gpu-next/libplacebo] [133] res += mat4(0.1453388035297394,-0.0507464557886124,0.1711730211973190,-0.1609306186437607,0.0158013831824064,-0.0628019198775291,-0.3184438943862915,0.0517499297857285,-0.1600885987281799,-0.0093765668570995,0.1485843211412430,0.1046434864401817,0.1017120182514191,-0.0877534523606300,0.1898654252290726,-0.1564996391534805) * MODEL23_texOff(vec2(0,1));
[ 397.826][d][vo/gpu-next/libplacebo] [134] res += mat4(0.1107233688235283,0.0811155214905739,-0.1743934601545334,0.1445496082305908,-0.0408654026687145,-0.1263519078493118,0.0121899815276265,0.1858384013175964,-0.0182942561805248,0.0504682287573814,0.0897843763232231,0.0821224376559258,0.0429486185312271,-0.0226930510252714,-0.0250590406358242,0.0927384421229362) * MODEL24_texOff(vec2(0,1));
[ 397.826][d][vo/gpu-next/libplacebo] [135] res += mat4(0.0107231596484780,0.0384478829801083,0.0747210234403610,0.0388660915195942,0.0261439718306065,-0.0546189658343792,0.0177107993513346,-0.0028901547193527,0.0029605559539050,0.0865470096468925,0.0161688849329948,0.0452424027025700,0.0247271750122309,-0.0205207131803036,-0.0088375331833959,-0.0019766588229686) * MODEL21_texOff(vec2(1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0094255693256855,-0.0921519324183464,-0.1327351927757263,-0.0381416976451874,-0.0038110411260277,0.0171951055526733,-0.1711906045675278,-0.1367378234863281,0.0920925959944725,-0.0710203573107719,0.0996406897902489,-0.0582377053797245,-0.0266940034925938,0.0448273010551929,-0.1979091763496399,0.1335388720035553) * MODEL22_texOff(vec2(1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [137] res += mat4(0.0238035824149847,-0.0133999036625028,0.0061529395170510,0.1255139410495758,0.0388781055808067,0.0291835684329271,0.0551339872181416,-0.1606706529855728,0.0338330194354057,-0.1037900745868683,-0.0328014530241489,-0.0198868066072464,0.0230250116437674,-0.0231587272137403,0.0623753778636456,0.0465454682707787) * MODEL23_texOff(vec2(1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [138] res += mat4(0.1033568680286407,-0.0034395102411509,-0.0732170641422272,-0.1395775675773621,0.0008408227004111,-0.0524956099689007,0.2917293012142181,0.0606278106570244,0.0586279667913914,-0.0644974112510681,0.2248893529176712,0.1098565012216568,-0.0196710061281919,-0.0490864627063274,-0.0968969017267227,0.1817520260810852) * MODEL24_texOff(vec2(1,-1));
[ 397.826][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.1345648318529129,-0.1313161551952362,-0.1336174458265305,-0.2252556085586548,0.0636816993355751,-0.0965770184993744,0.1143066585063934,0.1710583716630936,-0.0250703692436218,-0.0009792899945751,0.1436624974012375,0.3651139140129089,-0.0845746025443077,0.0219677351415157,0.0115714222192764,-0.1153914406895638) * MODEL21_texOff(vec2(1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0202999673783779,0.0672200024127960,0.1436795294284821,0.0992530584335327,-0.1629952490329742,0.0349263064563274,0.0618989691138268,0.1392581909894943,0.1946942061185837,0.0765725672245026,-0.1634234935045242,0.0089409062638879,-0.0010639271931723,-0.1904647648334503,-0.0474357940256596,0.3164717555046082) * MODEL22_texOff(vec2(1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0075370194390416,0.0082064233720303,0.0952156335115433,-0.0231044236570597,0.0292573478072882,-0.0110807241871953,0.0130898989737034,0.0586067922413349,0.0328429341316223,-0.0809331387281418,0.0385117083787918,0.0483587346971035,-0.0352002419531345,0.1854575872421265,0.1936850994825363,-0.2298589944839478) * MODEL23_texOff(vec2(1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [142] res += mat4(0.0270163342356682,0.0122284442186356,-0.2171431928873062,-0.0998823270201683,-0.1082078143954277,-0.0760262757539749,-0.1542190909385681,0.0349837131798267,-0.0979675129055977,0.0823767483234406,-0.0079912403598428,-0.0388192124664783,-0.0414294898509979,-0.0379936695098877,0.1669883877038956,-0.0869284644722939) * MODEL24_texOff(vec2(1,0));
[ 397.826][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.0828094929456711,0.1256643533706665,-0.0979614257812500,-0.0854950547218323,-0.0014640224399045,0.0192003473639488,0.0466261431574821,-0.1341795623302460,0.0154160819947720,-0.0386534146964550,0.1002370417118073,-0.0650761500000954,0.0323768630623817,0.1333772838115692,-0.1987136155366898,0.1546087563037872) * MODEL21_texOff(vec2(1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [144] res += mat4(0.1159242987632751,0.0006910369265825,0.1308811455965042,-0.0213402658700943,0.0405803546309471,-0.0383512564003468,0.0890353694558144,0.1099917590618134,0.1611964702606201,-0.1116045713424683,0.1646122187376022,0.0474735125899315,0.1015052795410156,0.1022351980209351,0.1142621859908104,-0.0429832041263580) * MODEL22_texOff(vec2(1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [145] res += mat4(0.1612645834684372,-0.0498285554349422,0.0914964154362679,-0.0059407050721347,-0.0165884681046009,-0.0184176061302423,-0.1091514974832535,0.1211658716201782,-0.0366156250238419,0.0675899907946587,-0.0267470702528954,-0.0996635481715202,0.1509227156639099,-0.1126389577984810,0.2691150307655334,-0.1196719333529472) * MODEL23_texOff(vec2(1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.0719074979424477,-0.1210005432367325,-0.0384017266333103,0.1585819125175476,0.0496928170323372,0.1353731751441956,0.0899796411395073,-0.0481677874922752,0.0372412055730820,-0.0392692834138870,0.0295560974627733,0.0012322159018368,-0.0087124463170767,0.0922929421067238,0.0146871637552977,-0.0052666170522571) * MODEL24_texOff(vec2(1,1));
[ 397.826][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.8464692234992981,0.5500837564468384,-0.1248027756810188,0.2187583744525909) * min(res, vec4(0.0));
[ 397.826][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.826][d][vo/gpu-next/libplacebo] [149] }
[ 397.826][d][vo/gpu-next/libplacebo] [150] 
[ 397.826][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.826][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.826][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.826][d][vo/gpu-next/libplacebo] [154] }
[ 397.826][d][vo/gpu-next/libplacebo] [155] 
[ 397.826][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.826][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.826][d][vo/gpu-next/libplacebo] [158] }
[ 397.826][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.826][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.826][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.826][d][vo/gpu-next] cache_load_obj: key(d51dcccb6c78d687), size(20692), load time(0.152 ms)
[ 397.826][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xd51dcccb6c78d687
[ 397.826][d][vo/gpu-next] cache_load_obj: key(dd2cac2b92aaf2a), size(27394), load time(0.162 ms)
[ 397.826][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.826][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.826][d][vo/gpu-next] cache_save_obj: key(d51dcccb6c78d687), size(20692)
[ 397.826][d][vo/gpu-next/libplacebo] Spent 0.110 ms creating pipeline
[ 397.826][d][vo/gpu-next] cache_save_obj: key(dd2cac2b92aaf2a), size(27394)
[ 397.826][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.826][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.826][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.826][d][vo/gpu-next/libplacebo] Spent 0.066 ms allocating slab
[ 397.826][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.826][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.826][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.826][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.826][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.826][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.826][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.826][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.826][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.826][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.826][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.826][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.826][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.826][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.826][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.826][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.826][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.826][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.826][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.826][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.826][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.826][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.826][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.826][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.826][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.826][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.826][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.826][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.826][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.826][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.826][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.826][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.826][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.826][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.826][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.826][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.826][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.826][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.826][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.826][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.826][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.826][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.826][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.826][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.826][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.826][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.826][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.826][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.826][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.826][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.826][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.826][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.826][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.826][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.826][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.826][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.826][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.826][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.826][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.826][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.826][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.826][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.826][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.826][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.826][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.826][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.826][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.826][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.826][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.826][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.826][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.826][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.826][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.826][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.826][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.826][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.826][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.826][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.826][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.826][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.826][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.826][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.826][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.827][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.827][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.827][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.827][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.827][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.827][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.827][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.827][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.827][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.827][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.827][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.827][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.827][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.827][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.827][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.827][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.827][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.827][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.827][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.827][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.827][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.827][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.827][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.827][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.827][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.827][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.827][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.827][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.827][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.827][d][vo/gpu-next/libplacebo] [105] }
[ 397.827][d][vo/gpu-next/libplacebo] [106] 
[ 397.827][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.827][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.827][d][vo/gpu-next/libplacebo] [109] {
[ 397.827][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0175074525177479,-0.0047364882193506,-0.0084411334246397,0.0035256391856819);
[ 397.827][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0480010136961937,-0.1343079656362534,0.0645311027765274,-0.0644031465053558,-0.0538113787770271,-0.0227606464177370,-0.0423174388706684,-0.0261141508817673,-0.1440474241971970,0.1288496255874634,0.1799035966396332,-0.0223238989710808,-0.0740576013922691,0.0981010049581528,-0.1037731990218163,0.0416370891034603) * MODEL21_texOff(vec2(-1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0417819097638130,0.1551035344600677,-0.0239609945565462,0.0304872877895832,-0.0691562667489052,-0.2267636209726334,-0.0630688667297363,-0.0703103616833687,-0.1503293067216873,0.1167647615075111,-0.3796092271804810,-0.0008291414706036,0.0197293329983950,0.3391273021697998,0.1915420293807983,0.0008481143158861) * MODEL22_texOff(vec2(-1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.2060295492410660,-0.0914813131093979,-0.2207963615655899,0.0459092557430267,0.1682387292385101,-0.0664327740669250,-0.3226602971553802,-0.0534421056509018,-0.1546132266521454,-0.1516201794147491,-0.0316327884793282,-0.0623282082378864,-0.1816293448209763,-0.0685993954539299,-0.2880327999591827,-0.0051845279522240) * MODEL23_texOff(vec2(-1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0786298960447311,0.0270987283438444,-0.3566032648086548,0.1891276985406876,0.0286210849881172,0.1369487494230270,-0.1538154333829880,0.1552916914224625,0.0612586475908756,0.0444604717195034,0.1713744103908539,-0.0052093677222729,-0.4477379918098450,0.0646615847945213,0.0873522907495499,0.0386319421231747) * MODEL24_texOff(vec2(-1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [115] res += mat4(0.2086060345172882,-0.1614016145467758,0.0190296415239573,0.0740138590335846,0.1525633186101913,0.0877423286437988,0.0534576699137688,-0.0874929428100586,0.0251203868538141,0.0813786834478378,0.0072769154794514,-0.0213872659951448,-0.1514928340911865,-0.1249638646841049,0.0269498638808727,-0.0403702668845654) * MODEL21_texOff(vec2(-1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0573907643556595,0.1777344793081284,-0.0208020638674498,0.1082416549324989,-0.0066461754031479,-0.1471273750066757,-0.1109659671783447,-0.1967584490776062,0.0520027615129948,0.1744100600481033,-0.0866893455386162,0.0521196126937866,-0.1111962720751762,0.2578849494457245,0.0758958086371422,-0.0219332072883844) * MODEL22_texOff(vec2(-1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0983687564730644,-0.1850960999727249,-0.0071408874355257,-0.1401805728673935,-0.0220640227198601,0.0299275238066912,-0.0515552386641502,0.0965097919106483,-0.1162311807274818,-0.1869183778762817,-0.0949063077569008,-0.0229981746524572,0.2898806333541870,-0.0298093520104885,-0.0481651835143566,-0.0288270357996225) * MODEL23_texOff(vec2(-1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.1003090888261795,0.0436553694307804,0.1775131076574326,-0.1477206498384476,-0.0298471394926310,0.0205325130373240,0.0586276613175869,-0.1037211269140244,-0.0695721209049225,0.0549397654831409,0.0947181135416031,0.0529413968324661,0.0863253995776176,0.0469287596642971,0.0449821725487709,-0.0241899043321609) * MODEL24_texOff(vec2(-1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.1211910247802734,-0.3052413761615753,0.0169579628854990,-0.0641336143016815,0.1699889749288559,0.1745817065238953,0.0080171367153525,0.0268176067620516,0.1161174401640892,0.1034058853983879,-0.1357428133487701,0.1994089782238007,-0.0745746344327927,-0.0363201685249805,0.0364447906613350,0.0110124265775084) * MODEL21_texOff(vec2(-1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0487930662930012,0.0618621483445168,-0.0395322144031525,-0.0195404980331659,-0.0302182529121637,-0.0480493493378162,-0.0577133707702160,-0.1336986720561981,-0.0101361190900207,0.0313749276101589,0.0325442813336849,-0.2634004950523376,-0.0831234455108643,0.1967868804931641,0.0048729451373219,0.1039245948195457) * MODEL22_texOff(vec2(-1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [121] res += mat4(0.0409979224205017,-0.2442563772201538,-0.0236967988312244,-0.3859650790691376,-0.0643352568149567,-0.0728686898946762,0.0049785948358476,-0.1437445580959320,0.1004550606012344,-0.0772348940372467,-0.0482463613152504,-0.3332922458648682,0.0256427358835936,0.1685166358947754,0.0272788256406784,-0.4085102081298828) * MODEL23_texOff(vec2(-1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [122] res += mat4(-0.0211565401405096,-0.1626104116439819,0.0284491907805204,-0.1418842077255249,0.0103359222412109,-0.1527252644300461,-0.0928445905447006,-0.5329686403274536,0.0327462218701839,0.1604103296995163,-0.0178291033953428,0.0588009394705296,0.0411824546754360,-0.0159548502415419,-0.0018045334145427,0.0286312848329544) * MODEL24_texOff(vec2(-1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.0309444386512041,0.0231781564652920,0.1852395534515381,-0.0168346129357815,-0.2314974367618561,-0.0360039956867695,-0.2159185707569122,-0.0130332857370377,-0.5791385173797607,-0.0737100690603256,0.1887456774711609,-0.0219424348324537,-0.1909762620925903,0.1152988150715828,-0.4957872331142426,0.0618326328694820) * MODEL21_texOff(vec2(0,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [124] res += mat4(0.2506857514381409,-0.0043585551902652,-0.1934715062379837,0.0649409368634224,-0.2589422166347504,0.0400143414735794,-0.2337707579135895,0.0399382933974266,-0.1424361616373062,0.0392200648784637,-0.1813862323760986,0.0080322762951255,0.1221851557493210,0.0111790243536234,-0.2193935960531235,0.0059386924840510) * MODEL22_texOff(vec2(0,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.1597285121679306,0.0889686718583107,-0.2236305326223373,0.0588147006928921,0.1574491709470749,-0.0964525118470192,-0.5783151984214783,-0.0340328738093376,0.0633905678987503,0.0708716139197350,0.2274163514375687,-0.1210286617279053,-0.2061548084020615,-0.0207926221191883,-0.3335348963737488,0.0423245169222355) * MODEL23_texOff(vec2(0,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [126] res += mat4(0.0488459095358849,0.1095822602510452,-0.4207163453102112,0.2414125651121140,0.1407435983419418,-0.1845635920763016,-0.1378209739923477,-0.0200054123997688,-0.0694461315870285,-0.0022526558022946,0.1342491358518600,-0.0023073400370777,-0.6095444560050964,-0.0950125902891159,-0.7251784205436707,0.2423328310251236) * MODEL24_texOff(vec2(0,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [127] res += mat4(0.2415496855974197,-0.0585765317082405,0.1593109816312790,0.0626687258481979,0.2224820852279663,-0.2307796925306320,0.0768452435731888,0.0829574316740036,-0.2597571909427643,0.1257913708686829,-0.2896285355091095,0.0643807947635651,0.0096511272713542,0.3747943937778473,-0.2029984444379807,-0.3848374783992767) * MODEL21_texOff(vec2(0,0));
[ 397.827][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.3095230162143707,0.2932464480400085,-0.0855004340410233,0.0083002299070358,0.3269173502922058,-0.0519075430929661,0.3341305553913116,0.3832143247127533,0.1612893491983414,-0.0617025941610336,-0.1096682175993919,0.0501950569450855,-0.2666099369525909,-0.1698767989873886,-0.0136316046118736,0.0491012446582317) * MODEL22_texOff(vec2(0,0));
[ 397.827][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.0336366519331932,0.1908683478832245,0.1038978844881058,0.0770497694611549,0.0243871454149485,-0.1141177415847778,0.1508713364601135,0.0266605950891972,-0.1041049361228943,-0.0613549947738647,-0.1496941000223160,-0.0195678863674402,-0.1927543431520462,0.5222921967506409,-0.0823149234056473,-0.1889417171478271) * MODEL23_texOff(vec2(0,0));
[ 397.827][d][vo/gpu-next/libplacebo] [130] res += mat4(0.1135266348719597,-0.0783745273947716,0.2007993757724762,-0.0049735582433641,-0.0252500716596842,-0.3737607002258301,-0.0556491278111935,0.0795422121882439,0.0116529790684581,0.0503573492169380,0.1911917924880981,0.2337296158075333,0.1673430800437927,-0.0949500054121017,0.2264642864465714,-0.0315525829792023) * MODEL24_texOff(vec2(0,0));
[ 397.827][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.2343485802412033,-0.0328138172626495,-0.1651944816112518,0.0622981637716293,-0.1078934818506241,0.2200268507003784,0.0088709210976958,0.0555980317294598,0.2523943483829498,-0.1903018802404404,-0.0166855063289404,0.2306086122989655,0.1289296597242355,0.2200663685798645,0.0551473647356033,-0.3149621486663818) * MODEL21_texOff(vec2(0,1));
[ 397.827][d][vo/gpu-next/libplacebo] [132] res += mat4(0.0586751662194729,-0.0210384558886290,-0.0078766560181975,0.1684098541736603,-0.0545115098357201,0.0242117270827293,0.1112878993153572,-0.4243190884590149,-0.0121069345623255,0.1292012184858322,0.0321275703608990,-0.1330144554376602,-0.0052329269237816,-0.0779407694935799,-0.0065684798173606,0.0945652946829796) * MODEL22_texOff(vec2(0,1));
[ 397.827][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.0808705165982246,0.2083110064268112,0.0547761693596840,0.0629885494709015,-0.0259653050452471,-0.1610417962074280,0.0354182496666908,0.2539297342300415,0.0564526654779911,0.0116546684876084,0.0827979519963264,-0.0922497585415840,0.1620248705148697,-0.1411380916833878,0.0317143760621548,-0.4140007793903351) * MODEL23_texOff(vec2(0,1));
[ 397.827][d][vo/gpu-next/libplacebo] [134] res += mat4(-0.0079142926260829,0.1761204898357391,0.1732344329357147,-0.4134854972362518,0.0666125044226646,-0.1625220179557800,-0.0747211650013924,-0.4102232456207275,0.0521195605397224,0.0368953160941601,0.0288705062121153,-0.2275051027536392,0.0675053298473358,-0.1371494978666306,0.1073148176074028,-0.3119347989559174) * MODEL24_texOff(vec2(0,1));
[ 397.827][d][vo/gpu-next/libplacebo] [135] res += mat4(0.0425270758569241,-0.0121485972777009,0.0492199510335922,-0.0782034844160080,0.0106110442429781,0.0853165537118912,0.1500597000122070,-0.0181301571428776,-0.0109501825645566,-0.1417730301618576,-0.0842627733945847,-0.0908534601330757,-0.1158139705657959,0.0286298859864473,-0.3223731517791748,0.1028749719262123) * MODEL21_texOff(vec2(1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0805253610014915,0.0109049547463655,-0.0458406098186970,-0.0049118604511023,0.0904860198497772,-0.0089266989380121,-0.0167122501879930,0.0270462818443775,-0.1938736587762833,0.1555731147527695,-0.0593015253543854,0.0280027929693460,0.1048444956541061,-0.0406579747796059,-0.0615625157952309,-0.0331872440874577) * MODEL22_texOff(vec2(1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.2327779531478882,0.0329849272966385,-0.1623415797948837,0.0083680246025324,0.1032922863960266,-0.0156815294176340,-0.1052279546856880,-0.0187984835356474,0.0758428871631622,-0.0048917727544904,0.0344694219529629,0.0444982834160328,-0.1529745906591415,-0.0052001937292516,-0.1587759703397751,-0.0336425453424454) * MODEL23_texOff(vec2(1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.0257025174796581,-0.0040141055360436,-0.3719777464866638,0.0573239177465439,-0.0020842440426350,-0.0197563245892525,-0.0304100364446640,0.1044722199440002,-0.0242116656154394,0.0490843094885349,-0.0778329670429230,0.0320032611489296,-0.3334720730781555,0.1162063479423523,-0.1302220076322556,0.0898239836096764) * MODEL24_texOff(vec2(1,-1));
[ 397.827][d][vo/gpu-next/libplacebo] [139] res += mat4(0.0875360742211342,-0.0629862695932388,0.0866272896528244,0.1105561330914497,-0.0112289702519774,0.1278416514396667,0.0802348330616951,0.0050262757577002,-0.0343172699213028,0.0421633198857307,-0.0134135019034147,-0.0774805471301079,-0.0790307223796844,-0.0922354683279991,0.0584085583686829,-0.0520883835852146) * MODEL21_texOff(vec2(1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [140] res += mat4(0.0629564747214317,-0.1351821273565292,0.0057818810455501,0.1968969553709030,-0.0816558375954628,0.0789685621857643,-0.0734527409076691,-0.1895557194948196,-0.0863811969757080,0.0354627221822739,0.0529425740242004,-0.0985165610909462,-0.0472868420183659,-0.0534044057130814,0.0101880514994264,0.0065605933777988) * MODEL22_texOff(vec2(1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [141] res += mat4(0.0411140210926533,0.0144859859719872,0.0901028364896774,-0.0718500241637230,0.0292038619518280,-0.0150161208584905,0.0004369194793981,0.0518936663866043,-0.2220512777566910,-0.2208508253097534,0.0055782920680940,0.2157303839921951,-0.0984404012560844,-0.0246922131627798,0.1181163340806961,0.0611343681812286) * MODEL23_texOff(vec2(1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [142] res += mat4(0.0351291187107563,-0.2039385437965393,-0.0989137813448906,-0.1192292794585228,-0.0524929203093052,-0.1637245267629623,0.0460922606289387,-0.0161760784685612,-0.0679446235299110,-0.0270092394202948,-0.0426139943301678,0.0696119517087936,0.1520447134971619,0.0686637833714485,-0.0776527896523476,-0.1115356981754303) * MODEL24_texOff(vec2(1,0));
[ 397.827][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.0046180183999240,0.0369833558797836,0.0404264405369759,-0.0623192936182022,0.0854179039597511,-0.0458836145699024,-0.0178796537220478,0.1139144077897072,0.1425072401762009,-0.0549886040389538,-0.0429124943912029,-0.1102680116891861,-0.0140088936313987,-0.1966787874698639,-0.0187178570777178,-0.2688732743263245) * MODEL21_texOff(vec2(1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0201405826956034,-0.0003204592503607,0.0155736273154616,-0.0407894887030125,0.0052045774646103,-0.0149925695732236,0.1135430261492729,-0.1049654409289360,-0.1113180741667747,0.1370368748903275,0.0468706823885441,0.0490963570773602,0.0591805279254913,-0.1837010383605957,-0.0099695781245828,0.0272822417318821) * MODEL22_texOff(vec2(1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.0838884636759758,0.0723510459065437,-0.0194400921463966,-0.2932559549808502,-0.0946610793471336,0.0256035514175892,-0.0332412123680115,0.0286165382713079,0.1424466520547867,-0.1534937918186188,0.0124909579753876,0.0654073581099510,0.0635404512286186,-0.0278029665350914,-0.0532654747366905,-0.1842209249734879) * MODEL23_texOff(vec2(1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [146] res += mat4(0.0477955602109432,0.0092833358794451,0.1226876825094223,-0.1572142392396927,-0.0288075916469097,-0.0426263399422169,-0.0582065619528294,-0.1701389253139496,0.0516848787665367,-0.0004363019252196,-0.0101538971066475,-0.0517657250165939,0.0250354222953320,-0.0702493637800217,0.0250621661543846,-0.2345757335424423) * MODEL24_texOff(vec2(1,1));
[ 397.827][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(-0.0156004903838038,0.2320144325494766,0.0725832730531693,0.1990820169448853) * min(res, vec4(0.0));
[ 397.827][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.827][d][vo/gpu-next/libplacebo] [149] }
[ 397.827][d][vo/gpu-next/libplacebo] [150] 
[ 397.827][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.827][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.827][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.827][d][vo/gpu-next/libplacebo] [154] }
[ 397.827][d][vo/gpu-next/libplacebo] [155] 
[ 397.827][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.827][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.827][d][vo/gpu-next/libplacebo] [158] }
[ 397.827][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.827][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.827][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.827][d][vo/gpu-next] cache_load_obj: key(9001a084e7a87fb8), size(20692), load time(0.166 ms)
[ 397.827][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x9001a084e7a87fb8
[ 397.827][d][vo/gpu-next] cache_load_obj: key(5884ad4fac991e85), size(27306), load time(0.135 ms)
[ 397.827][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.827][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.827][d][vo/gpu-next] cache_save_obj: key(9001a084e7a87fb8), size(20692)
[ 397.827][d][vo/gpu-next/libplacebo] Spent 0.122 ms creating pipeline
[ 397.827][d][vo/gpu-next] cache_save_obj: key(5884ad4fac991e85), size(27306)
[ 397.827][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.827][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.827][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.827][d][vo/gpu-next/libplacebo] Spent 0.084 ms allocating slab
[ 397.827][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.827][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.827][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.827][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.827][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.827][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.827][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.827][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.827][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.827][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.827][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.827][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.827][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.827][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.827][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.827][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.827][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.827][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.827][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.827][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.827][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.827][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.827][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.828][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.828][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.828][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.828][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.828][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.828][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.828][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.828][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.828][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.828][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.828][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.828][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.828][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.828][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.828][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.828][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.828][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.828][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.828][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.828][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.828][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.828][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.828][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.828][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.828][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.828][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.828][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.828][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.828][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.828][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.828][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.828][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.828][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.828][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.828][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.828][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.828][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.828][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.828][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.828][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.828][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.828][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.828][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.828][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.828][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.828][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.828][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.828][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.828][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.828][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.828][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.828][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.828][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.828][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.828][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.828][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.828][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.828][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.828][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.828][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.828][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.828][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.828][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.828][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.828][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.828][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.828][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.828][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.828][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.828][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.828][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.828][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.828][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.828][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.828][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.828][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.828][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.828][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.828][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.828][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.828][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.828][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.828][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.828][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.828][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.828][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.828][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.828][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.828][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.828][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.828][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.828][d][vo/gpu-next/libplacebo] [105] }
[ 397.828][d][vo/gpu-next/libplacebo] [106] 
[ 397.828][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.828][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.828][d][vo/gpu-next/libplacebo] [109] {
[ 397.828][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0322209298610687,0.0264516212046146,0.0015088251093403,0.0198396854102612);
[ 397.828][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.0530160404741764,0.1508722901344299,0.1079955622553825,0.0300025809556246,0.0137404110282660,0.2337019592523575,-0.0001720965083223,-0.0518192835152149,0.1454936116933823,-0.2925386726856232,-0.1483015716075897,-0.2183369100093842,0.1184778586030006,-0.0184598658233881,-0.1061896607279778,-0.0226287040859461) * MODEL21_texOff(vec2(-1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [112] res += mat4(-0.0183052942156792,0.0004932378651574,-0.0723117366433144,0.0028606737032533,-0.0634466037154198,0.0581901520490646,0.0271214656531811,0.0534862615168095,0.0138405198231339,-0.3260147571563721,-0.1395155340433121,0.1717628836631775,-0.1574239730834961,-0.1369933933019638,-0.0663596242666245,-0.2833394110202789) * MODEL22_texOff(vec2(-1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.0404975377023220,-0.0229157768189907,-0.0761882290244102,0.1311472654342651,-0.1061947420239449,0.2193466871976852,0.0951497182250023,-0.0171177443116903,-0.1114674806594849,0.1779413372278214,0.1603179872035980,-0.0140460235998034,0.1482050716876984,-0.2464582920074463,-0.0311267375946045,-0.0210690945386887) * MODEL23_texOff(vec2(-1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0411420539021492,0.2096384465694427,0.0036847917363048,0.1137418970465660,0.1077406853437424,0.0430511012673378,0.0215481817722321,-0.0184625554829836,0.0347729474306107,-0.1028166636824608,0.0370523072779179,0.0183408390730619,0.0857607945799828,0.0635680630803108,-0.0434173494577408,-0.0509345121681690) * MODEL24_texOff(vec2(-1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.0628312230110168,-0.0071972454898059,0.0958025157451630,-0.0055120233446360,0.0270797852426767,0.1018741577863693,-0.0697955936193466,-0.0328848473727703,0.1482519358396530,-0.0829186439514160,-0.2041188329458237,-0.0879839807748795,-0.0344496890902519,-0.0157856084406376,0.0729290023446083,0.0624026916921139) * MODEL21_texOff(vec2(-1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [116] res += mat4(-0.0084484210237861,-0.0809915140271187,-0.0856484770774841,0.1477434188127518,-0.0907665193080902,0.1726264655590057,0.0889183878898621,0.0156439393758774,-0.0045705796219409,-0.0618642270565033,-0.0346939004957676,-0.1018707305192947,0.0548687539994717,-0.2812403142452240,-0.2031181603670120,-0.3518426716327667) * MODEL22_texOff(vec2(-1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.1798414736986160,0.0591769218444824,-0.0332097299396992,-0.0413125976920128,0.0545238070189953,0.2820108532905579,0.2421070784330368,-0.1302634924650192,-0.1245646178722382,0.1002791821956635,0.0487757101655006,-0.1013780161738396,0.1054092422127724,-0.0703308358788490,-0.2543160915374756,-0.0541868321597576) * MODEL23_texOff(vec2(-1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.0330585017800331,-0.1302013099193573,0.0702736526727676,0.0257151890546083,0.1160490810871124,-0.0964858531951904,0.1320511698722839,0.0320505425333977,0.0665329173207283,0.1582752317190170,-0.0340278595685959,-0.0223891083151102,-0.1221479028463364,-0.0478289835155010,0.0164608545601368,-0.1922803521156311) * MODEL24_texOff(vec2(-1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [119] res += mat4(-0.0674839541316032,0.0696917325258255,0.0827664285898209,-0.1570045053958893,0.0026943956036121,-0.1184315383434296,-0.0404608882963657,0.1293547600507736,-0.0501571632921696,0.1074772700667381,0.1571674346923828,-0.0849431455135345,0.0322515070438385,-0.0208934992551804,-0.0687796249985695,0.0027464493177831) * MODEL21_texOff(vec2(-1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [120] res += mat4(-0.0875721350312233,-0.0539079532027245,-0.1337553262710571,-0.0391536392271519,-0.0636158958077431,0.0300986766815186,0.0288348458707333,-0.0602884255349636,0.0432372651994228,0.1203548982739449,-0.0314353667199612,0.0611286833882332,-0.0019649290479720,-0.4116021394729614,0.0751012042164803,-0.0681410133838654) * MODEL22_texOff(vec2(-1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0506019368767738,0.0832111611962318,-0.0817352831363678,0.0643434152007103,0.0229837223887444,-0.0083409436047077,-0.1267816722393036,-0.0323165282607079,0.0745629370212555,-0.0153434760868549,-0.0776494517922401,-0.1025954559445381,0.1386459916830063,-0.0643362775444984,-0.0885498970746994,-0.1540923863649368) * MODEL23_texOff(vec2(-1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0369294807314873,-0.0685142800211906,0.0703863650560379,-0.0624157153069973,0.0251213982701302,-0.1587577909231186,0.0380910038948059,-0.1060256287455559,-0.0499012991786003,-0.1958295255899429,0.0012570954859257,0.0329552628099918,-0.0511822514235973,0.0069345394149423,-0.0517220087349415,-0.1371594667434692) * MODEL24_texOff(vec2(-1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [123] res += mat4(-0.2144107818603516,0.0572940744459629,0.1245516613125801,-0.1558901667594910,0.1010975241661072,0.1461923420429230,0.2301903963088989,0.0042080101557076,0.2017006427049637,0.1154438331723213,0.1365993767976761,0.0936587005853653,0.1147650480270386,-0.0912983268499374,-0.2377387881278992,0.1031112894415855) * MODEL21_texOff(vec2(0,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [124] res += mat4(-0.1348955631256104,0.0063952310010791,0.0809691250324249,-0.3488569259643555,0.0018600567709655,0.2283053100109100,0.3346227109432220,0.0810002237558365,0.1381026208400726,-0.1586197018623352,-0.1493727862834930,-0.0080615626648068,0.2790731191635132,0.1635467112064362,-0.0205844342708588,-0.3493023812770844) * MODEL22_texOff(vec2(0,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [125] res += mat4(-0.2744439244270325,-0.0908561423420906,-0.1111367195844650,-0.0539409518241882,-0.2106570303440094,-0.0930743291974068,-0.1867243498563766,-0.2687616646289825,-0.1963448822498322,0.2258308678865433,-0.0802407786250114,-0.1296043097972870,-0.0183895789086819,0.0813405588269234,0.3084571659564972,-0.0820955112576485) * MODEL23_texOff(vec2(0,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [126] res += mat4(-0.1263575851917267,-0.1224222779273987,-0.3099909126758575,-0.0810781344771385,0.0150673277676105,-0.1120872423052788,-0.2024748623371124,0.0504282303154469,0.1184204742312431,-0.1275306195020676,0.0165965296328068,-0.0285159740597010,0.3149848580360413,0.0531087182462215,-0.1000080406665802,0.1520777642726898) * MODEL24_texOff(vec2(0,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [127] res += mat4(0.0988607704639435,0.2705852687358856,-0.0458564683794975,-0.2002659887075424,0.0676436498761177,0.1225655823945999,0.1513168811798096,0.0127448141574860,0.1395792216062546,0.1041213348507881,-0.1162526980042458,-0.0052993716672063,-0.3183398842811584,0.1901548355817795,0.1058142036199570,-0.1314207315444946) * MODEL21_texOff(vec2(0,0));
[ 397.828][d][vo/gpu-next/libplacebo] [128] res += mat4(0.2395960092544556,-0.0347728766500950,0.1078833714127541,-0.1705690771341324,0.0879031419754028,-0.0534480623900890,-0.2954249680042267,0.1910795867443085,0.3147174417972565,-0.3278053104877472,-0.3025035560131073,0.0993809029459953,0.0006810872582719,-0.1995042115449905,0.0378547832369804,0.0394249707460403) * MODEL22_texOff(vec2(0,0));
[ 397.828][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.2336557209491730,-0.1914284378290176,-0.0982096940279007,-0.1486793309450150,0.0251029971987009,0.1151035204529762,0.3038396537303925,-0.3642590939998627,-0.1017010137438774,0.0848965942859650,0.0779169350862503,-0.0596626140177250,-0.0164716746658087,0.1325942575931549,0.2201516777276993,-0.2742975950241089) * MODEL23_texOff(vec2(0,0));
[ 397.828][d][vo/gpu-next/libplacebo] [130] res += mat4(0.0552700236439705,-0.0548806600272655,0.0237489510327578,-0.0824937969446182,-0.0719374418258667,-0.0813402086496353,-0.0484442524611950,0.2009104937314987,0.2729600369930267,0.1242219656705856,-0.2219321429729462,0.1690969467163086,0.1500553339719772,-0.3050956428050995,-0.0601590164005756,0.0118164755403996) * MODEL24_texOff(vec2(0,0));
[ 397.828][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.3088014125823975,-0.1880643069744110,0.1325395852327347,-0.2593610584735870,-0.1572742313146591,-0.2605040371417999,0.0285934992134571,-0.1921141892671585,0.1918125301599503,0.0063233086839318,-0.2360381335020065,-0.1077111288905144,0.1085546314716339,-0.1828500181436539,-0.2988452613353729,-0.2674467861652374) * MODEL21_texOff(vec2(0,1));
[ 397.828][d][vo/gpu-next/libplacebo] [132] res += mat4(0.0630771294236183,0.0219040717929602,-0.2678235471248627,-0.3158545792102814,-0.0291154161095619,0.1910605579614639,0.1425401717424393,0.1418512165546417,0.1296347826719284,-0.0939061045646667,0.0427730903029442,-0.0429896786808968,0.0841549038887024,-0.2298574745655060,0.0291986372321844,-0.1249061375856400) * MODEL22_texOff(vec2(0,1));
[ 397.828][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.1636287420988083,-0.0491767860949039,-0.0431687235832214,-0.0443967692553997,0.0027327144052833,-0.0245789773762226,0.1065182983875275,0.0221976581960917,0.1379709690809250,0.2146781980991364,-0.0792908221483231,-0.1311895847320557,0.1666043847799301,0.0335677005350590,0.0754606649279594,-0.1501446813344955) * MODEL23_texOff(vec2(0,1));
[ 397.828][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0050693098455667,-0.3240902125835419,0.2708447575569153,0.0220780055969954,0.2297111004590988,-0.2022836506366730,0.0569209195673466,0.1032692492008209,0.0925855338573456,-0.1065756380558014,-0.0545122437179089,0.0204759929329157,0.0958036556839943,0.0408487804234028,-0.0863467901945114,0.0373502299189568) * MODEL24_texOff(vec2(0,1));
[ 397.828][d][vo/gpu-next/libplacebo] [135] res += mat4(0.0117724249139428,-0.0966687798500061,0.0036357061471790,-0.1439649909734726,-0.0409303158521652,0.2080791145563126,0.2088145464658737,-0.0657911822199821,0.0218505356460810,-0.0410717502236366,-0.0386278405785561,-0.1001793965697289,0.1395841091871262,-0.0209278501570225,-0.1053753495216370,0.0859574899077415) * MODEL21_texOff(vec2(1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [136] res += mat4(0.0316530689597130,0.1942488402128220,0.1667992770671844,0.0086539248004556,-0.0339049436151981,0.0216808915138245,-0.0097327483817935,-0.0859820470213890,0.1688135266304016,-0.1057464107871056,0.0628469213843346,0.1916459649801254,0.1026921048760414,0.0781133994460106,0.2098673582077026,-0.2724682986736298) * MODEL22_texOff(vec2(1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [137] res += mat4(-0.0197118408977985,-0.0844836458563805,-0.2128427624702454,0.0575646571815014,0.0259915478527546,0.1625764220952988,-0.0501341857016087,0.0790882632136345,-0.0002396845084149,0.1174409762024879,0.2295692265033722,0.0973160043358803,0.1128536313772202,-0.1348016113042831,-0.1106924489140511,-0.0142235904932022) * MODEL23_texOff(vec2(1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [138] res += mat4(-0.0139530375599861,-0.1116035208106041,-0.0169805884361267,-0.0464132912456989,0.1487662643194199,-0.0748727247118950,-0.1022699475288391,0.0346220768988132,0.0078831007704139,0.1502268165349960,0.0624455884099007,-0.0352291613817215,0.1165885850787163,0.0162278618663549,0.1126855537295341,0.1583648175001144) * MODEL24_texOff(vec2(1,-1));
[ 397.828][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.0118060670793056,0.1872533410787582,0.1929165571928024,-0.2203991413116455,0.0921460762619972,0.1884368211030960,0.2417603880167007,-0.0244794040918350,0.1441189944744110,0.1210942715406418,0.0442231670022011,-0.1021122336387634,0.0995335504412651,-0.0808146148920059,-0.0675391182303429,-0.2205165922641754) * MODEL21_texOff(vec2(1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [140] res += mat4(0.2506988048553467,-0.1092722862958908,-0.0948333665728569,0.0986849516630173,-0.0468105189502239,-0.1879943013191223,-0.0441485792398453,-0.0022310914937407,-0.0247033983469009,-0.0390827022492886,-0.0580774508416653,0.0529652349650860,0.2445233762264252,-0.0953920409083366,0.0605605505406857,-0.3391091823577881) * MODEL22_texOff(vec2(1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [141] res += mat4(-0.0258255582302809,0.0547841787338257,0.0112547175958753,0.0993019714951515,0.0071678487583995,0.1219164356589317,0.2528086602687836,-0.1376780271530151,0.1800783425569534,-0.1342762410640717,0.0575909130275249,0.4046945869922638,-0.2086132466793060,-0.1277881860733032,-0.3664705157279968,-0.0916004106402397) * MODEL23_texOff(vec2(1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.0434218458831310,-0.0139228422194719,0.1392665505409241,0.0490094572305679,-0.0911372527480125,-0.0906111672520638,-0.0729891657829285,0.2243857085704803,0.0589152462780476,0.0206097103655338,-0.0064465459436178,0.0213193651288748,0.1540566384792328,0.0360502265393734,-0.0973282009363174,0.2366738021373749) * MODEL24_texOff(vec2(1,0));
[ 397.828][d][vo/gpu-next/libplacebo] [143] res += mat4(0.1767374128103256,-0.1210842952132225,0.0482791028916836,-0.2874787747859955,-0.0268840324133635,0.0543563403189182,-0.0558155216276646,-0.0116835655644536,0.0583704039454460,0.1446028500795364,-0.1986986249685287,0.1167799085378647,0.1738255918025970,0.0403821915388107,0.0138144548982382,0.2506314218044281) * MODEL21_texOff(vec2(1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [144] res += mat4(0.1281960159540176,0.0038417505566031,-0.0608053095638752,0.1497981846332550,-0.0436575599014759,0.0453804023563862,-0.0118483807891607,-0.0707118809223175,-0.0960147008299828,-0.0204534474760294,0.0147367604076862,-0.1484529525041580,0.2489298135042191,-0.0377908535301685,0.0409927926957607,-0.1853159219026566) * MODEL22_texOff(vec2(1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [145] res += mat4(0.0719330757856369,-0.0757265016436577,-0.0676425397396088,0.0000323264430335,-0.0321726612746716,0.1389194577932358,0.0610749758780003,0.0341844521462917,0.1036318168044090,0.1737107783555984,0.0246418360620737,0.2469015270471573,-0.0115509266033769,0.0708109065890312,0.0838148370385170,-0.1665687412023544) * MODEL23_texOff(vec2(1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [146] res += mat4(0.0426297709345818,0.1220960840582848,0.1911008507013321,0.1121460720896721,0.1469508111476898,-0.0308260414749384,-0.0801657736301422,0.1645783036947250,0.0911497324705124,-0.0325943157076836,0.0339022539556026,-0.0386684909462929,-0.0751888975501060,-0.1183962002396584,-0.0296682696789503,0.1590248346328735) * MODEL24_texOff(vec2(1,1));
[ 397.828][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.0828684195876122,0.1087924838066101,0.2538014650344849,0.2789690494537354) * min(res, vec4(0.0));
[ 397.828][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.828][d][vo/gpu-next/libplacebo] [149] }
[ 397.828][d][vo/gpu-next/libplacebo] [150] 
[ 397.828][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.828][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.828][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.828][d][vo/gpu-next/libplacebo] [154] }
[ 397.828][d][vo/gpu-next/libplacebo] [155] 
[ 397.828][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.828][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.828][d][vo/gpu-next/libplacebo] [158] }
[ 397.828][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.828][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.828][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.828][d][vo/gpu-next] cache_load_obj: key(323d18451b11b532), size(20692), load time(0.155 ms)
[ 397.828][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x323d18451b11b532
[ 397.828][d][vo/gpu-next] cache_load_obj: key(ff86af73c26a5a4a), size(27256), load time(0.163 ms)
[ 397.828][d][vo/gpu-next/libplacebo] Spent 0.024 ms compiling shader
[ 397.828][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.828][d][vo/gpu-next] cache_save_obj: key(323d18451b11b532), size(20692)
[ 397.828][d][vo/gpu-next/libplacebo] Spent 0.109 ms creating pipeline
[ 397.828][d][vo/gpu-next] cache_save_obj: key(ff86af73c26a5a4a), size(27256)
[ 397.828][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.828][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.828][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.828][d][vo/gpu-next/libplacebo] Spent 0.068 ms allocating slab
[ 397.828][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.828][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.828][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.828][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.828][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.828][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.828][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.828][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.828][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.828][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.828][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.828][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.828][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.828][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.828][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.829][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.829][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.829][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.829][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.829][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.829][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.829][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.829][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.829][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.829][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.829][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.829][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.829][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.829][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.829][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.829][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.829][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.829][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.829][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.829][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.829][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.829][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.829][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.829][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.829][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.829][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.829][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.829][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.829][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.829][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.829][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.829][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.829][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.829][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.829][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.829][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.829][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.829][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.829][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.829][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.829][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.829][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.829][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.829][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.829][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.829][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.829][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.829][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.829][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.829][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.829][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.829][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.829][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.829][d][vo/gpu-next/libplacebo] [ 43] #define MODEL21_raw _2 
[ 397.829][d][vo/gpu-next/libplacebo] [ 44] #define MODEL21_pos _3 
[ 397.829][d][vo/gpu-next/libplacebo] [ 45] #define MODEL21_map _3_map 
[ 397.829][d][vo/gpu-next/libplacebo] [ 46] #define MODEL21_size vec2(textureSize(_2, 0)) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 47] #define MODEL21_pt _4 
[ 397.829][d][vo/gpu-next/libplacebo] [ 48] #define MODEL21_off _5 
[ 397.829][d][vo/gpu-next/libplacebo] [ 49] #define MODEL21_mul _6 
[ 397.829][d][vo/gpu-next/libplacebo] [ 50] #define MODEL21_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 51] #define MODEL21_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 52] #define MODEL21_texOff(off) (MODEL21_tex(_3 + _4 * vec2(off))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 53] #define MODEL21_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 54] #define MODEL22_raw _7 
[ 397.829][d][vo/gpu-next/libplacebo] [ 55] #define MODEL22_pos _8 
[ 397.829][d][vo/gpu-next/libplacebo] [ 56] #define MODEL22_map _8_map 
[ 397.829][d][vo/gpu-next/libplacebo] [ 57] #define MODEL22_size vec2(textureSize(_7, 0)) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 58] #define MODEL22_pt _9 
[ 397.829][d][vo/gpu-next/libplacebo] [ 59] #define MODEL22_off _a 
[ 397.829][d][vo/gpu-next/libplacebo] [ 60] #define MODEL22_mul _b 
[ 397.829][d][vo/gpu-next/libplacebo] [ 61] #define MODEL22_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 62] #define MODEL22_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 63] #define MODEL22_texOff(off) (MODEL22_tex(_8 + _9 * vec2(off))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 64] #define MODEL22_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 65] #define MODEL23_raw _c 
[ 397.829][d][vo/gpu-next/libplacebo] [ 66] #define MODEL23_pos _d 
[ 397.829][d][vo/gpu-next/libplacebo] [ 67] #define MODEL23_map _d_map 
[ 397.829][d][vo/gpu-next/libplacebo] [ 68] #define MODEL23_size vec2(textureSize(_c, 0)) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 69] #define MODEL23_pt _e 
[ 397.829][d][vo/gpu-next/libplacebo] [ 70] #define MODEL23_off _f 
[ 397.829][d][vo/gpu-next/libplacebo] [ 71] #define MODEL23_mul _10 
[ 397.829][d][vo/gpu-next/libplacebo] [ 72] #define MODEL23_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 73] #define MODEL23_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 74] #define MODEL23_texOff(off) (MODEL23_tex(_d + _e * vec2(off))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 75] #define MODEL23_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 76] #define MODEL24_raw _11 
[ 397.829][d][vo/gpu-next/libplacebo] [ 77] #define MODEL24_pos _12 
[ 397.829][d][vo/gpu-next/libplacebo] [ 78] #define MODEL24_map _12_map 
[ 397.829][d][vo/gpu-next/libplacebo] [ 79] #define MODEL24_size vec2(textureSize(_11, 0)) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 80] #define MODEL24_pt _13 
[ 397.829][d][vo/gpu-next/libplacebo] [ 81] #define MODEL24_off _14 
[ 397.829][d][vo/gpu-next/libplacebo] [ 82] #define MODEL24_mul _15 
[ 397.829][d][vo/gpu-next/libplacebo] [ 83] #define MODEL24_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 84] #define MODEL24_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 85] #define MODEL24_texOff(off) (MODEL24_tex(_12 + _13 * vec2(off))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 86] #define MODEL24_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.829][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.829][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.829][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.829][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.829][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.829][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.829][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.829][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.829][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.829][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.829][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.829][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.829][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.829][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.829][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.829][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.829][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.829][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.829][d][vo/gpu-next/libplacebo] [105] }
[ 397.829][d][vo/gpu-next/libplacebo] [106] 
[ 397.829][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.829][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.829][d][vo/gpu-next/libplacebo] [109] {
[ 397.829][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(-0.0319044366478920,-0.0593544840812683,-0.0063880118541420,0.0536783412098885);
[ 397.829][d][vo/gpu-next/libplacebo] [111] res += mat4(-0.1049769371747971,0.0530018322169781,-0.1046573221683502,0.1049640327692032,0.0154508100822568,-0.0014283000491560,0.0827952772378922,0.0064285881817341,0.0377579852938652,0.1602229177951813,0.1259868592023849,-0.0402139835059643,0.0242196395993233,-0.0192059781402349,0.0784901678562164,-0.0492622405290604) * MODEL21_texOff(vec2(-1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [112] res += mat4(0.0988065898418427,0.0558996312320232,0.0429891832172871,0.0290305726230145,-0.0289836153388023,-0.0719404965639114,-0.0399442017078400,0.0864284634590149,0.0730557218194008,-0.0314551442861557,-0.0075137382373214,0.0245214663445950,0.0374762341380119,0.1111276373267174,0.0930574163794518,-0.1286909282207489) * MODEL22_texOff(vec2(-1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [113] res += mat4(-0.0584235303103924,0.0709189400076866,-0.1062056124210358,0.0119586577638984,-0.0583901405334473,0.0176343489438295,-0.2544578909873962,-0.0469160191714764,0.0293099917471409,0.1078486591577530,-0.0145962322130799,0.0663851052522659,0.0585160404443741,-0.0085935741662979,0.0363007746636868,-0.0097911478951573) * MODEL23_texOff(vec2(-1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [114] res += mat4(0.0795985683798790,-0.1238443106412888,0.0008071123738773,0.0253353826701641,-0.0376159362494946,0.0330759435892105,0.0392076708376408,-0.0906358435750008,-0.0147637743502855,-0.0119982864707708,-0.0173608139157295,-0.1548472940921783,0.0184103511273861,-0.0208488833159208,0.0026534744538367,-0.0035306960344315) * MODEL24_texOff(vec2(-1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [115] res += mat4(-0.0063085122965276,0.1236624866724014,0.0335280597209930,-0.1275150328874588,0.0463291220366955,-0.1848209798336029,0.0558458790183067,-0.0238664597272873,0.0921169072389603,-0.0398014858365059,0.0775154158473015,-0.0140515323728323,0.0642737820744514,-0.0007273547234945,-0.0195787176489830,-0.0235000308603048) * MODEL21_texOff(vec2(-1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [116] res += mat4(0.0837357938289642,0.1834318488836288,0.0930924639105797,0.0904168337583542,-0.1281350702047348,0.0027755603659898,0.0132647203281522,-0.0385007113218307,-0.0405268743634224,-0.0412026755511761,-0.0958623886108398,0.0124941188842058,0.1301915943622589,-0.2062162160873413,0.2302663028240204,-0.1843820214271545) * MODEL22_texOff(vec2(-1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [117] res += mat4(-0.0444810874760151,-0.1452791839838028,-0.1051607280969620,-0.0037997374311090,0.1972191631793976,0.2487480491399765,0.1079482063651085,-0.0719112083315849,0.0246634893119335,-0.1668282896280289,-0.0134556964039803,0.0239032879471779,0.1651775091886520,0.0196664985269308,0.1805219650268555,0.0285266842693090) * MODEL23_texOff(vec2(-1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [118] res += mat4(-0.0875505730509758,0.0837789177894592,-0.0129913315176964,0.0340819247066975,-0.0212335586547852,-0.2016090005636215,-0.0643151402473450,-0.0590226203203201,-0.0964769199490547,-0.0694736540317535,-0.0542995780706406,-0.0832787677645683,0.1099074259400368,-0.0196969695389271,0.1310003548860550,0.0811747014522552) * MODEL24_texOff(vec2(-1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [119] res += mat4(0.0047104074619710,-0.0282204467803240,0.0984812751412392,0.0191335435956717,-0.1582766175270081,-0.1351978331804276,-0.1520056873559952,-0.1318402141332626,0.0604211874306202,0.0606412440538406,0.1178724616765976,0.0108723761513829,-0.0465345457196236,-0.1133893579244614,0.0675329640507698,0.0480175390839577) * MODEL21_texOff(vec2(-1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [120] res += mat4(0.0959218963980675,-0.2212718725204468,0.0894490182399750,0.0131204547360539,0.0545177236199379,-0.0288275703787804,0.0245627798140049,0.0217808689922094,0.0607562400400639,-0.1358110606670380,-0.0350213497877121,-0.0318414233624935,-0.0401774272322655,0.1384418159723282,0.0225264690816402,0.0016238500829786) * MODEL22_texOff(vec2(-1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [121] res += mat4(-0.0157364327460527,-0.0566317848861217,0.0033653660211712,0.1080024912953377,-0.0967782586812973,-0.2857748270034790,-0.2085265368223190,0.0197349302470684,0.0933917835354805,-0.1873927712440491,0.0288235787302256,-0.0117855127900839,0.0233719181269407,-0.1566993147134781,0.1610490381717682,-0.1314767152070999) * MODEL23_texOff(vec2(-1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [122] res += mat4(0.0984380245208740,0.1530470103025436,0.0297245793044567,0.0079924380406737,0.0044109639711678,0.0184676554054022,-0.0020322001073509,-0.0739230960607529,0.0559958629310131,0.0264653861522675,0.0348221100866795,0.0837754011154175,-0.0370579436421394,0.0804572775959969,0.0423889756202698,-0.0568444430828094) * MODEL24_texOff(vec2(-1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [123] res += mat4(0.0223456677049398,0.1345537900924683,-0.0114704454317689,0.0192960277199745,0.1383964419364929,0.0709870830178261,0.0493518188595772,0.0315994769334793,0.0406982824206352,-0.1496467590332031,0.0350671298801899,0.1099814698100090,0.1025168672204018,-0.0085557270795107,0.0462385229766369,0.0087464489042759) * MODEL21_texOff(vec2(0,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [124] res += mat4(0.0725811645388603,-0.0078941881656647,0.1098996773362160,-0.2021800279617310,0.0332895331084728,-0.1520113945007324,0.1540423631668091,0.0577330365777016,0.1468109786510468,-0.0131514435634017,0.1934793740510941,-0.0930755585432053,0.3369615674018860,0.1139491423964500,0.2406831234693527,-0.1210564821958542) * MODEL22_texOff(vec2(0,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [125] res += mat4(0.0342860221862793,0.1693054735660553,-0.0245284475386143,-0.0474616214632988,-0.0401609912514687,-0.0291214212775230,0.0208399519324303,-0.0658942386507988,-0.0574564076960087,0.2002377063035965,0.0437284335494041,-0.1219547688961029,-0.1023088023066521,0.0191416908055544,-0.1077913343906403,-0.0930133834481239) * MODEL23_texOff(vec2(0,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [126] res += mat4(0.0584708601236343,-0.1535180360078812,-0.0119048496708274,-0.0146380318328738,0.1522436290979385,0.2029572576284409,-0.0915258601307869,0.0646188557147980,0.1124635711312294,0.0143247852101922,0.0369974747300148,0.0865768566727638,-0.0005834616022184,0.0590733028948307,0.0522760041058064,0.1423606723546982) * MODEL24_texOff(vec2(0,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [127] res += mat4(0.0832947120070457,-0.1659611612558365,-0.0430100597441196,0.0169967804104090,0.2446910142898560,-0.0024086623452604,0.1061681956052780,0.1473223865032196,-0.0451019778847694,-0.0968872681260109,-0.1252156496047974,0.0651009753346443,-0.1487540453672409,-0.1364714056253433,-0.1448062062263489,-0.0324841588735580) * MODEL21_texOff(vec2(0,0));
[ 397.829][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.0490125901997089,0.4423136413097382,-0.0704349130392075,-0.2154809683561325,0.3586983084678650,0.0802443698048592,-0.2119029611349106,0.0976425632834435,-0.1338178813457489,0.0833210051059723,0.2181421220302582,-0.0985689088702202,0.0539677180349827,-0.0552677884697914,-0.1076588854193687,0.0665355622768402) * MODEL22_texOff(vec2(0,0));
[ 397.829][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0933762341737747,-0.1874220967292786,0.0296995192766190,-0.1018379479646683,0.1016159281134605,0.2458875179290771,0.1322410702705383,-0.1783373504877090,-0.0358742922544479,-0.1346556395292282,0.0792141854763031,0.0113624166697264,-0.0487725250422955,-0.2280908823013306,-0.1435510069131851,-0.1495662182569504) * MODEL23_texOff(vec2(0,0));
[ 397.829][d][vo/gpu-next/libplacebo] [130] res += mat4(0.1955887824296951,0.0015727523714304,0.0173319857567549,0.0855350568890572,-0.0828279480338097,-0.4258889555931091,-0.0727782472968102,0.3167108297348022,0.0193311404436827,-0.0385273508727551,0.1105341538786888,0.1693043112754822,-0.0086681032553315,0.1243010014295578,-0.1422148048877716,0.2096032500267029) * MODEL24_texOff(vec2(0,0));
[ 397.829][d][vo/gpu-next/libplacebo] [131] res += mat4(-0.1056698858737946,0.1697898209095001,-0.1174520179629326,-0.3891111314296722,-0.3951943814754486,0.0955362692475319,-0.0011043249396607,-0.1948882043361664,0.0523583926260471,-0.3666047751903534,0.1224011033773422,0.1049802005290985,-0.0039958748966455,0.0537789352238178,0.1965005397796631,-0.3598505854606628) * MODEL21_texOff(vec2(0,1));
[ 397.829][d][vo/gpu-next/libplacebo] [132] res += mat4(-0.0696330145001411,-0.3264731168746948,0.1232996061444283,-0.1282946169376373,0.1031132414937019,-0.0014537264360115,0.1199942156672478,0.1914149224758148,0.0464945808053017,0.1578139513731003,0.1042746081948280,0.1073048561811447,-0.0951004251837730,0.0690534487366676,-0.1132716462016106,-0.2959117591381073) * MODEL22_texOff(vec2(0,1));
[ 397.829][d][vo/gpu-next/libplacebo] [133] res += mat4(-0.0063548935577273,-0.1339095532894135,0.0423612669110298,-0.1214815601706505,-0.0761892870068550,0.0188857093453407,-0.0480861291289330,0.0921485871076584,-0.0540754348039627,0.1062150970101357,0.0385954827070236,-0.0876506567001343,0.1119642704725266,-0.0114633506163955,0.1415599286556244,0.0167306922376156) * MODEL23_texOff(vec2(0,1));
[ 397.829][d][vo/gpu-next/libplacebo] [134] res += mat4(0.0076094884425402,0.0957226306200027,0.0134012559428811,0.0287293214350939,0.0624926649034023,0.3065398037433624,0.0403901040554047,-0.0260085742920637,0.0088108722120523,0.2126857340335846,0.0254359431564808,0.0661587566137314,0.0266350097954273,-0.0415457449853420,0.0960029587149620,0.0903137028217316) * MODEL24_texOff(vec2(0,1));
[ 397.829][d][vo/gpu-next/libplacebo] [135] res += mat4(0.2011361718177795,0.0513363182544708,0.0426048710942268,-0.0341306589543819,0.0546924509108067,-0.0009473076206632,0.0832077190279961,-0.0404908806085587,0.0223969146609306,0.1469400823116302,-0.0101996315643191,0.0512978285551071,-0.0182012710720301,-0.0268129613250494,0.0305796377360821,0.0353515036404133) * MODEL21_texOff(vec2(1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [136] res += mat4(-0.0501724295318127,0.1036518365144730,-0.0582247488200665,0.0586184002459049,-0.0985071435570717,-0.0378162339329720,-0.0175979062914848,0.0914201065897942,0.1339682489633560,-0.2411471456289291,0.0442742519080639,-0.1315496563911438,-0.0235163830220699,-0.0793496072292328,0.0001856182061601,0.0100199077278376) * MODEL22_texOff(vec2(1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [137] res += mat4(0.0169272385537624,-0.0373814180493355,-0.0670064836740494,-0.0757538005709648,0.0539115741848946,-0.0363459698855877,-0.0705795958638191,0.0161958131939173,0.0749965235590935,0.0864845067262650,0.0935057625174522,0.0006394926458597,0.0258790254592896,0.0487536191940308,-0.0003778598329518,-0.0603443086147308) * MODEL23_texOff(vec2(1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [138] res += mat4(0.0326713137328625,-0.0643305927515030,-0.0873011052608490,-0.0115476315841079,0.0404307320713997,0.0908514112234116,0.0900304168462753,-0.1224276497960091,0.0797611474990845,0.0716477409005165,0.0858778432011604,0.0648527666926384,-0.0038425601087511,-0.0272151939570904,0.0454981327056885,-0.0211941953748465) * MODEL24_texOff(vec2(1,-1));
[ 397.829][d][vo/gpu-next/libplacebo] [139] res += mat4(-0.0283515322953463,0.0367869697511196,-0.0186204202473164,-0.0924160853028297,0.0107743376865983,0.0281303916126490,0.0326650589704514,-0.1486970037221909,-0.0027698453050107,-0.0639929920434952,0.1789113283157349,0.0581709817051888,-0.2201839685440063,-0.0327146798372269,0.0408661887049675,-0.0269158463925123) * MODEL21_texOff(vec2(1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [140] res += mat4(-0.0014567035250366,0.2100255340337753,-0.1271950453519821,0.2373086959123611,-0.1213726848363876,0.1297481060028076,0.0348963104188442,-0.1987402439117432,-0.0976094901561737,-0.2369550317525864,-0.0735042020678520,-0.0119079472497106,-0.2870939373970032,0.1397193372249603,0.0431725420057774,0.2128784358501434) * MODEL22_texOff(vec2(1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [141] res += mat4(0.0908681750297546,-0.0524830892682076,0.0303087439388037,-0.0453457012772560,0.1000418588519096,0.0236405488103628,0.0258009564131498,0.1112060993909836,0.0640080943703651,-0.0699638351798058,-0.1770147979259491,0.2103097587823868,0.0199909508228302,-0.0458192676305771,0.0364487096667290,0.0132334362715483) * MODEL23_texOff(vec2(1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [142] res += mat4(-0.0097952354699373,0.0897864028811455,-0.0383929386734962,-0.0215702615678310,-0.0684881284832954,-0.0852887779474258,-0.0572886057198048,-0.0302985794842243,-0.0247614216059446,-0.0832997038960457,0.0505135357379913,-0.0984577909111977,0.1210204735398293,0.0378841683268547,-0.0086145019158721,-0.1914091110229492) * MODEL24_texOff(vec2(1,0));
[ 397.829][d][vo/gpu-next/libplacebo] [143] res += mat4(-0.0352214053273201,0.0617239885032177,-0.1066936105489731,0.1240716800093651,0.0154035771265626,-0.0039620101451874,-0.0473034456372261,0.1120819970965385,0.0723939165472984,-0.1512170135974884,0.0552674271166325,-0.1259092688560486,0.1716865301132202,-0.1634209156036377,-0.0173642020672560,0.1488591283559799) * MODEL21_texOff(vec2(1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [144] res += mat4(-0.0257812645286322,-0.1662807315587997,-0.0307093542069197,-0.0163865722715855,0.0053951707668602,-0.1635815203189850,0.0542286410927773,-0.0992496609687805,-0.0330333039164543,0.0809587910771370,0.0687506720423698,-0.0905106365680695,-0.1323373317718506,-0.0549141764640808,-0.0887765660881996,0.0622096359729767) * MODEL22_texOff(vec2(1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [145] res += mat4(-0.0183376763015985,0.0646332651376724,0.1040980592370033,-0.0814767554402351,-0.0334680825471878,-0.0398129373788834,-0.0160571653395891,0.0422923043370247,-0.0084744850173593,-0.1092973351478577,-0.0894353166222572,0.0973920226097107,0.0375577360391617,0.0674358531832695,0.1098990961909294,-0.0763874053955078) * MODEL23_texOff(vec2(1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [146] res += mat4(-0.0124416314065456,0.0742118582129478,0.0940349251031876,-0.0382819510996342,0.0759040415287018,0.0381188578903675,-0.0316764861345291,0.0674401819705963,0.0492107681930065,-0.0515618398785591,0.0284187551587820,-0.1154354289174080,0.0918822139501572,-0.2824964523315430,-0.0006838684203103,0.0264801792800426) * MODEL24_texOff(vec2(1,1));
[ 397.829][d][vo/gpu-next/libplacebo] [147] res = max(res, vec4(0.0)) + vec4(0.6147719025611877,0.5175681114196777,0.4380105137825012,0.5494819879531860) * min(res, vec4(0.0));
[ 397.829][d][vo/gpu-next/libplacebo] [148] return res;
[ 397.829][d][vo/gpu-next/libplacebo] [149] }
[ 397.829][d][vo/gpu-next/libplacebo] [150] 
[ 397.829][d][vo/gpu-next/libplacebo] [151] vec4 _1() {
[ 397.829][d][vo/gpu-next/libplacebo] [152] vec4 color = hook(); 
[ 397.829][d][vo/gpu-next/libplacebo] [153] return color;
[ 397.829][d][vo/gpu-next/libplacebo] [154] }
[ 397.829][d][vo/gpu-next/libplacebo] [155] 
[ 397.829][d][vo/gpu-next/libplacebo] [156] void main() {
[ 397.829][d][vo/gpu-next/libplacebo] [157] out_color = _1();
[ 397.829][d][vo/gpu-next/libplacebo] [158] }
[ 397.829][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.829][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.829][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.829][d][vo/gpu-next] cache_load_obj: key(10369c156fad24ec), size(20692), load time(0.152 ms)
[ 397.829][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x10369c156fad24ec
[ 397.829][d][vo/gpu-next] cache_load_obj: key(2ff6aa6e8449ed0d), size(27755), load time(0.133 ms)
[ 397.829][d][vo/gpu-next/libplacebo] Spent 0.023 ms compiling shader
[ 397.829][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.829][d][vo/gpu-next] cache_save_obj: key(10369c156fad24ec), size(20692)
[ 397.829][d][vo/gpu-next/libplacebo] Spent 0.106 ms creating pipeline
[ 397.829][d][vo/gpu-next] cache_save_obj: key(2ff6aa6e8449ed0d), size(27755)
[ 397.829][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.829][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.829][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.829][d][vo/gpu-next/libplacebo] Spent 0.064 ms allocating slab
[ 397.829][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.829][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.829][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.829][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.829][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.829][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.829][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.829][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.829][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.829][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.829][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.829][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.829][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.829][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.830][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.830][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.830][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.830][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.830][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.830][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.830][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.830][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.830][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.830][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.830][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.830][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.830][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _22;
[ 397.830][d][vo/gpu-next/libplacebo] [ 42] layout(location=0) out vec2 _3;
[ 397.830][d][vo/gpu-next/libplacebo] [ 43] layout(location=1) in vec2 _23;
[ 397.830][d][vo/gpu-next/libplacebo] [ 44] layout(location=1) out vec2 _8;
[ 397.830][d][vo/gpu-next/libplacebo] [ 45] layout(location=2) in vec2 _24;
[ 397.830][d][vo/gpu-next/libplacebo] [ 46] layout(location=2) out vec2 _d;
[ 397.830][d][vo/gpu-next/libplacebo] [ 47] layout(location=3) in vec2 _25;
[ 397.830][d][vo/gpu-next/libplacebo] [ 48] layout(location=3) out vec2 _12;
[ 397.830][d][vo/gpu-next/libplacebo] [ 49] layout(location=4) in vec2 _26;
[ 397.830][d][vo/gpu-next/libplacebo] [ 50] layout(location=4) out vec2 _17;
[ 397.830][d][vo/gpu-next/libplacebo] [ 51] layout(location=5) in vec2 _27;
[ 397.830][d][vo/gpu-next/libplacebo] [ 52] void main() {
[ 397.830][d][vo/gpu-next/libplacebo] [ 53] _3 = _22;
[ 397.830][d][vo/gpu-next/libplacebo] [ 54] _8 = _23;
[ 397.830][d][vo/gpu-next/libplacebo] [ 55] _d = _24;
[ 397.830][d][vo/gpu-next/libplacebo] [ 56] _12 = _25;
[ 397.830][d][vo/gpu-next/libplacebo] [ 57] _17 = _26;
[ 397.830][d][vo/gpu-next/libplacebo] [ 58] vec2 va_pos = _27; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 59] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.830][d][vo/gpu-next/libplacebo] [ 60] }
[ 397.830][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.830][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.830][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.830][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.830][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.830][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.830][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.830][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.830][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.830][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.830][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.830][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.830][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.830][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.830][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.830][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.830][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.830][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.830][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.830][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.830][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.830][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.830][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.830][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.830][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.830][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.830][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.830][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _3;
[ 397.830][d][vo/gpu-next/libplacebo] [ 42] layout(location=1) in vec2 _8;
[ 397.830][d][vo/gpu-next/libplacebo] [ 43] layout(location=2) in vec2 _d;
[ 397.830][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) in vec2 _12;
[ 397.830][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _17;
[ 397.830][d][vo/gpu-next/libplacebo] [ 46] layout(location=0) out vec4 out_color;
[ 397.830][d][vo/gpu-next/libplacebo] [ 47] 
[ 397.830][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_raw _2 
[ 397.830][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_pos _3 
[ 397.830][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_map _3_map 
[ 397.830][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_pt _4 
[ 397.830][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_off _5 
[ 397.830][d][vo/gpu-next/libplacebo] [ 54] #define MODEL1_mul _6 
[ 397.830][d][vo/gpu-next/libplacebo] [ 55] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 56] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 57] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 58] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_raw _7 
[ 397.830][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_pos _8 
[ 397.830][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_map _8_map 
[ 397.830][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_pt _9 
[ 397.830][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_off _a 
[ 397.830][d][vo/gpu-next/libplacebo] [ 65] #define MODEL2_mul _b 
[ 397.830][d][vo/gpu-next/libplacebo] [ 66] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 67] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 68] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 69] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_raw _c 
[ 397.830][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_pos _d 
[ 397.830][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_map _d_map 
[ 397.830][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_pt _e 
[ 397.830][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_off _f 
[ 397.830][d][vo/gpu-next/libplacebo] [ 76] #define MODEL3_mul _10 
[ 397.830][d][vo/gpu-next/libplacebo] [ 77] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 78] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 79] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 80] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_raw _11 
[ 397.830][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_pos _12 
[ 397.830][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_map _12_map 
[ 397.830][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_pt _13 
[ 397.830][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_off _14 
[ 397.830][d][vo/gpu-next/libplacebo] [ 87] #define MODEL4_mul _15 
[ 397.830][d][vo/gpu-next/libplacebo] [ 88] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 89] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 90] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 91] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 92] #define FEATURE1_raw _16 
[ 397.830][d][vo/gpu-next/libplacebo] [ 93] #define FEATURE1_pos _17 
[ 397.830][d][vo/gpu-next/libplacebo] [ 94] #define FEATURE1_map _17_map 
[ 397.830][d][vo/gpu-next/libplacebo] [ 95] #define FEATURE1_size vec2(textureSize(_16, 0)) 
[ 397.830][d][vo/gpu-next/libplacebo] [ 96] #define FEATURE1_pt _18 
[ 397.830][d][vo/gpu-next/libplacebo] [ 97] #define FEATURE1_off _19 
[ 397.830][d][vo/gpu-next/libplacebo] [ 98] #define FEATURE1_mul _1a 
[ 397.830][d][vo/gpu-next/libplacebo] [ 99] #define FEATURE1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.830][d][vo/gpu-next/libplacebo] [100] #define FEATURE1_tex(pos) (_1a * vec4(textureLod(_16, pos, 0.0))) 
[ 397.830][d][vo/gpu-next/libplacebo] [101] #define FEATURE1_texOff(off) (FEATURE1_tex(_17 + _18 * vec2(off))) 
[ 397.830][d][vo/gpu-next/libplacebo] [102] #define FEATURE1_gather(pos, c) (_1a * vec4(textureGather(_16, pos, c))) 
[ 397.830][d][vo/gpu-next/libplacebo] [103] #define frame _1b 
[ 397.830][d][vo/gpu-next/libplacebo] [104] #define random _1c 
[ 397.830][d][vo/gpu-next/libplacebo] [105] #define input_size _1d 
[ 397.830][d][vo/gpu-next/libplacebo] [106] #define target_size _1e 
[ 397.830][d][vo/gpu-next/libplacebo] [107] #define tex_offset _1f 
[ 397.830][d][vo/gpu-next/libplacebo] [108] vec4 _8001(vec4 color) {
[ 397.830][d][vo/gpu-next/libplacebo] [109] // pl_shader_linearize           
[ 397.830][d][vo/gpu-next/libplacebo] [110] color.rgb = max(color.rgb, 0.0); 
[ 397.830][d][vo/gpu-next/libplacebo] [111] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.830][d][vo/gpu-next/libplacebo] [112] return color;
[ 397.830][d][vo/gpu-next/libplacebo] [113] }
[ 397.830][d][vo/gpu-next/libplacebo] [114] 
[ 397.830][d][vo/gpu-next/libplacebo] [115] #define linearize _8001 
[ 397.830][d][vo/gpu-next/libplacebo] [116] vec4 _4001(vec4 color) {
[ 397.830][d][vo/gpu-next/libplacebo] [117] // pl_shader_delinearize 
[ 397.830][d][vo/gpu-next/libplacebo] [118] color.rgb = max(color.rgb, 0.0); 
[ 397.830][d][vo/gpu-next/libplacebo] [119] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.830][d][vo/gpu-next/libplacebo] [120] return color;
[ 397.830][d][vo/gpu-next/libplacebo] [121] }
[ 397.830][d][vo/gpu-next/libplacebo] [122] 
[ 397.830][d][vo/gpu-next/libplacebo] [123] #define delinearize _4001 
[ 397.830][d][vo/gpu-next/libplacebo] [124] vec4 hook()
[ 397.830][d][vo/gpu-next/libplacebo] [125] {
[ 397.830][d][vo/gpu-next/libplacebo] [126] vec4 res = vec4(-0.0398302078247070,0.0660750269889832,-0.0841118618845940,0.0219727028161287);
[ 397.830][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.0904332101345062,-0.0306175798177719,-0.3741730153560638,0.1997887939214706,-0.2946400046348572,0.2973574101924896,0.0410949923098087,-0.1586445868015289,-0.0828583687543869,-0.3139174282550812,0.2640713751316071,-0.0488730296492577,-0.7438945174217224,0.0566509030759335,-0.5147728919982910,-0.2992146611213684) * MODEL1_texOff(0);
[ 397.830][d][vo/gpu-next/libplacebo] [128] res += mat4(0.1015158519148827,-0.3609340488910675,0.1689718514680862,-0.1110829189419746,-0.0476337634027004,0.2617297470569611,-0.1404774487018585,-0.1450887620449066,0.1395564079284668,0.5448970794677734,-0.0253072511404753,-0.3947534263134003,0.0721325427293777,-0.0309048965573311,0.1761575192213058,-0.1208819076418877) * MODEL2_texOff(0);
[ 397.830][d][vo/gpu-next/libplacebo] [129] res += mat4(0.2857233881950378,-0.1422258764505386,-0.3782327473163605,0.4563027918338776,-0.2952436208724976,0.3302968740463257,-0.3229986131191254,-0.1016059294342995,-0.0963005796074867,-0.3688750267028809,0.5499234199523926,-0.0264915507286787,-0.2069931328296661,-0.1944057494401932,0.0649016797542572,-0.3279161155223846) * MODEL3_texOff(0);
[ 397.830][d][vo/gpu-next/libplacebo] [130] res += mat4(0.2572792172431946,-0.1334799677133560,-0.3845744132995605,0.1328283995389938,0.0985411405563354,0.3047459721565247,-0.3787862658500671,-0.0171573292464018,-0.3674299716949463,0.5497399568557739,0.3637700974941254,-0.2624555528163910,-0.0789092257618904,-0.0317787751555443,0.5096421837806702,-0.2790692448616028) * MODEL4_texOff(0);
[ 397.830][d][vo/gpu-next/libplacebo] [131] res += FEATURE1_texOff(0);
[ 397.830][d][vo/gpu-next/libplacebo] [132] res = max(res, vec4(0.0)) + vec4(0.2817154526710510,1.0948476791381836,0.0402555316686630,1.0271319150924683) * min(res, vec4(0.0));
[ 397.830][d][vo/gpu-next/libplacebo] [133] return res;
[ 397.830][d][vo/gpu-next/libplacebo] [134] }
[ 397.830][d][vo/gpu-next/libplacebo] [135] 
[ 397.830][d][vo/gpu-next/libplacebo] [136] vec4 _1() {
[ 397.830][d][vo/gpu-next/libplacebo] [137] vec4 color = hook(); 
[ 397.830][d][vo/gpu-next/libplacebo] [138] return color;
[ 397.830][d][vo/gpu-next/libplacebo] [139] }
[ 397.830][d][vo/gpu-next/libplacebo] [140] 
[ 397.830][d][vo/gpu-next/libplacebo] [141] void main() {
[ 397.830][d][vo/gpu-next/libplacebo] [142] out_color = _1();
[ 397.830][d][vo/gpu-next/libplacebo] [143] }
[ 397.830][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=4: 1.000000
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=5: 0.059585
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=6: 0.870311
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=7: 0.059585
[ 397.830][d][vo/gpu-next/libplacebo]   constant_id=8: 1.149015
[ 397.830][d][vo/gpu-next] cache_load_obj: key(a8fa509c7ac6829d), size(1148), load time(0.027 ms)
[ 397.830][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa8fa509c7ac6829d
[ 397.830][d][vo/gpu-next] cache_load_obj: key(626c74729270e49f), size(3444), load time(0.019 ms)
[ 397.830][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x626c74729270e49f
[ 397.830][d][vo/gpu-next] cache_load_obj: key(8fb1b086c03886d9), size(16395), load time(0.137 ms)
[ 397.830][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.830][d][vo/gpu-next] cache_save_obj: key(a8fa509c7ac6829d), size(1148)
[ 397.830][d][vo/gpu-next] cache_save_obj: key(626c74729270e49f), size(3444)
[ 397.830][d][vo/gpu-next/libplacebo] Spent 0.160 ms creating pipeline
[ 397.830][d][vo/gpu-next] cache_save_obj: key(8fb1b086c03886d9), size(16395)
[ 397.830][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.830][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.830][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.831][d][vo/gpu-next/libplacebo] Spent 0.070 ms allocating slab
[ 397.831][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.831][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.831][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.831][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.831][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.831][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.831][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.831][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.831][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.831][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.831][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.831][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.831][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.831][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.831][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.831][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.831][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.831][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.831][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.831][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.831][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.831][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _22;
[ 397.831][d][vo/gpu-next/libplacebo] [ 42] layout(location=0) out vec2 _3;
[ 397.831][d][vo/gpu-next/libplacebo] [ 43] layout(location=1) in vec2 _23;
[ 397.831][d][vo/gpu-next/libplacebo] [ 44] layout(location=1) out vec2 _8;
[ 397.831][d][vo/gpu-next/libplacebo] [ 45] layout(location=2) in vec2 _24;
[ 397.831][d][vo/gpu-next/libplacebo] [ 46] layout(location=2) out vec2 _d;
[ 397.831][d][vo/gpu-next/libplacebo] [ 47] layout(location=3) in vec2 _25;
[ 397.831][d][vo/gpu-next/libplacebo] [ 48] layout(location=3) out vec2 _12;
[ 397.831][d][vo/gpu-next/libplacebo] [ 49] layout(location=4) in vec2 _26;
[ 397.831][d][vo/gpu-next/libplacebo] [ 50] layout(location=4) out vec2 _17;
[ 397.831][d][vo/gpu-next/libplacebo] [ 51] layout(location=5) in vec2 _27;
[ 397.831][d][vo/gpu-next/libplacebo] [ 52] void main() {
[ 397.831][d][vo/gpu-next/libplacebo] [ 53] _3 = _22;
[ 397.831][d][vo/gpu-next/libplacebo] [ 54] _8 = _23;
[ 397.831][d][vo/gpu-next/libplacebo] [ 55] _d = _24;
[ 397.831][d][vo/gpu-next/libplacebo] [ 56] _12 = _25;
[ 397.831][d][vo/gpu-next/libplacebo] [ 57] _17 = _26;
[ 397.831][d][vo/gpu-next/libplacebo] [ 58] vec2 va_pos = _27; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 59] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.831][d][vo/gpu-next/libplacebo] [ 60] }
[ 397.831][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.831][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.831][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.831][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.831][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.831][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.831][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.831][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.831][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.831][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.831][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.831][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.831][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.831][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.831][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.831][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.831][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.831][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.831][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.831][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.831][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.831][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _3;
[ 397.831][d][vo/gpu-next/libplacebo] [ 42] layout(location=1) in vec2 _8;
[ 397.831][d][vo/gpu-next/libplacebo] [ 43] layout(location=2) in vec2 _d;
[ 397.831][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) in vec2 _12;
[ 397.831][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _17;
[ 397.831][d][vo/gpu-next/libplacebo] [ 46] layout(location=0) out vec4 out_color;
[ 397.831][d][vo/gpu-next/libplacebo] [ 47] 
[ 397.831][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_raw _2 
[ 397.831][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_pos _3 
[ 397.831][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_map _3_map 
[ 397.831][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_pt _4 
[ 397.831][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_off _5 
[ 397.831][d][vo/gpu-next/libplacebo] [ 54] #define MODEL1_mul _6 
[ 397.831][d][vo/gpu-next/libplacebo] [ 55] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 56] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 57] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 58] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_raw _7 
[ 397.831][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_pos _8 
[ 397.831][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_map _8_map 
[ 397.831][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_pt _9 
[ 397.831][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_off _a 
[ 397.831][d][vo/gpu-next/libplacebo] [ 65] #define MODEL2_mul _b 
[ 397.831][d][vo/gpu-next/libplacebo] [ 66] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 67] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 68] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 69] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_raw _c 
[ 397.831][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_pos _d 
[ 397.831][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_map _d_map 
[ 397.831][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_pt _e 
[ 397.831][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_off _f 
[ 397.831][d][vo/gpu-next/libplacebo] [ 76] #define MODEL3_mul _10 
[ 397.831][d][vo/gpu-next/libplacebo] [ 77] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 78] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 79] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 80] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_raw _11 
[ 397.831][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_pos _12 
[ 397.831][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_map _12_map 
[ 397.831][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_pt _13 
[ 397.831][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_off _14 
[ 397.831][d][vo/gpu-next/libplacebo] [ 87] #define MODEL4_mul _15 
[ 397.831][d][vo/gpu-next/libplacebo] [ 88] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 89] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 90] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 91] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 92] #define FEATURE2_raw _16 
[ 397.831][d][vo/gpu-next/libplacebo] [ 93] #define FEATURE2_pos _17 
[ 397.831][d][vo/gpu-next/libplacebo] [ 94] #define FEATURE2_map _17_map 
[ 397.831][d][vo/gpu-next/libplacebo] [ 95] #define FEATURE2_size vec2(textureSize(_16, 0)) 
[ 397.831][d][vo/gpu-next/libplacebo] [ 96] #define FEATURE2_pt _18 
[ 397.831][d][vo/gpu-next/libplacebo] [ 97] #define FEATURE2_off _19 
[ 397.831][d][vo/gpu-next/libplacebo] [ 98] #define FEATURE2_mul _1a 
[ 397.831][d][vo/gpu-next/libplacebo] [ 99] #define FEATURE2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.831][d][vo/gpu-next/libplacebo] [100] #define FEATURE2_tex(pos) (_1a * vec4(textureLod(_16, pos, 0.0))) 
[ 397.831][d][vo/gpu-next/libplacebo] [101] #define FEATURE2_texOff(off) (FEATURE2_tex(_17 + _18 * vec2(off))) 
[ 397.831][d][vo/gpu-next/libplacebo] [102] #define FEATURE2_gather(pos, c) (_1a * vec4(textureGather(_16, pos, c))) 
[ 397.831][d][vo/gpu-next/libplacebo] [103] #define frame _1b 
[ 397.831][d][vo/gpu-next/libplacebo] [104] #define random _1c 
[ 397.831][d][vo/gpu-next/libplacebo] [105] #define input_size _1d 
[ 397.831][d][vo/gpu-next/libplacebo] [106] #define target_size _1e 
[ 397.831][d][vo/gpu-next/libplacebo] [107] #define tex_offset _1f 
[ 397.831][d][vo/gpu-next/libplacebo] [108] vec4 _8001(vec4 color) {
[ 397.831][d][vo/gpu-next/libplacebo] [109] // pl_shader_linearize           
[ 397.831][d][vo/gpu-next/libplacebo] [110] color.rgb = max(color.rgb, 0.0); 
[ 397.831][d][vo/gpu-next/libplacebo] [111] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.831][d][vo/gpu-next/libplacebo] [112] return color;
[ 397.831][d][vo/gpu-next/libplacebo] [113] }
[ 397.831][d][vo/gpu-next/libplacebo] [114] 
[ 397.831][d][vo/gpu-next/libplacebo] [115] #define linearize _8001 
[ 397.831][d][vo/gpu-next/libplacebo] [116] vec4 _4001(vec4 color) {
[ 397.831][d][vo/gpu-next/libplacebo] [117] // pl_shader_delinearize 
[ 397.831][d][vo/gpu-next/libplacebo] [118] color.rgb = max(color.rgb, 0.0); 
[ 397.831][d][vo/gpu-next/libplacebo] [119] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.831][d][vo/gpu-next/libplacebo] [120] return color;
[ 397.831][d][vo/gpu-next/libplacebo] [121] }
[ 397.831][d][vo/gpu-next/libplacebo] [122] 
[ 397.831][d][vo/gpu-next/libplacebo] [123] #define delinearize _4001 
[ 397.831][d][vo/gpu-next/libplacebo] [124] vec4 hook()
[ 397.831][d][vo/gpu-next/libplacebo] [125] {
[ 397.831][d][vo/gpu-next/libplacebo] [126] vec4 res = vec4(-0.0461901836097240,0.0530942864716053,0.0271403957158327,0.0411806441843510);
[ 397.831][d][vo/gpu-next/libplacebo] [127] res += mat4(0.0738934054970741,-0.2037661522626877,-0.1792543530464172,-0.4172675609588623,-0.2763709425926208,0.4561605155467987,0.3568621575832367,0.0137832751497626,0.1816250383853912,-0.0061804065480828,0.1263318061828613,0.0403790846467018,-0.0831830352544785,-0.0097673377022147,-0.4521633982658386,0.2323414534330368) * MODEL1_texOff(0);
[ 397.831][d][vo/gpu-next/libplacebo] [128] res += mat4(0.2010818868875504,0.3050879836082458,-0.3157728612422943,0.2607783675193787,0.0006519685848616,-0.4897803962230682,-0.1639468371868134,0.0466666072607040,-0.1436393857002258,-0.0465407036244869,-0.3949580192565918,0.2522305548191071,0.0030875655356795,0.2679564058780670,-0.4573816061019897,-0.1078201681375504) * MODEL2_texOff(0);
[ 397.831][d][vo/gpu-next/libplacebo] [129] res += mat4(0.0782144740223885,0.2111432999372482,-0.1693306416273117,0.0013240760890767,-0.2316610366106033,-0.0633072555065155,0.0141694881021976,0.0620704144239426,-0.0284209419041872,0.4983933866024017,0.1883008033037186,-0.2767302393913269,0.0240764264017344,-0.1085244938731194,-0.1406991630792618,-0.0268744882196188) * MODEL3_texOff(0);
[ 397.831][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.1764771938323975,-0.5322185754776001,-0.0553879812359810,0.3041559159755707,0.0178847815841436,-0.0217217803001404,0.2784402072429657,-0.2342455834150314,-0.3351868391036987,0.5513092875480652,-0.0409503988921642,0.0373148135840893,0.5087109208106995,-0.1079629659652710,-0.1364635974168777,0.4860048592090607) * MODEL4_texOff(0);
[ 397.831][d][vo/gpu-next/libplacebo] [131] res += FEATURE2_texOff(0);
[ 397.831][d][vo/gpu-next/libplacebo] [132] res = max(res, vec4(0.0)) + vec4(0.5130507349967957,0.5871294140815735,0.6904820203781128,0.8461173772811890) * min(res, vec4(0.0));
[ 397.831][d][vo/gpu-next/libplacebo] [133] return res;
[ 397.831][d][vo/gpu-next/libplacebo] [134] }
[ 397.831][d][vo/gpu-next/libplacebo] [135] 
[ 397.831][d][vo/gpu-next/libplacebo] [136] vec4 _1() {
[ 397.831][d][vo/gpu-next/libplacebo] [137] vec4 color = hook(); 
[ 397.831][d][vo/gpu-next/libplacebo] [138] return color;
[ 397.831][d][vo/gpu-next/libplacebo] [139] }
[ 397.831][d][vo/gpu-next/libplacebo] [140] 
[ 397.831][d][vo/gpu-next/libplacebo] [141] void main() {
[ 397.831][d][vo/gpu-next/libplacebo] [142] out_color = _1();
[ 397.831][d][vo/gpu-next/libplacebo] [143] }
[ 397.831][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=4: 1.000000
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=5: 0.059585
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=6: 0.870311
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=7: 0.059585
[ 397.831][d][vo/gpu-next/libplacebo]   constant_id=8: 1.149015
[ 397.831][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa8fa509c7ac6829d
[ 397.831][d][vo/gpu-next] cache_load_obj: key(a6f20a59d1726e5b), size(3444), load time(0.033 ms)
[ 397.831][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa6f20a59d1726e5b
[ 397.831][d][vo/gpu-next] cache_load_obj: key(c4c5d4158bdafb98), size(16370), load time(0.137 ms)
[ 397.831][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.831][d][vo/gpu-next] cache_save_obj: key(a8fa509c7ac6829d), size(1148)
[ 397.831][d][vo/gpu-next] cache_save_obj: key(a6f20a59d1726e5b), size(3444)
[ 397.831][d][vo/gpu-next/libplacebo] Spent 0.057 ms creating pipeline
[ 397.831][d][vo/gpu-next] cache_save_obj: key(c4c5d4158bdafb98), size(16370)
[ 397.831][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.831][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.831][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.831][d][vo/gpu-next/libplacebo] Spent 0.065 ms allocating slab
[ 397.831][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.831][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.831][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.831][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.831][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.831][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.831][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.831][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.831][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.831][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.831][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.831][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.831][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.831][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.831][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.831][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.831][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.831][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.831][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.831][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.831][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.832][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.832][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.832][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.832][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _22;
[ 397.832][d][vo/gpu-next/libplacebo] [ 42] layout(location=0) out vec2 _3;
[ 397.832][d][vo/gpu-next/libplacebo] [ 43] layout(location=1) in vec2 _23;
[ 397.832][d][vo/gpu-next/libplacebo] [ 44] layout(location=1) out vec2 _8;
[ 397.832][d][vo/gpu-next/libplacebo] [ 45] layout(location=2) in vec2 _24;
[ 397.832][d][vo/gpu-next/libplacebo] [ 46] layout(location=2) out vec2 _d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 47] layout(location=3) in vec2 _25;
[ 397.832][d][vo/gpu-next/libplacebo] [ 48] layout(location=3) out vec2 _12;
[ 397.832][d][vo/gpu-next/libplacebo] [ 49] layout(location=4) in vec2 _26;
[ 397.832][d][vo/gpu-next/libplacebo] [ 50] layout(location=4) out vec2 _17;
[ 397.832][d][vo/gpu-next/libplacebo] [ 51] layout(location=5) in vec2 _27;
[ 397.832][d][vo/gpu-next/libplacebo] [ 52] void main() {
[ 397.832][d][vo/gpu-next/libplacebo] [ 53] _3 = _22;
[ 397.832][d][vo/gpu-next/libplacebo] [ 54] _8 = _23;
[ 397.832][d][vo/gpu-next/libplacebo] [ 55] _d = _24;
[ 397.832][d][vo/gpu-next/libplacebo] [ 56] _12 = _25;
[ 397.832][d][vo/gpu-next/libplacebo] [ 57] _17 = _26;
[ 397.832][d][vo/gpu-next/libplacebo] [ 58] vec2 va_pos = _27; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 59] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.832][d][vo/gpu-next/libplacebo] [ 60] }
[ 397.832][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.832][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.832][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.832][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.832][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.832][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.832][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.832][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.832][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.832][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.832][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.832][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.832][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.832][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.832][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.832][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.832][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.832][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.832][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _3;
[ 397.832][d][vo/gpu-next/libplacebo] [ 42] layout(location=1) in vec2 _8;
[ 397.832][d][vo/gpu-next/libplacebo] [ 43] layout(location=2) in vec2 _d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) in vec2 _12;
[ 397.832][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _17;
[ 397.832][d][vo/gpu-next/libplacebo] [ 46] layout(location=0) out vec4 out_color;
[ 397.832][d][vo/gpu-next/libplacebo] [ 47] 
[ 397.832][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_raw _2 
[ 397.832][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_pos _3 
[ 397.832][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_map _3_map 
[ 397.832][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_pt _4 
[ 397.832][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_off _5 
[ 397.832][d][vo/gpu-next/libplacebo] [ 54] #define MODEL1_mul _6 
[ 397.832][d][vo/gpu-next/libplacebo] [ 55] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 56] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 57] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 58] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_raw _7 
[ 397.832][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_pos _8 
[ 397.832][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_map _8_map 
[ 397.832][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_pt _9 
[ 397.832][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_off _a 
[ 397.832][d][vo/gpu-next/libplacebo] [ 65] #define MODEL2_mul _b 
[ 397.832][d][vo/gpu-next/libplacebo] [ 66] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 67] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 68] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 69] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_raw _c 
[ 397.832][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_pos _d 
[ 397.832][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_map _d_map 
[ 397.832][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_pt _e 
[ 397.832][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_off _f 
[ 397.832][d][vo/gpu-next/libplacebo] [ 76] #define MODEL3_mul _10 
[ 397.832][d][vo/gpu-next/libplacebo] [ 77] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 78] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 79] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 80] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_raw _11 
[ 397.832][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_pos _12 
[ 397.832][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_map _12_map 
[ 397.832][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_pt _13 
[ 397.832][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_off _14 
[ 397.832][d][vo/gpu-next/libplacebo] [ 87] #define MODEL4_mul _15 
[ 397.832][d][vo/gpu-next/libplacebo] [ 88] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 89] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 90] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 91] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 92] #define FEATURE3_raw _16 
[ 397.832][d][vo/gpu-next/libplacebo] [ 93] #define FEATURE3_pos _17 
[ 397.832][d][vo/gpu-next/libplacebo] [ 94] #define FEATURE3_map _17_map 
[ 397.832][d][vo/gpu-next/libplacebo] [ 95] #define FEATURE3_size vec2(textureSize(_16, 0)) 
[ 397.832][d][vo/gpu-next/libplacebo] [ 96] #define FEATURE3_pt _18 
[ 397.832][d][vo/gpu-next/libplacebo] [ 97] #define FEATURE3_off _19 
[ 397.832][d][vo/gpu-next/libplacebo] [ 98] #define FEATURE3_mul _1a 
[ 397.832][d][vo/gpu-next/libplacebo] [ 99] #define FEATURE3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.832][d][vo/gpu-next/libplacebo] [100] #define FEATURE3_tex(pos) (_1a * vec4(textureLod(_16, pos, 0.0))) 
[ 397.832][d][vo/gpu-next/libplacebo] [101] #define FEATURE3_texOff(off) (FEATURE3_tex(_17 + _18 * vec2(off))) 
[ 397.832][d][vo/gpu-next/libplacebo] [102] #define FEATURE3_gather(pos, c) (_1a * vec4(textureGather(_16, pos, c))) 
[ 397.832][d][vo/gpu-next/libplacebo] [103] #define frame _1b 
[ 397.832][d][vo/gpu-next/libplacebo] [104] #define random _1c 
[ 397.832][d][vo/gpu-next/libplacebo] [105] #define input_size _1d 
[ 397.832][d][vo/gpu-next/libplacebo] [106] #define target_size _1e 
[ 397.832][d][vo/gpu-next/libplacebo] [107] #define tex_offset _1f 
[ 397.832][d][vo/gpu-next/libplacebo] [108] vec4 _8001(vec4 color) {
[ 397.832][d][vo/gpu-next/libplacebo] [109] // pl_shader_linearize           
[ 397.832][d][vo/gpu-next/libplacebo] [110] color.rgb = max(color.rgb, 0.0); 
[ 397.832][d][vo/gpu-next/libplacebo] [111] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.832][d][vo/gpu-next/libplacebo] [112] return color;
[ 397.832][d][vo/gpu-next/libplacebo] [113] }
[ 397.832][d][vo/gpu-next/libplacebo] [114] 
[ 397.832][d][vo/gpu-next/libplacebo] [115] #define linearize _8001 
[ 397.832][d][vo/gpu-next/libplacebo] [116] vec4 _4001(vec4 color) {
[ 397.832][d][vo/gpu-next/libplacebo] [117] // pl_shader_delinearize 
[ 397.832][d][vo/gpu-next/libplacebo] [118] color.rgb = max(color.rgb, 0.0); 
[ 397.832][d][vo/gpu-next/libplacebo] [119] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.832][d][vo/gpu-next/libplacebo] [120] return color;
[ 397.832][d][vo/gpu-next/libplacebo] [121] }
[ 397.832][d][vo/gpu-next/libplacebo] [122] 
[ 397.832][d][vo/gpu-next/libplacebo] [123] #define delinearize _4001 
[ 397.832][d][vo/gpu-next/libplacebo] [124] vec4 hook()
[ 397.832][d][vo/gpu-next/libplacebo] [125] {
[ 397.832][d][vo/gpu-next/libplacebo] [126] vec4 res = vec4(0.0188962463289499,-0.0084412479773164,0.0280361603945494,-0.0605330765247345);
[ 397.832][d][vo/gpu-next/libplacebo] [127] res += mat4(0.5421599149703979,0.1329087018966675,-0.3954503238201141,0.1098926663398743,0.0777832418680191,-0.0029588076286018,-0.0738613232970238,0.2883999347686768,0.1578751951456070,0.1009015291929245,0.0899816378951073,-0.0768480151891708,-0.0422229021787643,-0.0029287845827639,0.3087403774261475,-0.1859038174152374) * MODEL1_texOff(0);
[ 397.832][d][vo/gpu-next/libplacebo] [128] res += mat4(-0.0108895516023040,0.0989515781402588,0.3503252863883972,0.3484955430030823,-0.0404920727014542,-0.1470296829938889,0.2214413881301880,-0.0954751223325729,0.2693351805210114,-0.0185806397348642,0.0298380702733994,0.4743294715881348,0.4794802665710449,0.4391559660434723,0.6163290143013000,0.1765650212764740) * MODEL2_texOff(0);
[ 397.832][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.5071405172348022,0.4026553630828857,-0.1654408276081085,-0.2291442304849625,-0.2127622663974762,-0.2153157889842987,0.0970067679882050,0.0963988304138184,0.3915210068225861,-0.0641773641109467,-0.1831475794315338,-0.2212396860122681,0.6210712790489197,-0.6296228170394897,-0.1813391298055649,0.0598836950957775) * MODEL3_texOff(0);
[ 397.832][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.0450354963541031,-0.1741295307874680,0.2741636931896210,0.2587634921073914,0.2397177517414093,0.0307989809662104,-0.2174167335033417,0.3825699388980865,-0.3681959807872772,-0.3784009218215942,-0.4029824435710907,0.1595714539289474,-0.3686595857143402,0.4213712513446808,0.0666239708662033,-0.3322808444499969) * MODEL4_texOff(0);
[ 397.832][d][vo/gpu-next/libplacebo] [131] res += FEATURE3_texOff(0);
[ 397.832][d][vo/gpu-next/libplacebo] [132] res = max(res, vec4(0.0)) + vec4(0.9967825412750244,0.1328349411487579,0.3181226253509521,0.4911010563373566) * min(res, vec4(0.0));
[ 397.832][d][vo/gpu-next/libplacebo] [133] return res;
[ 397.832][d][vo/gpu-next/libplacebo] [134] }
[ 397.832][d][vo/gpu-next/libplacebo] [135] 
[ 397.832][d][vo/gpu-next/libplacebo] [136] vec4 _1() {
[ 397.832][d][vo/gpu-next/libplacebo] [137] vec4 color = hook(); 
[ 397.832][d][vo/gpu-next/libplacebo] [138] return color;
[ 397.832][d][vo/gpu-next/libplacebo] [139] }
[ 397.832][d][vo/gpu-next/libplacebo] [140] 
[ 397.832][d][vo/gpu-next/libplacebo] [141] void main() {
[ 397.832][d][vo/gpu-next/libplacebo] [142] out_color = _1();
[ 397.832][d][vo/gpu-next/libplacebo] [143] }
[ 397.832][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=4: 1.000000
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=5: 0.059585
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=6: 0.870311
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=7: 0.059585
[ 397.832][d][vo/gpu-next/libplacebo]   constant_id=8: 1.149015
[ 397.832][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa8fa509c7ac6829d
[ 397.832][d][vo/gpu-next] cache_load_obj: key(9c806b41b578f3e6), size(3444), load time(0.032 ms)
[ 397.832][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x9c806b41b578f3e6
[ 397.832][d][vo/gpu-next] cache_load_obj: key(57f06aca7288af7), size(16397), load time(0.132 ms)
[ 397.832][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.832][d][vo/gpu-next] cache_save_obj: key(a8fa509c7ac6829d), size(1148)
[ 397.832][d][vo/gpu-next] cache_save_obj: key(9c806b41b578f3e6), size(3444)
[ 397.832][d][vo/gpu-next/libplacebo] Spent 0.059 ms creating pipeline
[ 397.832][d][vo/gpu-next] cache_save_obj: key(57f06aca7288af7), size(16397)
[ 397.832][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.832][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.832][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.832][d][vo/gpu-next/libplacebo] Spent 0.073 ms allocating slab
[ 397.832][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.832][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.832][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.832][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.832][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.832][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.832][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.832][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.832][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.832][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.832][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.832][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.832][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.832][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.832][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.832][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.832][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.832][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.832][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _22;
[ 397.832][d][vo/gpu-next/libplacebo] [ 42] layout(location=0) out vec2 _3;
[ 397.832][d][vo/gpu-next/libplacebo] [ 43] layout(location=1) in vec2 _23;
[ 397.832][d][vo/gpu-next/libplacebo] [ 44] layout(location=1) out vec2 _8;
[ 397.832][d][vo/gpu-next/libplacebo] [ 45] layout(location=2) in vec2 _24;
[ 397.832][d][vo/gpu-next/libplacebo] [ 46] layout(location=2) out vec2 _d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 47] layout(location=3) in vec2 _25;
[ 397.832][d][vo/gpu-next/libplacebo] [ 48] layout(location=3) out vec2 _12;
[ 397.832][d][vo/gpu-next/libplacebo] [ 49] layout(location=4) in vec2 _26;
[ 397.832][d][vo/gpu-next/libplacebo] [ 50] layout(location=4) out vec2 _17;
[ 397.832][d][vo/gpu-next/libplacebo] [ 51] layout(location=5) in vec2 _27;
[ 397.832][d][vo/gpu-next/libplacebo] [ 52] void main() {
[ 397.832][d][vo/gpu-next/libplacebo] [ 53] _3 = _22;
[ 397.832][d][vo/gpu-next/libplacebo] [ 54] _8 = _23;
[ 397.832][d][vo/gpu-next/libplacebo] [ 55] _d = _24;
[ 397.832][d][vo/gpu-next/libplacebo] [ 56] _12 = _25;
[ 397.832][d][vo/gpu-next/libplacebo] [ 57] _17 = _26;
[ 397.832][d][vo/gpu-next/libplacebo] [ 58] vec2 va_pos = _27; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 59] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.832][d][vo/gpu-next/libplacebo] [ 60] }
[ 397.832][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.832][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.832][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.832][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.832][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.832][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.832][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.832][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.832][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.832][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.832][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.832][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) vec2 _18;
[ 397.832][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=72) vec2 _19;
[ 397.832][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=80) int _1b;
[ 397.832][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=84) float _1c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1d;
[ 397.832][d][vo/gpu-next/libplacebo] [ 24]     layout(offset=96) vec2 _1e;
[ 397.832][d][vo/gpu-next/libplacebo] [ 25]     layout(offset=104) vec2 _1f;
[ 397.832][d][vo/gpu-next/libplacebo] [ 26] };
[ 397.832][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=0) const float _6 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=1) const float _b = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=2) const float _10 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=3) const float _15 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=4) const float _1a = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=5) const float _8002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 33] layout(constant_id=6) const float _8003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 34] layout(constant_id=7) const float _4002 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 35] layout(constant_id=8) const float _4003 = 1; 
[ 397.832][d][vo/gpu-next/libplacebo] [ 36] layout(binding=0) uniform  sampler2D _2;
[ 397.832][d][vo/gpu-next/libplacebo] [ 37] layout(binding=1) uniform  sampler2D _7;
[ 397.832][d][vo/gpu-next/libplacebo] [ 38] layout(binding=2) uniform  sampler2D _c;
[ 397.832][d][vo/gpu-next/libplacebo] [ 39] layout(binding=3) uniform  sampler2D _11;
[ 397.832][d][vo/gpu-next/libplacebo] [ 40] layout(binding=4) uniform  sampler2D _16;
[ 397.832][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) in vec2 _3;
[ 397.832][d][vo/gpu-next/libplacebo] [ 42] layout(location=1) in vec2 _8;
[ 397.833][d][vo/gpu-next/libplacebo] [ 43] layout(location=2) in vec2 _d;
[ 397.833][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) in vec2 _12;
[ 397.833][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _17;
[ 397.833][d][vo/gpu-next/libplacebo] [ 46] layout(location=0) out vec4 out_color;
[ 397.833][d][vo/gpu-next/libplacebo] [ 47] 
[ 397.833][d][vo/gpu-next/libplacebo] [ 48] #define MODEL1_raw _2 
[ 397.833][d][vo/gpu-next/libplacebo] [ 49] #define MODEL1_pos _3 
[ 397.833][d][vo/gpu-next/libplacebo] [ 50] #define MODEL1_map _3_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 51] #define MODEL1_size vec2(textureSize(_2, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 52] #define MODEL1_pt _4 
[ 397.833][d][vo/gpu-next/libplacebo] [ 53] #define MODEL1_off _5 
[ 397.833][d][vo/gpu-next/libplacebo] [ 54] #define MODEL1_mul _6 
[ 397.833][d][vo/gpu-next/libplacebo] [ 55] #define MODEL1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 56] #define MODEL1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 57] #define MODEL1_texOff(off) (MODEL1_tex(_3 + _4 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 58] #define MODEL1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 59] #define MODEL2_raw _7 
[ 397.833][d][vo/gpu-next/libplacebo] [ 60] #define MODEL2_pos _8 
[ 397.833][d][vo/gpu-next/libplacebo] [ 61] #define MODEL2_map _8_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 62] #define MODEL2_size vec2(textureSize(_7, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 63] #define MODEL2_pt _9 
[ 397.833][d][vo/gpu-next/libplacebo] [ 64] #define MODEL2_off _a 
[ 397.833][d][vo/gpu-next/libplacebo] [ 65] #define MODEL2_mul _b 
[ 397.833][d][vo/gpu-next/libplacebo] [ 66] #define MODEL2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 67] #define MODEL2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 68] #define MODEL2_texOff(off) (MODEL2_tex(_8 + _9 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 69] #define MODEL2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 70] #define MODEL3_raw _c 
[ 397.833][d][vo/gpu-next/libplacebo] [ 71] #define MODEL3_pos _d 
[ 397.833][d][vo/gpu-next/libplacebo] [ 72] #define MODEL3_map _d_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 73] #define MODEL3_size vec2(textureSize(_c, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 74] #define MODEL3_pt _e 
[ 397.833][d][vo/gpu-next/libplacebo] [ 75] #define MODEL3_off _f 
[ 397.833][d][vo/gpu-next/libplacebo] [ 76] #define MODEL3_mul _10 
[ 397.833][d][vo/gpu-next/libplacebo] [ 77] #define MODEL3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 78] #define MODEL3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 79] #define MODEL3_texOff(off) (MODEL3_tex(_d + _e * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 80] #define MODEL3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 81] #define MODEL4_raw _11 
[ 397.833][d][vo/gpu-next/libplacebo] [ 82] #define MODEL4_pos _12 
[ 397.833][d][vo/gpu-next/libplacebo] [ 83] #define MODEL4_map _12_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 84] #define MODEL4_size vec2(textureSize(_11, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 85] #define MODEL4_pt _13 
[ 397.833][d][vo/gpu-next/libplacebo] [ 86] #define MODEL4_off _14 
[ 397.833][d][vo/gpu-next/libplacebo] [ 87] #define MODEL4_mul _15 
[ 397.833][d][vo/gpu-next/libplacebo] [ 88] #define MODEL4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 89] #define MODEL4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 90] #define MODEL4_texOff(off) (MODEL4_tex(_12 + _13 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 91] #define MODEL4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 92] #define FEATURE4_raw _16 
[ 397.833][d][vo/gpu-next/libplacebo] [ 93] #define FEATURE4_pos _17 
[ 397.833][d][vo/gpu-next/libplacebo] [ 94] #define FEATURE4_map _17_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 95] #define FEATURE4_size vec2(textureSize(_16, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 96] #define FEATURE4_pt _18 
[ 397.833][d][vo/gpu-next/libplacebo] [ 97] #define FEATURE4_off _19 
[ 397.833][d][vo/gpu-next/libplacebo] [ 98] #define FEATURE4_mul _1a 
[ 397.833][d][vo/gpu-next/libplacebo] [ 99] #define FEATURE4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [100] #define FEATURE4_tex(pos) (_1a * vec4(textureLod(_16, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [101] #define FEATURE4_texOff(off) (FEATURE4_tex(_17 + _18 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [102] #define FEATURE4_gather(pos, c) (_1a * vec4(textureGather(_16, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [103] #define frame _1b 
[ 397.833][d][vo/gpu-next/libplacebo] [104] #define random _1c 
[ 397.833][d][vo/gpu-next/libplacebo] [105] #define input_size _1d 
[ 397.833][d][vo/gpu-next/libplacebo] [106] #define target_size _1e 
[ 397.833][d][vo/gpu-next/libplacebo] [107] #define tex_offset _1f 
[ 397.833][d][vo/gpu-next/libplacebo] [108] vec4 _8001(vec4 color) {
[ 397.833][d][vo/gpu-next/libplacebo] [109] // pl_shader_linearize           
[ 397.833][d][vo/gpu-next/libplacebo] [110] color.rgb = max(color.rgb, 0.0); 
[ 397.833][d][vo/gpu-next/libplacebo] [111] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.833][d][vo/gpu-next/libplacebo] [112] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [113] }
[ 397.833][d][vo/gpu-next/libplacebo] [114] 
[ 397.833][d][vo/gpu-next/libplacebo] [115] #define linearize _8001 
[ 397.833][d][vo/gpu-next/libplacebo] [116] vec4 _4001(vec4 color) {
[ 397.833][d][vo/gpu-next/libplacebo] [117] // pl_shader_delinearize 
[ 397.833][d][vo/gpu-next/libplacebo] [118] color.rgb = max(color.rgb, 0.0); 
[ 397.833][d][vo/gpu-next/libplacebo] [119] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.833][d][vo/gpu-next/libplacebo] [120] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [121] }
[ 397.833][d][vo/gpu-next/libplacebo] [122] 
[ 397.833][d][vo/gpu-next/libplacebo] [123] #define delinearize _4001 
[ 397.833][d][vo/gpu-next/libplacebo] [124] vec4 hook()
[ 397.833][d][vo/gpu-next/libplacebo] [125] {
[ 397.833][d][vo/gpu-next/libplacebo] [126] vec4 res = vec4(0.0029921564273536,-0.0270903781056404,0.0255143754184246,-0.0184149276465178);
[ 397.833][d][vo/gpu-next/libplacebo] [127] res += mat4(-0.2108196020126343,-0.2185097634792328,-0.1150923520326614,-0.2773406505584717,-0.0519551075994968,-0.0543617308139801,0.3245669901371002,0.3976034522056580,0.0392675884068012,-0.0570353642106056,0.0335133336484432,0.0519896373152733,0.0767750144004822,-0.3414104878902435,-0.3815031647682190,0.3476504087448120) * MODEL1_texOff(0);
[ 397.833][d][vo/gpu-next/libplacebo] [128] res += mat4(0.0712867751717567,0.1004567891359329,-0.0822078958153725,-0.1712695807218552,0.0996699407696724,-0.4046521782875061,-0.1560784429311752,-0.2510003447532654,-0.0086810048669577,0.1553008109331131,-0.0590447708964348,0.2843724489212036,-0.5681545138359070,-0.0159357115626335,-0.0047869379632175,0.6510519981384277) * MODEL2_texOff(0);
[ 397.833][d][vo/gpu-next/libplacebo] [129] res += mat4(-0.0673058703541756,0.1657533198595047,-0.0670174360275269,0.0306193791329861,-0.6315240263938904,-0.3187874257564545,-0.0869498848915100,0.2592973113059998,0.2773531079292297,-0.3216951191425323,0.1533942073583603,-0.1491241008043289,0.2170121371746063,-0.1478294134140015,0.0233438313007355,-0.0146541036665440) * MODEL3_texOff(0);
[ 397.833][d][vo/gpu-next/libplacebo] [130] res += mat4(-0.1280820816755295,0.0763763189315796,-0.0739043205976486,-0.0476034060120583,0.4246569573879242,0.4332760274410248,0.1480301767587662,-0.2644723951816559,-0.0805236026644707,0.1453001648187637,0.0421080626547337,-0.3843654394149780,0.1520981937646866,-0.1582884788513184,-0.0312596336007118,-0.2096437215805054) * MODEL4_texOff(0);
[ 397.833][d][vo/gpu-next/libplacebo] [131] res += FEATURE4_texOff(0);
[ 397.833][d][vo/gpu-next/libplacebo] [132] res = max(res, vec4(0.0)) + vec4(0.1206123828887939,-0.0085650878027081,0.5806476473808289,0.0062637194059789) * min(res, vec4(0.0));
[ 397.833][d][vo/gpu-next/libplacebo] [133] return res;
[ 397.833][d][vo/gpu-next/libplacebo] [134] }
[ 397.833][d][vo/gpu-next/libplacebo] [135] 
[ 397.833][d][vo/gpu-next/libplacebo] [136] vec4 _1() {
[ 397.833][d][vo/gpu-next/libplacebo] [137] vec4 color = hook(); 
[ 397.833][d][vo/gpu-next/libplacebo] [138] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [139] }
[ 397.833][d][vo/gpu-next/libplacebo] [140] 
[ 397.833][d][vo/gpu-next/libplacebo] [141] void main() {
[ 397.833][d][vo/gpu-next/libplacebo] [142] out_color = _1();
[ 397.833][d][vo/gpu-next/libplacebo] [143] }
[ 397.833][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=4: 1.000000
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=5: 0.059585
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=6: 0.870311
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=7: 0.059585
[ 397.833][d][vo/gpu-next/libplacebo]   constant_id=8: 1.149015
[ 397.833][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xa8fa509c7ac6829d
[ 397.833][d][vo/gpu-next] cache_load_obj: key(b5dfda49c7a61e91), size(3444), load time(0.033 ms)
[ 397.833][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb5dfda49c7a61e91
[ 397.833][d][vo/gpu-next] cache_load_obj: key(bddfdeae5534e911), size(16433), load time(0.140 ms)
[ 397.833][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.833][d][vo/gpu-next] cache_save_obj: key(a8fa509c7ac6829d), size(1148)
[ 397.833][d][vo/gpu-next] cache_save_obj: key(b5dfda49c7a61e91), size(3444)
[ 397.833][d][vo/gpu-next/libplacebo] Spent 0.061 ms creating pipeline
[ 397.833][d][vo/gpu-next] cache_save_obj: key(bddfdeae5534e911), size(16433)
[ 397.833][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.833][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.833][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.833][d][vo/gpu-next/libplacebo] Spent 0.062 ms allocating slab
[ 397.833][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.833][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.833][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.833][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.833][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.833][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.833][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.833][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.833][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.833][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.833][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.833][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.833][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.833][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.833][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.833][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.833][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.833][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.833][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.833][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.833][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.833][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.833][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.833][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.833][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.833][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.833][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.833][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.833][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.833][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.833][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.833][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.833][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.833][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.833][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.833][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.833][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.833][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.833][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.833][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.833][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.833][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.833][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.833][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.833][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.833][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.833][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.833][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.833][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.833][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.833][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.833][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.833][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.833][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.833][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.833][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.833][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.833][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.833][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.833][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.833][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.833][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.833][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.833][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.833][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.833][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.833][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.833][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.833][d][vo/gpu-next/libplacebo] [ 43] #define RES1_raw _2 
[ 397.833][d][vo/gpu-next/libplacebo] [ 44] #define RES1_pos _3 
[ 397.833][d][vo/gpu-next/libplacebo] [ 45] #define RES1_map _3_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 46] #define RES1_size vec2(textureSize(_2, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 47] #define RES1_pt _4 
[ 397.833][d][vo/gpu-next/libplacebo] [ 48] #define RES1_off _5 
[ 397.833][d][vo/gpu-next/libplacebo] [ 49] #define RES1_mul _6 
[ 397.833][d][vo/gpu-next/libplacebo] [ 50] #define RES1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 51] #define RES1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 52] #define RES1_texOff(off) (RES1_tex(_3 + _4 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 53] #define RES1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 54] #define RES2_raw _7 
[ 397.833][d][vo/gpu-next/libplacebo] [ 55] #define RES2_pos _8 
[ 397.833][d][vo/gpu-next/libplacebo] [ 56] #define RES2_map _8_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 57] #define RES2_size vec2(textureSize(_7, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 58] #define RES2_pt _9 
[ 397.833][d][vo/gpu-next/libplacebo] [ 59] #define RES2_off _a 
[ 397.833][d][vo/gpu-next/libplacebo] [ 60] #define RES2_mul _b 
[ 397.833][d][vo/gpu-next/libplacebo] [ 61] #define RES2_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 62] #define RES2_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 63] #define RES2_texOff(off) (RES2_tex(_8 + _9 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 64] #define RES2_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 65] #define RES3_raw _c 
[ 397.833][d][vo/gpu-next/libplacebo] [ 66] #define RES3_pos _d 
[ 397.833][d][vo/gpu-next/libplacebo] [ 67] #define RES3_map _d_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 68] #define RES3_size vec2(textureSize(_c, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 69] #define RES3_pt _e 
[ 397.833][d][vo/gpu-next/libplacebo] [ 70] #define RES3_off _f 
[ 397.833][d][vo/gpu-next/libplacebo] [ 71] #define RES3_mul _10 
[ 397.833][d][vo/gpu-next/libplacebo] [ 72] #define RES3_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 73] #define RES3_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 74] #define RES3_texOff(off) (RES3_tex(_d + _e * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 75] #define RES3_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 76] #define RES4_raw _11 
[ 397.833][d][vo/gpu-next/libplacebo] [ 77] #define RES4_pos _12 
[ 397.833][d][vo/gpu-next/libplacebo] [ 78] #define RES4_map _12_map 
[ 397.833][d][vo/gpu-next/libplacebo] [ 79] #define RES4_size vec2(textureSize(_11, 0)) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 80] #define RES4_pt _13 
[ 397.833][d][vo/gpu-next/libplacebo] [ 81] #define RES4_off _14 
[ 397.833][d][vo/gpu-next/libplacebo] [ 82] #define RES4_mul _15 
[ 397.833][d][vo/gpu-next/libplacebo] [ 83] #define RES4_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 84] #define RES4_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 85] #define RES4_texOff(off) (RES4_tex(_12 + _13 * vec2(off))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 86] #define RES4_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.833][d][vo/gpu-next/libplacebo] [ 87] #define frame _16 
[ 397.833][d][vo/gpu-next/libplacebo] [ 88] #define random _17 
[ 397.833][d][vo/gpu-next/libplacebo] [ 89] #define input_size _18 
[ 397.833][d][vo/gpu-next/libplacebo] [ 90] #define target_size _19 
[ 397.833][d][vo/gpu-next/libplacebo] [ 91] #define tex_offset _1a 
[ 397.833][d][vo/gpu-next/libplacebo] [ 92] vec4 _8001(vec4 color) {
[ 397.833][d][vo/gpu-next/libplacebo] [ 93] // pl_shader_linearize           
[ 397.833][d][vo/gpu-next/libplacebo] [ 94] color.rgb = max(color.rgb, 0.0); 
[ 397.833][d][vo/gpu-next/libplacebo] [ 95] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.833][d][vo/gpu-next/libplacebo] [ 96] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [ 97] }
[ 397.833][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.833][d][vo/gpu-next/libplacebo] [ 99] #define linearize _8001 
[ 397.833][d][vo/gpu-next/libplacebo] [100] vec4 _4001(vec4 color) {
[ 397.833][d][vo/gpu-next/libplacebo] [101] // pl_shader_delinearize 
[ 397.833][d][vo/gpu-next/libplacebo] [102] color.rgb = max(color.rgb, 0.0); 
[ 397.833][d][vo/gpu-next/libplacebo] [103] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.833][d][vo/gpu-next/libplacebo] [104] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [105] }
[ 397.833][d][vo/gpu-next/libplacebo] [106] 
[ 397.833][d][vo/gpu-next/libplacebo] [107] #define delinearize _4001 
[ 397.833][d][vo/gpu-next/libplacebo] [108] vec4 hook()
[ 397.833][d][vo/gpu-next/libplacebo] [109] {
[ 397.833][d][vo/gpu-next/libplacebo] [110] vec4 res = vec4(0.0702711343765259,0.0664050132036209,0.0686390176415443,0.0644881501793861);
[ 397.833][d][vo/gpu-next/libplacebo] [111] res += mat4x4(-0.0220870003104210,-0.0026495878119022,0.0011225421912968,0.0059517049230635,-0.0158754698932171,-0.0073457080870867,-0.0168286003172398,-0.0071252095513046,-0.0185480788350105,-0.0129991667345166,-0.0103834569454193,0.0045425617136061,-0.0202563088387251,-0.0097796274349093,-0.0157800465822220,-0.0125904576852918) * RES1_texOff(vec2(-1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [112] res += mat4x4(0.0959623232483864,0.0172646623104811,0.0135546457022429,-0.0047857575118542,-0.0189756304025650,-0.0088604958727956,-0.0153466761112213,-0.0061616809107363,0.0245400369167328,0.0080278720706701,-0.0050234026275575,-0.0085535012185574,0.0122431647032499,-0.0008322863141075,0.0062835766002536,0.0011176555417478) * RES2_texOff(vec2(-1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [113] res += mat4x4(-0.0080512277781963,0.0010662876302376,-0.0028354951646179,0.0022695218212903,-0.0442206338047981,-0.0157682765275240,-0.0661408230662346,-0.0098552983254194,-0.0216109957545996,0.0006023725727573,-0.0127598075196147,0.0019905669614673,0.0135405464097857,-0.0048485524021089,0.0033436624798924,-0.0089380955323577) * RES3_texOff(vec2(-1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [114] res += mat4x4(-0.0011910855537280,-0.0039172959513962,0.0057305907830596,0.0114189386367798,-0.0073232934810221,0.0018632245482877,0.0032367329113185,0.0048749968409538,0.0485895648598671,0.0222841333597898,0.0201927367597818,0.0175225101411343,0.0173806007951498,-0.0129096359014511,0.0220123063772917,-0.0007566481363028) * RES4_texOff(vec2(-1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [115] res += mat4x4(0.0541077852249146,0.0088849775493145,-0.0352222919464111,-0.0336082167923450,0.0348937772214413,0.0094135040417314,0.0109726833179593,-0.0020038345828652,-0.0654385611414909,0.0616397634148598,-0.0108097661286592,-0.0074262339621782,0.0255410205572844,0.0318369790911674,0.0302448887377977,0.0464591495692730) * RES1_texOff(vec2(-1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [116] res += mat4x4(0.0914473757147789,0.1183946132659912,0.0183039177209139,0.0108801443129778,0.0087016746401787,-0.0187510885298252,0.0164879057556391,-0.0078554116189480,0.0339316464960575,0.0363024957478046,0.0246983356773853,0.0141928847879171,0.0447472482919693,0.0682304278016090,0.0301067382097244,0.0500068999826908) * RES2_texOff(vec2(-1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [117] res += mat4x4(0.0067629739642143,0.0114591401070356,0.0187604539096355,0.0211918894201517,0.0194796156138182,-0.0079339090734720,-0.0436643138527870,-0.0870464146137238,-0.0010849037207663,0.0042736041359603,0.0021966963540763,0.0032921251840889,0.0154978670179844,0.0028710442129523,0.0019292244687676,-0.0085603129118681) * RES3_texOff(vec2(-1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [118] res += mat4x4(0.0080668851733208,-0.0225392915308475,0.0091220829635859,0.0036618844605982,-0.0468714684247971,-0.0325540266931057,0.0194284059107304,0.0099906679242849,-0.0350779667496681,0.0147823467850685,-0.0409614332020283,-0.0162197984755039,-0.0118040712550282,-0.0107394354417920,-0.0058304341509938,-0.0179357603192329) * RES4_texOff(vec2(-1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [119] res += mat4x4(-0.0072065959684551,0.0059087206609547,0.0042072930373251,-0.0125489430502057,-0.0079884817823768,0.0017780022462830,-0.0096861450001597,-0.0143716456368566,0.0178131069988012,0.0077008674852550,-0.0104778651148081,0.0178307909518480,-0.0125649496912956,-0.0223310422152281,-0.0174152608960867,-0.0288079623132944) * RES1_texOff(vec2(-1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [120] res += mat4x4(-0.0089945588260889,-0.0105278370901942,-0.0087794493883848,-0.0200581382960081,-0.0070241875946522,-0.0100495256483555,-0.0065141017548740,-0.0025615154299885,0.0096025029197335,-0.0005133956437930,-0.0020267993677408,-0.0070255715399981,-0.0100025376304984,-0.0236529950052500,-0.0137209612876177,-0.0302035361528397) * RES2_texOff(vec2(-1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [121] res += mat4x4(-0.0032405662350357,-0.0148320076987147,-0.0076260948553681,-0.0124788954854012,-0.0087069822475314,0.0110121816396713,-0.0021906285546720,0.0014071050100029,0.0135683985427022,-0.0078443791717291,0.0062457872554660,0.0043241265229881,0.0002743605873547,-0.0032806890085340,-0.0032846797257662,0.0150700956583023) * RES3_texOff(vec2(-1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [122] res += mat4x4(-0.0027850405313075,0.0053440136834979,-0.0017873296746984,-0.0044526602141559,0.0054683117195964,-0.0244847126305103,-0.0001234160299646,0.0006427325424738,-0.0021922208834440,0.0216671191155910,0.0118218520656228,0.0052054254338145,-0.0060959886759520,0.0006872841622680,0.0020801757927984,-0.0042533921077847) * RES4_texOff(vec2(-1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [123] res += mat4x4(-0.0559481568634510,-0.0195591971278191,-0.0200900416821241,-0.0259768385440111,0.0271696113049984,0.0055345161817968,0.0060981209389865,-0.0034072615671903,-0.0195017755031586,-0.0191524475812912,-0.0099942665547132,-0.0354959741234779,0.0537344738841057,0.0157418027520180,0.0418605282902718,0.0278326217085123) * RES1_texOff(vec2(0,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [124] res += mat4x4(-0.0036691017448902,-0.0047218333929777,0.0207924265414476,-0.0047244532033801,0.0225677359849215,0.0167649295181036,0.0061167129315436,0.0114347161725163,0.0303734224289656,0.0355883352458477,0.0568233802914619,0.0352237112820148,0.0735053122043610,0.0266380403190851,0.0783454328775406,0.0347369872033596) * RES2_texOff(vec2(0,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [125] res += mat4x4(0.0483660250902176,0.0143020860850811,0.0473622940480709,0.0214125514030457,0.0189097002148628,0.0047973231412470,0.0452921539545059,-0.0065782419405878,-0.0629488378763199,0.0243484787642956,-0.0135263381525874,0.0123279569670558,-0.0082848174497485,0.0024778738152236,-0.0106893666088581,-0.0001850607804954) * RES3_texOff(vec2(0,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [126] res += mat4x4(-0.0339773818850517,0.0586699061095715,-0.0195228401571512,0.0464928857982159,-0.0197486504912376,-0.0043210862204432,-0.0319182090461254,-0.0084351114928722,0.0396042764186859,-0.0236901417374611,0.0147373573854566,-0.0199888627976179,0.0884112045168877,-0.1296077072620392,0.0369938686490059,-0.0849645882844925) * RES4_texOff(vec2(0,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [127] res += mat4x4(-0.1179696097970009,-0.1306988149881363,0.2269905507564545,0.1376847475767136,0.1460490524768829,0.1386509090662003,0.1258177161216736,0.0984488725662231,-0.0484265647828579,0.0311658699065447,-0.1097578033804893,0.1228798478841782,0.2591285407543182,0.2391219735145569,0.1856463700532913,0.1675472557544708) * RES1_texOff(vec2(0,0));
[ 397.833][d][vo/gpu-next/libplacebo] [128] res += mat4x4(0.0581708513200283,-0.0032117022201419,-0.0482851490378380,-0.0706159919500351,0.1523579508066177,0.1061967536807060,0.0877194479107857,0.0380293950438499,-0.1161146983504295,-0.1074958667159081,-0.0130370790138841,-0.0006071503157727,0.2575406432151794,0.2458014935255051,0.3011408150196075,0.2888701260089874) * RES2_texOff(vec2(0,0));
[ 397.833][d][vo/gpu-next/libplacebo] [129] res += mat4x4(0.1877700835466385,0.1970345824956894,0.1723081618547440,0.1863754689693451,-0.0168692730367184,0.0111087076365948,0.0554454214870930,0.1145997643470764,-0.0071506653912365,-0.0326027795672417,0.0248421318829060,0.0405052118003368,0.0787657722830772,-0.1041176393628120,-0.0092452019453049,-0.1300307959318161) * RES3_texOff(vec2(0,0));
[ 397.833][d][vo/gpu-next/libplacebo] [130] res += mat4x4(0.0406596362590790,-0.1513831019401550,0.0393252559006214,-0.1172746941447258,0.1404846608638763,0.1068493574857712,-0.0144858211278915,-0.0008008934091777,0.0232940409332514,0.1414675712585449,-0.1191455051302910,0.0037538856267929,-0.0403815843164921,0.1713769584894180,-0.0346005111932755,0.0877283737063408) * RES4_texOff(vec2(0,0));
[ 397.833][d][vo/gpu-next/libplacebo] [131] res += mat4x4(-0.0165363755077124,-0.0626669824123383,-0.0024954087566584,0.0600780025124550,0.0172574203461409,0.0353372246026993,0.0204393472522497,0.0417744480073452,0.0082517173141241,0.0452848188579082,0.0406533293426037,0.0093610836192966,0.0395939871668816,0.0931207016110420,0.0435328558087349,0.0769012123346329) * RES1_texOff(vec2(0,1));
[ 397.833][d][vo/gpu-next/libplacebo] [132] res += mat4x4(-0.0319104157388210,-0.0375522784888744,-0.0398675724864006,-0.0675119608640671,-0.0148185798898339,0.0121404305100441,-0.0029036172199994,0.0020732285920531,0.0234324168413877,-0.0399785749614239,0.0323737785220146,-0.0093255508691072,0.0102615375071764,0.0678639039397240,0.0368196740746498,0.0896952524781227) * RES2_texOff(vec2(0,1));
[ 397.833][d][vo/gpu-next/libplacebo] [133] res += mat4x4(0.0159728452563286,0.0416712239384651,0.0347425043582916,0.0421460643410683,0.0008081028936431,0.0116949938237667,0.0074917669408023,0.0192919857800007,0.0171711537986994,-0.0101426783949137,0.0068109538406134,-0.0176109261810780,-0.0443183854222298,0.0764245316386223,-0.0322800390422344,-0.0020600541029125) * RES3_texOff(vec2(0,1));
[ 397.833][d][vo/gpu-next/libplacebo] [134] res += mat4x4(-0.0010740647558123,0.0388096384704113,0.0010552684543654,0.0432058833539486,-0.0049798754043877,0.0053115054033697,0.0019503619987518,-0.0387431308627129,-0.0065949987620115,0.0505174398422241,-0.0543942712247372,-0.0015275976620615,-0.0083921244367957,-0.0187719315290451,-0.0109476409852505,-0.0106759341433644) * RES4_texOff(vec2(0,1));
[ 397.833][d][vo/gpu-next/libplacebo] [135] res += mat4x4(0.0051117250695825,-0.0033410859759897,-0.0040079299360514,0.0055306786671281,-0.0019510040292516,-0.0010836309520528,-0.0033211021218449,-0.0065903887152672,0.0022529305424541,-0.0041433679871261,-0.0084395809099078,0.0007058104965836,-0.0140225086361170,-0.0102671803906560,-0.0249901991337538,-0.0303833615034819) * RES1_texOff(vec2(1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [136] res += mat4x4(0.0125678768381476,-0.0151942037045956,0.0075833774171770,-0.0155235687270761,-0.0000200544054678,0.0030575830023736,-0.0039111212827265,-0.0032847151160240,0.0061915065161884,-0.0008134687086567,0.0243571326136589,0.0230383742600679,-0.0146478731185198,-0.0092745777219534,0.0046072923578322,-0.0079534733667970) * RES2_texOff(vec2(1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [137] res += mat4x4(-0.0097588589414954,-0.0035078686196357,-0.0105109121650457,-0.0140263410285115,-0.0005829505971633,0.0068487222306430,0.0070274472236633,0.0080682458356023,0.0208634454756975,0.0100151635706425,-0.0521877855062485,0.0083464942872524,-0.0010621200781316,-0.0108121363446116,0.0063104690052569,-0.0056940545327961) * RES3_texOff(vec2(1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [138] res += mat4x4(0.0162853933870792,0.0076454998925328,0.0107743749395013,0.0216084551066160,-0.0002642004692461,-0.0012697440106422,-0.0232997462153435,-0.0066385669633746,-0.0032070311717689,-0.0034522172063589,0.0067081819288433,-0.0237586386501789,-0.0137327276170254,-0.0097812153398991,0.0457961820065975,-0.0641853287816048) * RES4_texOff(vec2(1,-1));
[ 397.833][d][vo/gpu-next/libplacebo] [139] res += mat4x4(0.0082530006766319,-0.0048218108713627,-0.0260043144226074,-0.0322636663913727,0.0245403517037630,0.0189718026667833,0.0201180893927813,0.0223731752485037,-0.0154254138469696,0.0161295570433140,-0.0136728994548321,-0.0050735161639750,0.0149836223572493,0.0346523150801659,0.0397907048463821,0.0489960424602032) * RES1_texOff(vec2(1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [140] res += mat4x4(0.0220018606632948,0.0093919858336449,0.0140580376610160,-0.0072062858380377,0.0157827660441399,-0.0008420076919720,0.0502980016171932,0.0254325121641159,0.0137034645304084,0.0052674622274935,-0.0317771695554256,-0.0357571057975292,0.0275730285793543,0.0288176275789738,0.0530282929539680,0.0572183132171631) * RES2_texOff(vec2(1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [141] res += mat4x4(0.0274036191403866,0.0304108746349812,0.0443621836602688,0.0470876954495907,-0.0105204451829195,-0.0062582152895629,0.0051971892826259,0.0052137244492769,0.0080892154946923,0.0526603050529957,-0.0614838302135468,-0.0719057247042656,-0.0146499508991838,-0.0301279500126839,0.0551207289099693,-0.0202790498733521) * RES3_texOff(vec2(1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [142] res += mat4x4(0.0030307257547975,0.0016283076256514,0.0093603916466236,-0.0393031202256680,0.0047102752141654,0.0021207178942859,-0.0415569059550762,-0.0410857200622559,-0.0234171319752932,0.0070652165450156,-0.0060949386097491,0.0579068884253502,-0.0032723729964346,-0.0345389954745770,-0.0146396216005087,0.0664585530757904) * RES4_texOff(vec2(1,0));
[ 397.833][d][vo/gpu-next/libplacebo] [143] res += mat4x4(-0.0060492716729641,0.0030178369488567,-0.0014131128555164,-0.0104836737737060,0.0005349104176275,-0.0066002658568323,-0.0107689173892140,-0.0154894515872002,-0.0021532929968089,0.0003043189935852,0.0000212212416955,0.0262770242989063,-0.0061991675756872,-0.0229524057358503,-0.0179380439221859,-0.0190318487584591) * RES1_texOff(vec2(1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [144] res += mat4x4(0.0100620929151773,-0.0013402060139924,-0.0202538128942251,-0.0282459985464811,-0.0005023539997637,0.0015169888501987,-0.0186713207513094,-0.0053251008503139,0.0104408143088222,-0.0009164076182060,0.0141644142568111,-0.0118004251271486,-0.0117476247251034,-0.0188432894647121,-0.0273562390357256,-0.0195445436984301) * RES2_texOff(vec2(1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [145] res += mat4x4(-0.0005210597882979,-0.0122195687144995,-0.0171017311513424,-0.0154880527406931,-0.0067425114102662,0.0001912614097819,-0.0035711112432182,0.0169256068766117,0.0115485033020377,-0.0041601392440498,0.0142273167148232,-0.0184783581644297,-0.0127313714474440,0.0051582138985395,-0.0165696628391743,0.0555390641093254) * RES3_texOff(vec2(1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [146] res += mat4x4(-0.0041520586237311,-0.0031902645714581,-0.0041864593513310,0.0066329599358141,0.0084658414125443,-0.0048282416537404,-0.0054575288668275,-0.0444690361618996,-0.0055003603920341,0.0066882940009236,0.0179758612066507,0.0327335819602013,0.0022823568433523,0.0029537994414568,0.0003775391378440,-0.0003992885467596) * RES4_texOff(vec2(1,1));
[ 397.833][d][vo/gpu-next/libplacebo] [147] return res;
[ 397.833][d][vo/gpu-next/libplacebo] [148] }
[ 397.833][d][vo/gpu-next/libplacebo] [149] 
[ 397.833][d][vo/gpu-next/libplacebo] [150] vec4 _1() {
[ 397.833][d][vo/gpu-next/libplacebo] [151] vec4 color = hook(); 
[ 397.833][d][vo/gpu-next/libplacebo] [152] return color;
[ 397.833][d][vo/gpu-next/libplacebo] [153] }
[ 397.834][d][vo/gpu-next/libplacebo] [154] 
[ 397.834][d][vo/gpu-next/libplacebo] [155] void main() {
[ 397.834][d][vo/gpu-next/libplacebo] [156] out_color = _1();
[ 397.834][d][vo/gpu-next/libplacebo] [157] }
[ 397.834][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.834][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.834][d][vo/gpu-next] cache_load_obj: key(7d9cb9e34bcbba67), size(20476), load time(0.149 ms)
[ 397.834][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x7d9cb9e34bcbba67
[ 397.834][d][vo/gpu-next] cache_load_obj: key(67689d3bdc98467), size(27044), load time(0.159 ms)
[ 397.834][d][vo/gpu-next/libplacebo] Spent 0.024 ms compiling shader
[ 397.834][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.834][d][vo/gpu-next] cache_save_obj: key(7d9cb9e34bcbba67), size(20476)
[ 397.834][d][vo/gpu-next/libplacebo] Spent 0.109 ms creating pipeline
[ 397.834][d][vo/gpu-next] cache_save_obj: key(67689d3bdc98467), size(27044)
[ 397.834][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.834][d][vo/gpu-next/libplacebo] (Re)creating 1696x960x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.834][d][vo/gpu-next/libplacebo] Allocating 13893632 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.834][d][vo/gpu-next/libplacebo] Spent 0.062 ms allocating slab
[ 397.834][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.834][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.834][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.834][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.834][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.834][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.834][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.834][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.834][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.834][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.834][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.834][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.834][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.834][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.834][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.834][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.834][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.834][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.834][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.834][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.834][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.834][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.834][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.834][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.834][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.834][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.834][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.834][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.834][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.834][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.834][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.834][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.834][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.834][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.834][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.834][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.834][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.834][d][vo/gpu-next/libplacebo] [ 28] #define SUBCONV1_raw _2 
[ 397.834][d][vo/gpu-next/libplacebo] [ 29] #define SUBCONV1_pos _3 
[ 397.834][d][vo/gpu-next/libplacebo] [ 30] #define SUBCONV1_map _3_map 
[ 397.834][d][vo/gpu-next/libplacebo] [ 31] #define SUBCONV1_size vec2(textureSize(_2, 0)) 
[ 397.834][d][vo/gpu-next/libplacebo] [ 32] #define SUBCONV1_pt _4 
[ 397.834][d][vo/gpu-next/libplacebo] [ 33] #define SUBCONV1_off _5 
[ 397.834][d][vo/gpu-next/libplacebo] [ 34] #define SUBCONV1_mul _6 
[ 397.834][d][vo/gpu-next/libplacebo] [ 35] #define SUBCONV1_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.834][d][vo/gpu-next/libplacebo] [ 36] #define SUBCONV1_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.834][d][vo/gpu-next/libplacebo] [ 37] #define SUBCONV1_texOff(off) (SUBCONV1_tex(_3 + _4 * vec2(off))) 
[ 397.834][d][vo/gpu-next/libplacebo] [ 38] #define SUBCONV1_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.834][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.834][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.834][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.834][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.834][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.834][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.834][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.834][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.834][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.834][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.834][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.834][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.834][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.834][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.834][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.834][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.834][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.834][d][vo/gpu-next/libplacebo] [ 60] vec4 hook()
[ 397.834][d][vo/gpu-next/libplacebo] [ 61] {
[ 397.834][d][vo/gpu-next/libplacebo] [ 62] vec2 fcoord = fract(SUBCONV1_pos * SUBCONV1_size);
[ 397.834][d][vo/gpu-next/libplacebo] [ 63] vec2 base = SUBCONV1_pos + (vec2(0.5) - fcoord) * SUBCONV1_pt;
[ 397.834][d][vo/gpu-next/libplacebo] [ 64] ivec2 index = ivec2(fcoord * vec2(2));
[ 397.834][d][vo/gpu-next/libplacebo] [ 65] vec4 res = SUBCONV1_tex(base);
[ 397.834][d][vo/gpu-next/libplacebo] [ 66] return vec4(res[index.x * 2 + index.y], 0, 0, 1);
[ 397.834][d][vo/gpu-next/libplacebo] [ 67] }vec4 _1() {
[ 397.834][d][vo/gpu-next/libplacebo] [ 68] vec4 color = hook(); 
[ 397.834][d][vo/gpu-next/libplacebo] [ 69] return color;
[ 397.834][d][vo/gpu-next/libplacebo] [ 70] }
[ 397.834][d][vo/gpu-next/libplacebo] [ 71] 
[ 397.834][d][vo/gpu-next/libplacebo] [ 72] void main() {
[ 397.834][d][vo/gpu-next/libplacebo] [ 73] out_color = _1();
[ 397.834][d][vo/gpu-next/libplacebo] [ 74] }
[ 397.834][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.834][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.834][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.834][d][vo/gpu-next] cache_load_obj: key(59e9bc15861eb62e), size(1388), load time(0.029 ms)
[ 397.834][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x59e9bc15861eb62e
[ 397.835][d][vo/gpu-next] cache_load_obj: key(a96e2e369127e809), size(14159), load time(0.126 ms)
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.003 ms compiling shader
[ 397.835][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.835][d][vo/gpu-next] cache_save_obj: key(59e9bc15861eb62e), size(1388)
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.055 ms creating pipeline
[ 397.835][d][vo/gpu-next] cache_save_obj: key(a96e2e369127e809), size(14159)
[ 397.835][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format rg16hf: src/renderer.c:1065
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 1696x240x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.835][d][vo/gpu-next/libplacebo] Allocating 3473408 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 1696x960x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.835][d][vo/gpu-next/libplacebo] Allocating 13893632 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.055 ms allocating slab
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 1696x960x0 texture with format rgba16hf: src/renderer.c:1065
[ 397.835][d][vo/gpu-next/libplacebo] Allocating 13893632 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1065
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.054 ms allocating slab
[ 397.835][d][vo/gpu-next/libplacebo] LUT invalidated, regenerating..
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.000 ms generating shader LUT
[ 397.835][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.132 ms allocating slab
[ 397.835][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:1065
[ 397.835][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1065
[ 397.835][d][vo/gpu-next/libplacebo] Spent 0.075 ms allocating slab
[ 397.835][d][vo/gpu-next/libplacebo] compute shader source:
[ 397.835][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.835][d][vo/gpu-next/libplacebo] [  2] #extension GL_ARB_compute_shader : enable
[ 397.835][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [  9] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.835][d][vo/gpu-next/libplacebo] [ 10] #extension GL_ARB_shader_image_load_store : enable
[ 397.835][d][vo/gpu-next/libplacebo] [ 11] #extension GL_ARB_texture_gather : enable
[ 397.835][d][vo/gpu-next/libplacebo] [ 12] layout(std430, push_constant) uniform PushC {
[ 397.835][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=0) vec2 _e004;
[ 397.835][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=8) vec2 _e010;
[ 397.835][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=16) vec2 _e011;
[ 397.835][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=24) vec2 _e012;
[ 397.835][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=32) vec2 _e013;
[ 397.835][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=40) vec2 _e014;
[ 397.835][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=48) ivec2 _e016;
[ 397.835][d][vo/gpu-next/libplacebo] [ 20] };
[ 397.835][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _e005 = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _e009 = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _e00a = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _e00b = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const int _e00d = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const int _e00e = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=6) const float _e00f = 1; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 28] layout(binding=0) uniform  sampler2D _e002;
[ 397.835][d][vo/gpu-next/libplacebo] [ 29] layout(binding=1) uniform  sampler1D _e007;
[ 397.835][d][vo/gpu-next/libplacebo] [ 30] layout(binding=2, rgba16f) writeonly restrict uniform image2D _e015;
[ 397.835][d][vo/gpu-next/libplacebo] [ 31] layout (local_size_x = 32, local_size_y = 32) in;
[ 397.835][d][vo/gpu-next/libplacebo] [ 32] #define frag_pos(id) (vec2(id) + vec2(0.5))  
[ 397.835][d][vo/gpu-next/libplacebo] [ 33] #define frag_map(id) (_e010 * frag_pos(id))    
[ 397.835][d][vo/gpu-next/libplacebo] [ 34] #define gl_FragCoord vec4(frag_pos(gl_GlobalInvocationID), 0.0, 1.0) 
[ 397.835][d][vo/gpu-next/libplacebo] [ 35] #define _e003_map(id) (mix(mix(_e011, _e012, frag_map(id).x),      mix(_e013, _e014, frag_map(id).x), frag_map(id).y)) 
[ 397.835][d][vo/gpu-next/libplacebo] [ 36] #define _e003 (_e003_map(gl_GlobalInvocationID)) 
[ 397.835][d][vo/gpu-next/libplacebo] [ 37] 
[ 397.835][d][vo/gpu-next/libplacebo] [ 38] #define _e008(x) (_e00a * (x) + _e009) 
[ 397.835][d][vo/gpu-next/libplacebo] [ 39] #define _e006(pos) (textureLod(_e007, float(\
[ 397.835][d][vo/gpu-next/libplacebo] [ 40]     _e008(float(pos))\
[ 397.835][d][vo/gpu-next/libplacebo] [ 41]   ), 0.0).x)
[ 397.835][d][vo/gpu-next/libplacebo] [ 42] shared vec2 _e00c_base; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 43] shared float _e00c_0[_e00e * _e00d]; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 44] shared float _e00c_1[_e00e * _e00d]; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 45] shared float _e00c_2[_e00e * _e00d]; 
[ 397.835][d][vo/gpu-next/libplacebo] [ 46] void _e001() {
[ 397.835][d][vo/gpu-next/libplacebo] [ 47] // pl_shader_sample_polar                     
[ 397.835][d][vo/gpu-next/libplacebo] [ 48] vec4 color = vec4(0.0);                       
[ 397.835][d][vo/gpu-next/libplacebo] [ 49] {                                             
[ 397.835][d][vo/gpu-next/libplacebo] [ 50] vec2 pos = _e003, pt = _e004;                     
[ 397.835][d][vo/gpu-next/libplacebo] [ 51] vec2 size = vec2(textureSize(_e002, 0));        
[ 397.835][d][vo/gpu-next/libplacebo] [ 52] vec2 fcoord = fract(pos * size - vec2(0.5));  
[ 397.835][d][vo/gpu-next/libplacebo] [ 53] vec2 base = pos - pt * fcoord;                
[ 397.835][d][vo/gpu-next/libplacebo] [ 54] vec2 center = base + pt * vec2(0.5);          
[ 397.835][d][vo/gpu-next/libplacebo] [ 55] ivec2 offset;                                 
[ 397.835][d][vo/gpu-next/libplacebo] [ 56] float w, d, wsum = 0.0;                       
[ 397.835][d][vo/gpu-next/libplacebo] [ 57] int idx;                                      
[ 397.835][d][vo/gpu-next/libplacebo] [ 58] vec4 c;                                       
[ 397.835][d][vo/gpu-next/libplacebo] [ 59] vec2 ww, cc;
[ 397.835][d][vo/gpu-next/libplacebo] [ 60] vec2 ar0 = vec2(0.0), wwsum0 = vec2(0.0);
[ 397.835][d][vo/gpu-next/libplacebo] [ 61] vec2 ar1 = vec2(0.0), wwsum1 = vec2(0.0);
[ 397.835][d][vo/gpu-next/libplacebo] [ 62] vec2 ar2 = vec2(0.0), wwsum2 = vec2(0.0);
[ 397.835][d][vo/gpu-next/libplacebo] [ 63] uvec2 base_id = uvec2(0u); 
[ 397.835][d][vo/gpu-next/libplacebo] [ 64] if (gl_LocalInvocationID.xy == base_id)               
[ 397.835][d][vo/gpu-next/libplacebo] [ 65]     _e00c_base = base;                                  
[ 397.836][d][vo/gpu-next/libplacebo] [ 66] barrier();                                            
[ 397.836][d][vo/gpu-next/libplacebo] [ 67] ivec2 rel = ivec2(round((base - _e00c_base) * size));   
[ 397.836][d][vo/gpu-next/libplacebo] [ 68] for (int y = int(gl_LocalInvocationID.y); y < _e00e; y += 32) {     
[ 397.836][d][vo/gpu-next/libplacebo] [ 69] for (int x = int(gl_LocalInvocationID.x); x < _e00d; x += 32) {     
[ 397.836][d][vo/gpu-next/libplacebo] [ 70] c = textureLod(_e002, _e00c_base + pt * vec2(x - 3, y - 3), 0.0);   
[ 397.836][d][vo/gpu-next/libplacebo] [ 71] _e00c_0[_e00d * y + x] = c[0]; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 72] _e00c_1[_e00d * y + x] = c[1]; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 73] _e00c_2[_e00d * y + x] = c[2]; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 74] }}                     
[ 397.836][d][vo/gpu-next/libplacebo] [ 75] barrier();             
[ 397.836][d][vo/gpu-next/libplacebo] [ 76] idx = _e00d * rel.y + rel.x + _e00d * 0 + 0; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 77] idx = _e00d * rel.y + rel.x + _e00d * 0 + 1; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 78] idx = _e00d * rel.y + rel.x + _e00d * 0 + 2; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 79] idx = _e00d * rel.y + rel.x + _e00d * 0 + 3; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 80] offset = ivec2(0, -3);
[ 397.836][d][vo/gpu-next/libplacebo] [ 81] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [ 82] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [ 83] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [ 84] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [ 85] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [ 86] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [ 87] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [ 88] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [ 89] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [ 90] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [ 91] }
[ 397.836][d][vo/gpu-next/libplacebo] [ 92] idx = _e00d * rel.y + rel.x + _e00d * 0 + 4; 
[ 397.836][d][vo/gpu-next/libplacebo] [ 93] offset = ivec2(1, -3);
[ 397.836][d][vo/gpu-next/libplacebo] [ 94] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [ 95] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [ 96] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [ 97] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [ 98] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [ 99] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [100] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [101] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [102] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [103] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [104] }
[ 397.836][d][vo/gpu-next/libplacebo] [105] idx = _e00d * rel.y + rel.x + _e00d * 0 + 5; 
[ 397.836][d][vo/gpu-next/libplacebo] [106] idx = _e00d * rel.y + rel.x + _e00d * 0 + 6; 
[ 397.836][d][vo/gpu-next/libplacebo] [107] idx = _e00d * rel.y + rel.x + _e00d * 0 + 7; 
[ 397.836][d][vo/gpu-next/libplacebo] [108] idx = _e00d * rel.y + rel.x + _e00d * 1 + 0; 
[ 397.836][d][vo/gpu-next/libplacebo] [109] idx = _e00d * rel.y + rel.x + _e00d * 1 + 1; 
[ 397.836][d][vo/gpu-next/libplacebo] [110] offset = ivec2(-2, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [111] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [112] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [113] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [114] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [115] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [116] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [117] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [118] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [119] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [120] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [121] }
[ 397.836][d][vo/gpu-next/libplacebo] [122] idx = _e00d * rel.y + rel.x + _e00d * 1 + 2; 
[ 397.836][d][vo/gpu-next/libplacebo] [123] offset = ivec2(-1, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [124] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [125] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [126] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [127] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [128] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [129] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [130] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [131] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [132] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [133] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [134] }
[ 397.836][d][vo/gpu-next/libplacebo] [135] idx = _e00d * rel.y + rel.x + _e00d * 1 + 3; 
[ 397.836][d][vo/gpu-next/libplacebo] [136] offset = ivec2(0, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [137] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [138] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [139] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [140] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [141] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [142] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [143] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [144] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [145] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [146] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [147] }
[ 397.836][d][vo/gpu-next/libplacebo] [148] idx = _e00d * rel.y + rel.x + _e00d * 1 + 4; 
[ 397.836][d][vo/gpu-next/libplacebo] [149] offset = ivec2(1, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [150] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [151] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [152] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [153] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [154] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [155] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [156] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [157] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [158] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [159] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [160] }
[ 397.836][d][vo/gpu-next/libplacebo] [161] idx = _e00d * rel.y + rel.x + _e00d * 1 + 5; 
[ 397.836][d][vo/gpu-next/libplacebo] [162] offset = ivec2(2, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [163] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [164] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [165] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [166] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [167] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [168] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [169] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [170] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [171] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [172] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [173] }
[ 397.836][d][vo/gpu-next/libplacebo] [174] idx = _e00d * rel.y + rel.x + _e00d * 1 + 6; 
[ 397.836][d][vo/gpu-next/libplacebo] [175] offset = ivec2(3, -2);
[ 397.836][d][vo/gpu-next/libplacebo] [176] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [177] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [178] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [179] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [180] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [181] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [182] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [183] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [184] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [185] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [186] }
[ 397.836][d][vo/gpu-next/libplacebo] [187] idx = _e00d * rel.y + rel.x + _e00d * 1 + 7; 
[ 397.836][d][vo/gpu-next/libplacebo] [188] idx = _e00d * rel.y + rel.x + _e00d * 2 + 0; 
[ 397.836][d][vo/gpu-next/libplacebo] [189] idx = _e00d * rel.y + rel.x + _e00d * 2 + 1; 
[ 397.836][d][vo/gpu-next/libplacebo] [190] offset = ivec2(-2, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [191] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [192] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [193] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [194] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [195] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [196] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [197] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [198] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [199] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [200] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [201] }
[ 397.836][d][vo/gpu-next/libplacebo] [202] idx = _e00d * rel.y + rel.x + _e00d * 2 + 2; 
[ 397.836][d][vo/gpu-next/libplacebo] [203] offset = ivec2(-1, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [204] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [205] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [206] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [207] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [208] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [209] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [210] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [211] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [212] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [213] idx = _e00d * rel.y + rel.x + _e00d * 2 + 3; 
[ 397.836][d][vo/gpu-next/libplacebo] [214] offset = ivec2(0, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [215] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [216] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [217] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [218] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [219] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [220] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [221] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [222] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [223] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [224] if (d <= float(1.2196757793426514)) {
[ 397.836][d][vo/gpu-next/libplacebo] [225] cc = vec2(_e005 * c[0]);
[ 397.836][d][vo/gpu-next/libplacebo] [226] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [227] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [228] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [229] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [230] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [231] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [232] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [233] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [234] ar0 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [235] wwsum0 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [236] cc = vec2(_e005 * c[1]);
[ 397.836][d][vo/gpu-next/libplacebo] [237] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [238] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [239] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [240] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [241] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [242] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [243] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [244] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [245] ar1 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [246] wwsum1 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [247] cc = vec2(_e005 * c[2]);
[ 397.836][d][vo/gpu-next/libplacebo] [248] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [249] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [250] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [251] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [252] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [253] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [254] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [255] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [256] ar2 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [257] wwsum2 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [258] }
[ 397.836][d][vo/gpu-next/libplacebo] [259] idx = _e00d * rel.y + rel.x + _e00d * 2 + 4; 
[ 397.836][d][vo/gpu-next/libplacebo] [260] offset = ivec2(1, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [261] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [262] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [263] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [264] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [265] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [266] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [267] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [268] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [269] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [270] if (d <= float(1.2196757793426514)) {
[ 397.836][d][vo/gpu-next/libplacebo] [271] cc = vec2(_e005 * c[0]);
[ 397.836][d][vo/gpu-next/libplacebo] [272] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [273] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [274] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [275] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [276] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [277] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [278] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [279] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [280] ar0 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [281] wwsum0 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [282] cc = vec2(_e005 * c[1]);
[ 397.836][d][vo/gpu-next/libplacebo] [283] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [284] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [285] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [286] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [287] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [288] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [289] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [290] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [291] ar1 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [292] wwsum1 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [293] cc = vec2(_e005 * c[2]);
[ 397.836][d][vo/gpu-next/libplacebo] [294] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [295] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [296] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [297] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [298] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [299] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [300] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [301] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [302] ar2 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [303] wwsum2 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [304] }
[ 397.836][d][vo/gpu-next/libplacebo] [305] idx = _e00d * rel.y + rel.x + _e00d * 2 + 5; 
[ 397.836][d][vo/gpu-next/libplacebo] [306] offset = ivec2(2, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [307] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [308] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [309] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [310] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [311] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [312] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [313] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [314] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [315] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [316] idx = _e00d * rel.y + rel.x + _e00d * 2 + 6; 
[ 397.836][d][vo/gpu-next/libplacebo] [317] offset = ivec2(3, -1);
[ 397.836][d][vo/gpu-next/libplacebo] [318] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [319] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [320] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [321] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [322] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [323] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [324] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [325] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [326] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [327] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [328] }
[ 397.836][d][vo/gpu-next/libplacebo] [329] idx = _e00d * rel.y + rel.x + _e00d * 2 + 7; 
[ 397.836][d][vo/gpu-next/libplacebo] [330] idx = _e00d * rel.y + rel.x + _e00d * 3 + 0; 
[ 397.836][d][vo/gpu-next/libplacebo] [331] offset = ivec2(-3, 0);
[ 397.836][d][vo/gpu-next/libplacebo] [332] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [333] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [334] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [335] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [336] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [337] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [338] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [339] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [340] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [341] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [342] }
[ 397.836][d][vo/gpu-next/libplacebo] [343] idx = _e00d * rel.y + rel.x + _e00d * 3 + 1; 
[ 397.836][d][vo/gpu-next/libplacebo] [344] offset = ivec2(-2, 0);
[ 397.836][d][vo/gpu-next/libplacebo] [345] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [346] if (d < _e00b) {
[ 397.836][d][vo/gpu-next/libplacebo] [347] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [348] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [349] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [350] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [351] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [352] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [353] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [354] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [355] }
[ 397.836][d][vo/gpu-next/libplacebo] [356] idx = _e00d * rel.y + rel.x + _e00d * 3 + 2; 
[ 397.836][d][vo/gpu-next/libplacebo] [357] offset = ivec2(-1, 0);
[ 397.836][d][vo/gpu-next/libplacebo] [358] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [359] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [360] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [361] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [362] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [363] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [364] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [365] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [366] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [367] if (d <= float(1.2196757793426514)) {
[ 397.836][d][vo/gpu-next/libplacebo] [368] cc = vec2(_e005 * c[0]);
[ 397.836][d][vo/gpu-next/libplacebo] [369] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [370] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [371] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [372] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [373] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [374] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [375] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [376] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [377] ar0 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [378] wwsum0 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [379] cc = vec2(_e005 * c[1]);
[ 397.836][d][vo/gpu-next/libplacebo] [380] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [381] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [382] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [383] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [384] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [385] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [386] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [387] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [388] ar1 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [389] wwsum1 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [390] cc = vec2(_e005 * c[2]);
[ 397.836][d][vo/gpu-next/libplacebo] [391] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [392] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [393] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [394] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [395] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [396] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [397] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [398] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [399] ar2 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [400] wwsum2 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [401] }
[ 397.836][d][vo/gpu-next/libplacebo] [402] idx = _e00d * rel.y + rel.x + _e00d * 3 + 3; 
[ 397.836][d][vo/gpu-next/libplacebo] [403] offset = ivec2(0, 0);
[ 397.836][d][vo/gpu-next/libplacebo] [404] d = length(vec2(offset) - fcoord);
[ 397.836][d][vo/gpu-next/libplacebo] [405] w = _e006(d * 1.0 / _e00b);
[ 397.836][d][vo/gpu-next/libplacebo] [406] wsum += w;
[ 397.836][d][vo/gpu-next/libplacebo] [407] c[0] = _e00c_0[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [408] c[1] = _e00c_1[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [409] c[2] = _e00c_2[idx];
[ 397.836][d][vo/gpu-next/libplacebo] [410] color[0] += w * c[0];
[ 397.836][d][vo/gpu-next/libplacebo] [411] color[1] += w * c[1];
[ 397.836][d][vo/gpu-next/libplacebo] [412] color[2] += w * c[2];
[ 397.836][d][vo/gpu-next/libplacebo] [413] if (d <= float(1.2196757793426514)) {
[ 397.836][d][vo/gpu-next/libplacebo] [414] cc = vec2(_e005 * c[0]);
[ 397.836][d][vo/gpu-next/libplacebo] [415] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [416] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [417] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [418] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [419] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [420] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [421] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [422] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [423] ar0 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [424] wwsum0 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [425] cc = vec2(_e005 * c[1]);
[ 397.836][d][vo/gpu-next/libplacebo] [426] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [427] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [428] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [429] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [430] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [431] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [432] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [433] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [434] ar1 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [435] wwsum1 += ww;
[ 397.836][d][vo/gpu-next/libplacebo] [436] cc = vec2(_e005 * c[2]);
[ 397.836][d][vo/gpu-next/libplacebo] [437] cc.x = 1.0 - cc.x;
[ 397.836][d][vo/gpu-next/libplacebo] [438] ww = cc + vec2(0.10);
[ 397.836][d][vo/gpu-next/libplacebo] [439] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [440] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [441] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [442] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [443] ww = ww * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [444] ww = w * ww;
[ 397.836][d][vo/gpu-next/libplacebo] [445] ar2 += ww * cc;
[ 397.836][d][vo/gpu-next/libplacebo] [446] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [447] }
[ 397.837][d][vo/gpu-next/libplacebo] [448] idx = _e00d * rel.y + rel.x + _e00d * 3 + 4; 
[ 397.837][d][vo/gpu-next/libplacebo] [449] offset = ivec2(1, 0);
[ 397.837][d][vo/gpu-next/libplacebo] [450] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [451] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [452] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [453] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [454] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [455] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [456] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [457] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [458] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [459] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [460] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [461] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [462] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [463] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [464] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [465] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [466] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [467] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [468] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [469] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [470] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [471] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [472] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [473] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [474] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [475] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [476] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [477] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [478] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [479] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [480] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [481] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [482] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [483] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [484] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [485] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [486] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [487] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [488] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [489] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [490] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [491] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [492] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [493] }
[ 397.837][d][vo/gpu-next/libplacebo] [494] idx = _e00d * rel.y + rel.x + _e00d * 3 + 5; 
[ 397.837][d][vo/gpu-next/libplacebo] [495] offset = ivec2(2, 0);
[ 397.837][d][vo/gpu-next/libplacebo] [496] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [497] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [498] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [499] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [500] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [501] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [502] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [503] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [504] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [505] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [506] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [507] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [508] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [509] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [510] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [511] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [512] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [513] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [514] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [515] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [516] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [517] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [518] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [519] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [520] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [521] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [522] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [523] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [524] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [525] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [526] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [527] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [528] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [529] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [530] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [531] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [532] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [533] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [534] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [535] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [536] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [537] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [538] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [539] }
[ 397.837][d][vo/gpu-next/libplacebo] [540] idx = _e00d * rel.y + rel.x + _e00d * 3 + 6; 
[ 397.837][d][vo/gpu-next/libplacebo] [541] offset = ivec2(3, 0);
[ 397.837][d][vo/gpu-next/libplacebo] [542] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [543] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [544] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [545] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [546] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [547] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [548] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [549] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [550] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [551] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [552] }
[ 397.837][d][vo/gpu-next/libplacebo] [553] idx = _e00d * rel.y + rel.x + _e00d * 3 + 7; 
[ 397.837][d][vo/gpu-next/libplacebo] [554] offset = ivec2(4, 0);
[ 397.837][d][vo/gpu-next/libplacebo] [555] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [556] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [557] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [558] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [559] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [560] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [561] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [562] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [563] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [564] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [565] }
[ 397.837][d][vo/gpu-next/libplacebo] [566] idx = _e00d * rel.y + rel.x + _e00d * 4 + 0; 
[ 397.837][d][vo/gpu-next/libplacebo] [567] offset = ivec2(-3, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [568] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [569] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [570] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [571] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [572] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [573] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [574] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [575] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [576] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [577] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [578] }
[ 397.837][d][vo/gpu-next/libplacebo] [579] idx = _e00d * rel.y + rel.x + _e00d * 4 + 1; 
[ 397.837][d][vo/gpu-next/libplacebo] [580] offset = ivec2(-2, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [581] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [582] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [583] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [584] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [585] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [586] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [587] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [588] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [589] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [590] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [591] }
[ 397.837][d][vo/gpu-next/libplacebo] [592] idx = _e00d * rel.y + rel.x + _e00d * 4 + 2; 
[ 397.837][d][vo/gpu-next/libplacebo] [593] offset = ivec2(-1, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [594] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [595] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [596] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [597] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [598] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [599] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [600] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [601] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [602] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [603] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [604] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [605] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [606] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [607] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [608] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [609] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [610] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [611] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [612] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [613] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [614] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [615] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [616] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [617] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [618] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [619] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [620] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [621] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [622] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [623] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [624] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [625] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [626] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [627] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [628] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [629] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [630] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [631] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [632] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [633] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [634] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [635] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [636] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [637] }
[ 397.837][d][vo/gpu-next/libplacebo] [638] idx = _e00d * rel.y + rel.x + _e00d * 4 + 3; 
[ 397.837][d][vo/gpu-next/libplacebo] [639] offset = ivec2(0, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [640] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [641] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [642] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [643] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [644] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [645] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [646] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [647] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [648] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [649] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [650] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [651] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [652] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [653] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [654] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [655] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [656] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [657] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [658] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [659] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [660] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [661] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [662] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [663] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [664] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [665] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [666] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [667] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [668] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [669] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [670] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [671] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [672] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [673] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [674] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [675] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [676] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [677] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [678] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [679] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [680] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [681] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [682] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [683] }
[ 397.837][d][vo/gpu-next/libplacebo] [684] idx = _e00d * rel.y + rel.x + _e00d * 4 + 4; 
[ 397.837][d][vo/gpu-next/libplacebo] [685] offset = ivec2(1, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [686] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [687] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [688] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [689] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [690] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [691] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [692] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [693] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [694] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [695] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [696] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [697] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [698] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [699] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [700] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [701] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [702] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [703] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [704] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [705] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [706] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [707] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [708] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [709] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [710] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [711] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [712] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [713] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [714] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [715] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [716] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [717] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [718] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [719] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [720] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [721] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [722] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [723] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [724] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [725] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [726] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [727] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [728] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [729] }
[ 397.837][d][vo/gpu-next/libplacebo] [730] idx = _e00d * rel.y + rel.x + _e00d * 4 + 5; 
[ 397.837][d][vo/gpu-next/libplacebo] [731] offset = ivec2(2, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [732] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [733] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [734] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [735] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [736] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [737] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [738] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [739] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [740] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [741] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [742] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [743] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [744] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [745] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [746] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [747] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [748] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [749] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [750] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [751] ar0 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [752] wwsum0 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [753] cc = vec2(_e005 * c[1]);
[ 397.837][d][vo/gpu-next/libplacebo] [754] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [755] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [756] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [757] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [758] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [759] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [760] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [761] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [762] ar1 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [763] wwsum1 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [764] cc = vec2(_e005 * c[2]);
[ 397.837][d][vo/gpu-next/libplacebo] [765] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [766] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [767] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [768] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [769] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [770] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [771] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [772] ww = w * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [773] ar2 += ww * cc;
[ 397.837][d][vo/gpu-next/libplacebo] [774] wwsum2 += ww;
[ 397.837][d][vo/gpu-next/libplacebo] [775] }
[ 397.837][d][vo/gpu-next/libplacebo] [776] idx = _e00d * rel.y + rel.x + _e00d * 4 + 6; 
[ 397.837][d][vo/gpu-next/libplacebo] [777] offset = ivec2(3, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [778] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [779] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [780] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [781] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [782] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [783] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [784] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [785] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [786] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [787] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [788] }
[ 397.837][d][vo/gpu-next/libplacebo] [789] idx = _e00d * rel.y + rel.x + _e00d * 4 + 7; 
[ 397.837][d][vo/gpu-next/libplacebo] [790] offset = ivec2(4, 1);
[ 397.837][d][vo/gpu-next/libplacebo] [791] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [792] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [793] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [794] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [795] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [796] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [797] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [798] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [799] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [800] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [801] }
[ 397.837][d][vo/gpu-next/libplacebo] [802] idx = _e00d * rel.y + rel.x + _e00d * 5 + 0; 
[ 397.837][d][vo/gpu-next/libplacebo] [803] idx = _e00d * rel.y + rel.x + _e00d * 5 + 1; 
[ 397.837][d][vo/gpu-next/libplacebo] [804] offset = ivec2(-2, 2);
[ 397.837][d][vo/gpu-next/libplacebo] [805] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [806] if (d < _e00b) {
[ 397.837][d][vo/gpu-next/libplacebo] [807] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [808] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [809] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [810] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [811] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [812] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [813] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [814] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [815] }
[ 397.837][d][vo/gpu-next/libplacebo] [816] idx = _e00d * rel.y + rel.x + _e00d * 5 + 2; 
[ 397.837][d][vo/gpu-next/libplacebo] [817] offset = ivec2(-1, 2);
[ 397.837][d][vo/gpu-next/libplacebo] [818] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [819] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [820] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [821] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [822] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [823] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [824] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [825] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [826] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [827] idx = _e00d * rel.y + rel.x + _e00d * 5 + 3; 
[ 397.837][d][vo/gpu-next/libplacebo] [828] offset = ivec2(0, 2);
[ 397.837][d][vo/gpu-next/libplacebo] [829] d = length(vec2(offset) - fcoord);
[ 397.837][d][vo/gpu-next/libplacebo] [830] w = _e006(d * 1.0 / _e00b);
[ 397.837][d][vo/gpu-next/libplacebo] [831] wsum += w;
[ 397.837][d][vo/gpu-next/libplacebo] [832] c[0] = _e00c_0[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [833] c[1] = _e00c_1[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [834] c[2] = _e00c_2[idx];
[ 397.837][d][vo/gpu-next/libplacebo] [835] color[0] += w * c[0];
[ 397.837][d][vo/gpu-next/libplacebo] [836] color[1] += w * c[1];
[ 397.837][d][vo/gpu-next/libplacebo] [837] color[2] += w * c[2];
[ 397.837][d][vo/gpu-next/libplacebo] [838] if (d <= float(1.2196757793426514)) {
[ 397.837][d][vo/gpu-next/libplacebo] [839] cc = vec2(_e005 * c[0]);
[ 397.837][d][vo/gpu-next/libplacebo] [840] cc.x = 1.0 - cc.x;
[ 397.837][d][vo/gpu-next/libplacebo] [841] ww = cc + vec2(0.10);
[ 397.837][d][vo/gpu-next/libplacebo] [842] ww = ww * ww;
[ 397.837][d][vo/gpu-next/libplacebo] [843] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [844] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [845] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [846] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [847] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [848] ar0 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [849] wwsum0 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [850] cc = vec2(_e005 * c[1]);
[ 397.838][d][vo/gpu-next/libplacebo] [851] cc.x = 1.0 - cc.x;
[ 397.838][d][vo/gpu-next/libplacebo] [852] ww = cc + vec2(0.10);
[ 397.838][d][vo/gpu-next/libplacebo] [853] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [854] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [855] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [856] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [857] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [858] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [859] ar1 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [860] wwsum1 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [861] cc = vec2(_e005 * c[2]);
[ 397.838][d][vo/gpu-next/libplacebo] [862] cc.x = 1.0 - cc.x;
[ 397.838][d][vo/gpu-next/libplacebo] [863] ww = cc + vec2(0.10);
[ 397.838][d][vo/gpu-next/libplacebo] [864] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [865] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [866] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [867] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [868] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [869] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [870] ar2 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [871] wwsum2 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [872] }
[ 397.838][d][vo/gpu-next/libplacebo] [873] idx = _e00d * rel.y + rel.x + _e00d * 5 + 4; 
[ 397.838][d][vo/gpu-next/libplacebo] [874] offset = ivec2(1, 2);
[ 397.838][d][vo/gpu-next/libplacebo] [875] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [876] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [877] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [878] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [879] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [880] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [881] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [882] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [883] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [884] if (d <= float(1.2196757793426514)) {
[ 397.838][d][vo/gpu-next/libplacebo] [885] cc = vec2(_e005 * c[0]);
[ 397.838][d][vo/gpu-next/libplacebo] [886] cc.x = 1.0 - cc.x;
[ 397.838][d][vo/gpu-next/libplacebo] [887] ww = cc + vec2(0.10);
[ 397.838][d][vo/gpu-next/libplacebo] [888] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [889] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [890] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [891] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [892] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [893] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [894] ar0 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [895] wwsum0 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [896] cc = vec2(_e005 * c[1]);
[ 397.838][d][vo/gpu-next/libplacebo] [897] cc.x = 1.0 - cc.x;
[ 397.838][d][vo/gpu-next/libplacebo] [898] ww = cc + vec2(0.10);
[ 397.838][d][vo/gpu-next/libplacebo] [899] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [900] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [901] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [902] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [903] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [904] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [905] ar1 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [906] wwsum1 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [907] cc = vec2(_e005 * c[2]);
[ 397.838][d][vo/gpu-next/libplacebo] [908] cc.x = 1.0 - cc.x;
[ 397.838][d][vo/gpu-next/libplacebo] [909] ww = cc + vec2(0.10);
[ 397.838][d][vo/gpu-next/libplacebo] [910] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [911] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [912] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [913] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [914] ww = ww * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [915] ww = w * ww;
[ 397.838][d][vo/gpu-next/libplacebo] [916] ar2 += ww * cc;
[ 397.838][d][vo/gpu-next/libplacebo] [917] wwsum2 += ww;
[ 397.838][d][vo/gpu-next/libplacebo] [918] }
[ 397.838][d][vo/gpu-next/libplacebo] [919] idx = _e00d * rel.y + rel.x + _e00d * 5 + 5; 
[ 397.838][d][vo/gpu-next/libplacebo] [920] offset = ivec2(2, 2);
[ 397.838][d][vo/gpu-next/libplacebo] [921] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [922] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [923] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [924] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [925] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [926] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [927] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [928] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [929] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [930] idx = _e00d * rel.y + rel.x + _e00d * 5 + 6; 
[ 397.838][d][vo/gpu-next/libplacebo] [931] offset = ivec2(3, 2);
[ 397.838][d][vo/gpu-next/libplacebo] [932] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [933] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [934] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [935] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [936] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [937] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [938] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [939] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [940] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [941] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [942] }
[ 397.838][d][vo/gpu-next/libplacebo] [943] idx = _e00d * rel.y + rel.x + _e00d * 5 + 7; 
[ 397.838][d][vo/gpu-next/libplacebo] [944] idx = _e00d * rel.y + rel.x + _e00d * 6 + 0; 
[ 397.838][d][vo/gpu-next/libplacebo] [945] idx = _e00d * rel.y + rel.x + _e00d * 6 + 1; 
[ 397.838][d][vo/gpu-next/libplacebo] [946] offset = ivec2(-2, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [947] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [948] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [949] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [950] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [951] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [952] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [953] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [954] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [955] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [956] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [957] }
[ 397.838][d][vo/gpu-next/libplacebo] [958] idx = _e00d * rel.y + rel.x + _e00d * 6 + 2; 
[ 397.838][d][vo/gpu-next/libplacebo] [959] offset = ivec2(-1, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [960] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [961] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [962] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [963] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [964] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [965] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [966] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [967] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [968] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [969] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [970] }
[ 397.838][d][vo/gpu-next/libplacebo] [971] idx = _e00d * rel.y + rel.x + _e00d * 6 + 3; 
[ 397.838][d][vo/gpu-next/libplacebo] [972] offset = ivec2(0, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [973] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [974] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [975] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [976] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [977] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [978] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [979] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [980] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [981] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [982] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [983] }
[ 397.838][d][vo/gpu-next/libplacebo] [984] idx = _e00d * rel.y + rel.x + _e00d * 6 + 4; 
[ 397.838][d][vo/gpu-next/libplacebo] [985] offset = ivec2(1, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [986] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [987] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [988] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [989] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [990] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [991] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [992] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [993] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [994] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [995] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [996] }
[ 397.838][d][vo/gpu-next/libplacebo] [997] idx = _e00d * rel.y + rel.x + _e00d * 6 + 5; 
[ 397.838][d][vo/gpu-next/libplacebo] [998] offset = ivec2(2, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [999] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [1000] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [1001] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [1002] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [1003] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1004] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1005] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1006] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [1007] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [1008] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [1009] }
[ 397.838][d][vo/gpu-next/libplacebo] [1010] idx = _e00d * rel.y + rel.x + _e00d * 6 + 6; 
[ 397.838][d][vo/gpu-next/libplacebo] [1011] offset = ivec2(3, 3);
[ 397.838][d][vo/gpu-next/libplacebo] [1012] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [1013] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [1014] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [1015] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [1016] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1017] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1018] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1019] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [1020] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [1021] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [1022] }
[ 397.838][d][vo/gpu-next/libplacebo] [1023] idx = _e00d * rel.y + rel.x + _e00d * 6 + 7; 
[ 397.838][d][vo/gpu-next/libplacebo] [1024] idx = _e00d * rel.y + rel.x + _e00d * 7 + 0; 
[ 397.838][d][vo/gpu-next/libplacebo] [1025] idx = _e00d * rel.y + rel.x + _e00d * 7 + 1; 
[ 397.838][d][vo/gpu-next/libplacebo] [1026] idx = _e00d * rel.y + rel.x + _e00d * 7 + 2; 
[ 397.838][d][vo/gpu-next/libplacebo] [1027] idx = _e00d * rel.y + rel.x + _e00d * 7 + 3; 
[ 397.838][d][vo/gpu-next/libplacebo] [1028] offset = ivec2(0, 4);
[ 397.838][d][vo/gpu-next/libplacebo] [1029] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [1030] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [1031] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [1032] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [1033] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1034] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1035] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1036] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [1037] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [1038] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [1039] }
[ 397.838][d][vo/gpu-next/libplacebo] [1040] idx = _e00d * rel.y + rel.x + _e00d * 7 + 4; 
[ 397.838][d][vo/gpu-next/libplacebo] [1041] offset = ivec2(1, 4);
[ 397.838][d][vo/gpu-next/libplacebo] [1042] d = length(vec2(offset) - fcoord);
[ 397.838][d][vo/gpu-next/libplacebo] [1043] if (d < _e00b) {
[ 397.838][d][vo/gpu-next/libplacebo] [1044] w = _e006(d * 1.0 / _e00b);
[ 397.838][d][vo/gpu-next/libplacebo] [1045] wsum += w;
[ 397.838][d][vo/gpu-next/libplacebo] [1046] c[0] = _e00c_0[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1047] c[1] = _e00c_1[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1048] c[2] = _e00c_2[idx];
[ 397.838][d][vo/gpu-next/libplacebo] [1049] color[0] += w * c[0];
[ 397.838][d][vo/gpu-next/libplacebo] [1050] color[1] += w * c[1];
[ 397.838][d][vo/gpu-next/libplacebo] [1051] color[2] += w * c[2];
[ 397.838][d][vo/gpu-next/libplacebo] [1052] }
[ 397.838][d][vo/gpu-next/libplacebo] [1053] idx = _e00d * rel.y + rel.x + _e00d * 7 + 5; 
[ 397.838][d][vo/gpu-next/libplacebo] [1054] idx = _e00d * rel.y + rel.x + _e00d * 7 + 6; 
[ 397.838][d][vo/gpu-next/libplacebo] [1055] idx = _e00d * rel.y + rel.x + _e00d * 7 + 7; 
[ 397.838][d][vo/gpu-next/libplacebo] [1056] color = _e005 / wsum * color;
[ 397.838][d][vo/gpu-next/libplacebo] [1057] ww = ar0 / wwsum0;
[ 397.838][d][vo/gpu-next/libplacebo] [1058] ww.x = 1.0 - ww.x;
[ 397.838][d][vo/gpu-next/libplacebo] [1059] w = clamp(color[0], ww.x, ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1060] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1061] color[0] = mix(color[0], w, _e00f);
[ 397.838][d][vo/gpu-next/libplacebo] [1062] ww = ar1 / wwsum1;
[ 397.838][d][vo/gpu-next/libplacebo] [1063] ww.x = 1.0 - ww.x;
[ 397.838][d][vo/gpu-next/libplacebo] [1064] w = clamp(color[1], ww.x, ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1065] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1066] color[1] = mix(color[1], w, _e00f);
[ 397.838][d][vo/gpu-next/libplacebo] [1067] ww = ar2 / wwsum2;
[ 397.838][d][vo/gpu-next/libplacebo] [1068] ww.x = 1.0 - ww.x;
[ 397.838][d][vo/gpu-next/libplacebo] [1069] w = clamp(color[2], ww.x, ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1070] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[ 397.838][d][vo/gpu-next/libplacebo] [1071] color[2] = mix(color[2], w, _e00f);
[ 397.838][d][vo/gpu-next/libplacebo] [1072] color.a = 1.0;
[ 397.838][d][vo/gpu-next/libplacebo] [1073] }
[ 397.838][d][vo/gpu-next/libplacebo] [1074] ivec2 dir = ivec2(1, 1);
[ 397.838][d][vo/gpu-next/libplacebo] [1075] ivec2 pos = _e016 + dir * ivec2(gl_GlobalInvocationID).xy;
[ 397.838][d][vo/gpu-next/libplacebo] [1076] vec2 fpos = _e010 * vec2(gl_GlobalInvocationID);
[ 397.838][d][vo/gpu-next/libplacebo] [1077] if (fpos.x < 1.0 && fpos.y < 1.0) {
[ 397.838][d][vo/gpu-next/libplacebo] [1078] imageStore(_e015, pos, color);
[ 397.838][d][vo/gpu-next/libplacebo] [1079] }
[ 397.838][d][vo/gpu-next/libplacebo] [1080] 
[ 397.838][d][vo/gpu-next/libplacebo] [1081] }
[ 397.838][d][vo/gpu-next/libplacebo] [1082] 
[ 397.838][d][vo/gpu-next/libplacebo] [1083] void main() {
[ 397.838][d][vo/gpu-next/libplacebo] [1084] _e001();
[ 397.838][d][vo/gpu-next/libplacebo] [1085] }
[ 397.838][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=1: 0.001953
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=2: 0.996094
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=3: 3.042598
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=4: 37
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=5: 37
[ 397.838][d][vo/gpu-next/libplacebo]   constant_id=6: 0.500000
[ 397.838][d][vo/gpu-next] cache_load_obj: key(940604afa6bd052d), size(46972), load time(0.228 ms)
[ 397.838][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x940604afa6bd052d
[ 397.839][d][vo/gpu-next] cache_load_obj: key(3df59493a68a196c), size(72744), load time(0.201 ms)
[ 397.839][d][vo/gpu-next/libplacebo] Spent 0.053 ms compiling shader
[ 397.839][d][vo/gpu-next] cache_save_obj: key(940604afa6bd052d), size(46972)
[ 397.839][d][vo/gpu-next/libplacebo] Spent 0.187 ms creating pipeline
[ 397.839][d][vo/gpu-next] cache_save_obj: key(3df59493a68a196c), size(72744)
[ 397.839][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.839][d][vo/gpu-next/libplacebo] (Re)creating 1908x960x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.839][d][vo/gpu-next/libplacebo] Allocating 15663104 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.839][d][vo/gpu-next/libplacebo] Spent 0.083 ms allocating slab
[ 397.839][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.839][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.839][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.839][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.839][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.839][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.839][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.839][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.839][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.839][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.839][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.839][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.839][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.839][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.839][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.839][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.839][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.839][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.839][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.839][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.839][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.839][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.839][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.839][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.840][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.840][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.840][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.840][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.840][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.840][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.840][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.840][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.840][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.840][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.840][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.840][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.840][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 28] #define POSTKERNEL_raw _2 
[ 397.840][d][vo/gpu-next/libplacebo] [ 29] #define POSTKERNEL_pos _3 
[ 397.840][d][vo/gpu-next/libplacebo] [ 30] #define POSTKERNEL_map _3_map 
[ 397.840][d][vo/gpu-next/libplacebo] [ 31] #define POSTKERNEL_size vec2(textureSize(_2, 0)) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 32] #define POSTKERNEL_pt _4 
[ 397.840][d][vo/gpu-next/libplacebo] [ 33] #define POSTKERNEL_off _5 
[ 397.840][d][vo/gpu-next/libplacebo] [ 34] #define POSTKERNEL_mul _6 
[ 397.840][d][vo/gpu-next/libplacebo] [ 35] #define POSTKERNEL_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 36] #define POSTKERNEL_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 37] #define POSTKERNEL_texOff(off) (POSTKERNEL_tex(_3 + _4 * vec2(off))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 38] #define POSTKERNEL_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 39] #define HOOKED_raw POSTKERNEL_raw 
[ 397.840][d][vo/gpu-next/libplacebo] [ 40] #define HOOKED_pos POSTKERNEL_pos 
[ 397.840][d][vo/gpu-next/libplacebo] [ 41] #define HOOKED_size POSTKERNEL_size 
[ 397.840][d][vo/gpu-next/libplacebo] [ 42] #define HOOKED_rot POSTKERNEL_rot 
[ 397.840][d][vo/gpu-next/libplacebo] [ 43] #define HOOKED_off POSTKERNEL_off 
[ 397.840][d][vo/gpu-next/libplacebo] [ 44] #define HOOKED_pt POSTKERNEL_pt 
[ 397.840][d][vo/gpu-next/libplacebo] [ 45] #define HOOKED_map POSTKERNEL_map 
[ 397.840][d][vo/gpu-next/libplacebo] [ 46] #define HOOKED_mul POSTKERNEL_mul 
[ 397.840][d][vo/gpu-next/libplacebo] [ 47] #define HOOKED_tex POSTKERNEL_tex 
[ 397.840][d][vo/gpu-next/libplacebo] [ 48] #define HOOKED_texOff POSTKERNEL_texOff 
[ 397.840][d][vo/gpu-next/libplacebo] [ 49] #define HOOKED_gather POSTKERNEL_gather 
[ 397.840][d][vo/gpu-next/libplacebo] [ 50] #define frame _7 
[ 397.840][d][vo/gpu-next/libplacebo] [ 51] #define random _8 
[ 397.840][d][vo/gpu-next/libplacebo] [ 52] #define input_size _9 
[ 397.840][d][vo/gpu-next/libplacebo] [ 53] #define target_size _a 
[ 397.840][d][vo/gpu-next/libplacebo] [ 54] #define tex_offset _b 
[ 397.840][d][vo/gpu-next/libplacebo] [ 55] vec4 _8001(vec4 color) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 56] // pl_shader_linearize           
[ 397.840][d][vo/gpu-next/libplacebo] [ 57] color.rgb = max(color.rgb, 0.0); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 58] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 59] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 60] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 61] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 62] #define linearize _8001 
[ 397.840][d][vo/gpu-next/libplacebo] [ 63] vec4 _4001(vec4 color) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 64] // pl_shader_delinearize 
[ 397.840][d][vo/gpu-next/libplacebo] [ 65] color.rgb = max(color.rgb, 0.0); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 66] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 67] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 68] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 69] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 70] #define delinearize _4001 
[ 397.840][d][vo/gpu-next/libplacebo] [ 71] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 72] #define axis        1
[ 397.840][d][vo/gpu-next/libplacebo] [ 73] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 74] #define offset      vec2(0,0)
[ 397.840][d][vo/gpu-next/libplacebo] [ 75] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 76] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[ 397.840][d][vo/gpu-next/libplacebo] [ 77] #define Kernel(x)   MN(0.334, 0.333, abs(x))
[ 397.840][d][vo/gpu-next/libplacebo] [ 78] #define taps        2.0
[ 397.840][d][vo/gpu-next/libplacebo] [ 79] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 80] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.840][d][vo/gpu-next/libplacebo] [ 81] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 82] vec4 hook() {
[ 397.840][d][vo/gpu-next/libplacebo] [ 83]     float low  = ceil((HOOKED_pos - taps/input_size) * HOOKED_size - offset - 0.5)[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 84]     float high = floor((HOOKED_pos + taps/input_size) * HOOKED_size - offset - 0.5)[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 85] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 86]     float W = 0.0;
[ 397.840][d][vo/gpu-next/libplacebo] [ 87]     vec4 avg = vec4(0);
[ 397.840][d][vo/gpu-next/libplacebo] [ 88]     vec2 pos = HOOKED_pos;
[ 397.840][d][vo/gpu-next/libplacebo] [ 89]     vec4 tex;
[ 397.840][d][vo/gpu-next/libplacebo] [ 90] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 91]     for (float k = low; k <= high; k++) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 92]         pos[axis] = HOOKED_pt[axis] * (k - offset[axis] + 0.5);
[ 397.840][d][vo/gpu-next/libplacebo] [ 93]         float rel = (pos[axis] - HOOKED_pos[axis])*input_size[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 94]         float w = Kernel(rel);
[ 397.840][d][vo/gpu-next/libplacebo] [ 95] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 96]         tex.rgb = textureLod(HOOKED_raw, pos, 0.0).rgb * HOOKED_mul;
[ 397.840][d][vo/gpu-next/libplacebo] [ 97]         tex.a = Luma(tex.rgb);
[ 397.840][d][vo/gpu-next/libplacebo] [ 98]         avg += w * tex;
[ 397.840][d][vo/gpu-next/libplacebo] [ 99]         W += w;
[ 397.840][d][vo/gpu-next/libplacebo] [100]     }
[ 397.840][d][vo/gpu-next/libplacebo] [101]     avg /= W;
[ 397.840][d][vo/gpu-next/libplacebo] [102] 
[ 397.840][d][vo/gpu-next/libplacebo] [103]     return vec4(avg.rgb, max(abs(avg.a - Luma(avg.rgb)), 5e-7));
[ 397.840][d][vo/gpu-next/libplacebo] [104] }
[ 397.840][d][vo/gpu-next/libplacebo] [105] 
[ 397.840][d][vo/gpu-next/libplacebo] [106] vec4 _1() {
[ 397.840][d][vo/gpu-next/libplacebo] [107] vec4 color = hook(); 
[ 397.840][d][vo/gpu-next/libplacebo] [108] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [109] }
[ 397.840][d][vo/gpu-next/libplacebo] [110] 
[ 397.840][d][vo/gpu-next/libplacebo] [111] void main() {
[ 397.840][d][vo/gpu-next/libplacebo] [112] out_color = _1();
[ 397.840][d][vo/gpu-next/libplacebo] [113] }
[ 397.840][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.840][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.840][d][vo/gpu-next] cache_load_obj: key(bb93efef265f2db4), size(3096), load time(0.035 ms)
[ 397.840][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xbb93efef265f2db4
[ 397.840][d][vo/gpu-next] cache_load_obj: key(81b29d41479f3c09), size(17461), load time(0.151 ms)
[ 397.840][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.840][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.840][d][vo/gpu-next] cache_save_obj: key(bb93efef265f2db4), size(3096)
[ 397.840][d][vo/gpu-next/libplacebo] Spent 0.076 ms creating pipeline
[ 397.840][d][vo/gpu-next] cache_save_obj: key(81b29d41479f3c09), size(17461)
[ 397.840][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.840][d][vo/gpu-next/libplacebo] (Re)creating 1696x960x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.840][d][vo/gpu-next/libplacebo] Allocating 13893632 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.840][d][vo/gpu-next/libplacebo] Spent 0.065 ms allocating slab
[ 397.840][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.840][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.840][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.840][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.840][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.840][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.840][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.840][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.840][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.840][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.840][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.840][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.840][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.840][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _e;
[ 397.840][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec2 _3;
[ 397.840][d][vo/gpu-next/libplacebo] [ 27] layout(location=1) in vec2 _f;
[ 397.840][d][vo/gpu-next/libplacebo] [ 28] void main() {
[ 397.840][d][vo/gpu-next/libplacebo] [ 29] _3 = _e;
[ 397.840][d][vo/gpu-next/libplacebo] [ 30] vec2 va_pos = _f; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 31] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 32] }
[ 397.840][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.840][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.840][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.840][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.840][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.840][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.840][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.840][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) int _7;
[ 397.840][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=20) float _8;
[ 397.840][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=24) vec2 _9;
[ 397.840][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=32) vec2 _a;
[ 397.840][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _b;
[ 397.840][d][vo/gpu-next/libplacebo] [ 18] };
[ 397.840][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=0) const float _6 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=1) const float _8002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=2) const float _8003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=3) const float _4002 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=4) const float _4003 = 1; 
[ 397.840][d][vo/gpu-next/libplacebo] [ 24] layout(binding=0) uniform  sampler2D _2;
[ 397.840][d][vo/gpu-next/libplacebo] [ 25] layout(location=0) in vec2 _3;
[ 397.840][d][vo/gpu-next/libplacebo] [ 26] layout(location=0) out vec4 out_color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 27] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 28] #define LOWRES_raw _2 
[ 397.840][d][vo/gpu-next/libplacebo] [ 29] #define LOWRES_pos _3 
[ 397.840][d][vo/gpu-next/libplacebo] [ 30] #define LOWRES_map _3_map 
[ 397.840][d][vo/gpu-next/libplacebo] [ 31] #define LOWRES_size vec2(textureSize(_2, 0)) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 32] #define LOWRES_pt _4 
[ 397.840][d][vo/gpu-next/libplacebo] [ 33] #define LOWRES_off _5 
[ 397.840][d][vo/gpu-next/libplacebo] [ 34] #define LOWRES_mul _6 
[ 397.840][d][vo/gpu-next/libplacebo] [ 35] #define LOWRES_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 36] #define LOWRES_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 37] #define LOWRES_texOff(off) (LOWRES_tex(_3 + _4 * vec2(off))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 38] #define LOWRES_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.840][d][vo/gpu-next/libplacebo] [ 39] #define frame _7 
[ 397.840][d][vo/gpu-next/libplacebo] [ 40] #define random _8 
[ 397.840][d][vo/gpu-next/libplacebo] [ 41] #define input_size _9 
[ 397.840][d][vo/gpu-next/libplacebo] [ 42] #define target_size _a 
[ 397.840][d][vo/gpu-next/libplacebo] [ 43] #define tex_offset _b 
[ 397.840][d][vo/gpu-next/libplacebo] [ 44] vec4 _8001(vec4 color) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_linearize           
[ 397.840][d][vo/gpu-next/libplacebo] [ 46] color.rgb = max(color.rgb, 0.0); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 47] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 48] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 49] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 50] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 51] #define linearize _8001 
[ 397.840][d][vo/gpu-next/libplacebo] [ 52] vec4 _4001(vec4 color) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 53] // pl_shader_delinearize 
[ 397.840][d][vo/gpu-next/libplacebo] [ 54] color.rgb = max(color.rgb, 0.0); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 55] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 56] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 57] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 58] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 59] #define delinearize _4001 
[ 397.840][d][vo/gpu-next/libplacebo] [ 60] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 61] #define axis        0
[ 397.840][d][vo/gpu-next/libplacebo] [ 62] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 63] #define offset      vec2(0,0)
[ 397.840][d][vo/gpu-next/libplacebo] [ 64] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 65] #define MN(B,C,x)   (x < 1.0 ? ((2.-1.5*B-(C))*x + (-3.+2.*B+C))*x*x + (1.-(B)/3.) : (((-(B)/6.-(C))*x + (B+5.*C))*x + (-2.*B-8.*C))*x+((4./3.)*B+4.*C))
[ 397.840][d][vo/gpu-next/libplacebo] [ 66] #define Kernel(x)   MN(0.334, 0.333, abs(x))
[ 397.840][d][vo/gpu-next/libplacebo] [ 67] #define taps        2.0
[ 397.840][d][vo/gpu-next/libplacebo] [ 68] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 69] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.840][d][vo/gpu-next/libplacebo] [ 70] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 71] vec4 hook() {
[ 397.840][d][vo/gpu-next/libplacebo] [ 72]     float low  = ceil((LOWRES_pos - taps/input_size) * LOWRES_size - offset - 0.5)[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 73]     float high = floor((LOWRES_pos + taps/input_size) * LOWRES_size - offset - 0.5)[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 74] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 75]     float W = 0.0;
[ 397.840][d][vo/gpu-next/libplacebo] [ 76]     vec4 avg = vec4(0);
[ 397.840][d][vo/gpu-next/libplacebo] [ 77]     vec2 pos = LOWRES_pos;
[ 397.840][d][vo/gpu-next/libplacebo] [ 78]     vec4 tex;
[ 397.840][d][vo/gpu-next/libplacebo] [ 79] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 80]     for (float k = low; k <= high; k++) {
[ 397.840][d][vo/gpu-next/libplacebo] [ 81]         pos[axis] = LOWRES_pt[axis] * (k - offset[axis] + 0.5);
[ 397.840][d][vo/gpu-next/libplacebo] [ 82]         float rel = (pos[axis] - LOWRES_pos[axis])*input_size[axis];
[ 397.840][d][vo/gpu-next/libplacebo] [ 83]         float w = Kernel(rel);
[ 397.840][d][vo/gpu-next/libplacebo] [ 84] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 85]         tex.rgb = textureLod(LOWRES_raw, pos, 0.0).rgb * LOWRES_mul;
[ 397.840][d][vo/gpu-next/libplacebo] [ 86]         tex.a = Luma(tex.rgb);
[ 397.840][d][vo/gpu-next/libplacebo] [ 87]         avg += w * tex;
[ 397.840][d][vo/gpu-next/libplacebo] [ 88]         W += w;
[ 397.840][d][vo/gpu-next/libplacebo] [ 89]     }
[ 397.840][d][vo/gpu-next/libplacebo] [ 90]     avg /= W;
[ 397.840][d][vo/gpu-next/libplacebo] [ 91] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 92]     return vec4(avg.rgb, max(abs(avg.a - Luma(avg.rgb)), 5e-7) + LOWRES_texOff(0).a);
[ 397.840][d][vo/gpu-next/libplacebo] [ 93] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 94] 
[ 397.840][d][vo/gpu-next/libplacebo] [ 95] vec4 _1() {
[ 397.840][d][vo/gpu-next/libplacebo] [ 96] vec4 color = hook(); 
[ 397.840][d][vo/gpu-next/libplacebo] [ 97] return color;
[ 397.840][d][vo/gpu-next/libplacebo] [ 98] }
[ 397.840][d][vo/gpu-next/libplacebo] [ 99] 
[ 397.840][d][vo/gpu-next/libplacebo] [100] void main() {
[ 397.840][d][vo/gpu-next/libplacebo] [101] out_color = _1();
[ 397.840][d][vo/gpu-next/libplacebo] [102] }
[ 397.840][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=3: 0.059585
[ 397.840][d][vo/gpu-next/libplacebo]   constant_id=4: 1.149015
[ 397.840][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xfbfbc6f818e56fab
[ 397.840][d][vo/gpu-next] cache_load_obj: key(b24ab18076e82e23), size(3184), load time(0.035 ms)
[ 397.840][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xb24ab18076e82e23
[ 397.841][d][vo/gpu-next] cache_load_obj: key(8109f6a1e86929b4), size(17552), load time(0.123 ms)
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.841][d][vo/gpu-next] cache_save_obj: key(fbfbc6f818e56fab), size(748)
[ 397.841][d][vo/gpu-next] cache_save_obj: key(b24ab18076e82e23), size(3184)
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.066 ms creating pipeline
[ 397.841][d][vo/gpu-next] cache_save_obj: key(8109f6a1e86929b4), size(17552)
[ 397.841][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.841][d][vo/gpu-next/libplacebo] (Re)creating 1696x960x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.841][d][vo/gpu-next/libplacebo] Allocating 13893632 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.061 ms allocating slab
[ 397.841][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.841][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.841][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.841][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.841][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.841][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.841][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.841][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.841][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[ 397.841][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[ 397.841][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[ 397.841][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[ 397.841][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[ 397.841][d][vo/gpu-next/libplacebo] [ 20] };
[ 397.841][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[ 397.841][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[ 397.841][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _13;
[ 397.841][d][vo/gpu-next/libplacebo] [ 30] layout(location=0) out vec2 _3;
[ 397.841][d][vo/gpu-next/libplacebo] [ 31] layout(location=1) in vec2 _14;
[ 397.841][d][vo/gpu-next/libplacebo] [ 32] layout(location=1) out vec2 _8;
[ 397.841][d][vo/gpu-next/libplacebo] [ 33] layout(location=2) in vec2 _15;
[ 397.841][d][vo/gpu-next/libplacebo] [ 34] void main() {
[ 397.841][d][vo/gpu-next/libplacebo] [ 35] _3 = _13;
[ 397.841][d][vo/gpu-next/libplacebo] [ 36] _8 = _14;
[ 397.841][d][vo/gpu-next/libplacebo] [ 37] vec2 va_pos = _15; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 38] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.841][d][vo/gpu-next/libplacebo] [ 39] }
[ 397.841][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.841][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.841][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.841][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.841][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.841][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.841][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.841][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.841][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.841][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) int _c;
[ 397.841][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=36) float _d;
[ 397.841][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=40) vec2 _e;
[ 397.841][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=48) vec2 _f;
[ 397.841][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=56) vec2 _10;
[ 397.841][d][vo/gpu-next/libplacebo] [ 20] };
[ 397.841][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _6 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _b = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _8002 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _8003 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const float _4002 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const float _4003 = 1; 
[ 397.841][d][vo/gpu-next/libplacebo] [ 27] layout(binding=0) uniform  sampler2D _2;
[ 397.841][d][vo/gpu-next/libplacebo] [ 28] layout(binding=1) uniform  sampler2D _7;
[ 397.841][d][vo/gpu-next/libplacebo] [ 29] layout(location=0) in vec2 _3;
[ 397.841][d][vo/gpu-next/libplacebo] [ 30] layout(location=1) in vec2 _8;
[ 397.841][d][vo/gpu-next/libplacebo] [ 31] layout(location=0) out vec4 out_color;
[ 397.841][d][vo/gpu-next/libplacebo] [ 32] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 33] #define PREKERNEL_raw _2 
[ 397.841][d][vo/gpu-next/libplacebo] [ 34] #define PREKERNEL_pos _3 
[ 397.841][d][vo/gpu-next/libplacebo] [ 35] #define PREKERNEL_map _3_map 
[ 397.841][d][vo/gpu-next/libplacebo] [ 36] #define PREKERNEL_size vec2(textureSize(_2, 0)) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 37] #define PREKERNEL_pt _4 
[ 397.841][d][vo/gpu-next/libplacebo] [ 38] #define PREKERNEL_off _5 
[ 397.841][d][vo/gpu-next/libplacebo] [ 39] #define PREKERNEL_mul _6 
[ 397.841][d][vo/gpu-next/libplacebo] [ 40] #define PREKERNEL_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 41] #define PREKERNEL_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 42] #define PREKERNEL_texOff(off) (PREKERNEL_tex(_3 + _4 * vec2(off))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 43] #define PREKERNEL_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 44] #define LOWRES_raw _7 
[ 397.841][d][vo/gpu-next/libplacebo] [ 45] #define LOWRES_pos _8 
[ 397.841][d][vo/gpu-next/libplacebo] [ 46] #define LOWRES_map _8_map 
[ 397.841][d][vo/gpu-next/libplacebo] [ 47] #define LOWRES_size vec2(textureSize(_7, 0)) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 48] #define LOWRES_pt _9 
[ 397.841][d][vo/gpu-next/libplacebo] [ 49] #define LOWRES_off _a 
[ 397.841][d][vo/gpu-next/libplacebo] [ 50] #define LOWRES_mul _b 
[ 397.841][d][vo/gpu-next/libplacebo] [ 51] #define LOWRES_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 52] #define LOWRES_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 53] #define LOWRES_texOff(off) (LOWRES_tex(_8 + _9 * vec2(off))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 54] #define LOWRES_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.841][d][vo/gpu-next/libplacebo] [ 55] #define frame _c 
[ 397.841][d][vo/gpu-next/libplacebo] [ 56] #define random _d 
[ 397.841][d][vo/gpu-next/libplacebo] [ 57] #define input_size _e 
[ 397.841][d][vo/gpu-next/libplacebo] [ 58] #define target_size _f 
[ 397.841][d][vo/gpu-next/libplacebo] [ 59] #define tex_offset _10 
[ 397.841][d][vo/gpu-next/libplacebo] [ 60] vec4 _8001(vec4 color) {
[ 397.841][d][vo/gpu-next/libplacebo] [ 61] // pl_shader_linearize           
[ 397.841][d][vo/gpu-next/libplacebo] [ 62] color.rgb = max(color.rgb, 0.0); 
[ 397.841][d][vo/gpu-next/libplacebo] [ 63] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.841][d][vo/gpu-next/libplacebo] [ 64] return color;
[ 397.841][d][vo/gpu-next/libplacebo] [ 65] }
[ 397.841][d][vo/gpu-next/libplacebo] [ 66] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 67] #define linearize _8001 
[ 397.841][d][vo/gpu-next/libplacebo] [ 68] vec4 _4001(vec4 color) {
[ 397.841][d][vo/gpu-next/libplacebo] [ 69] // pl_shader_delinearize 
[ 397.841][d][vo/gpu-next/libplacebo] [ 70] color.rgb = max(color.rgb, 0.0); 
[ 397.841][d][vo/gpu-next/libplacebo] [ 71] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.841][d][vo/gpu-next/libplacebo] [ 72] return color;
[ 397.841][d][vo/gpu-next/libplacebo] [ 73] }
[ 397.841][d][vo/gpu-next/libplacebo] [ 74] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 75] #define delinearize _4001 
[ 397.841][d][vo/gpu-next/libplacebo] [ 76] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 77] #define spread      1.0 / 4.0
[ 397.841][d][vo/gpu-next/libplacebo] [ 78] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 79] #define GetL(x,y)   PREKERNEL_tex(PREKERNEL_pt * (PREKERNEL_pos * input_size + tex_offset + vec2(x,y))).rgb
[ 397.841][d][vo/gpu-next/libplacebo] [ 80] #define GetH(x,y)   LOWRES_texOff(vec2(x,y)).rgb
[ 397.841][d][vo/gpu-next/libplacebo] [ 81] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 82] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.841][d][vo/gpu-next/libplacebo] [ 83] #define diff(x,y)   vec2(Luma((GetL(x,y) - meanL)), Luma((GetH(x,y) - meanH)))
[ 397.841][d][vo/gpu-next/libplacebo] [ 84] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 85] vec4 hook() {
[ 397.841][d][vo/gpu-next/libplacebo] [ 86]     vec3 meanL = GetL(0,0);
[ 397.841][d][vo/gpu-next/libplacebo] [ 87]     vec3 meanH = GetH(0,0);
[ 397.841][d][vo/gpu-next/libplacebo] [ 88]     for (int X=-1; X<=1; X+=2) {
[ 397.841][d][vo/gpu-next/libplacebo] [ 89]         meanL += GetL(X,0) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [ 90]         meanH += GetH(X,0) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [ 91]     }
[ 397.841][d][vo/gpu-next/libplacebo] [ 92]     for (int Y=-1; Y<=1; Y+=2) {
[ 397.841][d][vo/gpu-next/libplacebo] [ 93]         meanL += GetL(0,Y) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [ 94]         meanH += GetH(0,Y) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [ 95]     }
[ 397.841][d][vo/gpu-next/libplacebo] [ 96]     meanL /= (1.0 + 4.0*spread);
[ 397.841][d][vo/gpu-next/libplacebo] [ 97]     meanH /= (1.0 + 4.0*spread);
[ 397.841][d][vo/gpu-next/libplacebo] [ 98] 
[ 397.841][d][vo/gpu-next/libplacebo] [ 99]     vec2 var = diff(0,0);
[ 397.841][d][vo/gpu-next/libplacebo] [100]     for (int X=-1; X<=1; X+=2)
[ 397.841][d][vo/gpu-next/libplacebo] [101]         var += diff(X,0) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [102] 
[ 397.841][d][vo/gpu-next/libplacebo] [103]     for (int Y=-1; Y<=1; Y+=2)
[ 397.841][d][vo/gpu-next/libplacebo] [104]         var += diff(0,Y) * spread;
[ 397.841][d][vo/gpu-next/libplacebo] [105] 
[ 397.841][d][vo/gpu-next/libplacebo] [106]     return vec4(max(var / (1.0 + 4.0*spread), vec2(1e-6)), 0, 0);
[ 397.841][d][vo/gpu-next/libplacebo] [107] }
[ 397.841][d][vo/gpu-next/libplacebo] [108] 
[ 397.841][d][vo/gpu-next/libplacebo] [109] vec4 _1() {
[ 397.841][d][vo/gpu-next/libplacebo] [110] vec4 color = hook(); 
[ 397.841][d][vo/gpu-next/libplacebo] [111] return color;
[ 397.841][d][vo/gpu-next/libplacebo] [112] }
[ 397.841][d][vo/gpu-next/libplacebo] [113] 
[ 397.841][d][vo/gpu-next/libplacebo] [114] void main() {
[ 397.841][d][vo/gpu-next/libplacebo] [115] out_color = _1();
[ 397.841][d][vo/gpu-next/libplacebo] [116] }
[ 397.841][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=2: 0.059585
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=3: 0.870311
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.841][d][vo/gpu-next/libplacebo]   constant_id=5: 1.149015
[ 397.841][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x84ffee52f8902a4e
[ 397.841][d][vo/gpu-next] cache_load_obj: key(36320e61a6aa66d6), size(4460), load time(0.121 ms)
[ 397.841][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x36320e61a6aa66d6
[ 397.841][d][vo/gpu-next] cache_load_obj: key(a85b630dcaeeb522), size(18120), load time(0.138 ms)
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.006 ms compiling shader
[ 397.841][d][vo/gpu-next] cache_save_obj: key(84ffee52f8902a4e), size(848)
[ 397.841][d][vo/gpu-next] cache_save_obj: key(36320e61a6aa66d6), size(4460)
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.068 ms creating pipeline
[ 397.841][d][vo/gpu-next] cache_save_obj: key(a85b630dcaeeb522), size(18120)
[ 397.841][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.841][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:1011
[ 397.841][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:1011
[ 397.841][d][vo/gpu-next/libplacebo] Spent 0.087 ms allocating slab
[ 397.842][d][vo/gpu-next/libplacebo] vertex shader source:
[ 397.842][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.842][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.842][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.842][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.842][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.842][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.842][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.842][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.842][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.842][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.842][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.842][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.842][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.842][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.842][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.842][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.842][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.842][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.842][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.842][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.842][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.842][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _1d;
[ 397.842][d][vo/gpu-next/libplacebo] [ 38] layout(location=0) out vec2 _3;
[ 397.842][d][vo/gpu-next/libplacebo] [ 39] layout(location=1) in vec2 _1e;
[ 397.842][d][vo/gpu-next/libplacebo] [ 40] layout(location=1) out vec2 _8;
[ 397.842][d][vo/gpu-next/libplacebo] [ 41] layout(location=2) in vec2 _1f;
[ 397.842][d][vo/gpu-next/libplacebo] [ 42] layout(location=2) out vec2 _d;
[ 397.842][d][vo/gpu-next/libplacebo] [ 43] layout(location=3) in vec2 _20;
[ 397.842][d][vo/gpu-next/libplacebo] [ 44] layout(location=3) out vec2 _12;
[ 397.842][d][vo/gpu-next/libplacebo] [ 45] layout(location=4) in vec2 _21;
[ 397.842][d][vo/gpu-next/libplacebo] [ 46] void main() {
[ 397.842][d][vo/gpu-next/libplacebo] [ 47] _3 = _1d;
[ 397.842][d][vo/gpu-next/libplacebo] [ 48] _8 = _1e;
[ 397.842][d][vo/gpu-next/libplacebo] [ 49] _d = _1f;
[ 397.842][d][vo/gpu-next/libplacebo] [ 50] _12 = _20;
[ 397.842][d][vo/gpu-next/libplacebo] [ 51] vec2 va_pos = _21; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 52] gl_Position = vec4(va_pos, 0.0, 1.0); 
[ 397.842][d][vo/gpu-next/libplacebo] [ 53] }
[ 397.842][d][vo/gpu-next/libplacebo] fragment shader source:
[ 397.842][d][vo/gpu-next/libplacebo] [  1] #version 450
[ 397.842][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[ 397.842][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[ 397.842][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[ 397.842][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec2 _4;
[ 397.842][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=8) vec2 _5;
[ 397.842][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=16) vec2 _9;
[ 397.842][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=24) vec2 _a;
[ 397.842][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=32) vec2 _e;
[ 397.842][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=40) vec2 _f;
[ 397.842][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=48) vec2 _13;
[ 397.842][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=56) vec2 _14;
[ 397.842][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=64) int _16;
[ 397.842][d][vo/gpu-next/libplacebo] [ 20]     layout(offset=68) float _17;
[ 397.842][d][vo/gpu-next/libplacebo] [ 21]     layout(offset=72) vec2 _18;
[ 397.842][d][vo/gpu-next/libplacebo] [ 22]     layout(offset=80) vec2 _19;
[ 397.842][d][vo/gpu-next/libplacebo] [ 23]     layout(offset=88) vec2 _1a;
[ 397.842][d][vo/gpu-next/libplacebo] [ 24] };
[ 397.842][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=0) const float _6 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=1) const float _b = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=2) const float _10 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=3) const float _15 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 29] layout(constant_id=4) const float _8002 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 30] layout(constant_id=5) const float _8003 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 31] layout(constant_id=6) const float _4002 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 32] layout(constant_id=7) const float _4003 = 1; 
[ 397.842][d][vo/gpu-next/libplacebo] [ 33] layout(binding=0) uniform  sampler2D _2;
[ 397.842][d][vo/gpu-next/libplacebo] [ 34] layout(binding=1) uniform  sampler2D _7;
[ 397.842][d][vo/gpu-next/libplacebo] [ 35] layout(binding=2) uniform  sampler2D _c;
[ 397.842][d][vo/gpu-next/libplacebo] [ 36] layout(binding=3) uniform  sampler2D _11;
[ 397.842][d][vo/gpu-next/libplacebo] [ 37] layout(location=0) in vec2 _3;
[ 397.842][d][vo/gpu-next/libplacebo] [ 38] layout(location=1) in vec2 _8;
[ 397.842][d][vo/gpu-next/libplacebo] [ 39] layout(location=2) in vec2 _d;
[ 397.842][d][vo/gpu-next/libplacebo] [ 40] layout(location=3) in vec2 _12;
[ 397.842][d][vo/gpu-next/libplacebo] [ 41] layout(location=0) out vec4 out_color;
[ 397.842][d][vo/gpu-next/libplacebo] [ 42] 
[ 397.842][d][vo/gpu-next/libplacebo] [ 43] #define POSTKERNEL_raw _2 
[ 397.842][d][vo/gpu-next/libplacebo] [ 44] #define POSTKERNEL_pos _3 
[ 397.842][d][vo/gpu-next/libplacebo] [ 45] #define POSTKERNEL_map _3_map 
[ 397.842][d][vo/gpu-next/libplacebo] [ 46] #define POSTKERNEL_size vec2(textureSize(_2, 0)) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 47] #define POSTKERNEL_pt _4 
[ 397.842][d][vo/gpu-next/libplacebo] [ 48] #define POSTKERNEL_off _5 
[ 397.842][d][vo/gpu-next/libplacebo] [ 49] #define POSTKERNEL_mul _6 
[ 397.842][d][vo/gpu-next/libplacebo] [ 50] #define POSTKERNEL_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 51] #define POSTKERNEL_tex(pos) (_6 * vec4(textureLod(_2, pos, 0.0))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 52] #define POSTKERNEL_texOff(off) (POSTKERNEL_tex(_3 + _4 * vec2(off))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 53] #define POSTKERNEL_gather(pos, c) (_6 * vec4(textureGather(_2, pos, c))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 54] #define HOOKED_raw POSTKERNEL_raw 
[ 397.842][d][vo/gpu-next/libplacebo] [ 55] #define HOOKED_pos POSTKERNEL_pos 
[ 397.842][d][vo/gpu-next/libplacebo] [ 56] #define HOOKED_size POSTKERNEL_size 
[ 397.842][d][vo/gpu-next/libplacebo] [ 57] #define HOOKED_rot POSTKERNEL_rot 
[ 397.842][d][vo/gpu-next/libplacebo] [ 58] #define HOOKED_off POSTKERNEL_off 
[ 397.842][d][vo/gpu-next/libplacebo] [ 59] #define HOOKED_pt POSTKERNEL_pt 
[ 397.842][d][vo/gpu-next/libplacebo] [ 60] #define HOOKED_map POSTKERNEL_map 
[ 397.842][d][vo/gpu-next/libplacebo] [ 61] #define HOOKED_mul POSTKERNEL_mul 
[ 397.842][d][vo/gpu-next/libplacebo] [ 62] #define HOOKED_tex POSTKERNEL_tex 
[ 397.842][d][vo/gpu-next/libplacebo] [ 63] #define HOOKED_texOff POSTKERNEL_texOff 
[ 397.842][d][vo/gpu-next/libplacebo] [ 64] #define HOOKED_gather POSTKERNEL_gather 
[ 397.842][d][vo/gpu-next/libplacebo] [ 65] #define PREKERNEL_raw _7 
[ 397.842][d][vo/gpu-next/libplacebo] [ 66] #define PREKERNEL_pos _8 
[ 397.842][d][vo/gpu-next/libplacebo] [ 67] #define PREKERNEL_map _8_map 
[ 397.842][d][vo/gpu-next/libplacebo] [ 68] #define PREKERNEL_size vec2(textureSize(_7, 0)) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 69] #define PREKERNEL_pt _9 
[ 397.842][d][vo/gpu-next/libplacebo] [ 70] #define PREKERNEL_off _a 
[ 397.842][d][vo/gpu-next/libplacebo] [ 71] #define PREKERNEL_mul _b 
[ 397.842][d][vo/gpu-next/libplacebo] [ 72] #define PREKERNEL_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 73] #define PREKERNEL_tex(pos) (_b * vec4(textureLod(_7, pos, 0.0))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 74] #define PREKERNEL_texOff(off) (PREKERNEL_tex(_8 + _9 * vec2(off))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 75] #define PREKERNEL_gather(pos, c) (_b * vec4(textureGather(_7, pos, c))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 76] #define LOWRES_raw _c 
[ 397.842][d][vo/gpu-next/libplacebo] [ 77] #define LOWRES_pos _d 
[ 397.842][d][vo/gpu-next/libplacebo] [ 78] #define LOWRES_map _d_map 
[ 397.842][d][vo/gpu-next/libplacebo] [ 79] #define LOWRES_size vec2(textureSize(_c, 0)) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 80] #define LOWRES_pt _e 
[ 397.842][d][vo/gpu-next/libplacebo] [ 81] #define LOWRES_off _f 
[ 397.842][d][vo/gpu-next/libplacebo] [ 82] #define LOWRES_mul _10 
[ 397.842][d][vo/gpu-next/libplacebo] [ 83] #define LOWRES_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 84] #define LOWRES_tex(pos) (_10 * vec4(textureLod(_c, pos, 0.0))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 85] #define LOWRES_texOff(off) (LOWRES_tex(_d + _e * vec2(off))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 86] #define LOWRES_gather(pos, c) (_10 * vec4(textureGather(_c, pos, c))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 87] #define var_raw _11 
[ 397.842][d][vo/gpu-next/libplacebo] [ 88] #define var_pos _12 
[ 397.842][d][vo/gpu-next/libplacebo] [ 89] #define var_map _12_map 
[ 397.842][d][vo/gpu-next/libplacebo] [ 90] #define var_size vec2(textureSize(_11, 0)) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 91] #define var_pt _13 
[ 397.842][d][vo/gpu-next/libplacebo] [ 92] #define var_off _14 
[ 397.842][d][vo/gpu-next/libplacebo] [ 93] #define var_mul _15 
[ 397.842][d][vo/gpu-next/libplacebo] [ 94] #define var_rot mat2(1.0, 0.0, 0.0, 1.0) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 95] #define var_tex(pos) (_15 * vec4(textureLod(_11, pos, 0.0))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 96] #define var_texOff(off) (var_tex(_12 + _13 * vec2(off))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 97] #define var_gather(pos, c) (_15 * vec4(textureGather(_11, pos, c))) 
[ 397.842][d][vo/gpu-next/libplacebo] [ 98] #define frame _16 
[ 397.842][d][vo/gpu-next/libplacebo] [ 99] #define random _17 
[ 397.842][d][vo/gpu-next/libplacebo] [100] #define input_size _18 
[ 397.842][d][vo/gpu-next/libplacebo] [101] #define target_size _19 
[ 397.842][d][vo/gpu-next/libplacebo] [102] #define tex_offset _1a 
[ 397.842][d][vo/gpu-next/libplacebo] [103] vec4 _8001(vec4 color) {
[ 397.842][d][vo/gpu-next/libplacebo] [104] // pl_shader_linearize           
[ 397.842][d][vo/gpu-next/libplacebo] [105] color.rgb = max(color.rgb, 0.0); 
[ 397.842][d][vo/gpu-next/libplacebo] [106] color.rgb = _8003 * pow(color.rgb + vec3(_8002), vec3(2.4)); 
[ 397.842][d][vo/gpu-next/libplacebo] [107] return color;
[ 397.842][d][vo/gpu-next/libplacebo] [108] }
[ 397.842][d][vo/gpu-next/libplacebo] [109] 
[ 397.842][d][vo/gpu-next/libplacebo] [110] #define linearize _8001 
[ 397.842][d][vo/gpu-next/libplacebo] [111] vec4 _4001(vec4 color) {
[ 397.842][d][vo/gpu-next/libplacebo] [112] // pl_shader_delinearize 
[ 397.842][d][vo/gpu-next/libplacebo] [113] color.rgb = max(color.rgb, 0.0); 
[ 397.842][d][vo/gpu-next/libplacebo] [114] color.rgb = pow(_4003 * color.rgb, vec3(1.0/2.4)) - vec3(_4002); 
[ 397.842][d][vo/gpu-next/libplacebo] [115] return color;
[ 397.842][d][vo/gpu-next/libplacebo] [116] }
[ 397.842][d][vo/gpu-next/libplacebo] [117] 
[ 397.842][d][vo/gpu-next/libplacebo] [118] #define delinearize _4001 
[ 397.842][d][vo/gpu-next/libplacebo] [119] 
[ 397.842][d][vo/gpu-next/libplacebo] [120] #define oversharp   0.5
[ 397.842][d][vo/gpu-next/libplacebo] [121] 
[ 397.842][d][vo/gpu-next/libplacebo] [122] // -- Window Size --
[ 397.842][d][vo/gpu-next/libplacebo] [123] #define taps        3.0
[ 397.842][d][vo/gpu-next/libplacebo] [124] #define even        (taps - 2.0 * floor(taps / 2.0) == 0.0)
[ 397.842][d][vo/gpu-next/libplacebo] [125] #define minX        int(1.0-ceil(taps/2.0))
[ 397.842][d][vo/gpu-next/libplacebo] [126] #define maxX        int(floor(taps/2.0))
[ 397.842][d][vo/gpu-next/libplacebo] [127] 
[ 397.842][d][vo/gpu-next/libplacebo] [128] #define Kernel(x)   cos(acos(-1.0)*(x)/taps) // Hann kernel
[ 397.842][d][vo/gpu-next/libplacebo] [129] 
[ 397.842][d][vo/gpu-next/libplacebo] [130] // -- Input processing --
[ 397.842][d][vo/gpu-next/libplacebo] [131] #define var(x,y)    var_tex(var_pt * (pos + vec2(x,y) + 0.5)).rg
[ 397.842][d][vo/gpu-next/libplacebo] [132] #define GetL(x,y)   PREKERNEL_tex(PREKERNEL_pt * (pos + tex_offset + vec2(x,y) + 0.5)).rgb
[ 397.842][d][vo/gpu-next/libplacebo] [133] #define GetH(x,y)   LOWRES_tex(LOWRES_pt * (pos + vec2(x,y) + 0.5))
[ 397.842][d][vo/gpu-next/libplacebo] [134] 
[ 397.842][d][vo/gpu-next/libplacebo] [135] #define Luma(rgb)   dot(rgb*rgb, vec3(0.2126, 0.7152, 0.0722))
[ 397.842][d][vo/gpu-next/libplacebo] [136] 
[ 397.842][d][vo/gpu-next/libplacebo] [137] vec4 hook() {
[ 397.842][d][vo/gpu-next/libplacebo] [138]     vec4 c0 = HOOKED_texOff(0);
[ 397.842][d][vo/gpu-next/libplacebo] [139] 
[ 397.842][d][vo/gpu-next/libplacebo] [140]     vec2 pos = HOOKED_pos * LOWRES_size - vec2(0.5);
[ 397.842][d][vo/gpu-next/libplacebo] [141]     vec2 offset = pos - (even ? floor(pos) : round(pos));
[ 397.842][d][vo/gpu-next/libplacebo] [142]     pos -= offset;
[ 397.842][d][vo/gpu-next/libplacebo] [143] 
[ 397.842][d][vo/gpu-next/libplacebo] [144]     vec2 mVar = vec2(0.0);
[ 397.842][d][vo/gpu-next/libplacebo] [145]     for (int X=-1; X<=1; X++)
[ 397.842][d][vo/gpu-next/libplacebo] [146]     for (int Y=-1; Y<=1; Y++) {
[ 397.842][d][vo/gpu-next/libplacebo] [147]         vec2 w = clamp(1.5 - abs(vec2(X,Y)), 0.0, 1.0);
[ 397.842][d][vo/gpu-next/libplacebo] [148]         mVar += w.r * w.g * vec2(GetH(X,Y).a, 1.0);
[ 397.842][d][vo/gpu-next/libplacebo] [149]     }
[ 397.842][d][vo/gpu-next/libplacebo] [150]     mVar.r /= mVar.g;
[ 397.842][d][vo/gpu-next/libplacebo] [151] 
[ 397.842][d][vo/gpu-next/libplacebo] [152]     // Calculate faithfulness force
[ 397.842][d][vo/gpu-next/libplacebo] [153]     float weightSum = 0.0;
[ 397.842][d][vo/gpu-next/libplacebo] [154]     vec3 diff = vec3(0);
[ 397.842][d][vo/gpu-next/libplacebo] [155] 
[ 397.842][d][vo/gpu-next/libplacebo] [156]     for (int X = minX; X <= maxX; X++)
[ 397.842][d][vo/gpu-next/libplacebo] [157]     for (int Y = minX; Y <= maxX; Y++)
[ 397.842][d][vo/gpu-next/libplacebo] [158]     {
[ 397.842][d][vo/gpu-next/libplacebo] [159]         float R = (-1.0 - oversharp) * sqrt(var(X,Y).r / (var(X,Y).g + mVar.r));
[ 397.842][d][vo/gpu-next/libplacebo] [160] 
[ 397.842][d][vo/gpu-next/libplacebo] [161]         vec2 krnl = Kernel(vec2(X,Y) - offset);
[ 397.842][d][vo/gpu-next/libplacebo] [162]         float weight = krnl.r * krnl.g / (Luma((c0.rgb - GetH(X,Y).rgb)) + GetH(X,Y).a);
[ 397.842][d][vo/gpu-next/libplacebo] [163] 
[ 397.842][d][vo/gpu-next/libplacebo] [164]         diff += weight * (GetL(X,Y) + GetH(X,Y).rgb * R + (-1.0 - R) * (c0.rgb));
[ 397.842][d][vo/gpu-next/libplacebo] [165]         weightSum += weight;
[ 397.842][d][vo/gpu-next/libplacebo] [166]     }
[ 397.842][d][vo/gpu-next/libplacebo] [167]     diff /= weightSum;
[ 397.842][d][vo/gpu-next/libplacebo] [168] 
[ 397.842][d][vo/gpu-next/libplacebo] [169]     c0.rgb = ((c0.rgb) + diff);
[ 397.842][d][vo/gpu-next/libplacebo] [170] 
[ 397.842][d][vo/gpu-next/libplacebo] [171]     return c0;
[ 397.842][d][vo/gpu-next/libplacebo] [172] }
[ 397.842][d][vo/gpu-next/libplacebo] [173] vec4 _1() {
[ 397.842][d][vo/gpu-next/libplacebo] [174] vec4 color = hook(); 
[ 397.842][d][vo/gpu-next/libplacebo] [175] return color;
[ 397.842][d][vo/gpu-next/libplacebo] [176] }
[ 397.842][d][vo/gpu-next/libplacebo] [177] 
[ 397.842][d][vo/gpu-next/libplacebo] [178] void main() {
[ 397.842][d][vo/gpu-next/libplacebo] [179] out_color = _1();
[ 397.842][d][vo/gpu-next/libplacebo] [180] }
[ 397.842][d][vo/gpu-next/libplacebo] Specialization constant values:
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=1: 1.000000
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=4: 0.059585
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=5: 0.870311
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=6: 0.059585
[ 397.842][d][vo/gpu-next/libplacebo]   constant_id=7: 1.149015
[ 397.842][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x3f99b590009ec6b0
[ 397.842][d][vo/gpu-next] cache_load_obj: key(9f8a45c17496bd80), size(4484), load time(0.120 ms)
[ 397.842][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x9f8a45c17496bd80
[ 397.842][d][vo/gpu-next] cache_load_obj: key(8d6badd99a619eba), size(20342), load time(0.143 ms)
[ 397.842][d][vo/gpu-next/libplacebo] Spent 0.008 ms compiling shader
[ 397.842][d][vo/gpu-next] cache_save_obj: key(3f99b590009ec6b0), size(1048)
[ 397.842][d][vo/gpu-next] cache_save_obj: key(9f8a45c17496bd80), size(4484)
[ 397.842][d][vo/gpu-next/libplacebo] Spent 0.113 ms creating pipeline
[ 397.842][d][vo/gpu-next] cache_save_obj: key(8d6badd99a619eba), size(20342)
[ 397.842][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[ 397.843][v][cplayer] Change display sync audio drift: 1
[ 397.843][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[ 397.843][d][osd/libass] ASS library version: 0x1703000 (runtime 0x1703000)
[ 397.843][v][osd/libass] libass API version: 0x1703000
[ 397.843][v][osd/libass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[ 397.843][v][osd/libass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[ 397.843][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[ 397.843][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[ 397.843][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[ 397.843][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[ 397.843][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[ 397.843][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[ 397.843][v][osd/libass] Setting up fonts...
[ 397.844][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[ 397.844][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[ 397.844][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[ 397.844][v][osd/libass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[ 397.849][v][osd/libass] Using font provider fontconfig
[ 397.849][v][osd/libass] Done.
[ 397.852][v][osd/libass] fontselect: (Noto Emoji, 400, 0) -> /usr/share/fonts/noto/NotoSans-Regular.ttf, 0, NotoSans-Regular
[ 397.853][d][osd] Spent 10.534 ms in osd_render (slow!)
[ 397.853][d][vo/gpu-next/libplacebo] (Re)creating 205x108x0 texture with format r8: unknown
[ 397.853][v][auto_profiles] Re-evaluating auto profile video-sync
[ 397.857][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 397.857][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 397.857][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 397.887][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 397.887][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 397.887][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 397.887][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 397.887][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 397.887][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 397.887][d][vo/gpu-next/libplacebo] Spent 0.162 ms allocating slab
[ 397.948][v][cplayer] Change display sync audio drift: 0
[ 397.948][v][cplayer] Compensation factor: 0.997907
[ 397.990][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 3
[ 397.990][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[ 401.608][v][cplayer] Change display sync audio drift: -1
[ 401.609][v][auto_profiles] Re-evaluating auto profile video-sync
[ 406.148][v][cplayer] Change display sync audio drift: 0
[ 406.148][v][cplayer] Compensation factor: 0.999986
[ 406.149][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.236][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 407.355][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 407.355][v][inputevent] Evaluating event: click
[ 407.355][v][inputevent] Evaluating comand: seek 5
[ 407.355][v][inputevent] Apply comand: seek 5
[ 407.355][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 407.356][v][lavf] queuing seek to 411.773033
[ 407.356][v][lavf] queuing seek to 411.773033
[ 407.356][v][lavf] execute seek (to 411.773033 flags 0)
[ 407.356][v][lavf] execute seek (to 411.773033 flags 32)
[ 407.356][v][lavf] seek done
[ 407.356][v][lavf] seek done
[ 407.357][v][cplayer] hr-seek, skipping to 411.773033 (no framedrop)
[ 407.357][v][osd/libass] fontselect: (mpv-osd-symbols, 400, 0) -> mpv-osd-symbols-Regular, 0, mpv-osd-symbols-Regular
[ 407.358][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 407.358][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 407.358][v][file] stream level seek from 38568966 to 39130473
[ 407.359][d][vo/gpu-next/libplacebo] (Re)creating 478x175x0 texture with format r8: unknown
[ 407.360][v][lavf] EOF reached.
[ 407.360][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 407.362][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 407.367][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 407.367][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 411.778033
[ 407.367][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 407.397][v][cplayer] first video frame after restart shown
[ 407.397][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 407.397][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.398][v][cplayer] audio ready
[ 407.398][d][cplayer] starting video playback
[ 407.398][v][cplayer] starting audio playback
[ 407.398][v][ao/alsa] starting AO
[ 407.398][v][cplayer] playback restart complete @ 411.778033, audio=playing, video=playing
[ 407.398][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 407.399][v][cplayer] Change display sync audio drift: -1
[ 407.399][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.407][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 407.407][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 407.407][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 407.429][v][cplayer] Change display sync audio drift: 1
[ 407.429][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.538][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 407.579][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 407.599][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 407.729][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.860][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 407.923][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 407.923][v][inputevent] Evaluating event: click
[ 407.923][v][inputevent] Evaluating comand: seek 5
[ 407.923][v][inputevent] Apply comand: seek 5
[ 407.923][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 407.923][v][lavf] queuing seek to 417.245167
[ 407.923][v][lavf] queuing seek to 417.245167
[ 407.923][v][lavf] execute seek (to 417.245167 flags 0)
[ 407.923][v][lavf] seek done
[ 407.923][v][lavf] execute seek (to 417.245167 flags 32)
[ 407.923][v][lavf] seek done
[ 407.924][v][cplayer] hr-seek, skipping to 417.245167 (no framedrop)
[ 407.924][v][file] stream level seek from 39785833 to 40018658
[ 407.925][v][lavf] EOF reached.
[ 407.925][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 407.927][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 407.928][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 407.928][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 407.928][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 407.941][d][vd] Allocating new (host-cached) DR image...
[ 407.948][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 417.250167
[ 407.948][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 407.948][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 407.948][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 407.948][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 407.978][v][cplayer] first video frame after restart shown
[ 407.978][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 407.978][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.992][v][cplayer] audio ready
[ 407.992][d][cplayer] starting video playback
[ 407.992][v][cplayer] starting audio playback
[ 407.992][v][ao/alsa] starting AO
[ 407.992][v][cplayer] playback restart complete @ 417.250167, audio=playing, video=playing
[ 407.992][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 407.992][v][cplayer] Change display sync audio drift: -1
[ 407.993][v][auto_profiles] Re-evaluating auto profile video-sync
[ 407.993][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 407.993][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 407.993][d][vo/gpu-next/libplacebo] Spent 0.155 ms allocating slab
[ 407.997][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 407.997][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 407.997][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 408.129][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 408.167][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 408.187][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 408.317][v][auto_profiles] Re-evaluating auto profile video-sync
[ 408.589][v][auto_profiles] Re-evaluating auto profile video-sync
[ 408.717][v][auto_profiles] Re-evaluating auto profile video-sync
[ 408.851][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 408.919][v][auto_profiles] Re-evaluating auto profile video-sync
[ 408.931][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 408.931][v][inputevent] Evaluating event: click
[ 408.931][v][inputevent] Evaluating comand: seek 5
[ 408.931][v][inputevent] Apply comand: seek 5
[ 408.931][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 408.931][v][lavf] queuing seek to 423.151067
[ 408.931][v][lavf] queuing seek to 423.151067
[ 408.931][v][lavf] execute seek (to 423.151067 flags 0)
[ 408.931][v][lavf] execute seek (to 423.151067 flags 32)
[ 408.931][v][lavf] seek done
[ 408.931][v][lavf] seek done
[ 408.932][v][cplayer] hr-seek, skipping to 423.151067 (no framedrop)
[ 408.932][v][file] stream level seek from 41001698 to 41314389
[ 408.933][v][lavf] EOF reached.
[ 408.933][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 408.937][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 408.937][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 408.937][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 408.937][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 408.968][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 423.156067
[ 408.968][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 408.968][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 408.968][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 408.968][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 408.997][v][cplayer] first video frame after restart shown
[ 408.997][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 408.997][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.000][v][cplayer] audio ready
[ 409.000][d][cplayer] starting video playback
[ 409.000][v][cplayer] starting audio playback
[ 409.000][v][ao/alsa] starting AO
[ 409.000][v][cplayer] playback restart complete @ 423.156067, audio=playing, video=playing
[ 409.000][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 409.000][v][cplayer] Change display sync audio drift: -1
[ 409.000][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.001][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 409.001][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 409.001][d][vo/gpu-next/libplacebo] Spent 0.187 ms allocating slab
[ 409.007][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 409.007][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.007][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.027][v][cplayer] Change display sync audio drift: 1
[ 409.027][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.138][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 409.179][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 409.199][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 409.327][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.597][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.628][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 409.715][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 409.715][v][inputevent] Evaluating event: click
[ 409.715][v][inputevent] Evaluating comand: seek 5
[ 409.715][v][inputevent] Apply comand: seek 5
[ 409.715][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 409.715][v][lavf] queuing seek to 428.823400
[ 409.715][v][lavf] queuing seek to 428.823400
[ 409.715][v][lavf] execute seek (to 428.823400 flags 0)
[ 409.715][v][lavf] execute seek (to 428.823400 flags 32)
[ 409.715][v][lavf] seek done
[ 409.715][v][lavf] seek done
[ 409.716][v][cplayer] hr-seek, skipping to 428.823400 (no framedrop)
[ 409.716][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 409.716][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 409.717][v][lavf] EOF reached.
[ 409.717][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 409.717][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 409.721][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 409.758][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 428.828400
[ 409.758][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 409.758][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 409.758][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.758][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.788][v][cplayer] first video frame after restart shown
[ 409.788][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 409.788][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.803][v][cplayer] audio ready
[ 409.803][d][cplayer] starting video playback
[ 409.803][v][cplayer] starting audio playback
[ 409.803][v][ao/alsa] starting AO
[ 409.803][v][cplayer] playback restart complete @ 428.828400, audio=playing, video=playing
[ 409.803][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 409.803][v][cplayer] Change display sync audio drift: -1
[ 409.803][v][auto_profiles] Re-evaluating auto profile video-sync
[ 409.804][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 409.804][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 409.804][d][vo/gpu-next/libplacebo] Spent 0.186 ms allocating slab
[ 409.807][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 409.807][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.807][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 409.937][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 409.977][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 409.997][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.127][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.220][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 410.340][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 410.341][v][inputevent] Evaluating event: click
[ 410.341][v][inputevent] Evaluating comand: seek 5
[ 410.341][v][inputevent] Apply comand: seek 5
[ 410.341][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 410.341][v][lavf] queuing seek to 434.328900
[ 410.341][v][lavf] queuing seek to 434.328900
[ 410.341][v][lavf] execute seek (to 434.328900 flags 0)
[ 410.341][v][lavf] seek done
[ 410.341][v][lavf] execute seek (to 434.328900 flags 32)
[ 410.341][v][lavf] seek done
[ 410.344][v][cplayer] hr-seek, skipping to 434.328900 (no framedrop)
[ 410.345][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.345][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 410.345][v][lavf] EOF reached.
[ 410.345][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 410.347][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 410.349][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 410.390][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 434.333900
[ 410.390][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 410.391][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 410.391][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.391][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.417][v][cplayer] first video frame after restart shown
[ 410.417][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.417][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.421][v][cplayer] audio ready
[ 410.421][d][cplayer] starting video playback
[ 410.421][v][cplayer] starting audio playback
[ 410.421][v][ao/alsa] starting AO
[ 410.421][v][cplayer] playback restart complete @ 434.333900, audio=playing, video=playing
[ 410.422][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 410.422][v][cplayer] Change display sync audio drift: -1
[ 410.422][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 410.422][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 410.422][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.422][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[ 410.427][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 410.427][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.427][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.558][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 410.598][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 410.619][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.749][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.843][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 410.956][d][cplayer] Run command: script-binding, flags=329, args=[name="inputevent/RIGHT", arg=""]
[ 410.956][v][inputevent] Evaluating event: click
[ 410.956][v][inputevent] Evaluating comand: seek 5
[ 410.956][v][inputevent] Apply comand: seek 5
[ 410.956][d][cplayer] Run command: seek, flags=73, args=[target="5.000000", flags="relative", legacy="unused"]
[ 410.956][v][lavf] queuing seek to 439.834400
[ 410.956][v][lavf] queuing seek to 439.834400
[ 410.956][v][lavf] execute seek (to 439.834400 flags 0)
[ 410.956][v][lavf] execute seek (to 439.834400 flags 32)
[ 410.956][v][lavf] seek done
[ 410.956][v][lavf] seek done
[ 410.958][v][cplayer] hr-seek, skipping to 439.834400 (no framedrop)
[ 410.958][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.958][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[ 410.959][v][lavf] EOF reached.
[ 410.959][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[ 410.963][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[ 410.967][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[ 410.973][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 439.839400
[ 410.973][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[ 410.973][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 410.973][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.973][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 410.974][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 410.974][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[ 410.997][v][cplayer] first video frame after restart shown
[ 410.997][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 410.997][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.999][v][cplayer] audio ready
[ 410.999][d][cplayer] starting video playback
[ 410.999][v][cplayer] starting audio playback
[ 410.999][v][ao/alsa] starting AO
[ 410.999][v][cplayer] playback restart complete @ 439.839400, audio=playing, video=playing
[ 410.999][v][vo/gpu-next/wayland] Enabling idle inhibitor
[ 410.999][v][cplayer] Change display sync audio drift: -1
[ 410.999][v][auto_profiles] Re-evaluating auto profile video-sync
[ 410.999][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[ 410.999][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[ 411.000][d][vo/gpu-next/libplacebo] Spent 0.160 ms allocating slab
[ 411.007][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[ 411.007][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 411.007][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[ 411.027][v][cplayer] Change display sync audio drift: 0
[ 411.027][v][auto_profiles] Re-evaluating auto profile video-sync
[ 411.138][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 699.301
[ 411.178][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[ 411.199][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.029][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.129][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.199][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.297][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.427][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.597][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.759][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 412.999][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 413.158][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[ 413.158][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[ 413.297][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 413.727][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 414.329][v][auto_profiles] Re-evaluating auto profile fps-fix
[ 414.938][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 414.938][d][vo/gpu-next/libplacebo] Spent 0.235 ms allocating slab
[ 415.077][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[ 415.077][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[ 420.015][d][auto_save_state] saving state
[ 420.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 420.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][i][cplayer] Saving state.
[ 420.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 420.478][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 420.478][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 421.479][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 421.479][d][vo/gpu-next/libplacebo] Spent 0.717 ms allocating slab
[ 423.511][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 423.512][d][vo/gpu-next/libplacebo] Spent 0.635 ms allocating slab
[ 423.548][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[ 423.548][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[ 426.507][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 426.507][d][vo/gpu-next/libplacebo] Spent 0.185 ms allocating slab
[ 426.648][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 426.648][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 429.741][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 429.742][d][vo/gpu-next/libplacebo] Spent 0.691 ms allocating slab
[ 429.878][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 429.878][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 442.186][v][cplayer] Change display sync audio drift: -1
[ 442.186][v][auto_profiles] Re-evaluating auto profile video-sync
[ 449.287][v][cplayer] Change display sync audio drift: 0
[ 449.287][v][cplayer] Compensation factor: 1.000015
[ 449.288][v][auto_profiles] Re-evaluating auto profile video-sync
[ 449.838][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 449.838][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 449.870][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 449.871][d][vo/gpu-next/libplacebo] Spent 0.693 ms allocating slab
[ 454.536][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 454.536][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 454.899][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 454.899][d][vo/gpu-next/libplacebo] Spent 0.688 ms allocating slab
[ 457.638][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 457.638][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 459.969][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 459.970][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[ 461.600][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 461.601][d][vo/gpu-next/libplacebo] Spent 0.667 ms allocating slab
[ 461.626][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 461.626][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 467.637][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 467.637][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 475.528][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 475.529][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[ 477.567][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 477.567][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 477.999][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 478.000][d][vo/gpu-next/libplacebo] Spent 0.657 ms allocating slab
[ 479.998][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 479.999][d][vo/gpu-next/libplacebo] Spent 0.733 ms allocating slab
[ 480.015][d][auto_save_state] saving state
[ 480.015][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 480.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.015][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.015][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.015][i][cplayer] Saving state.
[ 480.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 480.137][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 480.137][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 487.300][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 487.301][d][vo/gpu-next/libplacebo] Spent 0.826 ms allocating slab
[ 487.437][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 487.437][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 491.037][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 491.037][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 494.327][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 494.328][d][vo/gpu-next/libplacebo] Spent 0.711 ms allocating slab
[ 497.338][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 497.338][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 501.729][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 501.730][d][vo/gpu-next/libplacebo] Spent 0.809 ms allocating slab
[ 523.567][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 523.567][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 523.767][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 523.768][d][vo/gpu-next/libplacebo] Spent 0.661 ms allocating slab
[ 528.197][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 528.197][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 528.430][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 528.430][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[ 534.299][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 534.300][d][vo/gpu-next/libplacebo] Spent 0.766 ms allocating slab
[ 534.337][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 534.337][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 537.636][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 537.637][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 538.598][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 538.599][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[ 540.015][d][auto_save_state] saving state
[ 540.016][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][i][cplayer] Saving state.
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.016][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.017][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.017][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 540.929][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 540.930][d][vo/gpu-next/libplacebo] Spent 0.646 ms allocating slab
[ 541.067][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 541.067][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 556.496][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 556.496][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 556.727][d][vo/gpu-next/libplacebo] Allocating 909312 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 556.728][d][vo/gpu-next/libplacebo] Spent 0.791 ms allocating slab
[ 559.325][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 559.325][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[ 559.436][d][vo/gpu-next/libplacebo] Garbage collected slab of size  888K from pool 3
[ 559.436][d][vo/gpu-next/libplacebo] Freeing slab of size  888K
[ 563.434][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 563.434][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 564.397][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 564.397][d][vo/gpu-next/libplacebo] Spent 0.677 ms allocating slab
[ 567.495][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 567.495][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 567.725][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 567.725][d][vo/gpu-next/libplacebo] Spent 0.207 ms allocating slab
[ 571.136][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 571.136][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 571.726][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 571.727][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[ 573.265][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 573.265][d][vo/gpu-next/libplacebo] Spent 0.179 ms allocating slab
[ 573.336][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 573.336][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 576.368][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 576.369][d][vo/gpu-next/libplacebo] Spent 0.673 ms allocating slab
[ 576.496][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 576.496][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 582.496][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 582.496][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 586.298][d][vo/gpu-next/libplacebo] Allocating 1449984 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 586.299][d][vo/gpu-next/libplacebo] Spent 0.699 ms allocating slab
[ 595.936][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1416K from pool 3
[ 595.936][d][vo/gpu-next/libplacebo] Freeing slab of size 1416K
[ 596.226][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 596.226][d][vo/gpu-next/libplacebo] Spent 0.693 ms allocating slab
[ 597.435][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 597.436][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 597.664][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 597.664][d][vo/gpu-next/libplacebo] Spent 0.207 ms allocating slab
[ 600.022][d][auto_save_state] saving state
[ 600.022][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 600.022][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.022][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.022][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.022][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.022][i][cplayer] Saving state.
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.023][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 600.024][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 602.735][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 602.735][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 603.097][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 603.097][d][vo/gpu-next/libplacebo] Spent 0.692 ms allocating slab
[ 605.598][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 605.598][d][vo/gpu-next/libplacebo] Spent 0.648 ms allocating slab
[ 605.634][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 605.634][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 609.795][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 609.796][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 610.127][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 610.128][d][vo/gpu-next/libplacebo] Spent 0.707 ms allocating slab
[ 612.527][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 612.528][d][vo/gpu-next/libplacebo] Spent 0.678 ms allocating slab
[ 612.666][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 612.666][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 617.727][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 617.728][d][vo/gpu-next/libplacebo] Spent 0.648 ms allocating slab
[ 617.866][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 617.866][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 629.565][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 629.565][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 630.094][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 630.095][d][vo/gpu-next/libplacebo] Spent 0.271 ms allocating slab
[ 633.035][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 633.035][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 633.167][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 633.168][d][vo/gpu-next/libplacebo] Spent 0.687 ms allocating slab
[ 637.727][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 637.727][d][vo/gpu-next/libplacebo] Spent 0.655 ms allocating slab
[ 637.865][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 637.865][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 642.195][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 642.195][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 644.166][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 644.167][d][vo/gpu-next/libplacebo] Spent 0.825 ms allocating slab
[ 650.565][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 650.565][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 655.296][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 655.297][d][vo/gpu-next/libplacebo] Spent 0.752 ms allocating slab
[ 658.023][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 658.024][d][vo/gpu-next/libplacebo] Spent 0.188 ms allocating slab
[ 658.165][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[ 658.165][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[ 660.028][d][auto_save_state] saving state
[ 660.028][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][i][cplayer] Saving state.
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.028][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 660.029][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 673.034][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 673.034][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 673.523][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 673.524][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[ 676.834][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 676.834][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 677.265][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 677.265][d][vo/gpu-next/libplacebo] Spent 0.682 ms allocating slab
[ 679.627][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 679.627][d][vo/gpu-next/libplacebo] Spent 0.639 ms allocating slab
[ 679.763][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 679.763][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 686.432][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 686.433][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 686.696][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 686.697][d][vo/gpu-next/libplacebo] Spent 0.702 ms allocating slab
[ 690.927][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 690.927][d][vo/gpu-next/libplacebo] Spent 0.643 ms allocating slab
[ 690.993][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 690.993][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 697.834][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[ 697.834][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[ 699.293][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 699.293][d][vo/gpu-next/libplacebo] Spent 0.199 ms allocating slab
[ 702.334][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 702.334][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 706.592][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 706.593][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[ 709.165][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 709.166][d][vo/gpu-next/libplacebo] Spent 0.720 ms allocating slab
[ 709.292][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 709.292][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 712.764][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 712.764][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 713.695][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 713.696][d][vo/gpu-next/libplacebo] Spent 0.884 ms allocating slab
[ 715.695][d][vo/gpu-next/libplacebo] (Re)creating 2045x349x0 texture with format r8: unknown
[ 715.724][d][vo/gpu-next/libplacebo] (Re)creating 2045x349x0 texture with format r8: unknown
[ 717.826][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 717.827][d][vo/gpu-next/libplacebo] Spent 0.639 ms allocating slab
[ 717.958][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[ 717.958][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[ 720.032][d][auto_save_state] saving state
[ 720.032][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][i][cplayer] Saving state.
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.032][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 720.123][d][vo/gpu-next/libplacebo] Allocating 1019904 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 720.123][d][vo/gpu-next/libplacebo] Spent 0.256 ms allocating slab
[ 720.262][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 720.263][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 722.566][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 722.566][d][vo/gpu-next/libplacebo] Spent 0.769 ms allocating slab
[ 722.694][d][vo/gpu-next/libplacebo] Garbage collected slab of size  996K from pool 3
[ 722.694][d][vo/gpu-next/libplacebo] Freeing slab of size  996K
[ 731.292][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 731.292][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 734.696][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 734.697][d][vo/gpu-next/libplacebo] Spent 0.700 ms allocating slab
[ 738.293][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 738.293][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 738.922][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 738.923][d][vo/gpu-next/libplacebo] Spent 0.223 ms allocating slab
[ 747.292][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 747.292][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 749.322][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 749.322][d][vo/gpu-next/libplacebo] Spent 0.216 ms allocating slab
[ 754.532][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 754.532][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 754.966][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 754.966][d][vo/gpu-next/libplacebo] Spent 0.689 ms allocating slab
[ 768.167][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 768.168][d][vo/gpu-next/libplacebo] Spent 0.627 ms allocating slab
[ 768.231][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 768.231][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 771.762][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 771.762][d][vo/gpu-next/libplacebo] Spent 0.219 ms allocating slab
[ 771.891][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 771.891][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 779.833][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 779.833][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 779.993][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 779.994][d][vo/gpu-next/libplacebo] Spent 0.763 ms allocating slab
[ 780.036][d][auto_save_state] saving state
[ 780.036][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 780.036][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][i][cplayer] Saving state.
[ 780.036][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.036][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 780.037][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 781.264][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 781.265][d][vo/gpu-next/libplacebo] Spent 0.652 ms allocating slab
[ 781.393][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 781.393][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 793.763][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 793.763][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 794.095][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 794.096][d][vo/gpu-next/libplacebo] Spent 1.039 ms allocating slab
[ 797.666][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 797.666][d][vo/gpu-next/libplacebo] Spent 0.632 ms allocating slab
[ 797.793][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 797.793][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 810.991][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 810.992][d][vo/gpu-next/libplacebo] Spent 0.233 ms allocating slab
[ 811.132][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 811.132][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 826.491][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[ 826.491][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[ 826.661][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 826.662][d][vo/gpu-next/libplacebo] Spent 0.375 ms allocating slab
[ 828.761][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 828.762][d][vo/gpu-next/libplacebo] Spent 0.308 ms allocating slab
[ 828.892][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 828.892][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 831.265][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 831.265][d][vo/gpu-next/libplacebo] Spent 0.707 ms allocating slab
[ 831.392][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 831.392][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 840.039][d][auto_save_state] saving state
[ 840.039][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 840.039][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.039][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.039][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.039][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.039][i][cplayer] Saving state.
[ 840.039][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.039][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.040][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.041][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 840.041][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 853.464][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 853.465][d][vo/gpu-next/libplacebo] Spent 1.072 ms allocating slab
[ 853.465][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 853.465][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 871.291][d][vo/gpu-next/libplacebo] Allocating 1474560 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 871.291][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[ 871.431][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 871.431][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 875.160][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1440K from pool 3
[ 875.160][d][vo/gpu-next/libplacebo] Freeing slab of size 1440K
[ 875.422][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 875.423][d][vo/gpu-next/libplacebo] Spent 0.819 ms allocating slab
[ 877.023][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 877.024][d][vo/gpu-next/libplacebo] Spent 0.713 ms allocating slab
[ 877.161][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[ 877.161][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[ 880.590][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 880.590][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[ 880.731][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 880.731][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 891.629][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[ 891.629][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[ 891.792][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 891.793][d][vo/gpu-next/libplacebo] Spent 0.760 ms allocating slab
[ 895.189][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 895.189][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 896.394][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 896.395][d][vo/gpu-next/libplacebo] Spent 0.686 ms allocating slab
[ 900.041][d][auto_save_state] saving state
[ 900.041][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 900.041][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.041][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.041][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.041][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.041][i][cplayer] Saving state.
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.042][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 900.091][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 900.091][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 900.193][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 900.193][d][vo/gpu-next/libplacebo] Spent 0.700 ms allocating slab
[ 902.859][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[ 902.859][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[ 903.719][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 903.720][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[ 907.663][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 907.664][d][vo/gpu-next/libplacebo] Spent 0.709 ms allocating slab
[ 907.791][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 907.791][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 912.229][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 912.229][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 913.263][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 913.263][d][vo/gpu-next/libplacebo] Spent 0.830 ms allocating slab
[ 915.823][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 915.824][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[ 915.961][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 915.961][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 921.661][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[ 921.661][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[ 921.892][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 921.892][d][vo/gpu-next/libplacebo] Spent 0.727 ms allocating slab
[ 924.760][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 924.760][d][vo/gpu-next/libplacebo] Spent 0.333 ms allocating slab
[ 924.889][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 924.889][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 929.022][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 929.023][d][vo/gpu-next/libplacebo] Spent 0.851 ms allocating slab
[ 929.161][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[ 929.161][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[ 933.162][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 933.163][d][vo/gpu-next/libplacebo] Spent 0.663 ms allocating slab
[ 933.289][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[ 933.289][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[ 946.730][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 946.730][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 946.959][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 946.959][d][vo/gpu-next/libplacebo] Spent 0.226 ms allocating slab
[ 954.265][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 954.265][d][vo/gpu-next/libplacebo] Spent 0.681 ms allocating slab
[ 954.391][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[ 954.391][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[ 960.044][d][auto_save_state] saving state
[ 960.044][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[ 960.044][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][i][cplayer] Saving state.
[ 960.044][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.044][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 960.045][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[ 994.129][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[ 994.129][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[ 995.360][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 995.361][d][vo/gpu-next/libplacebo] Spent 0.719 ms allocating slab
[ 997.729][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[ 997.729][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[ 997.818][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[ 997.818][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[1002.429][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1002.429][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1004.391][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1004.391][d][vo/gpu-next/libplacebo] Spent 0.769 ms allocating slab
[1020.046][d][auto_save_state] saving state
[1020.046][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1020.046][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][i][cplayer] Saving state.
[1020.046][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.046][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1020.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1022.027][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1022.027][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1026.388][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1026.388][d][vo/gpu-next/libplacebo] Spent 0.223 ms allocating slab
[1030.029][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1030.029][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1030.118][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1030.118][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[1033.389][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1033.389][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1037.391][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1037.391][d][vo/gpu-next/libplacebo] Spent 0.715 ms allocating slab
[1039.627][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1039.627][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1040.521][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1040.522][d][vo/gpu-next/libplacebo] Spent 0.693 ms allocating slab
[1050.357][d][vo/gpu-next/libplacebo] Allocating 1474560 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1050.358][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[1050.487][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1050.487][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1064.388][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1440K from pool 3
[1064.388][d][vo/gpu-next/libplacebo] Freeing slab of size 1440K
[1065.890][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1065.890][d][vo/gpu-next/libplacebo] Spent 0.668 ms allocating slab
[1070.958][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1070.958][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1072.857][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1072.857][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[1077.119][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1077.120][d][vo/gpu-next/libplacebo] Spent 0.704 ms allocating slab
[1077.259][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[1077.259][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[1080.047][d][auto_save_state] saving state
[1080.047][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1080.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.047][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.047][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.047][i][cplayer] Saving state.
[1080.048][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.048][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.049][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.049][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.049][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1080.049][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1083.928][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1083.928][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1085.889][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1085.890][d][vo/gpu-next/libplacebo] Spent 0.720 ms allocating slab
[1087.487][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[1087.487][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[1087.517][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1087.517][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[1093.228][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1093.228][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1093.387][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1093.387][d][vo/gpu-next/libplacebo] Spent 0.224 ms allocating slab
[1096.552][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1096.552][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1099.118][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1099.118][d][vo/gpu-next/libplacebo] Spent 0.784 ms allocating slab
[1101.658][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1101.658][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1102.658][d][vo/gpu-next/libplacebo] Allocating 491520 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1102.659][d][vo/gpu-next/libplacebo] Spent 0.744 ms allocating slab
[1104.558][d][vo/gpu-next/libplacebo] Garbage collected slab of size  480K from pool 3
[1104.558][d][vo/gpu-next/libplacebo] Freeing slab of size  480K
[1106.958][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1106.958][d][vo/gpu-next/libplacebo] Spent 0.735 ms allocating slab
[1109.158][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1109.158][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1109.788][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1109.788][d][vo/gpu-next/libplacebo] Spent 0.672 ms allocating slab
[1113.958][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1113.958][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1114.189][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1114.190][d][vo/gpu-next/libplacebo] Spent 0.672 ms allocating slab
[1123.160][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1123.161][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[1123.286][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1123.286][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1135.257][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1135.257][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1139.558][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1139.559][d][vo/gpu-next/libplacebo] Spent 0.676 ms allocating slab
[1140.049][d][auto_save_state] saving state
[1140.049][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1140.049][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.049][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.049][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.049][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.049][i][cplayer] Saving state.
[1140.049][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.049][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1140.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1142.286][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1142.286][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1142.458][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1142.459][d][vo/gpu-next/libplacebo] Spent 0.700 ms allocating slab
[1144.959][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1144.960][d][vo/gpu-next/libplacebo] Spent 0.681 ms allocating slab
[1145.087][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1145.088][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1159.255][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1159.255][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1159.517][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1159.518][d][vo/gpu-next/libplacebo] Spent 0.738 ms allocating slab
[1161.887][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1161.887][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1162.088][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1162.089][d][vo/gpu-next/libplacebo] Spent 0.807 ms allocating slab
[1167.057][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1167.057][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1167.658][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1167.659][d][vo/gpu-next/libplacebo] Spent 0.742 ms allocating slab
[1171.025][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1171.025][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1171.519][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1171.520][d][vo/gpu-next/libplacebo] Spent 0.671 ms allocating slab
[1174.659][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1174.660][d][vo/gpu-next/libplacebo] Spent 0.669 ms allocating slab
[1174.787][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1174.787][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1183.955][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1183.955][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1184.425][d][vo/gpu-next/libplacebo] Allocating 236544 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.425][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[1184.436][d][vo/gpu-next/libplacebo] (Re)creating 1920x199x0 texture with format r8: unknown
[1184.436][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.436][d][vo/gpu-next/libplacebo] Spent 0.204 ms allocating slab
[1184.436][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1184.436][d][vo/gpu-next/libplacebo] Spent 0.137 ms allocating slab
[1184.445][d][vo/gpu-next/libplacebo] (Re)creating 1945x199x0 texture with format r8: unknown
[1184.445][d][vo/gpu-next/libplacebo] Allocating 835584 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.445][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[1184.456][d][vo/gpu-next/libplacebo] (Re)creating 2042x199x0 texture with format r8: unknown
[1184.456][d][vo/gpu-next/libplacebo] Allocating 1130496 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.456][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[1184.456][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1184.456][d][vo/gpu-next/libplacebo] Spent 0.128 ms allocating slab
[1184.470][d][vo/gpu-next/libplacebo] Allocating 1179648 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.471][d][vo/gpu-next/libplacebo] Spent 0.704 ms allocating slab
[1184.490][d][vo/gpu-next/libplacebo] Allocating 1204224 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.491][d][vo/gpu-next/libplacebo] Spent 0.850 ms allocating slab
[1184.497][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1456.6201229807", args="903", args="887"]
[1184.498][d][cplayer] Run command: subprocess, flags=64, args=[args="chmod,+x,/tmp/thumbfast11061.run", playback_only="yes", capture_size="67108864", capture_stdout="no", capture_stderr="no", detach="no", env="", stdin_data="", passthrough_stdin="no"]
[1184.498][v][thumbfast] Starting subprocess: [chmod, +x, /tmp/thumbfast11061.run]
[1184.510][d][cplayer] Run command: subprocess, flags=64, args=[args="mpv,--no-config,--msg-level=all=no,--idle,--ao=null,--pause,--keep-open=always,--really-quiet,--no-terminal,--load-scripts=no,--osc=no,--ytdl=no,--load-stats-overlay=no,--load-auto-profiles=no,--load-osd-console=no,--load-select=no,--autoload-files=no,--edition=auto,--vid=1,--no-sub,--no-audio,--start=1456.6201229807,--hr-seek=no,--gpu-dumb-mode=yes,--dither-depth=no,--hdr-compute-peak=no,--target-colorspace-hint=no,--ytdl-format=worst,--demuxer-readahead-secs=0,--demuxer-max-bytes=128KiB,--vd-lavc-skiploopfilter=all,--vd-lavc-skipidct=all,--vd-lavc-software-fallback=1,--vd-lavc-fast,--vd-lavc-threads=2,--hwdec=auto,--vf=scale=w=200:h=113:force_original_aspect_ratio=decrease,pad=w=200:h=113:x=-1:y=-1,format=bgra,--audio-pitch-correction=no,--deinterlace=no,--zimg-scaler=bilinear,--zimg-fast=yes,--video-rotate=0,--ovc=rawvideo,--of=image2,--ofopts=update=1,--ocopy-metadata=no,--o=/tmp/thumbfast.out11061,--scripts=/tmp/thumbfast11061.run,--,/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4", playback_only="yes", capture_size="67108864", capture_stdout="no", capture_stderr="no", detach="no", env="", stdin_data="", passthrough_stdin="no"]
[1184.510][v][thumbfast] Starting subprocess: [mpv, --no-config, --msg-level=all=no, --idle, --ao=null, --pause, --keep-open=always, --really-quiet, --no-terminal, --load-scripts=no, --osc=no, --ytdl=no, --load-stats-overlay=no, --load-auto-profiles=no, --load-osd-console=no, --load-select=no, --autoload-files=no, --edition=auto, --vid=1, --no-sub, --no-audio, --start=1456.6201229807, --hr-seek=no, --gpu-dumb-mode=yes, --dither-depth=no, --hdr-compute-peak=no, --target-colorspace-hint=no, --ytdl-format=worst, --demuxer-readahead-secs=0, --demuxer-max-bytes=128KiB, --vd-lavc-skiploopfilter=all, --vd-lavc-skipidct=all, --vd-lavc-software-fallback=1, --vd-lavc-fast, --vd-lavc-threads=2, --hwdec=auto, --vf=scale=w=200:h=113:force_original_aspect_ratio=decrease,pad=w=200:h=113:x=-1:y=-1,format=bgra, --audio-pitch-correction=no, --deinterlace=no, --zimg-scaler=bilinear, --zimg-fast=yes, --video-rotate=0, --ovc=rawvideo, --of=image2, --ofopts=update=1, --ocopy-metadata=no, --o=/tmp/thumbfast.out11061, --scripts=/tmp/thumbfast11061.run, --, /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4]
[1184.510][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left_dbl", flags=""]
[1184.519][d][cplayer] Run command: enable-section, flags=64, args=[name="wheel", flags="allow-hide-cursor+allow-vo-dragging"]
[1184.519][d][cplayer] Run command: enable-section, flags=64, args=[name="mbtn_left", flags=""]
[1184.521][d][osd] Spent 25.022 ms in osd_render (slow!)
[1184.526][d][vo/gpu-next/libplacebo] (Re)creating 2044x209x0 texture with format r8: unknown
[1184.526][d][vo/gpu-next/libplacebo] Allocating 1720320 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1184.526][d][vo/gpu-next/libplacebo] Spent 0.572 ms allocating slab
[1184.528][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1462.4349737711", args="907", args="887"]
[1184.533][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1465.3423991662", args="909", args="887"]
[1184.543][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1468.2498245614", args="911", args="887"]
[1184.545][v][cplayer] Change display sync audio drift: 1
[1184.546][v][auto_profiles] Re-evaluating auto profile video-sync
[1184.553][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1472.6109626542", args="914", args="887"]
[1184.563][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1475.5183880493", args="916", args="887"]
[1184.573][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1487.14808963", args="924", args="887"]
[1184.583][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1491.5092277228", args="927", args="887"]
[1184.593][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1495.8703658155", args="930", args="887"]
[1184.596][d][vo/gpu-next/libplacebo] Garbage collected slab of size  231K from pool 3
[1184.596][d][vo/gpu-next/libplacebo] Freeing slab of size  231K
[1184.603][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1497.3240785131", args="931", args="887"]
[1184.606][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[1184.606][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[1184.617][d][vo/gpu-next/libplacebo] Garbage collected slab of size  816K from pool 3
[1184.617][d][vo/gpu-next/libplacebo] Freeing slab of size  816K
[1184.617][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1497.3240785131", args="931", args="887"]
[1184.637][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1184.637][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1184.638][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1104K from pool 3
[1184.638][d][vo/gpu-next/libplacebo] Freeing slab of size 1104K
[1184.648][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1497.3240785131", args="931", args="887"]
[1184.649][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1152K from pool 3
[1184.649][d][vo/gpu-next/libplacebo] Freeing slab of size 1152K
[1184.658][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1498.7777912107", args="932", args="887"]
[1184.668][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1500.2315039083", args="933", args="887"]
[1184.670][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1176K from pool 3
[1184.670][d][vo/gpu-next/libplacebo] Freeing slab of size 1176K
[1184.679][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1503.1389293035", args="935", args="887"]
[1184.689][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1503.1389293035", args="935", args="887"]
[1184.698][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1504.592642001", args="936", args="887"]
[1184.709][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1506.0463546986", args="937", args="887"]
[1184.719][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1506.0463546986", args="937", args="887"]
[1184.729][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1506.0463546986", args="937", args="887"]
[1184.739][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1506.0463546986", args="937", args="887"]
[1184.749][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1508.9537800938", args="939", args="887"]
[1184.760][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1507.5000673962", args="938", args="887"]
[1184.770][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1508.9537800938", args="939", args="887"]
[1184.780][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1508.9537800938", args="939", args="887"]
[1184.791][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1510.4074927914", args="940", args="887"]
[1184.801][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1510.4074927914", args="940", args="887"]
[1184.811][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1510.4074927914", args="940", args="887"]
[1184.821][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="thumb", args="1510.4074927914", args="940", args="887"]
[1184.830][d][cplayer] Run command: script-message-to, flags=64, args=[target="thumbfast", args="clear"]
[1184.830][d][cplayer] Run command: overlay-remove, flags=64, args=[id="42"]
[1184.832][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left_dbl"]
[1184.832][d][cplayer] Run command: disable-section, flags=64, args=[name="wheel"]
[1184.832][d][cplayer] Run command: disable-section, flags=64, args=[name="mbtn_left"]
[1192.546][v][cplayer] Change display sync audio drift: 0
[1192.546][v][cplayer] Compensation factor: 1.000004
[1192.549][v][auto_profiles] Re-evaluating auto profile video-sync
[1194.220][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1194.220][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1197.747][d][vo/gpu-next/libplacebo] Allocating 393216 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1197.748][d][vo/gpu-next/libplacebo] Spent 0.718 ms allocating slab
[1198.776][d][vo/gpu-next/libplacebo] Garbage collected slab of size  384K from pool 3
[1198.776][d][vo/gpu-next/libplacebo] Freeing slab of size  384K
[1200.050][d][auto_save_state] saving state
[1200.050][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1200.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.050][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.050][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.050][i][cplayer] Saving state.
[1200.051][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.051][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1200.826][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1680K from pool 3
[1200.826][d][vo/gpu-next/libplacebo] Freeing slab of size 1680K
[1201.625][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1201.625][d][vo/gpu-next/libplacebo] Spent 0.186 ms allocating slab
[1203.828][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1203.828][d][vo/gpu-next/libplacebo] Spent 0.644 ms allocating slab
[1203.965][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1203.965][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1208.104][v][cplayer] Change display sync audio drift: -1
[1208.105][v][auto_profiles] Re-evaluating auto profile video-sync
[1213.955][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1213.955][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1214.015][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1214.015][d][vo/gpu-next/libplacebo] Spent 0.217 ms allocating slab
[1215.586][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1215.586][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[1215.724][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1215.724][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1217.104][v][cplayer] Change display sync audio drift: 0
[1217.104][v][cplayer] Compensation factor: 1.000000
[1217.104][v][auto_profiles] Re-evaluating auto profile video-sync
[1218.484][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1218.484][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1219.785][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1219.786][d][vo/gpu-next/libplacebo] Spent 0.259 ms allocating slab
[1224.624][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1224.624][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1225.055][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1225.055][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[1228.324][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1228.324][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1228.955][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1228.955][d][vo/gpu-next/libplacebo] Spent 0.312 ms allocating slab
[1230.924][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1230.924][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1232.654][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1232.654][d][vo/gpu-next/libplacebo] Spent 0.239 ms allocating slab
[1234.784][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1234.784][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1236.685][d][vo/gpu-next/libplacebo] Allocating 1499136 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1236.685][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[1240.256][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1464K from pool 3
[1240.256][d][vo/gpu-next/libplacebo] Freeing slab of size 1464K
[1240.814][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1240.815][d][vo/gpu-next/libplacebo] Spent 0.210 ms allocating slab
[1248.284][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1248.285][d][vo/gpu-next/libplacebo] Spent 0.204 ms allocating slab
[1248.424][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1248.424][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1259.956][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1259.956][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1260.052][d][auto_save_state] saving state
[1260.052][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1260.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][i][cplayer] Saving state.
[1260.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.052][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1260.354][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1260.354][d][vo/gpu-next/libplacebo] Spent 0.202 ms allocating slab
[1264.754][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1264.754][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1264.784][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1264.784][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[1267.754][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1267.754][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1267.784][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1267.784][d][vo/gpu-next/libplacebo] Spent 0.185 ms allocating slab
[1270.754][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1270.754][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1271.484][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1271.484][d][vo/gpu-next/libplacebo] Spent 0.230 ms allocating slab
[1274.754][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1274.754][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1275.284][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1275.284][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[1287.756][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1287.756][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1288.314][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1288.314][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1295.783][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1295.783][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1299.613][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1299.614][d][vo/gpu-next/libplacebo] Spent 0.227 ms allocating slab
[1303.023][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1303.023][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1303.213][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1303.214][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[1306.123][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1306.123][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1306.483][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1306.484][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[1308.283][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1308.284][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[1308.423][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1308.423][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1312.983][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1312.983][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1314.283][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1314.283][d][vo/gpu-next/libplacebo] Spent 0.194 ms allocating slab
[1316.683][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1316.683][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1316.816][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1316.816][d][vo/gpu-next/libplacebo] Spent 0.719 ms allocating slab
[1320.053][d][auto_save_state] saving state
[1320.053][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][i][cplayer] Saving state.
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1320.053][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1323.683][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1323.683][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1327.783][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1327.783][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[1329.862][v][cplayer] Change display sync audio drift: -1
[1329.863][v][auto_profiles] Re-evaluating auto profile video-sync
[1336.003][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1336.003][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[1336.143][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1336.143][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1339.662][v][cplayer] Change display sync audio drift: 0
[1339.662][v][cplayer] Compensation factor: 0.999986
[1339.662][v][auto_profiles] Re-evaluating auto profile video-sync
[1340.444][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1340.444][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1340.746][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1340.747][d][vo/gpu-next/libplacebo] Spent 0.690 ms allocating slab
[1343.672][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1343.672][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1347.203][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1347.203][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1349.843][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1349.843][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1349.973][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1349.973][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1354.312][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1354.312][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1354.703][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1354.703][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[1358.973][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1358.973][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[1359.012][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1359.012][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1365.142][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1365.142][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1367.674][d][vo/gpu-next/libplacebo] Allocating 491520 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1367.674][d][vo/gpu-next/libplacebo] Spent 0.753 ms allocating slab
[1369.942][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1369.942][d][vo/gpu-next/libplacebo] Spent 0.264 ms allocating slab
[1370.072][d][vo/gpu-next/libplacebo] Garbage collected slab of size  480K from pool 3
[1370.072][d][vo/gpu-next/libplacebo] Freeing slab of size  480K
[1374.643][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1374.644][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1374.804][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1374.804][d][vo/gpu-next/libplacebo] Spent 0.699 ms allocating slab
[1377.072][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1377.072][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1379.404][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1379.405][d][vo/gpu-next/libplacebo] Spent 0.700 ms allocating slab
[1380.054][d][auto_save_state] saving state
[1380.054][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][i][cplayer] Saving state.
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1380.054][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1382.602][d][vo/gpu-next/libplacebo] Allocating 811008 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1382.602][d][vo/gpu-next/libplacebo] Spent 0.190 ms allocating slab
[1382.642][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[1382.642][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[1387.872][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1387.872][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[1388.011][d][vo/gpu-next/libplacebo] Garbage collected slab of size  792K from pool 3
[1388.012][d][vo/gpu-next/libplacebo] Freeing slab of size  792K
[1397.372][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1397.372][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1399.202][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1399.202][d][vo/gpu-next/libplacebo] Spent 0.228 ms allocating slab
[1404.472][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1404.472][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1404.501][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1404.502][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[1417.351][v][cplayer] Change display sync audio drift: -1
[1417.351][v][auto_profiles] Re-evaluating auto profile video-sync
[1426.563][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[1426.563][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[1426.734][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1426.734][d][vo/gpu-next/libplacebo] Spent 0.603 ms allocating slab
[1427.112][v][cplayer] Change display sync audio drift: 0
[1427.112][v][cplayer] Compensation factor: 0.999985
[1427.113][v][auto_profiles] Re-evaluating auto profile video-sync
[1438.661][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1438.661][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1440.055][d][auto_save_state] saving state
[1440.055][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][i][cplayer] Saving state.
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1440.055][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1443.164][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1443.165][d][vo/gpu-next/libplacebo] Spent 0.669 ms allocating slab
[1445.465][v][cplayer] Change display sync audio drift: 1
[1445.465][v][auto_profiles] Re-evaluating auto profile video-sync
[1445.653][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[1445.653][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[1445.653][d][vo/gpu-next/libplacebo] Spent 0.136 ms allocating slab
[1445.665][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[1445.665][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[1445.665][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[1447.536][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1447.536][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1447.830][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1447.830][d][vo/gpu-next/libplacebo] Spent 0.204 ms allocating slab
[1450.606][v][cplayer] Change display sync audio drift: 0
[1450.606][v][cplayer] Compensation factor: 0.997599
[1450.629][v][cplayer] Change display sync audio drift: 1
[1450.795][v][cplayer] Change display sync audio drift: 0
[1450.795][v][cplayer] Compensation factor: 0.998072
[1450.808][d][vo/gpu-next/libplacebo] Allocating 1511424 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1450.808][d][vo/gpu-next/libplacebo] Spent 0.194 ms allocating slab
[1450.876][v][cplayer] Change display sync audio drift: 1
[1451.007][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1451.007][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1466.737][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1466.737][d][vo/gpu-next/libplacebo] Spent 0.173 ms allocating slab
[1466.941][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1466.941][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1473.478][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1476K from pool 3
[1473.478][d][vo/gpu-next/libplacebo] Freeing slab of size 1476K
[1480.333][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1480.334][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[1484.607][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1484.607][d][vo/gpu-next/libplacebo] Spent 0.190 ms allocating slab
[1484.744][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1484.744][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1488.028][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1488.028][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1488.356][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1488.356][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[1493.076][v][cplayer] Change display sync audio drift: 0
[1493.076][v][cplayer] Compensation factor: 0.998757
[1493.077][v][auto_profiles] Re-evaluating auto profile video-sync
[1493.123][v][cplayer] Change display sync audio drift: 1
[1493.123][v][auto_profiles] Re-evaluating auto profile video-sync
[1496.537][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1496.538][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[1496.685][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1496.685][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1500.056][d][auto_save_state] saving state
[1500.056][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][i][cplayer] Saving state.
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.056][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1500.868][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1500.868][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1501.138][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1501.139][d][vo/gpu-next/libplacebo] Spent 0.234 ms allocating slab
[1512.558][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1512.558][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1514.314][v][cplayer] Change display sync audio drift: 0
[1514.314][v][cplayer] Compensation factor: 0.997778
[1514.349][v][cplayer] Change display sync audio drift: 1
[1515.383][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1515.383][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[1516.784][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1516.784][d][vo/gpu-next/libplacebo] Spent 0.204 ms allocating slab
[1516.934][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1516.934][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1519.024][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1519.024][d][vo/gpu-next/libplacebo] Spent 0.194 ms allocating slab
[1519.229][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1519.229][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1521.823][v][cplayer] Change display sync audio drift: 0
[1521.823][v][cplayer] Compensation factor: 0.999100
[1521.824][v][auto_profiles] Re-evaluating auto profile video-sync
[1521.868][v][cplayer] Change display sync audio drift: 1
[1521.869][v][auto_profiles] Re-evaluating auto profile video-sync
[1522.402][v][cplayer] Change display sync audio drift: 0
[1522.402][v][cplayer] Compensation factor: 0.998925
[1522.402][v][auto_profiles] Re-evaluating auto profile video-sync
[1522.460][v][cplayer] Change display sync audio drift: 1
[1522.460][v][auto_profiles] Re-evaluating auto profile video-sync
[1522.959][v][cplayer] Change display sync audio drift: 0
[1522.959][v][cplayer] Compensation factor: 0.999327
[1522.960][v][auto_profiles] Re-evaluating auto profile video-sync
[1522.994][v][cplayer] Change display sync audio drift: 1
[1522.994][v][auto_profiles] Re-evaluating auto profile video-sync
[1526.619][v][cplayer] Change display sync audio drift: 0
[1526.619][v][cplayer] Compensation factor: 0.998724
[1526.664][v][cplayer] Change display sync audio drift: 1
[1527.958][d][vo/gpu-next/libplacebo] Allocating 1019904 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1527.958][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[1528.108][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[1528.108][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[1532.515][d][vo/gpu-next/libplacebo] Garbage collected slab of size  996K from pool 3
[1532.515][d][vo/gpu-next/libplacebo] Freeing slab of size  996K
[1532.729][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1532.729][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[1541.938][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1541.938][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1542.132][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1542.132][d][vo/gpu-next/libplacebo] Spent 0.254 ms allocating slab
[1544.687][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1544.687][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[1544.848][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1544.848][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1545.066][v][cplayer] Change display sync audio drift: 0
[1545.066][v][cplayer] Compensation factor: 0.997485
[1545.127][v][cplayer] Change display sync audio drift: 1
[1547.789][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1547.789][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1548.906][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1548.907][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[1551.263][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1551.263][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1554.335][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1554.336][d][vo/gpu-next/libplacebo] Spent 0.687 ms allocating slab
[1554.411][v][cplayer] Change display sync audio drift: 0
[1554.411][v][cplayer] Compensation factor: 0.998460
[1554.445][v][cplayer] Change display sync audio drift: 1
[1556.170][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1556.171][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[1556.240][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1556.240][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1560.057][d][auto_save_state] saving state
[1560.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1560.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][i][cplayer] Saving state.
[1560.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1560.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1567.647][d][vo/gpu-next/libplacebo] (Re)creating 2046x349x0 texture with format r8: unknown
[1567.659][d][vo/gpu-next/libplacebo] (Re)creating 2046x349x0 texture with format r8: unknown
[1571.651][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1571.651][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1572.061][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1572.061][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1575.502][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1575.502][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1577.193][v][cplayer] Change display sync audio drift: 0
[1577.193][v][cplayer] Compensation factor: 0.999671
[1577.193][v][auto_profiles] Re-evaluating auto profile video-sync
[1577.227][v][cplayer] Change display sync audio drift: 1
[1577.227][v][auto_profiles] Re-evaluating auto profile video-sync
[1578.177][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1578.177][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[1583.373][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1583.373][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1585.155][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1585.155][d][vo/gpu-next/libplacebo] Spent 0.228 ms allocating slab
[1586.007][v][cplayer] Change display sync audio drift: 0
[1586.007][v][cplayer] Compensation factor: 0.999421
[1586.007][v][auto_profiles] Re-evaluating auto profile video-sync
[1586.083][v][cplayer] Change display sync audio drift: 1
[1586.084][v][auto_profiles] Re-evaluating auto profile video-sync
[1587.333][v][cplayer] Change display sync audio drift: 0
[1587.333][v][cplayer] Compensation factor: 0.998836
[1587.333][v][auto_profiles] Re-evaluating auto profile video-sync
[1587.402][v][cplayer] Change display sync audio drift: 1
[1587.402][v][auto_profiles] Re-evaluating auto profile video-sync
[1588.551][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1588.551][d][vo/gpu-next/libplacebo] Spent 0.186 ms allocating slab
[1588.757][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1588.757][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1590.428][v][cplayer] Change display sync audio drift: 0
[1590.428][v][cplayer] Compensation factor: 0.997536
[1590.484][v][cplayer] Change display sync audio drift: 1
[1595.484][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1595.484][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1595.562][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1595.563][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[1597.429][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1597.429][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1598.639][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1598.639][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[1601.517][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1601.517][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1603.609][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1603.609][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[1605.212][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1605.212][d][vo/gpu-next/libplacebo] Spent 0.232 ms allocating slab
[1605.425][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1605.425][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1612.390][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1612.390][d][vo/gpu-next/libplacebo] Spent 0.704 ms allocating slab
[1612.549][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1612.549][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1617.892][v][cplayer] Change display sync audio drift: 0
[1617.892][v][cplayer] Compensation factor: 0.999611
[1617.892][v][auto_profiles] Re-evaluating auto profile video-sync
[1617.938][v][cplayer] Change display sync audio drift: 1
[1617.938][v][auto_profiles] Re-evaluating auto profile video-sync
[1618.745][v][cplayer] Change display sync audio drift: 0
[1618.745][v][cplayer] Compensation factor: 1.000821
[1618.745][v][auto_profiles] Re-evaluating auto profile video-sync
[1618.779][v][cplayer] Change display sync audio drift: 1
[1618.779][v][auto_profiles] Re-evaluating auto profile video-sync
[1620.057][d][auto_save_state] saving state
[1620.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][i][cplayer] Saving state.
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1620.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1623.524][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1623.524][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1624.369][v][cplayer] Change display sync audio drift: 0
[1624.369][v][cplayer] Compensation factor: 0.999853
[1624.369][v][auto_profiles] Re-evaluating auto profile video-sync
[1624.450][v][cplayer] Change display sync audio drift: 1
[1624.450][v][auto_profiles] Re-evaluating auto profile video-sync
[1625.921][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1625.922][d][vo/gpu-next/libplacebo] Spent 0.266 ms allocating slab
[1632.237][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1632.237][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1633.147][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1633.148][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1637.825][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1637.825][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1638.098][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1638.098][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[1643.105][v][cplayer] Change display sync audio drift: 0
[1643.105][v][cplayer] Compensation factor: 1.000279
[1643.105][v][auto_profiles] Re-evaluating auto profile video-sync
[1643.140][v][cplayer] Change display sync audio drift: 1
[1643.140][v][auto_profiles] Re-evaluating auto profile video-sync
[1644.114][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1644.114][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1644.365][v][cplayer] Change display sync audio drift: 0
[1644.365][v][cplayer] Compensation factor: 0.998154
[1644.444][v][cplayer] Change display sync audio drift: 1
[1645.507][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1645.507][d][vo/gpu-next/libplacebo] Spent 0.433 ms allocating slab
[1649.513][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1649.513][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1649.757][d][vo/gpu-next/libplacebo] Allocating 811008 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1649.757][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[1653.302][d][vo/gpu-next/libplacebo] Garbage collected slab of size  792K from pool 3
[1653.302][d][vo/gpu-next/libplacebo] Freeing slab of size  792K
[1654.005][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1654.005][d][vo/gpu-next/libplacebo] Spent 0.229 ms allocating slab
[1655.470][v][cplayer] Change display sync audio drift: 0
[1655.470][v][cplayer] Compensation factor: 0.997728
[1655.558][v][cplayer] Change display sync audio drift: 1
[1657.428][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1657.429][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[1657.497][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1657.497][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1663.848][v][cplayer] Change display sync audio drift: 0
[1663.848][v][cplayer] Compensation factor: 0.999542
[1663.849][v][auto_profiles] Re-evaluating auto profile video-sync
[1663.939][v][cplayer] Change display sync audio drift: 1
[1663.940][v][auto_profiles] Re-evaluating auto profile video-sync
[1667.098][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1667.098][d][vo/gpu-next/libplacebo] Spent 0.665 ms allocating slab
[1667.248][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[1667.248][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[1673.199][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1673.199][d][vo/gpu-next/libplacebo] Spent 0.243 ms allocating slab
[1673.348][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1673.348][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1673.675][v][cplayer] Change display sync audio drift: 0
[1673.675][v][cplayer] Compensation factor: 0.997663
[1673.758][v][cplayer] Change display sync audio drift: 1
[1674.191][v][cplayer] Change display sync audio drift: 0
[1674.191][v][cplayer] Compensation factor: 0.998149
[1674.282][v][cplayer] Change display sync audio drift: 1
[1680.057][d][auto_save_state] saving state
[1680.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][i][cplayer] Saving state.
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1680.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1681.285][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1681.286][d][vo/gpu-next/libplacebo] Spent 0.270 ms allocating slab
[1681.454][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1681.454][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1688.071][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1688.071][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1691.576][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1691.576][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[1694.586][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1694.586][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1700.397][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1700.397][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[1702.310][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1702.310][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[1702.470][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1702.470][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1710.880][v][cplayer] Change display sync audio drift: 0
[1710.880][v][cplayer] Compensation factor: 0.998577
[1710.965][v][cplayer] Change display sync audio drift: 1
[1729.653][v][cplayer] Change display sync audio drift: 0
[1729.653][v][cplayer] Compensation factor: 0.997932
[1729.722][v][cplayer] Change display sync audio drift: 1
[1736.551][v][cplayer] Change display sync audio drift: 0
[1736.551][v][cplayer] Compensation factor: 0.999018
[1736.552][v][auto_profiles] Re-evaluating auto profile video-sync
[1736.587][v][cplayer] Change display sync audio drift: 1
[1736.587][v][auto_profiles] Re-evaluating auto profile video-sync
[1740.057][d][auto_save_state] saving state
[1740.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][i][cplayer] Saving state.
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1740.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1746.321][v][cplayer] Change display sync audio drift: 0
[1746.321][v][cplayer] Compensation factor: 0.998218
[1746.402][v][cplayer] Change display sync audio drift: 1
[1752.723][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1752.723][d][vo/gpu-next/libplacebo] Spent 0.242 ms allocating slab
[1752.889][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1752.889][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1763.494][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[1763.494][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[1764.198][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1764.199][d][vo/gpu-next/libplacebo] Spent 0.704 ms allocating slab
[1764.489][v][cplayer] Change display sync audio drift: 0
[1764.489][v][cplayer] Compensation factor: 0.997100
[1764.581][v][cplayer] Change display sync audio drift: 1
[1765.821][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1765.822][d][vo/gpu-next/libplacebo] Spent 0.317 ms allocating slab
[1765.981][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1765.981][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1770.260][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1770.260][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1770.488][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1770.488][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[1773.802][v][cplayer] Change display sync audio drift: 0
[1773.802][v][cplayer] Compensation factor: 0.997521
[1773.900][v][cplayer] Change display sync audio drift: 1
[1778.470][v][cplayer] Change display sync audio drift: 0
[1778.470][v][cplayer] Compensation factor: 0.996110
[1778.516][v][cplayer] Change display sync audio drift: 1
[1798.076][v][cplayer] Change display sync audio drift: 0
[1798.076][v][cplayer] Compensation factor: 0.997622
[1798.111][v][cplayer] Change display sync audio drift: 1
[1798.345][v][cplayer] Change display sync audio drift: 0
[1798.345][v][cplayer] Compensation factor: 0.997753
[1798.436][v][cplayer] Change display sync audio drift: 1
[1800.057][d][auto_save_state] saving state
[1800.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][i][cplayer] Saving state.
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1800.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1801.261][v][cplayer] Change display sync audio drift: 0
[1801.261][v][cplayer] Compensation factor: 0.997582
[1801.307][v][cplayer] Change display sync audio drift: 1
[1805.717][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1805.717][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1806.074][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1806.074][d][vo/gpu-next/libplacebo] Spent 0.222 ms allocating slab
[1811.087][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1811.087][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1815.336][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1815.336][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[1817.143][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1817.144][d][vo/gpu-next/libplacebo] Spent 0.181 ms allocating slab
[1817.348][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1817.348][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1818.404][v][cplayer] Change display sync audio drift: 0
[1818.404][v][cplayer] Compensation factor: 0.998756
[1818.405][v][auto_profiles] Re-evaluating auto profile video-sync
[1818.456][v][cplayer] Change display sync audio drift: 1
[1818.457][v][auto_profiles] Re-evaluating auto profile video-sync
[1819.477][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1819.477][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[1819.585][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1819.585][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1821.679][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[1821.679][d][vo/gpu-next/libplacebo] Spent 0.240 ms allocating slab
[1821.899][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[1821.899][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[1822.834][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1822.834][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1823.142][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1823.142][d][vo/gpu-next/libplacebo] Spent 0.185 ms allocating slab
[1825.451][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1825.452][d][vo/gpu-next/libplacebo] Spent 0.726 ms allocating slab
[1825.614][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1825.614][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1826.687][v][cplayer] Change display sync audio drift: 0
[1826.687][v][cplayer] Compensation factor: 0.998863
[1826.688][v][auto_profiles] Re-evaluating auto profile video-sync
[1826.728][v][cplayer] Change display sync audio drift: 1
[1826.729][v][auto_profiles] Re-evaluating auto profile video-sync
[1831.582][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[1831.582][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[1831.963][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1831.963][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[1840.545][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1840.545][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1841.141][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1841.141][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[1845.562][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1845.562][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1846.646][v][cplayer] Change display sync audio drift: 0
[1846.646][v][cplayer] Compensation factor: 0.997154
[1846.726][v][cplayer] Change display sync audio drift: 1
[1851.697][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1851.698][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[1852.941][v][cplayer] Change display sync audio drift: 0
[1852.941][v][cplayer] Compensation factor: 0.998463
[1853.009][v][cplayer] Change display sync audio drift: 1
[1854.754][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1854.754][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[1854.795][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1854.795][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1858.451][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1858.452][d][vo/gpu-next/libplacebo] Spent 0.754 ms allocating slab
[1858.629][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1858.629][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1860.057][d][auto_save_state] saving state
[1860.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][i][cplayer] Saving state.
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1860.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1863.430][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1863.430][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1864.541][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1864.542][d][vo/gpu-next/libplacebo] Spent 0.674 ms allocating slab
[1873.188][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1873.189][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1875.767][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1875.767][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[1880.246][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1880.246][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1885.626][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1885.626][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[1891.567][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1891.567][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1892.131][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1892.132][d][vo/gpu-next/libplacebo] Spent 0.287 ms allocating slab
[1898.318][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1898.318][d][vo/gpu-next/libplacebo] Spent 0.709 ms allocating slab
[1898.496][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1898.496][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1899.907][v][cplayer] Change display sync audio drift: 0
[1899.907][v][cplayer] Compensation factor: 0.999104
[1899.907][v][auto_profiles] Re-evaluating auto profile video-sync
[1899.975][v][cplayer] Change display sync audio drift: 1
[1899.976][v][auto_profiles] Re-evaluating auto profile video-sync
[1900.706][v][cplayer] Change display sync audio drift: 0
[1900.706][v][cplayer] Compensation factor: 0.998251
[1900.775][v][cplayer] Change display sync audio drift: 1
[1902.663][v][cplayer] Change display sync audio drift: 0
[1902.663][v][cplayer] Compensation factor: 0.999923
[1902.663][v][auto_profiles] Re-evaluating auto profile video-sync
[1902.697][v][cplayer] Change display sync audio drift: 1
[1902.697][v][auto_profiles] Re-evaluating auto profile video-sync
[1905.788][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1905.788][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[1905.959][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1905.959][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1913.666][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[1913.666][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[1915.090][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1915.090][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[1918.879][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1918.879][d][vo/gpu-next/libplacebo] Spent 0.185 ms allocating slab
[1919.026][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[1919.026][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[1920.057][d][auto_save_state] saving state
[1920.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][i][cplayer] Saving state.
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1920.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1922.426][d][vo/gpu-next/libplacebo] Allocating 1474560 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1922.427][d][vo/gpu-next/libplacebo] Spent 0.698 ms allocating slab
[1922.605][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1922.605][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1925.915][v][cplayer] Change display sync audio drift: 0
[1925.915][v][cplayer] Compensation factor: 0.998380
[1926.000][v][cplayer] Change display sync audio drift: 1
[1929.058][v][cplayer] Change display sync audio drift: 0
[1929.058][v][cplayer] Compensation factor: 0.999276
[1929.059][v][auto_profiles] Re-evaluating auto profile video-sync
[1929.114][v][cplayer] Change display sync audio drift: 1
[1929.114][v][auto_profiles] Re-evaluating auto profile video-sync
[1930.589][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1440K from pool 3
[1930.590][d][vo/gpu-next/libplacebo] Freeing slab of size 1440K
[1930.839][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1930.839][d][vo/gpu-next/libplacebo] Spent 0.687 ms allocating slab
[1934.592][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1934.592][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1936.547][v][cplayer] Change display sync audio drift: 0
[1936.547][v][cplayer] Compensation factor: 0.997953
[1936.639][v][cplayer] Change display sync audio drift: 1
[1936.662][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1936.662][d][vo/gpu-next/libplacebo] Spent 0.256 ms allocating slab
[1940.647][v][cplayer] Change display sync audio drift: 0
[1940.647][v][cplayer] Compensation factor: 0.997659
[1940.682][v][cplayer] Change display sync audio drift: 1
[1944.637][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1944.637][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1945.204][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1945.204][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[1953.896][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[1953.896][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[1954.044][d][vo/gpu-next/libplacebo] Allocating 860160 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1954.044][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[1956.300][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1956.300][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[1956.461][d][vo/gpu-next/libplacebo] Garbage collected slab of size  840K from pool 3
[1956.461][d][vo/gpu-next/libplacebo] Freeing slab of size  840K
[1959.657][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[1959.657][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[1961.621][v][cplayer] Change display sync audio drift: 0
[1961.621][v][cplayer] Compensation factor: 1.000072
[1961.622][v][auto_profiles] Re-evaluating auto profile video-sync
[1961.717][v][cplayer] Change display sync audio drift: 1
[1961.717][v][auto_profiles] Re-evaluating auto profile video-sync
[1964.246][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1964.246][d][vo/gpu-next/libplacebo] Spent 0.187 ms allocating slab
[1968.795][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1968.795][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1972.021][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1972.021][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[1973.415][v][cplayer] Change display sync audio drift: 0
[1973.415][v][cplayer] Compensation factor: 0.998472
[1973.471][v][cplayer] Change display sync audio drift: 1
[1974.152][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1974.152][d][vo/gpu-next/libplacebo] Spent 0.202 ms allocating slab
[1974.212][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[1974.212][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[1976.364][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1976.364][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1980.057][d][auto_save_state] saving state
[1980.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][i][cplayer] Saving state.
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1980.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[1985.650][v][cplayer] Change display sync audio drift: 0
[1985.650][v][cplayer] Compensation factor: 0.998255
[1985.696][v][cplayer] Change display sync audio drift: 1
[1986.745][d][vo/gpu-next/libplacebo] Allocating 1499136 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1986.746][d][vo/gpu-next/libplacebo] Spent 0.226 ms allocating slab
[1992.889][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1464K from pool 3
[1992.889][d][vo/gpu-next/libplacebo] Freeing slab of size 1464K
[1992.952][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1992.952][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[1996.030][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[1996.030][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[1997.748][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[1997.749][d][vo/gpu-next/libplacebo] Spent 0.663 ms allocating slab
[2001.507][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2001.507][d][vo/gpu-next/libplacebo] Spent 0.182 ms allocating slab
[2001.711][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2001.711][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2007.758][v][cplayer] Change display sync audio drift: 0
[2007.758][v][cplayer] Compensation factor: 0.997402
[2007.827][v][cplayer] Change display sync audio drift: 1
[2010.867][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2010.867][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2011.331][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2011.332][d][vo/gpu-next/libplacebo] Spent 0.255 ms allocating slab
[2011.536][v][cplayer] Change display sync audio drift: 0
[2011.536][v][cplayer] Compensation factor: 0.999684
[2011.536][v][auto_profiles] Re-evaluating auto profile video-sync
[2011.570][v][cplayer] Change display sync audio drift: 1
[2011.570][v][auto_profiles] Re-evaluating auto profile video-sync
[2014.580][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2014.580][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[2014.718][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2014.718][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2019.283][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2019.283][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2021.630][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2021.631][d][vo/gpu-next/libplacebo] Spent 0.749 ms allocating slab
[2021.997][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2021.997][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[2022.202][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2022.202][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2023.611][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2023.611][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[2023.758][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2023.758][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2026.785][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2026.786][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[2026.927][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2026.927][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2031.595][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2031.595][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2033.026][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2033.026][d][vo/gpu-next/libplacebo] Spent 0.277 ms allocating slab
[2035.812][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2035.812][d][vo/gpu-next/libplacebo] Spent 0.667 ms allocating slab
[2035.957][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2035.957][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2038.346][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2038.346][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2038.552][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2038.553][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2038.637][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2038.637][d][vo/gpu-next/libplacebo] Spent 0.274 ms allocating slab
[2038.793][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[2038.793][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[2040.057][d][auto_save_state] saving state
[2040.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][i][cplayer] Saving state.
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2040.930][v][cplayer] Change display sync audio drift: 0
[2040.930][v][cplayer] Compensation factor: 0.998239
[2041.015][v][cplayer] Change display sync audio drift: 1
[2042.507][v][cplayer] Change display sync audio drift: 0
[2042.507][v][cplayer] Compensation factor: 0.998159
[2042.594][v][cplayer] Change display sync audio drift: 1
[2046.442][v][cplayer] Change display sync audio drift: 0
[2046.442][v][cplayer] Compensation factor: 0.997331
[2046.476][v][cplayer] Change display sync audio drift: 1
[2052.862][v][cplayer] Change display sync audio drift: 0
[2052.862][v][cplayer] Compensation factor: 0.999026
[2052.862][v][auto_profiles] Re-evaluating auto profile video-sync
[2052.885][v][cplayer] Change display sync audio drift: 1
[2052.885][v][auto_profiles] Re-evaluating auto profile video-sync
[2055.163][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2055.163][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2055.367][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2055.367][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2060.898][v][cplayer] Change display sync audio drift: 0
[2060.898][v][cplayer] Compensation factor: 0.999654
[2060.898][v][auto_profiles] Re-evaluating auto profile video-sync
[2060.943][v][cplayer] Change display sync audio drift: 1
[2060.943][v][auto_profiles] Re-evaluating auto profile video-sync
[2061.451][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2061.451][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2061.745][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2061.746][d][vo/gpu-next/libplacebo] Spent 0.243 ms allocating slab
[2069.986][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2069.987][d][vo/gpu-next/libplacebo] Spent 0.177 ms allocating slab
[2070.192][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2070.192][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2070.854][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2070.854][d][vo/gpu-next/libplacebo] Spent 0.754 ms allocating slab
[2070.934][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[2070.934][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[2072.890][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2072.891][d][vo/gpu-next/libplacebo] Spent 0.330 ms allocating slab
[2073.067][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2073.067][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2075.876][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2075.876][d][vo/gpu-next/libplacebo] Spent 0.284 ms allocating slab
[2075.990][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2075.990][d][vo/gpu-next/libplacebo] Spent 0.228 ms allocating slab
[2076.035][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2076.035][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2076.194][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2076.194][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2082.463][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2082.463][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2082.544][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2082.544][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2087.930][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2087.930][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2090.231][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2090.231][d][vo/gpu-next/libplacebo] Spent 0.306 ms allocating slab
[2092.963][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2092.963][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2093.307][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2093.308][d][vo/gpu-next/libplacebo] Spent 0.235 ms allocating slab
[2096.805][v][cplayer] Change display sync audio drift: 0
[2096.805][v][cplayer] Compensation factor: 0.999521
[2096.805][v][auto_profiles] Re-evaluating auto profile video-sync
[2096.840][v][cplayer] Change display sync audio drift: 1
[2096.840][v][auto_profiles] Re-evaluating auto profile video-sync
[2100.057][d][auto_save_state] saving state
[2100.057][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2100.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.057][i][cplayer] Saving state.
[2100.057][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.057][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2100.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2101.216][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2101.217][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2104.001][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2104.002][d][vo/gpu-next/libplacebo] Spent 0.694 ms allocating slab
[2108.418][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2108.418][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2112.205][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2112.206][d][vo/gpu-next/libplacebo] Spent 0.705 ms allocating slab
[2114.514][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2114.514][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2114.727][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2114.728][d][vo/gpu-next/libplacebo] Spent 0.707 ms allocating slab
[2115.027][v][cplayer] Change display sync audio drift: 0
[2115.027][v][cplayer] Compensation factor: 0.998561
[2115.111][v][cplayer] Change display sync audio drift: 1
[2115.853][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2115.853][d][vo/gpu-next/libplacebo] Spent 0.183 ms allocating slab
[2116.057][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2116.057][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2120.593][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2120.593][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2123.320][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2123.321][d][vo/gpu-next/libplacebo] Spent 0.728 ms allocating slab
[2126.510][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2126.510][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[2126.686][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2126.686][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2126.828][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2126.828][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2127.032][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2127.032][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2128.115][v][cplayer] Change display sync audio drift: 0
[2128.115][v][cplayer] Compensation factor: 0.999724
[2128.115][v][auto_profiles] Re-evaluating auto profile video-sync
[2128.149][v][cplayer] Change display sync audio drift: 1
[2128.149][v][auto_profiles] Re-evaluating auto profile video-sync
[2130.089][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2130.089][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2130.573][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2130.573][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[2137.916][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2137.916][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2139.979][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2139.979][d][vo/gpu-next/libplacebo] Spent 0.206 ms allocating slab
[2140.498][v][cplayer] Change display sync audio drift: 0
[2140.498][v][cplayer] Compensation factor: 0.998932
[2140.498][v][auto_profiles] Re-evaluating auto profile video-sync
[2140.533][v][cplayer] Change display sync audio drift: 1
[2140.533][v][auto_profiles] Re-evaluating auto profile video-sync
[2142.802][v][cplayer] Change display sync audio drift: 0
[2142.802][v][cplayer] Compensation factor: 0.997627
[2142.836][v][cplayer] Change display sync audio drift: 1
[2144.482][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2144.482][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2147.349][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2147.349][d][vo/gpu-next/libplacebo] Spent 0.235 ms allocating slab
[2148.671][v][cplayer] Change display sync audio drift: 0
[2148.671][v][cplayer] Compensation factor: 0.994881
[2148.761][v][cplayer] Change display sync audio drift: 1
[2150.144][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2150.144][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2150.196][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2150.196][d][vo/gpu-next/libplacebo] Spent 0.231 ms allocating slab
[2153.781][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2153.782][d][vo/gpu-next/libplacebo] Spent 0.705 ms allocating slab
[2153.959][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2153.959][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2158.464][v][cplayer] Change display sync audio drift: 0
[2158.464][v][cplayer] Compensation factor: 0.999466
[2158.464][v][auto_profiles] Re-evaluating auto profile video-sync
[2158.534][v][cplayer] Change display sync audio drift: 1
[2158.535][v][auto_profiles] Re-evaluating auto profile video-sync
[2160.058][d][auto_save_state] saving state
[2160.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2160.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.058][i][cplayer] Saving state.
[2160.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2160.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2162.027][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2162.027][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2162.361][d][vo/gpu-next/libplacebo] Allocating 1474560 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2162.361][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[2167.902][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1440K from pool 3
[2167.902][d][vo/gpu-next/libplacebo] Freeing slab of size 1440K
[2168.064][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2168.064][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2176.541][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2176.541][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2177.566][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2177.566][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2179.626][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2179.626][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2179.741][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2179.741][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[2182.024][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2182.025][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2182.248][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2182.248][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2183.951][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2183.951][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2184.249][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2184.249][d][vo/gpu-next/libplacebo] Spent 0.231 ms allocating slab
[2189.922][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2189.922][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2190.343][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2190.343][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[2193.053][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2193.053][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2194.145][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2194.145][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2199.316][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2199.316][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2199.761][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2199.762][d][vo/gpu-next/libplacebo] Spent 0.242 ms allocating slab
[2200.078][v][cplayer] Change display sync audio drift: 0
[2200.079][v][cplayer] Compensation factor: 1.000837
[2200.079][v][auto_profiles] Re-evaluating auto profile video-sync
[2200.136][v][cplayer] Change display sync audio drift: 1
[2200.136][v][auto_profiles] Re-evaluating auto profile video-sync
[2204.909][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2204.909][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2210.571][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2210.572][d][vo/gpu-next/libplacebo] Spent 0.690 ms allocating slab
[2212.649][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2212.650][d][vo/gpu-next/libplacebo] Spent 0.702 ms allocating slab
[2212.830][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2212.830][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2215.991][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2215.991][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2216.015][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2216.015][d][vo/gpu-next/libplacebo] Spent 0.194 ms allocating slab
[2217.792][v][cplayer] Change display sync audio drift: 0
[2217.792][v][cplayer] Compensation factor: 1.002941
[2217.793][v][auto_profiles] Re-evaluating auto profile video-sync
[2217.837][v][cplayer] Change display sync audio drift: 1
[2217.838][v][auto_profiles] Re-evaluating auto profile video-sync
[2219.970][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2219.970][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2220.058][d][auto_save_state] saving state
[2220.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2220.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][i][cplayer] Saving state.
[2220.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2220.573][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2220.574][d][vo/gpu-next/libplacebo] Spent 0.962 ms allocating slab
[2223.279][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2223.279][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2223.336][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2223.337][d][vo/gpu-next/libplacebo] Spent 0.210 ms allocating slab
[2229.381][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2229.382][d][vo/gpu-next/libplacebo] Spent 0.897 ms allocating slab
[2229.563][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2229.563][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2232.286][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2232.286][d][vo/gpu-next/libplacebo] Spent 0.229 ms allocating slab
[2232.456][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2232.456][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2237.327][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2237.327][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2237.705][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2237.705][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[2237.865][v][cplayer] Change display sync audio drift: 0
[2237.865][v][cplayer] Compensation factor: 0.998795
[2237.865][v][auto_profiles] Re-evaluating auto profile video-sync
[2237.956][v][cplayer] Change display sync audio drift: 1
[2237.956][v][auto_profiles] Re-evaluating auto profile video-sync
[2246.991][v][cplayer] Change display sync audio drift: 0
[2246.991][v][cplayer] Compensation factor: 0.998761
[2246.992][v][auto_profiles] Re-evaluating auto profile video-sync
[2247.026][v][cplayer] Change display sync audio drift: 1
[2247.026][v][auto_profiles] Re-evaluating auto profile video-sync
[2251.795][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2251.795][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[2251.942][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2251.942][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2252.396][v][cplayer] Change display sync audio drift: 0
[2252.396][v][cplayer] Compensation factor: 1.000596
[2252.396][v][auto_profiles] Re-evaluating auto profile video-sync
[2252.430][v][cplayer] Change display sync audio drift: 1
[2252.430][v][auto_profiles] Re-evaluating auto profile video-sync
[2255.894][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2255.894][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2256.318][v][cplayer] Change display sync audio drift: 0
[2256.318][v][cplayer] Compensation factor: 0.997917
[2256.331][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2256.332][d][vo/gpu-next/libplacebo] Spent 0.356 ms allocating slab
[2256.378][v][cplayer] Change display sync audio drift: 1
[2258.606][v][cplayer] Change display sync audio drift: 0
[2258.606][v][cplayer] Compensation factor: 0.998292
[2258.640][v][cplayer] Change display sync audio drift: 1
[2258.664][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2258.664][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2258.802][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2258.802][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2262.863][v][cplayer] Change display sync audio drift: 0
[2262.863][v][cplayer] Compensation factor: 0.998578
[2262.937][v][cplayer] Change display sync audio drift: 1
[2266.500][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2266.500][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2269.143][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2269.143][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2271.490][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2271.491][d][vo/gpu-next/libplacebo] Spent 0.235 ms allocating slab
[2271.629][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2271.629][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2275.831][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2275.831][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2275.945][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2275.945][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[2277.200][v][cplayer] Change display sync audio drift: 0
[2277.200][v][cplayer] Compensation factor: 0.997403
[2277.234][v][cplayer] Change display sync audio drift: 1
[2279.106][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2279.106][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2279.214][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2279.214][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[2280.058][d][auto_save_state] saving state
[2280.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][i][cplayer] Saving state.
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2280.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2283.310][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2283.310][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2284.425][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2284.425][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[2288.979][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2288.979][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2290.908][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2290.908][d][vo/gpu-next/libplacebo] Spent 0.273 ms allocating slab
[2291.238][v][cplayer] Change display sync audio drift: 0
[2291.238][v][cplayer] Compensation factor: 0.998133
[2291.289][v][cplayer] Change display sync audio drift: 1
[2292.293][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2292.293][d][vo/gpu-next/libplacebo] Spent 0.186 ms allocating slab
[2292.498][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2292.498][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2295.435][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2295.435][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2297.290][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2297.290][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2298.139][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2298.139][d][vo/gpu-next/libplacebo] Spent 0.239 ms allocating slab
[2298.385][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2298.386][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2299.365][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2299.365][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[2299.389][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2299.389][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2301.266][v][cplayer] Change display sync audio drift: 0
[2301.266][v][cplayer] Compensation factor: 0.997219
[2301.302][v][cplayer] Change display sync audio drift: 1
[2307.258][v][cplayer] Change display sync audio drift: 0
[2307.258][v][cplayer] Compensation factor: 0.999360
[2307.258][v][auto_profiles] Re-evaluating auto profile video-sync
[2307.327][v][cplayer] Change display sync audio drift: 1
[2307.327][v][auto_profiles] Re-evaluating auto profile video-sync
[2307.995][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2307.995][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2308.106][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2308.107][d][vo/gpu-next/libplacebo] Spent 0.739 ms allocating slab
[2310.537][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2310.537][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2311.495][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2311.495][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2314.750][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2314.751][d][vo/gpu-next/libplacebo] Spent 0.699 ms allocating slab
[2314.825][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2314.825][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2327.384][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2327.385][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2327.397][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2327.397][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2330.630][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2330.630][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2331.087][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2331.088][d][vo/gpu-next/libplacebo] Spent 0.738 ms allocating slab
[2337.995][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2337.995][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2340.058][d][auto_save_state] saving state
[2340.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][i][cplayer] Saving state.
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2340.587][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2340.588][d][vo/gpu-next/libplacebo] Spent 0.216 ms allocating slab
[2341.877][v][cplayer] Change display sync audio drift: 0
[2341.877][v][cplayer] Compensation factor: 0.999030
[2341.877][v][auto_profiles] Re-evaluating auto profile video-sync
[2341.945][v][cplayer] Change display sync audio drift: 1
[2341.945][v][auto_profiles] Re-evaluating auto profile video-sync
[2343.255][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2343.255][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2343.289][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2343.289][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2344.894][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2344.895][d][vo/gpu-next/libplacebo] Spent 0.677 ms allocating slab
[2345.080][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2345.080][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2345.534][v][cplayer] Change display sync audio drift: 0
[2345.534][v][cplayer] Compensation factor: 0.997135
[2345.627][v][cplayer] Change display sync audio drift: 1
[2354.904][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2354.904][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2357.738][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2357.738][d][vo/gpu-next/libplacebo] Spent 0.676 ms allocating slab
[2358.257][v][cplayer] Change display sync audio drift: 0
[2358.257][v][cplayer] Compensation factor: 0.999272
[2358.257][v][auto_profiles] Re-evaluating auto profile video-sync
[2358.302][v][cplayer] Change display sync audio drift: 1
[2358.302][v][auto_profiles] Re-evaluating auto profile video-sync
[2359.761][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2359.761][d][vo/gpu-next/libplacebo] Spent 0.189 ms allocating slab
[2359.910][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2359.910][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2367.271][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2367.271][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2367.508][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2367.508][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2368.021][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2368.021][d][vo/gpu-next/libplacebo] Spent 0.182 ms allocating slab
[2368.224][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2368.224][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2373.955][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2373.956][d][vo/gpu-next/libplacebo] Spent 0.772 ms allocating slab
[2373.968][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[2373.968][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[2375.573][v][cplayer] Change display sync audio drift: 0
[2375.574][v][cplayer] Compensation factor: 0.997934
[2375.612][v][cplayer] Change display sync audio drift: 1
[2378.120][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2378.120][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2379.533][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2379.533][d][vo/gpu-next/libplacebo] Spent 0.248 ms allocating slab
[2382.002][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2382.002][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2385.816][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2385.816][d][vo/gpu-next/libplacebo] Spent 0.224 ms allocating slab
[2388.693][v][cplayer] Change display sync audio drift: 0
[2388.693][v][cplayer] Compensation factor: 0.998552
[2388.781][v][cplayer] Change display sync audio drift: 1
[2389.265][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2389.265][d][vo/gpu-next/libplacebo] Spent 0.257 ms allocating slab
[2389.334][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2389.334][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2389.436][v][cplayer] Change display sync audio drift: 0
[2389.436][v][cplayer] Compensation factor: 0.999461
[2389.436][v][auto_profiles] Re-evaluating auto profile video-sync
[2389.504][v][cplayer] Change display sync audio drift: 1
[2389.504][v][auto_profiles] Re-evaluating auto profile video-sync
[2393.093][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2393.093][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2393.120][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2393.120][d][vo/gpu-next/libplacebo] Spent 0.206 ms allocating slab
[2396.007][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2396.007][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2396.141][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2396.142][d][vo/gpu-next/libplacebo] Spent 0.684 ms allocating slab
[2397.902][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2397.903][d][vo/gpu-next/libplacebo] Spent 0.675 ms allocating slab
[2398.025][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2398.025][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2398.444][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2398.445][d][vo/gpu-next/libplacebo] Spent 0.190 ms allocating slab
[2398.764][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2398.764][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2400.058][d][auto_save_state] saving state
[2400.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][i][cplayer] Saving state.
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2400.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2401.168][v][cplayer] Change display sync audio drift: 0
[2401.168][v][cplayer] Compensation factor: 0.998702
[2401.237][v][cplayer] Change display sync audio drift: 1
[2401.856][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2401.857][d][vo/gpu-next/libplacebo] Spent 0.686 ms allocating slab
[2401.944][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2401.944][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2405.887][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2405.887][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2406.316][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2406.316][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2409.820][v][cplayer] Change display sync audio drift: 0
[2409.820][v][cplayer] Compensation factor: 0.999214
[2409.820][v][auto_profiles] Re-evaluating auto profile video-sync
[2409.867][v][cplayer] Change display sync audio drift: 1
[2409.867][v][auto_profiles] Re-evaluating auto profile video-sync
[2410.208][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2410.208][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2410.665][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2410.665][d][vo/gpu-next/libplacebo] Spent 0.230 ms allocating slab
[2412.876][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2412.876][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2414.374][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2414.374][d][vo/gpu-next/libplacebo] Spent 0.233 ms allocating slab
[2418.652][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2418.652][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2418.767][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2418.767][d][vo/gpu-next/libplacebo] Spent 0.224 ms allocating slab
[2426.363][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2426.363][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2426.625][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2426.625][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[2428.895][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2428.896][d][vo/gpu-next/libplacebo] Spent 0.213 ms allocating slab
[2429.045][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2429.046][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2429.276][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2429.276][d][vo/gpu-next/libplacebo] Spent 0.337 ms allocating slab
[2429.488][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2429.488][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2432.067][v][cplayer] Change display sync audio drift: 0
[2432.067][v][cplayer] Compensation factor: 0.996359
[2432.115][v][cplayer] Change display sync audio drift: 1
[2432.986][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2432.987][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2434.854][d][vo/gpu-next/libplacebo] Allocating 1019904 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2434.855][d][vo/gpu-next/libplacebo] Spent 0.825 ms allocating slab
[2438.557][v][cplayer] Change display sync audio drift: 0
[2438.557][v][cplayer] Compensation factor: 0.997494
[2438.633][v][cplayer] Change display sync audio drift: 1
[2441.017][d][vo/gpu-next/libplacebo] Garbage collected slab of size  996K from pool 3
[2441.017][d][vo/gpu-next/libplacebo] Freeing slab of size  996K
[2441.051][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2441.051][d][vo/gpu-next/libplacebo] Spent 0.210 ms allocating slab
[2443.041][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2443.041][d][vo/gpu-next/libplacebo] Spent 0.218 ms allocating slab
[2443.199][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2443.199][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2446.992][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2446.992][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2449.510][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2449.510][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[2451.568][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2451.568][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[2451.734][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2451.734][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2460.058][d][auto_save_state] saving state
[2460.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][i][cplayer] Saving state.
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2460.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2462.747][v][cplayer] Change display sync audio drift: 0
[2462.747][v][cplayer] Compensation factor: 0.998177
[2462.794][v][cplayer] Change display sync audio drift: 1
[2465.249][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2465.249][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2465.352][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2465.352][d][vo/gpu-next/libplacebo] Spent 0.227 ms allocating slab
[2467.586][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2467.586][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2469.695][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2469.695][d][vo/gpu-next/libplacebo] Spent 0.199 ms allocating slab
[2473.988][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[2473.988][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[2474.039][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2474.040][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[2475.983][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2475.983][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2475.998][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2475.999][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[2479.183][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2479.183][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2483.010][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2483.010][d][vo/gpu-next/libplacebo] Spent 0.190 ms allocating slab
[2488.525][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2488.525][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2489.258][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2489.258][d][vo/gpu-next/libplacebo] Spent 0.210 ms allocating slab
[2496.889][v][cplayer] Change display sync audio drift: 0
[2496.889][v][cplayer] Compensation factor: 1.002661
[2496.890][v][auto_profiles] Re-evaluating auto profile video-sync
[2496.933][v][cplayer] Change display sync audio drift: 1
[2496.933][v][auto_profiles] Re-evaluating auto profile video-sync
[2502.440][v][cplayer] Change display sync audio drift: 0
[2502.440][v][cplayer] Compensation factor: 0.999886
[2502.440][v][auto_profiles] Re-evaluating auto profile video-sync
[2502.537][v][cplayer] Change display sync audio drift: 1
[2502.537][v][auto_profiles] Re-evaluating auto profile video-sync
[2504.513][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2504.513][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2506.196][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2506.196][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2507.272][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2507.272][d][vo/gpu-next/libplacebo] Spent 0.202 ms allocating slab
[2507.518][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2507.518][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2508.259][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2508.259][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[2508.479][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2508.479][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2508.522][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2508.523][d][vo/gpu-next/libplacebo] Spent 0.681 ms allocating slab
[2508.726][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2508.726][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2512.351][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2512.351][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2514.657][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2514.657][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[2520.058][d][auto_save_state] saving state
[2520.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][i][cplayer] Saving state.
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2520.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2522.595][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2522.596][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2522.757][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2522.757][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2531.432][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2531.432][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2536.744][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2536.744][d][vo/gpu-next/libplacebo] Spent 0.192 ms allocating slab
[2540.423][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2540.423][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2540.496][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2540.497][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[2546.959][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2546.959][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2547.283][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2547.284][d][vo/gpu-next/libplacebo] Spent 0.199 ms allocating slab
[2548.740][d][vo/gpu-next/libplacebo] Allocating 909312 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2548.741][d][vo/gpu-next/libplacebo] Spent 0.652 ms allocating slab
[2548.939][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2548.939][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2551.303][d][vo/gpu-next/libplacebo] Garbage collected slab of size  888K from pool 3
[2551.303][d][vo/gpu-next/libplacebo] Freeing slab of size  888K
[2551.447][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2551.447][d][vo/gpu-next/libplacebo] Spent 0.694 ms allocating slab
[2552.944][v][cplayer] Change display sync audio drift: 0
[2552.944][v][cplayer] Compensation factor: 0.994682
[2553.018][v][cplayer] Change display sync audio drift: 1
[2554.945][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2554.945][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2555.504][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2555.504][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[2559.472][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2559.472][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[2559.625][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2559.625][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2562.264][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2562.264][d][vo/gpu-next/libplacebo] Spent 0.207 ms allocating slab
[2562.435][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2562.435][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2566.789][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2566.789][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2567.765][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2567.766][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[2570.986][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2570.986][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[2571.146][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2571.146][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2573.736][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2573.736][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2575.386][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2575.386][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[2578.313][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2578.314][d][vo/gpu-next/libplacebo] Spent 0.715 ms allocating slab
[2578.396][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2578.396][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2580.058][d][auto_save_state] saving state
[2580.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][i][cplayer] Saving state.
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2580.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2582.002][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[2582.002][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[2583.302][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2583.302][d][vo/gpu-next/libplacebo] Spent 0.215 ms allocating slab
[2590.330][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2590.330][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2590.923][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2590.924][d][vo/gpu-next/libplacebo] Spent 0.189 ms allocating slab
[2593.517][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2593.517][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2593.912][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2593.913][d][vo/gpu-next/libplacebo] Spent 0.776 ms allocating slab
[2596.974][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2596.974][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2597.329][v][cplayer] Change display sync audio drift: 0
[2597.329][v][cplayer] Compensation factor: 0.995843
[2597.416][v][cplayer] Change display sync audio drift: 1
[2600.302][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2600.302][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2602.924][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2602.924][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2614.530][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2614.530][d][vo/gpu-next/libplacebo] Spent 0.207 ms allocating slab
[2615.246][v][cplayer] Change display sync audio drift: 0
[2615.246][v][cplayer] Compensation factor: 0.998015
[2615.332][v][cplayer] Change display sync audio drift: 1
[2623.963][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2623.963][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2624.162][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2624.163][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[2627.130][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2627.130][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2627.290][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2627.290][d][vo/gpu-next/libplacebo] Spent 0.213 ms allocating slab
[2628.775][v][cplayer] Change display sync audio drift: 0
[2628.775][v][cplayer] Compensation factor: 0.999343
[2628.775][v][auto_profiles] Re-evaluating auto profile video-sync
[2628.842][v][cplayer] Change display sync audio drift: 1
[2628.842][v][auto_profiles] Re-evaluating auto profile video-sync
[2630.803][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2630.803][d][vo/gpu-next/libplacebo] Spent 0.185 ms allocating slab
[2630.962][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2630.962][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2634.762][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2634.762][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[2634.865][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[2634.865][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[2636.143][v][cplayer] Change display sync audio drift: 0
[2636.143][v][cplayer] Compensation factor: 0.998910
[2636.143][v][auto_profiles] Re-evaluating auto profile video-sync
[2636.212][v][cplayer] Change display sync audio drift: 1
[2636.213][v][auto_profiles] Re-evaluating auto profile video-sync
[2637.373][v][cplayer] Change display sync audio drift: 0
[2637.373][v][cplayer] Compensation factor: 0.999538
[2637.373][v][auto_profiles] Re-evaluating auto profile video-sync
[2637.454][v][cplayer] Change display sync audio drift: 1
[2637.454][v][auto_profiles] Re-evaluating auto profile video-sync
[2638.291][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[2638.291][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[2638.554][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2638.554][d][vo/gpu-next/libplacebo] Spent 0.228 ms allocating slab
[2640.058][d][auto_save_state] saving state
[2640.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][i][cplayer] Saving state.
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2640.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2641.884][v][cplayer] Change display sync audio drift: 0
[2641.884][v][cplayer] Compensation factor: 0.999728
[2641.884][v][auto_profiles] Re-evaluating auto profile video-sync
[2641.918][v][cplayer] Change display sync audio drift: 1
[2641.918][v][auto_profiles] Re-evaluating auto profile video-sync
[2642.983][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2642.983][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2643.312][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2643.312][d][vo/gpu-next/libplacebo] Spent 0.189 ms allocating slab
[2649.898][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2649.898][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2650.048][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2650.048][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2653.782][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2653.782][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2654.339][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2654.339][d][vo/gpu-next/libplacebo] Spent 0.222 ms allocating slab
[2662.479][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[2662.479][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[2664.372][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2664.372][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2668.411][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2668.411][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2674.023][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2674.023][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2674.262][v][cplayer] Change display sync audio drift: 0
[2674.262][v][cplayer] Compensation factor: 0.998571
[2674.296][v][cplayer] Change display sync audio drift: 1
[2677.908][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2677.908][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2681.937][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2681.937][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2685.079][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2685.079][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2685.488][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2685.488][d][vo/gpu-next/libplacebo] Spent 0.198 ms allocating slab
[2686.004][v][cplayer] Change display sync audio drift: 0
[2686.004][v][cplayer] Compensation factor: 0.998740
[2686.073][v][cplayer] Change display sync audio drift: 1
[2686.404][v][cplayer] Change display sync audio drift: 0
[2686.404][v][cplayer] Compensation factor: 0.999699
[2686.405][v][auto_profiles] Re-evaluating auto profile video-sync
[2686.475][v][cplayer] Change display sync audio drift: 1
[2686.475][v][auto_profiles] Re-evaluating auto profile video-sync
[2689.144][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[2689.144][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[2689.924][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2689.925][d][vo/gpu-next/libplacebo] Spent 0.225 ms allocating slab
[2696.277][v][cplayer] Change display sync audio drift: 0
[2696.277][v][cplayer] Compensation factor: 0.998120
[2696.357][v][cplayer] Change display sync audio drift: 1
[2697.015][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[2697.015][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[2697.449][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2697.449][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[2700.059][d][auto_save_state] saving state
[2700.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][i][cplayer] Saving state.
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2700.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2701.071][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2701.071][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2702.800][v][cplayer] Change display sync audio drift: 0
[2702.800][v][cplayer] Compensation factor: 0.998145
[2702.834][v][cplayer] Change display sync audio drift: 1
[2707.038][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2707.038][d][vo/gpu-next/libplacebo] Spent 0.241 ms allocating slab
[2710.668][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2710.668][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2710.895][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2710.895][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[2715.266][v][cplayer] Change display sync audio drift: 0
[2715.266][v][cplayer] Compensation factor: 0.998689
[2715.312][v][cplayer] Change display sync audio drift: 1
[2718.051][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2718.051][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2718.705][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2718.706][d][vo/gpu-next/libplacebo] Spent 0.722 ms allocating slab
[2721.542][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2721.542][d][vo/gpu-next/libplacebo] Spent 0.206 ms allocating slab
[2721.678][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2721.678][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2723.754][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[2723.754][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[2726.351][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2726.351][d][vo/gpu-next/libplacebo] Spent 0.197 ms allocating slab
[2727.575][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2727.575][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2730.607][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2730.607][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[2732.949][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2732.950][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2735.105][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2735.106][d][vo/gpu-next/libplacebo] Spent 0.710 ms allocating slab
[2739.171][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[2739.171][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[2755.549][v][cplayer] Change display sync audio drift: 0
[2755.549][v][cplayer] Compensation factor: 0.997358
[2755.630][v][cplayer] Change display sync audio drift: 1
[2757.323][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2757.324][d][vo/gpu-next/libplacebo] Spent 0.724 ms allocating slab
[2758.755][v][lavf] EOF reached.
[2758.755][v][cplayer] Prefetching: /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2758.756][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2758.756][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2758.756][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2758.756][d][file] resize stream to 131072 bytes, drop 0 bytes
[2758.756][d][file] Stream opened successfully.
[2758.756][v][demux] Trying demuxers for level=normal.
[2758.756][d][demux] Trying demuxer: directory (force-level: normal)
[2758.756][d][demux] Trying demuxer: disc (force-level: normal)
[2758.756][d][demux] Trying demuxer: edl (force-level: normal)
[2758.756][d][demux] Trying demuxer: cue (force-level: normal)
[2758.756][d][demux] Trying demuxer: rawaudio (force-level: normal)
[2758.756][d][demux] Trying demuxer: rawvideo (force-level: normal)
[2758.756][d][demux] Trying demuxer: mkv (force-level: normal)
[2758.756][d][demux] Trying demuxer: libarchive (force-level: normal)
[2758.756][d][demux] Trying demuxer: lavf (force-level: normal)
[2758.757][v][lavf] Found 'mov,mp4,m4a,3gp,3g2,mj2' at score=100 size=2048.
[2758.768][v][file] stream level seek from 1677050 to 288902605
[2758.768][v][demux] Detected file format: mov,mp4,m4a,3gp,3g2,mj2 (libavformat)
[2758.768][v][cplayer] Opening done: /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2758.768][v][lavf] select track 0
[2758.768][v][lavf] select track 1
[2758.769][v][file] stream level seek from 288902660 to 1569930
[2759.500][v][cplayer] Change display sync audio drift: 0
[2759.500][v][cplayer] Compensation factor: 0.999899
[2759.500][v][auto_profiles] Re-evaluating auto profile video-sync
[2759.534][v][cplayer] Change display sync audio drift: 1
[2759.534][v][auto_profiles] Re-evaluating auto profile video-sync
[2759.788][v][af] filter input EOF
[2759.788][v][af] filter output EOF
[2759.788][v][cplayer] audio filter EOF
[2759.788][v][cplayer] audio draining
[2759.818][v][auto_profiles] Re-evaluating auto profile video-sync
[2759.977][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[2759.977][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[2760.014][v][ao/alsa] audio end or underrun
[2760.058][d][auto_save_state] saving state
[2760.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2760.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.058][i][cplayer] Saving state.
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.114][v][ao/alsa] attempt 1 to recover from state 'XRUN'...
[2760.114][v][ao/alsa] audio end or underrun
[2760.114][v][cplayer] AO signaled EOF (while in state draining)
[2760.115][v][vf] filter input EOF
[2760.115][v][vf] filter output EOF
[2760.156][v][cplayer] EOF code: 1  
[2760.157][v][cplayer] Running hook: skiptosilence/on_unload
[2760.157][v][cplayer] Running hook: simplehistory/on_unload
[2760.157][v][cplayer] Running hook: auto_save_state/on_unload
[2760.157][d][auto_save_state] deleting state: percent_pos=0 or eof
[2760.157][d][cplayer] Run command: delete-watch-later-config, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4"]
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.157][v][cplayer] Running hook: sub_fastwhisper/on_unload
[2760.157][d][ad] Uninit decoder.
[2760.158][d][vd] Uninit decoder.
[2760.176][v][vo/gpu-next/wayland] Disabling the idle inhibitor
[2760.179][v][cplayer] finished playback, success (reason 0)
[2760.179][v][cplayer] Running hook: ytdl_hook/on_after_end_file
[2760.180][v][auto_profiles] Re-evaluating auto profile media-title
[2760.180][v][auto_profiles] Profile condition error on evaluating: [string "profile media-title condition"]:1: attempt to index global 'path' (a nil value)
[2760.180][v][auto_profiles] Re-evaluating auto profile maximized
[2760.180][v][auto_profiles] Re-evaluating auto profile pgs-fix
[2760.180][v][auto_profiles] Profile condition error on evaluating: [string "profile pgs-fix condition"]:1: attempt to compare number with nil
[2760.180][v][auto_profiles] Re-evaluating auto profile 8k-fix
[2760.180][v][auto_profiles] Profile condition error on evaluating: [string "profile 8k-fix condition"]:1: attempt to compare number with nil
[2760.180][v][auto_profiles] Re-evaluating auto profile fps-fix
[2760.180][v][auto_profiles] Profile condition error on evaluating: [string "profile fps-fix condition"]:1: attempt to compare number with nil
[2760.180][v][auto_profiles] Re-evaluating auto profile SDR-Gamut
[2760.180][i][auto_profiles] Restoring profile: SDR-Gamut
[2760.180][d][cplayer] Run command: del, flags=64, args=[name="user-data/mpv/ytdl/json-subprocess-result"]
[2760.181][d][cplayer] Run command: apply-profile, flags=64, args=[name="SDR-Gamut", mode="restore"]
[2760.181][v][cplayer] Restoring from profile 'SDR-Gamut'...
[2760.181][v][auto_profiles] Re-evaluating auto profile Deband
[2760.181][v][auto_profiles] Profile condition error on evaluating: [string "profile Deband condition"]:1: attempt to compare nil with number
[2760.181][i][auto_profiles] Restoring profile: Deband
[2760.181][d][cplayer] Run command: apply-profile, flags=64, args=[name="Deband", mode="restore"]
[2760.181][v][cplayer] Restoring from profile 'Deband'...
[2760.181][d][vo/gpu-next] Render options updated, resetting render state.
[2760.181][v][cplayer] Running hook: auto_profiles/on_before_start_file
[2760.181][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.181][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2760.181][i][cplayer] Playing: /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4
[2760.181][v][cplayer] Running hook: mpv_torrserver/on_load
[2760.182][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 2789.620167
[2760.182][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[2760.197][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[2760.199][d][vo/gpu-next/libplacebo] vertex shader source:
[2760.199][d][vo/gpu-next/libplacebo] [  1] #version 450
[2760.199][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[2760.199][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[2760.199][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec3 _4005;
[2760.199][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=16) mat3 _4004;
[2760.199][d][vo/gpu-next/libplacebo] [ 13] };
[2760.199][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _4002 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4003 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c004 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _2004 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _c002;
[2760.199][d][vo/gpu-next/libplacebo] [ 19] layout(binding=1) uniform  sampler2D _2002;
[2760.199][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _4008;
[2760.199][d][vo/gpu-next/libplacebo] [ 21] layout(location=0) out vec2 _c003;
[2760.199][d][vo/gpu-next/libplacebo] [ 22] layout(location=1) in vec2 _4009;
[2760.199][d][vo/gpu-next/libplacebo] [ 23] layout(location=1) out vec2 _2003;
[2760.199][d][vo/gpu-next/libplacebo] [ 24] layout(location=2) in vec2 _400a;
[2760.199][d][vo/gpu-next/libplacebo] [ 25] void main() {
[2760.199][d][vo/gpu-next/libplacebo] [ 26] _c003 = _4008;
[2760.199][d][vo/gpu-next/libplacebo] [ 27] _2003 = _4009;
[2760.199][d][vo/gpu-next/libplacebo] [ 28] vec2 va_pos = _400a; 
[2760.199][d][vo/gpu-next/libplacebo] [ 29] gl_Position = vec4(va_pos, 0.0, 1.0); 
[2760.199][d][vo/gpu-next/libplacebo] [ 30] }
[2760.199][d][vo/gpu-next/libplacebo] fragment shader source:
[2760.199][d][vo/gpu-next/libplacebo] [  1] #version 450
[2760.199][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[2760.199][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[2760.199][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) vec3 _4005;
[2760.199][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=16) mat3 _4004;
[2760.199][d][vo/gpu-next/libplacebo] [ 13] };
[2760.199][d][vo/gpu-next/libplacebo] [ 14] layout(constant_id=0) const float _4002 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 15] layout(constant_id=1) const float _4003 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=2) const float _c004 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=3) const float _2004 = 1; 
[2760.199][d][vo/gpu-next/libplacebo] [ 18] layout(binding=0) uniform  sampler2D _c002;
[2760.199][d][vo/gpu-next/libplacebo] [ 19] layout(binding=1) uniform  sampler2D _2002;
[2760.199][d][vo/gpu-next/libplacebo] [ 20] layout(location=0) in vec2 _c003;
[2760.199][d][vo/gpu-next/libplacebo] [ 21] layout(location=1) in vec2 _2003;
[2760.199][d][vo/gpu-next/libplacebo] [ 22] layout(location=0) out vec4 out_color;
[2760.199][d][vo/gpu-next/libplacebo] [ 23] 
[2760.199][d][vo/gpu-next/libplacebo] [ 24] vec4 _c001() {
[2760.199][d][vo/gpu-next/libplacebo] [ 25] // pl_shader_sample_direct                            
[2760.199][d][vo/gpu-next/libplacebo] [ 26] vec4 color = vec4(_c004) * textureLod(_c002, _c003, 0.0);   
[2760.199][d][vo/gpu-next/libplacebo] [ 27] return color;
[2760.199][d][vo/gpu-next/libplacebo] [ 28] }
[2760.199][d][vo/gpu-next/libplacebo] [ 29] 
[2760.199][d][vo/gpu-next/libplacebo] [ 30] vec4 _2001() {
[2760.199][d][vo/gpu-next/libplacebo] [ 31] // pl_shader_sample_direct                            
[2760.199][d][vo/gpu-next/libplacebo] [ 32] vec4 color = vec4(_2004) * textureLod(_2002, _2003, 0.0);   
[2760.199][d][vo/gpu-next/libplacebo] [ 33] return color;
[2760.199][d][vo/gpu-next/libplacebo] [ 34] }
[2760.199][d][vo/gpu-next/libplacebo] [ 35] 
[2760.199][d][vo/gpu-next/libplacebo] [ 36] vec4 _4001() {
[2760.199][d][vo/gpu-next/libplacebo] [ 37] vec4 color = vec4(_4003, vec2(_4002), 1.0);   
[2760.199][d][vo/gpu-next/libplacebo] [ 38] // pass_read_image                        
[2760.199][d][vo/gpu-next/libplacebo] [ 39] {                                         
[2760.199][d][vo/gpu-next/libplacebo] [ 40] vec4 tmp;                                 
[2760.199][d][vo/gpu-next/libplacebo] [ 41] tmp = _c001(); 
[2760.199][d][vo/gpu-next/libplacebo] [ 42] color[0] = tmp[0];
[2760.199][d][vo/gpu-next/libplacebo] [ 43] tmp = _2001(); 
[2760.199][d][vo/gpu-next/libplacebo] [ 44] color[1] = tmp[0];
[2760.199][d][vo/gpu-next/libplacebo] [ 45] color[2] = tmp[1];
[2760.199][d][vo/gpu-next/libplacebo] [ 46] }
[2760.199][d][vo/gpu-next/libplacebo] [ 47] // pl_shader_decode_color 
[2760.199][d][vo/gpu-next/libplacebo] [ 48] { 
[2760.199][d][vo/gpu-next/libplacebo] [ 49] color.rgb = _4004 * color.rgb + _4005; 
[2760.199][d][vo/gpu-next/libplacebo] [ 50] }
[2760.199][d][vo/gpu-next/libplacebo] [ 51] return color;
[2760.199][d][vo/gpu-next/libplacebo] [ 52] }
[2760.199][d][vo/gpu-next/libplacebo] [ 53] 
[2760.199][d][vo/gpu-next/libplacebo] [ 54] void main() {
[2760.199][d][vo/gpu-next/libplacebo] [ 55] out_color = _4001();
[2760.199][d][vo/gpu-next/libplacebo] [ 56] }
[2760.199][d][vo/gpu-next/libplacebo] Specialization constant values:
[2760.199][d][vo/gpu-next/libplacebo]   constant_id=0: 0.501961
[2760.199][d][vo/gpu-next/libplacebo]   constant_id=1: 0.062745
[2760.199][d][vo/gpu-next/libplacebo]   constant_id=2: 1.000000
[2760.199][d][vo/gpu-next/libplacebo]   constant_id=3: 1.000000
[2760.199][d][vo/gpu-next] cache_load_obj: key(c39862bda55fffe6), size(848), load time(0.048 ms)
[2760.199][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xc39862bda55fffe6
[2760.199][d][vo/gpu-next] cache_load_obj: key(bcddc9297c41fe5f), size(1648), load time(0.034 ms)
[2760.199][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0xbcddc9297c41fe5f
[2760.199][d][vo/gpu-next/libplacebo] Spent 0.007 ms compiling shader
[2760.199][d][vo/gpu-next] cache_save_obj: key(c39862bda55fffe6), size(848)
[2760.199][d][vo/gpu-next] cache_save_obj: key(bcddc9297c41fe5f), size(1648)
[2760.199][d][vo/gpu-next/libplacebo] Spent 0.047 ms creating pipeline
[2760.199][d][vo/gpu-next] cache_save_obj: key(f6330099a065a0e6), size(14338)
[2760.199][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[2760.199][d][vo/gpu-next/libplacebo] compute shader source:
[2760.199][d][vo/gpu-next/libplacebo] [  1] #version 450
[2760.199][d][vo/gpu-next/libplacebo] [  2] #extension GL_ARB_compute_shader : enable
[2760.199][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_basic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_vote : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_ballot : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_shuffle : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_clustered : enable 
[2760.199][d][vo/gpu-next/libplacebo] [  9] #extension GL_KHR_shader_subgroup_quad : enable 
[2760.199][d][vo/gpu-next/libplacebo] [ 10] #extension GL_ARB_shader_image_load_store : enable
[2760.199][d][vo/gpu-next/libplacebo] [ 11] #extension GL_ARB_texture_gather : enable
[2760.199][d][vo/gpu-next/libplacebo] [ 12] layout(std430, push_constant) uniform PushC {
[2760.199][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=0) vec2 _a004;
[2760.199][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=8) vec2 _a010;
[2760.199][d][vo/gpu-next/libplacebo] [ 15]     layout(offset=16) vec2 _a011;
[2760.199][d][vo/gpu-next/libplacebo] [ 16]     layout(offset=24) vec2 _a012;
[2760.199][d][vo/gpu-next/libplacebo] [ 17]     layout(offset=32) vec2 _a013;
[2760.200][d][vo/gpu-next/libplacebo] [ 18]     layout(offset=40) vec2 _a014;
[2760.200][d][vo/gpu-next/libplacebo] [ 19]     layout(offset=48) ivec2 _a016;
[2760.200][d][vo/gpu-next/libplacebo] [ 20] };
[2760.200][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=0) const float _a005 = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=1) const float _a009 = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=2) const float _a00a = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=3) const float _a00b = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=4) const int _a00d = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=5) const int _a00e = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=6) const float _a00f = 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 28] layout(binding=0) uniform  sampler2D _a002;
[2760.200][d][vo/gpu-next/libplacebo] [ 29] layout(binding=1) uniform  sampler1D _a007;
[2760.200][d][vo/gpu-next/libplacebo] [ 30] layout(binding=2, rgba16f) writeonly restrict uniform image2D _a015;
[2760.200][d][vo/gpu-next/libplacebo] [ 31] layout (local_size_x = 32, local_size_y = 32) in;
[2760.200][d][vo/gpu-next/libplacebo] [ 32] #define frag_pos(id) (vec2(id) + vec2(0.5))  
[2760.200][d][vo/gpu-next/libplacebo] [ 33] #define frag_map(id) (_a010 * frag_pos(id))    
[2760.200][d][vo/gpu-next/libplacebo] [ 34] #define gl_FragCoord vec4(frag_pos(gl_GlobalInvocationID), 0.0, 1.0) 
[2760.200][d][vo/gpu-next/libplacebo] [ 35] #define _a003_map(id) (mix(mix(_a011, _a012, frag_map(id).x),      mix(_a013, _a014, frag_map(id).x), frag_map(id).y)) 
[2760.200][d][vo/gpu-next/libplacebo] [ 36] #define _a003 (_a003_map(gl_GlobalInvocationID)) 
[2760.200][d][vo/gpu-next/libplacebo] [ 37] 
[2760.200][d][vo/gpu-next/libplacebo] [ 38] #define _a008(x) (_a00a * (x) + _a009) 
[2760.200][d][vo/gpu-next/libplacebo] [ 39] #define _a006(pos) (textureLod(_a007, float(\
[2760.200][d][vo/gpu-next/libplacebo] [ 40]     _a008(float(pos))\
[2760.200][d][vo/gpu-next/libplacebo] [ 41]   ), 0.0).x)
[2760.200][d][vo/gpu-next/libplacebo] [ 42] shared vec2 _a00c_base; 
[2760.200][d][vo/gpu-next/libplacebo] [ 43] shared float _a00c_0[_a00e * _a00d]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 44] shared float _a00c_1[_a00e * _a00d]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 45] shared float _a00c_2[_a00e * _a00d]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 46] void _a001() {
[2760.200][d][vo/gpu-next/libplacebo] [ 47] // pl_shader_sample_polar                     
[2760.200][d][vo/gpu-next/libplacebo] [ 48] vec4 color = vec4(0.0);                       
[2760.200][d][vo/gpu-next/libplacebo] [ 49] {                                             
[2760.200][d][vo/gpu-next/libplacebo] [ 50] vec2 pos = _a003, pt = _a004;                     
[2760.200][d][vo/gpu-next/libplacebo] [ 51] vec2 size = vec2(textureSize(_a002, 0));        
[2760.200][d][vo/gpu-next/libplacebo] [ 52] vec2 fcoord = fract(pos * size - vec2(0.5));  
[2760.200][d][vo/gpu-next/libplacebo] [ 53] vec2 base = pos - pt * fcoord;                
[2760.200][d][vo/gpu-next/libplacebo] [ 54] vec2 center = base + pt * vec2(0.5);          
[2760.200][d][vo/gpu-next/libplacebo] [ 55] ivec2 offset;                                 
[2760.200][d][vo/gpu-next/libplacebo] [ 56] float w, d, wsum = 0.0;                       
[2760.200][d][vo/gpu-next/libplacebo] [ 57] int idx;                                      
[2760.200][d][vo/gpu-next/libplacebo] [ 58] vec4 c;                                       
[2760.200][d][vo/gpu-next/libplacebo] [ 59] vec2 ww, cc;
[2760.200][d][vo/gpu-next/libplacebo] [ 60] vec2 ar0 = vec2(0.0), wwsum0 = vec2(0.0);
[2760.200][d][vo/gpu-next/libplacebo] [ 61] vec2 ar1 = vec2(0.0), wwsum1 = vec2(0.0);
[2760.200][d][vo/gpu-next/libplacebo] [ 62] vec2 ar2 = vec2(0.0), wwsum2 = vec2(0.0);
[2760.200][d][vo/gpu-next/libplacebo] [ 63] uvec2 base_id = uvec2(0u); 
[2760.200][d][vo/gpu-next/libplacebo] [ 64] if (gl_LocalInvocationID.xy == base_id)               
[2760.200][d][vo/gpu-next/libplacebo] [ 65]     _a00c_base = base;                                  
[2760.200][d][vo/gpu-next/libplacebo] [ 66] barrier();                                            
[2760.200][d][vo/gpu-next/libplacebo] [ 67] ivec2 rel = ivec2(round((base - _a00c_base) * size));   
[2760.200][d][vo/gpu-next/libplacebo] [ 68] for (int y = int(gl_LocalInvocationID.y); y < _a00e; y += 32) {     
[2760.200][d][vo/gpu-next/libplacebo] [ 69] for (int x = int(gl_LocalInvocationID.x); x < _a00d; x += 32) {     
[2760.200][d][vo/gpu-next/libplacebo] [ 70] c = textureLod(_a002, _a00c_base + pt * vec2(x - 3, y - 3), 0.0);   
[2760.200][d][vo/gpu-next/libplacebo] [ 71] _a00c_0[_a00d * y + x] = c[0]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 72] _a00c_1[_a00d * y + x] = c[1]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 73] _a00c_2[_a00d * y + x] = c[2]; 
[2760.200][d][vo/gpu-next/libplacebo] [ 74] }}                     
[2760.200][d][vo/gpu-next/libplacebo] [ 75] barrier();             
[2760.200][d][vo/gpu-next/libplacebo] [ 76] idx = _a00d * rel.y + rel.x + _a00d * 0 + 0; 
[2760.200][d][vo/gpu-next/libplacebo] [ 77] idx = _a00d * rel.y + rel.x + _a00d * 0 + 1; 
[2760.200][d][vo/gpu-next/libplacebo] [ 78] idx = _a00d * rel.y + rel.x + _a00d * 0 + 2; 
[2760.200][d][vo/gpu-next/libplacebo] [ 79] idx = _a00d * rel.y + rel.x + _a00d * 0 + 3; 
[2760.200][d][vo/gpu-next/libplacebo] [ 80] offset = ivec2(0, -3);
[2760.200][d][vo/gpu-next/libplacebo] [ 81] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [ 82] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [ 83] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [ 84] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [ 85] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [ 86] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [ 87] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [ 88] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [ 89] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [ 90] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [ 91] }
[2760.200][d][vo/gpu-next/libplacebo] [ 92] idx = _a00d * rel.y + rel.x + _a00d * 0 + 4; 
[2760.200][d][vo/gpu-next/libplacebo] [ 93] offset = ivec2(1, -3);
[2760.200][d][vo/gpu-next/libplacebo] [ 94] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [ 95] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [ 96] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [ 97] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [ 98] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [ 99] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [100] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [101] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [102] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [103] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [104] }
[2760.200][d][vo/gpu-next/libplacebo] [105] idx = _a00d * rel.y + rel.x + _a00d * 0 + 5; 
[2760.200][d][vo/gpu-next/libplacebo] [106] idx = _a00d * rel.y + rel.x + _a00d * 0 + 6; 
[2760.200][d][vo/gpu-next/libplacebo] [107] idx = _a00d * rel.y + rel.x + _a00d * 0 + 7; 
[2760.200][d][vo/gpu-next/libplacebo] [108] idx = _a00d * rel.y + rel.x + _a00d * 1 + 0; 
[2760.200][d][vo/gpu-next/libplacebo] [109] idx = _a00d * rel.y + rel.x + _a00d * 1 + 1; 
[2760.200][d][vo/gpu-next/libplacebo] [110] offset = ivec2(-2, -2);
[2760.200][d][vo/gpu-next/libplacebo] [111] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [112] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [113] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [114] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [115] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [116] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [117] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [118] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [119] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [120] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [121] }
[2760.200][d][vo/gpu-next/libplacebo] [122] idx = _a00d * rel.y + rel.x + _a00d * 1 + 2; 
[2760.200][d][vo/gpu-next/libplacebo] [123] offset = ivec2(-1, -2);
[2760.200][d][vo/gpu-next/libplacebo] [124] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [125] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [126] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [127] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [128] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [129] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [130] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [131] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [132] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [133] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [134] }
[2760.200][d][vo/gpu-next/libplacebo] [135] idx = _a00d * rel.y + rel.x + _a00d * 1 + 3; 
[2760.200][d][vo/gpu-next/libplacebo] [136] offset = ivec2(0, -2);
[2760.200][d][vo/gpu-next/libplacebo] [137] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [138] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [139] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [140] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [141] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [142] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [143] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [144] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [145] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [146] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [147] }
[2760.200][d][vo/gpu-next/libplacebo] [148] idx = _a00d * rel.y + rel.x + _a00d * 1 + 4; 
[2760.200][d][vo/gpu-next/libplacebo] [149] offset = ivec2(1, -2);
[2760.200][d][vo/gpu-next/libplacebo] [150] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [151] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [152] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [153] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [154] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [155] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [156] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [157] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [158] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [159] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [160] }
[2760.200][d][vo/gpu-next/libplacebo] [161] idx = _a00d * rel.y + rel.x + _a00d * 1 + 5; 
[2760.200][d][vo/gpu-next/libplacebo] [162] offset = ivec2(2, -2);
[2760.200][d][vo/gpu-next/libplacebo] [163] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [164] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [165] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [166] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [167] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [168] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [169] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [170] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [171] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [172] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [173] }
[2760.200][d][vo/gpu-next/libplacebo] [174] idx = _a00d * rel.y + rel.x + _a00d * 1 + 6; 
[2760.200][d][vo/gpu-next/libplacebo] [175] offset = ivec2(3, -2);
[2760.200][d][vo/gpu-next/libplacebo] [176] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [177] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [178] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [179] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [180] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [181] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [182] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [183] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [184] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [185] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [186] }
[2760.200][d][vo/gpu-next/libplacebo] [187] idx = _a00d * rel.y + rel.x + _a00d * 1 + 7; 
[2760.200][d][vo/gpu-next/libplacebo] [188] idx = _a00d * rel.y + rel.x + _a00d * 2 + 0; 
[2760.200][d][vo/gpu-next/libplacebo] [189] idx = _a00d * rel.y + rel.x + _a00d * 2 + 1; 
[2760.200][d][vo/gpu-next/libplacebo] [190] offset = ivec2(-2, -1);
[2760.200][d][vo/gpu-next/libplacebo] [191] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [192] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [193] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [194] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [195] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [196] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [197] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [198] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [199] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [200] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [201] }
[2760.200][d][vo/gpu-next/libplacebo] [202] idx = _a00d * rel.y + rel.x + _a00d * 2 + 2; 
[2760.200][d][vo/gpu-next/libplacebo] [203] offset = ivec2(-1, -1);
[2760.200][d][vo/gpu-next/libplacebo] [204] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [205] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [206] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [207] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [208] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [209] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [210] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [211] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [212] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [213] idx = _a00d * rel.y + rel.x + _a00d * 2 + 3; 
[2760.200][d][vo/gpu-next/libplacebo] [214] offset = ivec2(0, -1);
[2760.200][d][vo/gpu-next/libplacebo] [215] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [216] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [217] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [218] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [219] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [220] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [221] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [222] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [223] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [224] if (d <= float(1.2196757793426514)) {
[2760.200][d][vo/gpu-next/libplacebo] [225] cc = vec2(_a005 * c[0]);
[2760.200][d][vo/gpu-next/libplacebo] [226] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [227] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [228] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [229] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [230] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [231] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [232] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [233] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [234] ar0 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [235] wwsum0 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [236] cc = vec2(_a005 * c[1]);
[2760.200][d][vo/gpu-next/libplacebo] [237] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [238] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [239] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [240] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [241] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [242] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [243] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [244] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [245] ar1 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [246] wwsum1 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [247] cc = vec2(_a005 * c[2]);
[2760.200][d][vo/gpu-next/libplacebo] [248] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [249] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [250] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [251] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [252] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [253] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [254] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [255] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [256] ar2 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [257] wwsum2 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [258] }
[2760.200][d][vo/gpu-next/libplacebo] [259] idx = _a00d * rel.y + rel.x + _a00d * 2 + 4; 
[2760.200][d][vo/gpu-next/libplacebo] [260] offset = ivec2(1, -1);
[2760.200][d][vo/gpu-next/libplacebo] [261] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [262] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [263] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [264] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [265] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [266] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [267] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [268] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [269] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [270] if (d <= float(1.2196757793426514)) {
[2760.200][d][vo/gpu-next/libplacebo] [271] cc = vec2(_a005 * c[0]);
[2760.200][d][vo/gpu-next/libplacebo] [272] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [273] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [274] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [275] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [276] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [277] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [278] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [279] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [280] ar0 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [281] wwsum0 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [282] cc = vec2(_a005 * c[1]);
[2760.200][d][vo/gpu-next/libplacebo] [283] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [284] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [285] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [286] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [287] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [288] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [289] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [290] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [291] ar1 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [292] wwsum1 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [293] cc = vec2(_a005 * c[2]);
[2760.200][d][vo/gpu-next/libplacebo] [294] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [295] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [296] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [297] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [298] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [299] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [300] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [301] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [302] ar2 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [303] wwsum2 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [304] }
[2760.200][d][vo/gpu-next/libplacebo] [305] idx = _a00d * rel.y + rel.x + _a00d * 2 + 5; 
[2760.200][d][vo/gpu-next/libplacebo] [306] offset = ivec2(2, -1);
[2760.200][d][vo/gpu-next/libplacebo] [307] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [308] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [309] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [310] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [311] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [312] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [313] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [314] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [315] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [316] idx = _a00d * rel.y + rel.x + _a00d * 2 + 6; 
[2760.200][d][vo/gpu-next/libplacebo] [317] offset = ivec2(3, -1);
[2760.200][d][vo/gpu-next/libplacebo] [318] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [319] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [320] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [321] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [322] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [323] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [324] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [325] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [326] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [327] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [328] }
[2760.200][d][vo/gpu-next/libplacebo] [329] idx = _a00d * rel.y + rel.x + _a00d * 2 + 7; 
[2760.200][d][vo/gpu-next/libplacebo] [330] idx = _a00d * rel.y + rel.x + _a00d * 3 + 0; 
[2760.200][d][vo/gpu-next/libplacebo] [331] offset = ivec2(-3, 0);
[2760.200][d][vo/gpu-next/libplacebo] [332] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [333] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [334] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [335] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [336] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [337] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [338] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [339] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [340] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [341] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [342] }
[2760.200][d][vo/gpu-next/libplacebo] [343] idx = _a00d * rel.y + rel.x + _a00d * 3 + 1; 
[2760.200][d][vo/gpu-next/libplacebo] [344] offset = ivec2(-2, 0);
[2760.200][d][vo/gpu-next/libplacebo] [345] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [346] if (d < _a00b) {
[2760.200][d][vo/gpu-next/libplacebo] [347] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [348] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [349] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [350] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [351] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [352] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [353] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [354] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [355] }
[2760.200][d][vo/gpu-next/libplacebo] [356] idx = _a00d * rel.y + rel.x + _a00d * 3 + 2; 
[2760.200][d][vo/gpu-next/libplacebo] [357] offset = ivec2(-1, 0);
[2760.200][d][vo/gpu-next/libplacebo] [358] d = length(vec2(offset) - fcoord);
[2760.200][d][vo/gpu-next/libplacebo] [359] w = _a006(d * 1.0 / _a00b);
[2760.200][d][vo/gpu-next/libplacebo] [360] wsum += w;
[2760.200][d][vo/gpu-next/libplacebo] [361] c[0] = _a00c_0[idx];
[2760.200][d][vo/gpu-next/libplacebo] [362] c[1] = _a00c_1[idx];
[2760.200][d][vo/gpu-next/libplacebo] [363] c[2] = _a00c_2[idx];
[2760.200][d][vo/gpu-next/libplacebo] [364] color[0] += w * c[0];
[2760.200][d][vo/gpu-next/libplacebo] [365] color[1] += w * c[1];
[2760.200][d][vo/gpu-next/libplacebo] [366] color[2] += w * c[2];
[2760.200][d][vo/gpu-next/libplacebo] [367] if (d <= float(1.2196757793426514)) {
[2760.200][d][vo/gpu-next/libplacebo] [368] cc = vec2(_a005 * c[0]);
[2760.200][d][vo/gpu-next/libplacebo] [369] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [370] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [371] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [372] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [373] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [374] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [375] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [376] ww = w * ww;
[2760.200][d][vo/gpu-next/libplacebo] [377] ar0 += ww * cc;
[2760.200][d][vo/gpu-next/libplacebo] [378] wwsum0 += ww;
[2760.200][d][vo/gpu-next/libplacebo] [379] cc = vec2(_a005 * c[1]);
[2760.200][d][vo/gpu-next/libplacebo] [380] cc.x = 1.0 - cc.x;
[2760.200][d][vo/gpu-next/libplacebo] [381] ww = cc + vec2(0.10);
[2760.200][d][vo/gpu-next/libplacebo] [382] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [383] ww = ww * ww;
[2760.200][d][vo/gpu-next/libplacebo] [384] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [385] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [386] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [387] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [388] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [389] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [390] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [391] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [392] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [393] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [394] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [395] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [396] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [397] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [398] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [399] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [400] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [401] }
[2760.201][d][vo/gpu-next/libplacebo] [402] idx = _a00d * rel.y + rel.x + _a00d * 3 + 3; 
[2760.201][d][vo/gpu-next/libplacebo] [403] offset = ivec2(0, 0);
[2760.201][d][vo/gpu-next/libplacebo] [404] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [405] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [406] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [407] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [408] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [409] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [410] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [411] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [412] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [413] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [414] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [415] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [416] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [417] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [418] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [419] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [420] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [421] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [422] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [423] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [424] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [425] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [426] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [427] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [428] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [429] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [430] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [431] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [432] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [433] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [434] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [435] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [436] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [437] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [438] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [439] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [440] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [441] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [442] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [443] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [444] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [445] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [446] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [447] }
[2760.201][d][vo/gpu-next/libplacebo] [448] idx = _a00d * rel.y + rel.x + _a00d * 3 + 4; 
[2760.201][d][vo/gpu-next/libplacebo] [449] offset = ivec2(1, 0);
[2760.201][d][vo/gpu-next/libplacebo] [450] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [451] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [452] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [453] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [454] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [455] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [456] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [457] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [458] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [459] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [460] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [461] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [462] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [463] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [464] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [465] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [466] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [467] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [468] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [469] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [470] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [471] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [472] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [473] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [474] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [475] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [476] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [477] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [478] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [479] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [480] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [481] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [482] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [483] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [484] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [485] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [486] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [487] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [488] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [489] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [490] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [491] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [492] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [493] }
[2760.201][d][vo/gpu-next/libplacebo] [494] idx = _a00d * rel.y + rel.x + _a00d * 3 + 5; 
[2760.201][d][vo/gpu-next/libplacebo] [495] offset = ivec2(2, 0);
[2760.201][d][vo/gpu-next/libplacebo] [496] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [497] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [498] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [499] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [500] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [501] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [502] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [503] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [504] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [505] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [506] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [507] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [508] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [509] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [510] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [511] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [512] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [513] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [514] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [515] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [516] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [517] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [518] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [519] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [520] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [521] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [522] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [523] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [524] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [525] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [526] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [527] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [528] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [529] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [530] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [531] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [532] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [533] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [534] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [535] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [536] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [537] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [538] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [539] }
[2760.201][d][vo/gpu-next/libplacebo] [540] idx = _a00d * rel.y + rel.x + _a00d * 3 + 6; 
[2760.201][d][vo/gpu-next/libplacebo] [541] offset = ivec2(3, 0);
[2760.201][d][vo/gpu-next/libplacebo] [542] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [543] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [544] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [545] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [546] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [547] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [548] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [549] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [550] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [551] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [552] }
[2760.201][d][vo/gpu-next/libplacebo] [553] idx = _a00d * rel.y + rel.x + _a00d * 3 + 7; 
[2760.201][d][vo/gpu-next/libplacebo] [554] offset = ivec2(4, 0);
[2760.201][d][vo/gpu-next/libplacebo] [555] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [556] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [557] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [558] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [559] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [560] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [561] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [562] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [563] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [564] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [565] }
[2760.201][d][vo/gpu-next/libplacebo] [566] idx = _a00d * rel.y + rel.x + _a00d * 4 + 0; 
[2760.201][d][vo/gpu-next/libplacebo] [567] offset = ivec2(-3, 1);
[2760.201][d][vo/gpu-next/libplacebo] [568] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [569] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [570] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [571] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [572] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [573] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [574] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [575] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [576] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [577] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [578] }
[2760.201][d][vo/gpu-next/libplacebo] [579] idx = _a00d * rel.y + rel.x + _a00d * 4 + 1; 
[2760.201][d][vo/gpu-next/libplacebo] [580] offset = ivec2(-2, 1);
[2760.201][d][vo/gpu-next/libplacebo] [581] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [582] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [583] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [584] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [585] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [586] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [587] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [588] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [589] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [590] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [591] }
[2760.201][d][vo/gpu-next/libplacebo] [592] idx = _a00d * rel.y + rel.x + _a00d * 4 + 2; 
[2760.201][d][vo/gpu-next/libplacebo] [593] offset = ivec2(-1, 1);
[2760.201][d][vo/gpu-next/libplacebo] [594] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [595] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [596] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [597] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [598] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [599] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [600] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [601] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [602] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [603] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [604] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [605] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [606] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [607] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [608] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [609] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [610] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [611] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [612] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [613] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [614] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [615] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [616] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [617] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [618] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [619] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [620] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [621] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [622] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [623] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [624] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [625] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [626] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [627] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [628] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [629] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [630] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [631] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [632] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [633] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [634] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [635] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [636] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [637] }
[2760.201][d][vo/gpu-next/libplacebo] [638] idx = _a00d * rel.y + rel.x + _a00d * 4 + 3; 
[2760.201][d][vo/gpu-next/libplacebo] [639] offset = ivec2(0, 1);
[2760.201][d][vo/gpu-next/libplacebo] [640] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [641] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [642] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [643] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [644] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [645] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [646] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [647] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [648] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [649] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [650] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [651] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [652] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [653] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [654] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [655] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [656] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [657] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [658] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [659] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [660] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [661] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [662] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [663] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [664] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [665] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [666] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [667] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [668] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [669] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [670] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [671] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [672] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [673] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [674] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [675] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [676] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [677] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [678] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [679] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [680] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [681] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [682] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [683] }
[2760.201][d][vo/gpu-next/libplacebo] [684] idx = _a00d * rel.y + rel.x + _a00d * 4 + 4; 
[2760.201][d][vo/gpu-next/libplacebo] [685] offset = ivec2(1, 1);
[2760.201][d][vo/gpu-next/libplacebo] [686] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [687] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [688] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [689] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [690] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [691] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [692] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [693] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [694] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [695] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [696] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [697] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [698] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [699] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [700] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [701] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [702] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [703] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [704] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [705] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [706] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [707] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [708] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [709] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [710] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [711] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [712] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [713] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [714] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [715] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [716] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [717] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [718] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [719] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [720] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [721] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [722] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [723] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [724] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [725] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [726] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [727] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [728] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [729] }
[2760.201][d][vo/gpu-next/libplacebo] [730] idx = _a00d * rel.y + rel.x + _a00d * 4 + 5; 
[2760.201][d][vo/gpu-next/libplacebo] [731] offset = ivec2(2, 1);
[2760.201][d][vo/gpu-next/libplacebo] [732] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [733] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [734] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [735] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [736] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [737] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [738] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [739] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [740] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [741] if (d <= float(1.2196757793426514)) {
[2760.201][d][vo/gpu-next/libplacebo] [742] cc = vec2(_a005 * c[0]);
[2760.201][d][vo/gpu-next/libplacebo] [743] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [744] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [745] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [746] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [747] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [748] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [749] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [750] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [751] ar0 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [752] wwsum0 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [753] cc = vec2(_a005 * c[1]);
[2760.201][d][vo/gpu-next/libplacebo] [754] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [755] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [756] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [757] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [758] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [759] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [760] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [761] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [762] ar1 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [763] wwsum1 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [764] cc = vec2(_a005 * c[2]);
[2760.201][d][vo/gpu-next/libplacebo] [765] cc.x = 1.0 - cc.x;
[2760.201][d][vo/gpu-next/libplacebo] [766] ww = cc + vec2(0.10);
[2760.201][d][vo/gpu-next/libplacebo] [767] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [768] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [769] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [770] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [771] ww = ww * ww;
[2760.201][d][vo/gpu-next/libplacebo] [772] ww = w * ww;
[2760.201][d][vo/gpu-next/libplacebo] [773] ar2 += ww * cc;
[2760.201][d][vo/gpu-next/libplacebo] [774] wwsum2 += ww;
[2760.201][d][vo/gpu-next/libplacebo] [775] }
[2760.201][d][vo/gpu-next/libplacebo] [776] idx = _a00d * rel.y + rel.x + _a00d * 4 + 6; 
[2760.201][d][vo/gpu-next/libplacebo] [777] offset = ivec2(3, 1);
[2760.201][d][vo/gpu-next/libplacebo] [778] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [779] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [780] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [781] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [782] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [783] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [784] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [785] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [786] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [787] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [788] }
[2760.201][d][vo/gpu-next/libplacebo] [789] idx = _a00d * rel.y + rel.x + _a00d * 4 + 7; 
[2760.201][d][vo/gpu-next/libplacebo] [790] offset = ivec2(4, 1);
[2760.201][d][vo/gpu-next/libplacebo] [791] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [792] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [793] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [794] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [795] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [796] c[1] = _a00c_1[idx];
[2760.201][d][vo/gpu-next/libplacebo] [797] c[2] = _a00c_2[idx];
[2760.201][d][vo/gpu-next/libplacebo] [798] color[0] += w * c[0];
[2760.201][d][vo/gpu-next/libplacebo] [799] color[1] += w * c[1];
[2760.201][d][vo/gpu-next/libplacebo] [800] color[2] += w * c[2];
[2760.201][d][vo/gpu-next/libplacebo] [801] }
[2760.201][d][vo/gpu-next/libplacebo] [802] idx = _a00d * rel.y + rel.x + _a00d * 5 + 0; 
[2760.201][d][vo/gpu-next/libplacebo] [803] idx = _a00d * rel.y + rel.x + _a00d * 5 + 1; 
[2760.201][d][vo/gpu-next/libplacebo] [804] offset = ivec2(-2, 2);
[2760.201][d][vo/gpu-next/libplacebo] [805] d = length(vec2(offset) - fcoord);
[2760.201][d][vo/gpu-next/libplacebo] [806] if (d < _a00b) {
[2760.201][d][vo/gpu-next/libplacebo] [807] w = _a006(d * 1.0 / _a00b);
[2760.201][d][vo/gpu-next/libplacebo] [808] wsum += w;
[2760.201][d][vo/gpu-next/libplacebo] [809] c[0] = _a00c_0[idx];
[2760.201][d][vo/gpu-next/libplacebo] [810] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [811] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [812] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [813] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [814] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [815] }
[2760.202][d][vo/gpu-next/libplacebo] [816] idx = _a00d * rel.y + rel.x + _a00d * 5 + 2; 
[2760.202][d][vo/gpu-next/libplacebo] [817] offset = ivec2(-1, 2);
[2760.202][d][vo/gpu-next/libplacebo] [818] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [819] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [820] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [821] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [822] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [823] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [824] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [825] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [826] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [827] idx = _a00d * rel.y + rel.x + _a00d * 5 + 3; 
[2760.202][d][vo/gpu-next/libplacebo] [828] offset = ivec2(0, 2);
[2760.202][d][vo/gpu-next/libplacebo] [829] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [830] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [831] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [832] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [833] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [834] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [835] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [836] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [837] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [838] if (d <= float(1.2196757793426514)) {
[2760.202][d][vo/gpu-next/libplacebo] [839] cc = vec2(_a005 * c[0]);
[2760.202][d][vo/gpu-next/libplacebo] [840] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [841] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [842] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [843] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [844] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [845] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [846] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [847] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [848] ar0 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [849] wwsum0 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [850] cc = vec2(_a005 * c[1]);
[2760.202][d][vo/gpu-next/libplacebo] [851] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [852] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [853] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [854] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [855] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [856] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [857] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [858] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [859] ar1 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [860] wwsum1 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [861] cc = vec2(_a005 * c[2]);
[2760.202][d][vo/gpu-next/libplacebo] [862] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [863] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [864] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [865] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [866] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [867] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [868] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [869] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [870] ar2 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [871] wwsum2 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [872] }
[2760.202][d][vo/gpu-next/libplacebo] [873] idx = _a00d * rel.y + rel.x + _a00d * 5 + 4; 
[2760.202][d][vo/gpu-next/libplacebo] [874] offset = ivec2(1, 2);
[2760.202][d][vo/gpu-next/libplacebo] [875] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [876] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [877] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [878] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [879] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [880] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [881] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [882] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [883] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [884] if (d <= float(1.2196757793426514)) {
[2760.202][d][vo/gpu-next/libplacebo] [885] cc = vec2(_a005 * c[0]);
[2760.202][d][vo/gpu-next/libplacebo] [886] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [887] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [888] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [889] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [890] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [891] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [892] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [893] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [894] ar0 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [895] wwsum0 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [896] cc = vec2(_a005 * c[1]);
[2760.202][d][vo/gpu-next/libplacebo] [897] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [898] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [899] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [900] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [901] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [902] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [903] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [904] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [905] ar1 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [906] wwsum1 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [907] cc = vec2(_a005 * c[2]);
[2760.202][d][vo/gpu-next/libplacebo] [908] cc.x = 1.0 - cc.x;
[2760.202][d][vo/gpu-next/libplacebo] [909] ww = cc + vec2(0.10);
[2760.202][d][vo/gpu-next/libplacebo] [910] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [911] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [912] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [913] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [914] ww = ww * ww;
[2760.202][d][vo/gpu-next/libplacebo] [915] ww = w * ww;
[2760.202][d][vo/gpu-next/libplacebo] [916] ar2 += ww * cc;
[2760.202][d][vo/gpu-next/libplacebo] [917] wwsum2 += ww;
[2760.202][d][vo/gpu-next/libplacebo] [918] }
[2760.202][d][vo/gpu-next/libplacebo] [919] idx = _a00d * rel.y + rel.x + _a00d * 5 + 5; 
[2760.202][d][vo/gpu-next/libplacebo] [920] offset = ivec2(2, 2);
[2760.202][d][vo/gpu-next/libplacebo] [921] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [922] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [923] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [924] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [925] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [926] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [927] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [928] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [929] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [930] idx = _a00d * rel.y + rel.x + _a00d * 5 + 6; 
[2760.202][d][vo/gpu-next/libplacebo] [931] offset = ivec2(3, 2);
[2760.202][d][vo/gpu-next/libplacebo] [932] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [933] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [934] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [935] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [936] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [937] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [938] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [939] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [940] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [941] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [942] }
[2760.202][d][vo/gpu-next/libplacebo] [943] idx = _a00d * rel.y + rel.x + _a00d * 5 + 7; 
[2760.202][d][vo/gpu-next/libplacebo] [944] idx = _a00d * rel.y + rel.x + _a00d * 6 + 0; 
[2760.202][d][vo/gpu-next/libplacebo] [945] idx = _a00d * rel.y + rel.x + _a00d * 6 + 1; 
[2760.202][d][vo/gpu-next/libplacebo] [946] offset = ivec2(-2, 3);
[2760.202][d][vo/gpu-next/libplacebo] [947] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [948] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [949] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [950] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [951] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [952] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [953] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [954] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [955] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [956] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [957] }
[2760.202][d][vo/gpu-next/libplacebo] [958] idx = _a00d * rel.y + rel.x + _a00d * 6 + 2; 
[2760.202][d][vo/gpu-next/libplacebo] [959] offset = ivec2(-1, 3);
[2760.202][d][vo/gpu-next/libplacebo] [960] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [961] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [962] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [963] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [964] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [965] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [966] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [967] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [968] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [969] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [970] }
[2760.202][d][vo/gpu-next/libplacebo] [971] idx = _a00d * rel.y + rel.x + _a00d * 6 + 3; 
[2760.202][d][vo/gpu-next/libplacebo] [972] offset = ivec2(0, 3);
[2760.202][d][vo/gpu-next/libplacebo] [973] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [974] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [975] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [976] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [977] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [978] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [979] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [980] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [981] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [982] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [983] }
[2760.202][d][vo/gpu-next/libplacebo] [984] idx = _a00d * rel.y + rel.x + _a00d * 6 + 4; 
[2760.202][d][vo/gpu-next/libplacebo] [985] offset = ivec2(1, 3);
[2760.202][d][vo/gpu-next/libplacebo] [986] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [987] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [988] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [989] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [990] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [991] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [992] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [993] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [994] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [995] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [996] }
[2760.202][d][vo/gpu-next/libplacebo] [997] idx = _a00d * rel.y + rel.x + _a00d * 6 + 5; 
[2760.202][d][vo/gpu-next/libplacebo] [998] offset = ivec2(2, 3);
[2760.202][d][vo/gpu-next/libplacebo] [999] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [1000] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [1001] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [1002] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [1003] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1004] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1005] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1006] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [1007] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [1008] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [1009] }
[2760.202][d][vo/gpu-next/libplacebo] [1010] idx = _a00d * rel.y + rel.x + _a00d * 6 + 6; 
[2760.202][d][vo/gpu-next/libplacebo] [1011] offset = ivec2(3, 3);
[2760.202][d][vo/gpu-next/libplacebo] [1012] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [1013] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [1014] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [1015] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [1016] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1017] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1018] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1019] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [1020] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [1021] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [1022] }
[2760.202][d][vo/gpu-next/libplacebo] [1023] idx = _a00d * rel.y + rel.x + _a00d * 6 + 7; 
[2760.202][d][vo/gpu-next/libplacebo] [1024] idx = _a00d * rel.y + rel.x + _a00d * 7 + 0; 
[2760.202][d][vo/gpu-next/libplacebo] [1025] idx = _a00d * rel.y + rel.x + _a00d * 7 + 1; 
[2760.202][d][vo/gpu-next/libplacebo] [1026] idx = _a00d * rel.y + rel.x + _a00d * 7 + 2; 
[2760.202][d][vo/gpu-next/libplacebo] [1027] idx = _a00d * rel.y + rel.x + _a00d * 7 + 3; 
[2760.202][d][vo/gpu-next/libplacebo] [1028] offset = ivec2(0, 4);
[2760.202][d][vo/gpu-next/libplacebo] [1029] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [1030] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [1031] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [1032] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [1033] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1034] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1035] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1036] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [1037] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [1038] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [1039] }
[2760.202][d][vo/gpu-next/libplacebo] [1040] idx = _a00d * rel.y + rel.x + _a00d * 7 + 4; 
[2760.202][d][vo/gpu-next/libplacebo] [1041] offset = ivec2(1, 4);
[2760.202][d][vo/gpu-next/libplacebo] [1042] d = length(vec2(offset) - fcoord);
[2760.202][d][vo/gpu-next/libplacebo] [1043] if (d < _a00b) {
[2760.202][d][vo/gpu-next/libplacebo] [1044] w = _a006(d * 1.0 / _a00b);
[2760.202][d][vo/gpu-next/libplacebo] [1045] wsum += w;
[2760.202][d][vo/gpu-next/libplacebo] [1046] c[0] = _a00c_0[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1047] c[1] = _a00c_1[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1048] c[2] = _a00c_2[idx];
[2760.202][d][vo/gpu-next/libplacebo] [1049] color[0] += w * c[0];
[2760.202][d][vo/gpu-next/libplacebo] [1050] color[1] += w * c[1];
[2760.202][d][vo/gpu-next/libplacebo] [1051] color[2] += w * c[2];
[2760.202][d][vo/gpu-next/libplacebo] [1052] }
[2760.202][d][vo/gpu-next/libplacebo] [1053] idx = _a00d * rel.y + rel.x + _a00d * 7 + 5; 
[2760.202][d][vo/gpu-next/libplacebo] [1054] idx = _a00d * rel.y + rel.x + _a00d * 7 + 6; 
[2760.202][d][vo/gpu-next/libplacebo] [1055] idx = _a00d * rel.y + rel.x + _a00d * 7 + 7; 
[2760.202][d][vo/gpu-next/libplacebo] [1056] color = _a005 / wsum * color;
[2760.202][d][vo/gpu-next/libplacebo] [1057] ww = ar0 / wwsum0;
[2760.202][d][vo/gpu-next/libplacebo] [1058] ww.x = 1.0 - ww.x;
[2760.202][d][vo/gpu-next/libplacebo] [1059] w = clamp(color[0], ww.x, ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1060] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1061] color[0] = mix(color[0], w, _a00f);
[2760.202][d][vo/gpu-next/libplacebo] [1062] ww = ar1 / wwsum1;
[2760.202][d][vo/gpu-next/libplacebo] [1063] ww.x = 1.0 - ww.x;
[2760.202][d][vo/gpu-next/libplacebo] [1064] w = clamp(color[1], ww.x, ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1065] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1066] color[1] = mix(color[1], w, _a00f);
[2760.202][d][vo/gpu-next/libplacebo] [1067] ww = ar2 / wwsum2;
[2760.202][d][vo/gpu-next/libplacebo] [1068] ww.x = 1.0 - ww.x;
[2760.202][d][vo/gpu-next/libplacebo] [1069] w = clamp(color[2], ww.x, ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1070] w = mix(w, dot(ww, vec2(0.5)), ww.x > ww.y);
[2760.202][d][vo/gpu-next/libplacebo] [1071] color[2] = mix(color[2], w, _a00f);
[2760.202][d][vo/gpu-next/libplacebo] [1072] color.a = 1.0;
[2760.202][d][vo/gpu-next/libplacebo] [1073] }
[2760.202][d][vo/gpu-next/libplacebo] [1074] ivec2 dir = ivec2(1, 1);
[2760.202][d][vo/gpu-next/libplacebo] [1075] ivec2 pos = _a016 + dir * ivec2(gl_GlobalInvocationID).xy;
[2760.202][d][vo/gpu-next/libplacebo] [1076] vec2 fpos = _a010 * vec2(gl_GlobalInvocationID);
[2760.202][d][vo/gpu-next/libplacebo] [1077] if (fpos.x < 1.0 && fpos.y < 1.0) {
[2760.202][d][vo/gpu-next/libplacebo] [1078] imageStore(_a015, pos, color);
[2760.202][d][vo/gpu-next/libplacebo] [1079] }
[2760.202][d][vo/gpu-next/libplacebo] [1080] 
[2760.202][d][vo/gpu-next/libplacebo] [1081] }
[2760.202][d][vo/gpu-next/libplacebo] [1082] 
[2760.202][d][vo/gpu-next/libplacebo] [1083] void main() {
[2760.202][d][vo/gpu-next/libplacebo] [1084] _a001();
[2760.202][d][vo/gpu-next/libplacebo] [1085] }
[2760.202][d][vo/gpu-next/libplacebo] Specialization constant values:
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=1: 0.001953
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=2: 0.996094
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=3: 3.042598
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=4: 37
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=5: 37
[2760.202][d][vo/gpu-next/libplacebo]   constant_id=6: 0.500000
[2760.202][d][vo/gpu-next] cache_load_obj: key(71685addfb641423), size(46972), load time(0.305 ms)
[2760.202][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x71685addfb641423
[2760.203][d][vo/gpu-next/libplacebo] Spent 0.061 ms compiling shader
[2760.203][d][vo/gpu-next] cache_save_obj: key(71685addfb641423), size(46972)
[2760.203][d][vo/gpu-next/libplacebo] Spent 0.034 ms creating pipeline
[2760.203][d][vo/gpu-next] cache_save_obj: key(3df59493a68a196c), size(72744)
[2760.203][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[2760.206][d][vo/gpu-next] cache_load_obj: key(49a835be9a19a3e), size(3145728), load time(3.100 ms)
[2760.206][d][vo/gpu-next/libplacebo] Re-using cached LUT (0x49a835be9a19a3e) with size 3145728
[2760.206][d][vo/gpu-next/libplacebo] Allocating 12582912 memory of type 0x1 (id 1) in heap 0: ../src/utils/upload.c:245
[2760.207][d][vo/gpu-next/libplacebo] Spent 0.578 ms allocating slab
[2760.207][d][vo/gpu-next/libplacebo] Allocating 12582912 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2760.207][d][vo/gpu-next/libplacebo] Spent 0.389 ms allocating slab
[2760.208][d][vo/gpu-next] cache_save_obj: key(49a835be9a19a3e), size(3145728)
[2760.208][d][vo/gpu-next/libplacebo] vertex shader source:
[2760.208][d][vo/gpu-next/libplacebo] [  1] #version 450
[2760.208][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[2760.208][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[2760.208][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _7;
[2760.208][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _8;
[2760.208][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=96) mat3 _9;
[2760.208][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=144) mat3 _17;
[2760.208][d][vo/gpu-next/libplacebo] [ 15] };
[2760.208][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=0) const float _4 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=1) const float _5 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=2) const float _6 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=3) const float _d = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=4) const float _e = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=5) const float _10 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=6) const float _11 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=7) const float _13 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=8) const float _14 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=9) const float _15 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=10) const float _16 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=11) const float _18 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=12) const float _19 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 29] layout(binding=0) uniform  sampler2D _2;
[2760.208][d][vo/gpu-next/libplacebo] [ 30] layout(binding=1) uniform  sampler3D _b;
[2760.208][d][vo/gpu-next/libplacebo] [ 31] layout(location=0) in vec2 _1c;
[2760.208][d][vo/gpu-next/libplacebo] [ 32] layout(location=0) out vec2 _3;
[2760.208][d][vo/gpu-next/libplacebo] [ 33] layout(location=1) in vec2 _1d;
[2760.208][d][vo/gpu-next/libplacebo] [ 34] void main() {
[2760.208][d][vo/gpu-next/libplacebo] [ 35] _3 = _1c;
[2760.208][d][vo/gpu-next/libplacebo] [ 36] vec2 va_pos = _1d; 
[2760.208][d][vo/gpu-next/libplacebo] [ 37] gl_Position = vec4(va_pos, 0.0, 1.0); 
[2760.208][d][vo/gpu-next/libplacebo] [ 38] }
[2760.208][d][vo/gpu-next/libplacebo] fragment shader source:
[2760.208][d][vo/gpu-next/libplacebo] [  1] #version 450
[2760.208][d][vo/gpu-next/libplacebo] [  2] #extension GL_KHR_shader_subgroup_basic : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  3] #extension GL_KHR_shader_subgroup_vote : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  4] #extension GL_KHR_shader_subgroup_arithmetic : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  5] #extension GL_KHR_shader_subgroup_ballot : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  6] #extension GL_KHR_shader_subgroup_shuffle : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  7] #extension GL_KHR_shader_subgroup_clustered : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  8] #extension GL_KHR_shader_subgroup_quad : enable 
[2760.208][d][vo/gpu-next/libplacebo] [  9] #extension GL_ARB_texture_gather : enable
[2760.208][d][vo/gpu-next/libplacebo] [ 10] layout(std430, push_constant) uniform PushC {
[2760.208][d][vo/gpu-next/libplacebo] [ 11]     layout(offset=0) mat3 _7;
[2760.208][d][vo/gpu-next/libplacebo] [ 12]     layout(offset=48) mat3 _8;
[2760.208][d][vo/gpu-next/libplacebo] [ 13]     layout(offset=96) mat3 _9;
[2760.208][d][vo/gpu-next/libplacebo] [ 14]     layout(offset=144) mat3 _17;
[2760.208][d][vo/gpu-next/libplacebo] [ 15] };
[2760.208][d][vo/gpu-next/libplacebo] [ 16] layout(constant_id=0) const float _4 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 17] layout(constant_id=1) const float _5 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 18] layout(constant_id=2) const float _6 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 19] layout(constant_id=3) const float _d = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 20] layout(constant_id=4) const float _e = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 21] layout(constant_id=5) const float _10 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 22] layout(constant_id=6) const float _11 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 23] layout(constant_id=7) const float _13 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 24] layout(constant_id=8) const float _14 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 25] layout(constant_id=9) const float _15 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 26] layout(constant_id=10) const float _16 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 27] layout(constant_id=11) const float _18 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 28] layout(constant_id=12) const float _19 = 1; 
[2760.208][d][vo/gpu-next/libplacebo] [ 29] layout(binding=0) uniform  sampler2D _2;
[2760.208][d][vo/gpu-next/libplacebo] [ 30] layout(binding=1) uniform  sampler3D _b;
[2760.208][d][vo/gpu-next/libplacebo] [ 31] layout(location=0) in vec2 _3;
[2760.208][d][vo/gpu-next/libplacebo] [ 32] layout(location=0) out vec4 out_color;
[2760.208][d][vo/gpu-next/libplacebo] [ 33] 
[2760.208][d][vo/gpu-next/libplacebo] [ 34] #define _c(x) (_e * (x) + _d) 
[2760.208][d][vo/gpu-next/libplacebo] [ 35] #define _f(x) (_11 * (x) + _10) 
[2760.208][d][vo/gpu-next/libplacebo] [ 36] #define _12(x) (_14 * (x) + _13) 
[2760.208][d][vo/gpu-next/libplacebo] [ 37] #define _a(pos) (textureLod(_b, vec3(\
[2760.208][d][vo/gpu-next/libplacebo] [ 38]     _c(vec3(pos).x)\
[2760.208][d][vo/gpu-next/libplacebo] [ 39]    ,_f(vec3(pos).y)\
[2760.208][d][vo/gpu-next/libplacebo] [ 40]    ,_12(vec3(pos).z)\
[2760.208][d][vo/gpu-next/libplacebo] [ 41]   ), 0.0).xyzw)
[2760.208][d][vo/gpu-next/libplacebo] [ 42] vec4 _1() {
[2760.208][d][vo/gpu-next/libplacebo] [ 43] // pl_shader_sample_direct                            
[2760.208][d][vo/gpu-next/libplacebo] [ 44] vec4 color = vec4(_4) * textureLod(_2, _3, 0.0);   
[2760.208][d][vo/gpu-next/libplacebo] [ 45] // pl_shader_color_map 
[2760.208][d][vo/gpu-next/libplacebo] [ 46] {                      
[2760.208][d][vo/gpu-next/libplacebo] [ 47] // pl_shader_linearize           
[2760.208][d][vo/gpu-next/libplacebo] [ 48] color.rgb = max(color.rgb, 0.0); 
[2760.208][d][vo/gpu-next/libplacebo] [ 49] color.rgb = _6 * pow(color.rgb + vec3(_5), vec3(2.4)); 
[2760.208][d][vo/gpu-next/libplacebo] [ 50] vec3 lms = _9 * color.rgb;               
[2760.208][d][vo/gpu-next/libplacebo] [ 51] vec3 lmspq = 0.0203000009059906 * lms;                    
[2760.208][d][vo/gpu-next/libplacebo] [ 52] lmspq = pow(max(lmspq, 0.0), vec3(0.1593017578125));   
[2760.208][d][vo/gpu-next/libplacebo] [ 53] lmspq = (vec3(0.8359375) + 18.8515625 * lmspq)           
[2760.208][d][vo/gpu-next/libplacebo] [ 54]         / (vec3(1.0) + 18.6875 * lmspq);       
[2760.208][d][vo/gpu-next/libplacebo] [ 55] lmspq = pow(lmspq, vec3(78.84375));             
[2760.208][d][vo/gpu-next/libplacebo] [ 56] vec3 ipt = _7 * lmspq;                   
[2760.208][d][vo/gpu-next/libplacebo] [ 57] float i_orig = ipt.x;                     
[2760.208][d][vo/gpu-next/libplacebo] [ 58] vec3 idx;                             
[2760.208][d][vo/gpu-next/libplacebo] [ 59] idx.x = _16 * ipt.x + _15;            
[2760.208][d][vo/gpu-next/libplacebo] [ 60] idx.y = 2.0 * length(ipt.yz);         
[2760.208][d][vo/gpu-next/libplacebo] [ 61] idx.z = 0.15915494309189535 * atan(ipt.z, ipt.y) + 0.5;
[2760.208][d][vo/gpu-next/libplacebo] [ 62] ipt = _a(idx).xyz;                   
[2760.208][d][vo/gpu-next/libplacebo] [ 63] ipt.yz -= vec2(32768.0/65535.0);      
[2760.208][d][vo/gpu-next/libplacebo] [ 64] lmspq = _8 * ipt;                        
[2760.208][d][vo/gpu-next/libplacebo] [ 65] lms = pow(max(lmspq, 0.0), vec3(1.0/78.84375)); 
[2760.208][d][vo/gpu-next/libplacebo] [ 66] lms = max(lms - vec3(0.8359375), 0.0)            
[2760.208][d][vo/gpu-next/libplacebo] [ 67]              / (vec3(18.8515625) - 18.6875 * lms);     
[2760.208][d][vo/gpu-next/libplacebo] [ 68] lms = pow(lms, vec3(1.0/0.1593017578125));             
[2760.208][d][vo/gpu-next/libplacebo] [ 69] lms *= 49.261085510253906;                                
[2760.208][d][vo/gpu-next/libplacebo] [ 70] color.rgb = _17 * lms;                    
[2760.208][d][vo/gpu-next/libplacebo] [ 71] // pl_shader_delinearize 
[2760.208][d][vo/gpu-next/libplacebo] [ 72] color.rgb = _19 * color.rgb + vec3(_18); 
[2760.208][d][vo/gpu-next/libplacebo] [ 73] color.rgb = max(color.rgb, 0.0); 
[2760.208][d][vo/gpu-next/libplacebo] [ 74] color.rgb = pow(color.rgb, vec3(1.0/2.2));
[2760.208][d][vo/gpu-next/libplacebo] [ 75] }
[2760.208][d][vo/gpu-next/libplacebo] [ 76] return color;
[2760.208][d][vo/gpu-next/libplacebo] [ 77] }
[2760.208][d][vo/gpu-next/libplacebo] [ 78] 
[2760.208][d][vo/gpu-next/libplacebo] [ 79] void main() {
[2760.208][d][vo/gpu-next/libplacebo] [ 80] out_color = _1();
[2760.208][d][vo/gpu-next/libplacebo] [ 81] }
[2760.208][d][vo/gpu-next/libplacebo] Specialization constant values:
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=0: 1.000000
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=1: 0.059585
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=2: 0.870311
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=3: 0.010417
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=4: 0.979167
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=5: 0.015625
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=6: 0.968750
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=7: 0.001953
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=8: 0.996094
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=9: -0.167538
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=10: 2.010604
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=11: -0.001001
[2760.208][d][vo/gpu-next/libplacebo]   constant_id=12: 1.001001
[2760.208][d][vo/gpu-next] cache_load_obj: key(38d6447791846570), size(748), load time(0.042 ms)
[2760.208][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x38d6447791846570
[2760.208][d][vo/gpu-next] cache_load_obj: key(4231784181fbf976), size(4496), load time(0.130 ms)
[2760.208][d][vo/gpu-next/libplacebo] Re-using cached SPIR-V object 0x4231784181fbf976
[2760.209][d][vo/gpu-next] cache_load_obj: key(c5692d397248a7b2), size(17839), load time(0.135 ms)
[2760.209][d][vo/gpu-next/libplacebo] Spent 0.010 ms compiling shader
[2760.209][d][vo/gpu-next] cache_save_obj: key(38d6447791846570), size(748)
[2760.209][d][vo/gpu-next] cache_save_obj: key(4231784181fbf976), size(4496)
[2760.209][d][vo/gpu-next/libplacebo] Spent 0.237 ms creating pipeline
[2760.209][d][vo/gpu-next] cache_save_obj: key(c5692d397248a7b2), size(17839)
[2760.209][d][vo/gpu-next/libplacebo] Pass statistics: size 0, SPIR-V: vert 0 frag 0 comp 0
[2760.221][v][auto_profiles] Re-evaluating auto profile media-title
[2760.221][v][auto_profiles] Re-evaluating auto profile video-sync
[2760.221][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="vformats", args="0"]
[2760.221][v][cplayer] Running hook: auto_profiles/on_load
[2760.221][d][cplayer] Run command: script-message-to, flags=64, args=[target="uosc", args="set", args="aformats", args="0"]
[2760.221][v][cplayer] Running hook: quality_menu/on_load
[2760.221][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4"]
[2760.221][v][cplayer] Running hook: ytdl_hook/on_load
[2760.221][v][cplayer] Running hook: ytdl_hook/on_load
[2760.221][v][ytdl_hook] playlist hook
[2760.221][v][cplayer] Running hook: fuzzydir/on_load
[2760.221][d][fuzzydir] max_search_depth = 1, discovery_threshold = 10
[2760.221][d][fuzzydir] search_path = /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/
[2760.221][d][fuzzydir] audio-file-paths: audio;audios;**
[2760.221][d][fuzzydir] Adding to audio-file-paths: audio;audios;**
[2760.221][v][cplayer] Set property: options/audio-file-paths=["audio;audios;**"] -> 1
[2760.221][v][fuzzydir] Done expanding audio-file-paths
[2760.221][d][fuzzydir] sub-file-paths: **
[2760.222][d][fuzzydir] Adding to sub-file-paths: Subs
[2760.222][v][cplayer] Set property: options/sub-file-paths=["Subs"] -> 1
[2760.222][v][fuzzydir] Done expanding sub-file-paths
[2760.222][d][fuzzydir] Done expanding paths
[2760.222][v][cplayer] Using prefetched/prefetching URL.
[2760.222][v][find_files] Loading external files in /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/
[2760.222][v][find_files] Loading external files in /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs
[2760.222][d][global] config path: 'sub' -/-> '/home/zen/.config/mpv/sub'
[2760.222][d][global] config path: 'sub' -/-> '/home/zen/.mpv/sub'
[2760.222][d][global] config path: 'sub' -/-> '/etc/mpv/sub'
[2760.222][d][global] config path: 'audio' -/-> '/home/zen/.config/mpv/audio'
[2760.222][d][global] config path: 'audio' -/-> '/home/zen/.mpv/audio'
[2760.222][d][global] config path: 'audio' -/-> '/etc/mpv/audio'
[2760.222][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].srt
[2760.222][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].srt
[2760.222][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].srt
[2760.222][d][file] resize stream to 131072 bytes, drop 0 bytes
[2760.222][d][file] Stream opened successfully.
[2760.222][v][demux] Trying demuxers for level=normal.
[2760.222][d][demux] Trying demuxer: directory (force-level: normal)
[2760.224][i][simplehistory] Added the below into history
[2760.224][i][simplehistory] Kagi no Kakatta Heya.ep08.480p.x264-[D-Addicts].mp4 üïí00:00:00.000
[2760.235][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[2760.236][d][ffmpeg] AVIOContext: Statistics: 1611569 bytes read, 2 seeks
[2760.266][d][demux] Trying demuxer: disc (force-level: normal)
[2760.266][d][demux] Trying demuxer: edl (force-level: normal)
[2760.266][d][demux] Trying demuxer: cue (force-level: normal)
[2760.266][d][demux] Trying demuxer: rawaudio (force-level: normal)
[2760.266][d][demux] Trying demuxer: rawvideo (force-level: normal)
[2760.266][d][demux] Trying demuxer: mkv (force-level: normal)
[2760.266][d][demux] Trying demuxer: libarchive (force-level: normal)
[2760.266][d][demux] Trying demuxer: lavf (force-level: normal)
[2760.267][v][lavf] Found 'srt' at score=100 size=2048.
[2760.267][v][lavf] Data has a BOM, assuming utf-8 as charset.
[2760.268][v][lavf] avformat_find_stream_info() finished after 57485 bytes.
[2760.268][v][lavf] demuxer read all data; closing stream
[2760.268][v][demux] Detected file format: srt (libavformat)
[2760.269][v][ifo_dvdnav] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].jp.srt
[2760.269][v][bdmv/bluray] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].jp.srt
[2760.269][v][file] Opening /run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Subs/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].jp.srt
[2760.269][d][file] resize stream to 131072 bytes, drop 0 bytes
[2760.269][d][file] Stream opened successfully.
[2760.269][v][demux] Trying demuxers for level=normal.
[2760.269][d][demux] Trying demuxer: directory (force-level: normal)
[2760.269][d][demux] Trying demuxer: disc (force-level: normal)
[2760.270][d][demux] Trying demuxer: edl (force-level: normal)
[2760.270][d][demux] Trying demuxer: cue (force-level: normal)
[2760.270][d][demux] Trying demuxer: rawaudio (force-level: normal)
[2760.270][d][demux] Trying demuxer: rawvideo (force-level: normal)
[2760.270][d][demux] Trying demuxer: mkv (force-level: normal)
[2760.270][d][demux] Trying demuxer: libarchive (force-level: normal)
[2760.270][d][demux] Trying demuxer: lavf (force-level: normal)
[2760.270][v][lavf] Found 'srt' at score=100 size=2048.
[2760.270][v][lavf] Data has a BOM, assuming utf-8 as charset.
[2760.272][v][lavf] avformat_find_stream_info() finished after 68447 bytes.
[2760.272][v][lavf] demuxer read all data; closing stream
[2760.272][v][demux] Detected file format: srt (libavformat)
[2760.272][v][cplayer] Running hook: auto_profiles/on_preloaded
[2760.272][v][cplayer] Running hook: ytdl_hook/on_preloaded
[2760.272][v][cplayer] Running hook: chapter_make_read/on_preloaded
[2760.272][v][lavf] select track 0
[2760.272][v][lavf] refresh track 0 (sub)
[2760.272][v][lavf] refresh seek to -10.000000
[2760.272][i][cplayer]  ‚óè Video  --vid=1              (h264 848x480 29.97 fps) [default]
[2760.272][i][cplayer]  ‚óè Audio  --aid=1              (aac 2ch 48000 Hz 128 kbps) [default]
[2760.272][i][cplayer]  ‚óã Subs   --sid=1              'srt' (subrip) [external]
[2760.272][i][cplayer]  ‚óè Subs   --sid=2  --slang=jp  'jp.srt' (subrip) [external]
[2760.273][v][vd] Container reported FPS: 29.970030
[2760.273][v][vd] Codec list:
[2760.273][v][vd]     h264 - H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
[2760.273][v][vd]     h264_v4l2m2m (h264) - V4L2 mem2mem H.264 decoder wrapper
[2760.273][v][vd]     h264_qsv (h264) - H264 video (Intel Quick Sync Video acceleration)
[2760.273][v][vd]     h264_cuvid (h264) - Nvidia CUVID H264 decoder
[2760.273][v][vd] Opening decoder h264
[2760.273][v][vd] No hardware decoding requested.
[2760.273][v][vd] Using software decoding.
[2760.273][v][vd] Detected 8 logical cores.
[2760.273][v][vd] Requesting 9 threads for decoding.
[2760.274][v][vd] Selected decoder: h264 - H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10
[2760.274][v][vf] User filter list:
[2760.274][v][vf]   (empty)
[2760.275][v][ad] Codec list:
[2760.275][v][ad]     aac - AAC (Advanced Audio Coding)
[2760.275][v][ad]     aac_fixed (aac) - AAC (Advanced Audio Coding)
[2760.275][v][ad] Opening decoder aac
[2760.275][v][ad] Requesting 1 threads for decoding.
[2760.275][v][ad] Selected decoder: aac - AAC (Advanced Audio Coding)
[2760.275][v][af] User filter list:
[2760.275][v][af]   (empty)
[2760.275][d][global] config path: 'fonts' -> '/home/zen/.config/mpv/fonts'
[2760.275][d][sub/ass] ASS library version: 0x1703000 (runtime 0x1703000)
[2760.275][v][sub/ass] libass API version: 0x1703000
[2760.275][v][sub/ass] libass source: commit: 0.17.3-0-ge46aedea0a0d17da4c4ef49d84b94a7994664ab5
[2760.276][v][sub/ass] Shaper: FriBidi 1.0.15 (SIMPLE) HarfBuzz-ng 11.0.0 (COMPLEX)
[2760.276][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.config/mpv/subfont.ttf'
[2760.276][d][global] config path: 'subfont.ttf' -/-> '/home/zen/.mpv/subfont.ttf'
[2760.276][d][global] config path: 'subfont.ttf' -/-> '/etc/mpv/subfont.ttf'
[2760.276][d][global] config path: 'fonts.conf' -/-> '/home/zen/.config/mpv/fonts.conf'
[2760.276][d][global] config path: 'fonts.conf' -/-> '/home/zen/.mpv/fonts.conf'
[2760.276][d][global] config path: 'fonts.conf' -/-> '/etc/mpv/fonts.conf'
[2760.276][v][sub/ass] Setting up fonts...
[2760.276][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/modernx-osc-icon.ttf'
[2760.276][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/MaterialIconsRound-Regular.otf'
[2760.276][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/Material-Design-Iconic-Font.ttf'
[2760.276][v][sub/ass] Loading font file '/home/zen/.config/mpv/fonts/uosc_textures.ttf'
[2760.280][v][sub/ass] Using font provider fontconfig
[2760.280][v][sub/ass] Done.
[2760.280][v][cplayer] Starting playback...
[2760.281][v][af] [in] 48000Hz stereo 2ch floatp
[2760.281][v][af] [userspeed] 48000Hz stereo 2ch floatp
[2760.281][v][af] [userspeed] (disabled)
[2760.281][v][af] [convert] 48000Hz stereo 2ch floatp
[2760.281][d][ffmpeg/video] h264: Reinit context to 848x480, pix_fmt: yuv420p
[2760.281][d][vd] DR parameter change to 848x482 yuv420p align=64
[2760.281][d][vd] Allocating new (host-cached) DR image...
[2760.281][d][vd] Allocating new (host-cached) DR image...
[2760.281][d][vd] Allocating new (host-cached) DR image...
[2760.282][d][vd] Allocating new (host-cached) DR image...
[2760.282][d][vd] Allocating new (host-cached) DR image...
[2760.282][d][vd] Allocating new (host-cached) DR image...
[2760.282][d][vd] Allocating new (host-cached) DR image...
[2760.283][d][vd] Allocating new (host-cached) DR image...
[2760.283][d][vd] Allocating new (host-cached) DR image...
[2760.283][d][vd] Allocating new (host-cached) DR image...
[2760.283][v][vd] Using software decoding.
[2760.283][d][vd] Allocating new (host-cached) DR image...
[2760.283][v][vd] Decoder format: 848x480 yuv420p auto/auto/auto/auto/auto CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][vf] [in] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][vf] [userdeint] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][vf] [userdeint] (disabled)
[2760.283][v][vf] [autorotate] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][vf] [autorotate] (disabled)
[2760.283][v][vf] [convert] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][vf] [convert] (disabled)
[2760.283][v][vf] [out] 848x480 yuv420p bt.601/bt.601-525/bt.1886/limited/display CL=mpeg2/4/h264 crop=848x480+0+0
[2760.283][v][lavf] queuing seek to -0.000000 (cascade)
[2760.283][v][lavf] execute seek (to -0.000000 flags 0)
[2760.283][v][lavf] seek done
[2760.285][v][lavf] EOF reached.
[2760.285][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 2789.620167
[2760.285][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[2760.285][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[2760.325][v][thumbfast] Subprocess failed: killed
[2760.326][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.326][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.326][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[2760.326][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[2760.327][d][vo/gpu-next/libplacebo] Spent 0.169 ms allocating slab
[2760.340][v][auto_profiles] Re-evaluating auto profile maximized
[2760.340][v][auto_profiles] Re-evaluating auto profile pgs-fix
[2760.340][v][auto_profiles] Re-evaluating auto profile 8k-fix
[2760.340][v][auto_profiles] Re-evaluating auto profile SDR-Gamut
[2760.340][i][auto_profiles] Applying auto profile: SDR-Gamut
[2760.341][v][cplayer] Set property: user-data/smartcopypaste/menu-open="no" -> 1
[2760.341][v][cplayer] Set property: user-data/simplebookmark/menu-open="no" -> 1
[2760.341][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4"]
[2760.341][d][cplayer] Run command: apply-profile, flags=64, args=[name="SDR-Gamut", mode="apply"]
[2760.341][v][cplayer] Applying profile 'SDR-Gamut'...
[2760.341][v][cplayer] Setting option 'gamut-mapping-mode' = 'clip' (flags = 4)
[2760.341][v][auto_profiles] Re-evaluating auto profile Deband
[2760.341][i][auto_profiles] Applying auto profile: Deband
[2760.341][v][cplayer] Set property: user-data/simplehistory/menu-open="no" -> 1
[2760.341][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4"]
[2760.341][d][cplayer] Run command: apply-profile, flags=64, args=[name="Deband", mode="apply"]
[2760.341][v][cplayer] Applying profile 'Deband'...
[2760.341][v][cplayer] Setting option 'deband' = 'yes' (flags = 4)
[2760.341][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4"]
[2760.341][d][cplayer] Run command: normalize-path, flags=64, args=[filename="/run/media/zen/HGST/torrent/temp/Kagi no Kakatta Heya (2012)/Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4"]
[2760.341][d][cplayer] Run command: overlay-remove, flags=64, args=[id="42"]
[2760.341][d][cplayer] Run command: script-message, flags=64, args=[args="thumbfast-info", args="{\"thumbnail\":\"/tmp/thumbfast.out11061\",\"width\":200,\"overlay_id\":42,\"height\":113,\"disabled\":false,\"available\":true,\"socket\":\"/tmp/thumbfast11061\"}"]
[2760.341][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplebookmark", contents="", flags="default"]
[2760.341][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.341][d][cplayer] Run command: define-section, flags=64, args=[name="input_smartcopypaste_II", contents="", flags="default"]
[2760.341][d][cplayer] Run command: enable-section, flags=64, args=[name="input_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.341][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_smartcopypaste_II", contents="", flags="force"]
[2760.341][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_smartcopypaste_II", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.341][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplebookmark", contents="", flags="force"]
[2760.342][d][cplayer] Run command: script-message, flags=64, args=[args="thumbfast-info", args="{\"thumbnail\":\"/tmp/thumbfast.out11061\",\"width\":200,\"overlay_id\":42,\"height\":113,\"disabled\":false,\"available\":true,\"socket\":\"/tmp/thumbfast11061\"}"]
[2760.342][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplebookmark", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.342][d][vo/gpu-next] Render options updated, resetting render state.
[2760.342][v][ao] Trying audio driver 'alsa'
[2760.342][v][ao/alsa] requested format: 48000 Hz, stereo channels, floatp
[2760.342][v][ao/alsa] using ALSA version: 1.2.13
[2760.342][v][ao/alsa] opening device 'default'
[2760.344][d][ao/alsa] PCM setup:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ALSA <-> PipeWire PCM I/O Plugin
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] Start HW params:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ACCESS:  MMAP_INTERLEAVED MMAP_NONINTERLEAVED RW_INTERLEAVED RW_NONINTERLEAVED
[2760.344][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[2760.344][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.344][d][ao/alsa] SAMPLE_BITS: [8 32]
[2760.344][d][ao/alsa] FRAME_BITS: [8 2048]
[2760.344][d][ao/alsa] CHANNELS: [1 64]
[2760.344][d][ao/alsa] RATE: [1 384000]
[2760.344][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[2760.344][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[2760.344][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.344][d][ao/alsa] PERIODS: [2 1024]
[2760.344][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[2760.344][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[2760.344][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.344][d][ao/alsa] TICK_TIME: ALL
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] HW params after rate:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ACCESS:  MMAP_INTERLEAVED MMAP_NONINTERLEAVED RW_INTERLEAVED RW_NONINTERLEAVED
[2760.344][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[2760.344][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.344][d][ao/alsa] SAMPLE_BITS: [8 32]
[2760.344][d][ao/alsa] FRAME_BITS: [8 2048]
[2760.344][d][ao/alsa] CHANNELS: [1 64]
[2760.344][d][ao/alsa] RATE: [1 384000]
[2760.344][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[2760.344][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[2760.344][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.344][d][ao/alsa] PERIODS: [2 1024]
[2760.344][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[2760.344][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[2760.344][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.344][d][ao/alsa] TICK_TIME: ALL
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] HW params after access:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.344][d][ao/alsa] FORMAT:  U8 S16_LE S24_LE S32_LE FLOAT_LE S24_3LE S24_3BE
[2760.344][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.344][d][ao/alsa] SAMPLE_BITS: [8 32]
[2760.344][d][ao/alsa] FRAME_BITS: [8 2048]
[2760.344][d][ao/alsa] CHANNELS: [1 64]
[2760.344][d][ao/alsa] RATE: [1 384000]
[2760.344][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[2760.344][d][ao/alsa] PERIOD_SIZE: (0 2097152]
[2760.344][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.344][d][ao/alsa] PERIODS: [2 1024]
[2760.344][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[2760.344][d][ao/alsa] BUFFER_SIZE: [1 4194304]
[2760.344][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.344][d][ao/alsa] TICK_TIME: ALL
[2760.344][d][ao/alsa] ---
[2760.344][v][ao/alsa] trying format float/14
[2760.344][d][ao/alsa] HW params after format:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.344][d][ao/alsa] FORMAT:  FLOAT_LE
[2760.344][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.344][d][ao/alsa] SAMPLE_BITS: 32
[2760.344][d][ao/alsa] FRAME_BITS: [32 2048]
[2760.344][d][ao/alsa] CHANNELS: [1 64]
[2760.344][d][ao/alsa] RATE: [1 384000]
[2760.344][d][ao/alsa] PERIOD_TIME: (0 4294967295)
[2760.344][d][ao/alsa] PERIOD_SIZE: (0 524288]
[2760.344][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.344][d][ao/alsa] PERIODS: [2 1024]
[2760.344][d][ao/alsa] BUFFER_TIME: (2 4294967295]
[2760.344][d][ao/alsa] BUFFER_SIZE: [1 1048576]
[2760.344][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.344][d][ao/alsa] TICK_TIME: ALL
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] HW params after channels:
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.344][d][ao/alsa] FORMAT:  FLOAT_LE
[2760.344][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.344][d][ao/alsa] SAMPLE_BITS: 32
[2760.344][d][ao/alsa] FRAME_BITS: 64
[2760.344][d][ao/alsa] CHANNELS: 2
[2760.344][d][ao/alsa] RATE: [1 384000]
[2760.344][d][ao/alsa] PERIOD_TIME: (41 4294967295)
[2760.344][d][ao/alsa] PERIOD_SIZE: [16 262144]
[2760.344][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.344][d][ao/alsa] PERIODS: [2 1024]
[2760.344][d][ao/alsa] BUFFER_TIME: (83 4294967295]
[2760.344][d][ao/alsa] BUFFER_SIZE: [32 524288]
[2760.344][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.344][d][ao/alsa] TICK_TIME: ALL
[2760.344][d][ao/alsa] ---
[2760.344][d][ao/alsa] HW params after rate-2:
[2760.345][d][ao/alsa] ---
[2760.345][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.345][d][ao/alsa] FORMAT:  FLOAT_LE
[2760.345][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.345][d][ao/alsa] SAMPLE_BITS: 32
[2760.345][d][ao/alsa] FRAME_BITS: 64
[2760.345][d][ao/alsa] CHANNELS: 2
[2760.345][d][ao/alsa] RATE: 48000
[2760.345][d][ao/alsa] PERIOD_TIME: (333 5461334)
[2760.345][d][ao/alsa] PERIOD_SIZE: [16 262144]
[2760.345][d][ao/alsa] PERIOD_BYTES: [128 2097152]
[2760.345][d][ao/alsa] PERIODS: [2 1024]
[2760.345][d][ao/alsa] BUFFER_TIME: (666 10922667)
[2760.345][d][ao/alsa] BUFFER_SIZE: [32 524288]
[2760.345][d][ao/alsa] BUFFER_BYTES: [256 4194304]
[2760.345][d][ao/alsa] TICK_TIME: ALL
[2760.345][d][ao/alsa] ---
[2760.345][d][ao/alsa] Going to set final HW params:
[2760.345][d][ao/alsa] ---
[2760.345][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.345][d][ao/alsa] FORMAT:  FLOAT_LE
[2760.345][d][ao/alsa] SUBFORMAT:  STD MSBITS_MAX MSBITS_20 MSBITS_24
[2760.345][d][ao/alsa] SAMPLE_BITS: 32
[2760.345][d][ao/alsa] FRAME_BITS: 64
[2760.345][d][ao/alsa] CHANNELS: 2
[2760.345][d][ao/alsa] RATE: 48000
[2760.345][d][ao/alsa] PERIOD_TIME: 25000
[2760.345][d][ao/alsa] PERIOD_SIZE: 1200
[2760.345][d][ao/alsa] PERIOD_BYTES: 9600
[2760.345][d][ao/alsa] PERIODS: 4
[2760.345][d][ao/alsa] BUFFER_TIME: 100000
[2760.345][d][ao/alsa] BUFFER_SIZE: 4800
[2760.345][d][ao/alsa] BUFFER_BYTES: 38400
[2760.345][d][ao/alsa] TICK_TIME: ALL
[2760.345][d][ao/alsa] ---
[2760.346][i][simplehistory] Added the below into history
[2760.346][i][simplehistory] Kagi no Kakatta Heya.ep09.480p.x264-[D-Addicts].mp4 üïí00:00:00.000
[2760.351][d][ao/alsa] Final HW params:
[2760.351][d][ao/alsa] ---
[2760.351][d][ao/alsa] ACCESS:  RW_INTERLEAVED
[2760.351][d][ao/alsa] FORMAT:  FLOAT_LE
[2760.351][d][ao/alsa] SUBFORMAT:  STD
[2760.351][d][ao/alsa] SAMPLE_BITS: 32
[2760.351][d][ao/alsa] FRAME_BITS: 64
[2760.351][d][ao/alsa] CHANNELS: 2
[2760.351][d][ao/alsa] RATE: 48000
[2760.351][d][ao/alsa] PERIOD_TIME: 25000
[2760.351][d][ao/alsa] PERIOD_SIZE: 1200
[2760.351][d][ao/alsa] PERIOD_BYTES: 9600
[2760.351][d][ao/alsa] PERIODS: 4
[2760.351][d][ao/alsa] BUFFER_TIME: 100000
[2760.351][d][ao/alsa] BUFFER_SIZE: 4800
[2760.351][d][ao/alsa] BUFFER_BYTES: 38400
[2760.351][d][ao/alsa] TICK_TIME: [0 0]
[2760.351][d][ao/alsa] ---
[2760.351][v][ao/alsa] channel map reported by ALSA: FL FR
[2760.351][v][ao/alsa] which we understand as: stereo
[2760.351][v][ao/alsa] which is what we requested.
[2760.351][v][ao/alsa] hw pausing supported: yes
[2760.351][v][ao/alsa] buffersize: 4800 samples
[2760.351][v][ao/alsa] period size: 1200 samples
[2760.351][v][ao/alsa] device buffer: 4800 samples.
[2760.351][v][ao/alsa] using soft-buffer of 9600 samples.
[2760.351][i][cplayer] AO: [alsa] 48000Hz stereo 2ch float
[2760.351][v][cplayer] AO: Description: ALSA audio output
[2760.351][v][autoconvert] inserting resampler
[2760.351][v][swresample] format change, reinitializing resampler
[2760.351][v][swresample] 48000Hz stereo floatp -> 48000Hz stereo float
[2760.351][v][af] [out] 48000Hz stereo 2ch float
[2760.351][d][vd] Allocating new (host-cached) DR image...
[2760.351][d][vo/gpu-next/libplacebo] First frame received with non-zero PTS 0.066733
[2760.351][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[2760.351][d][vo/gpu-next/libplacebo] Freeing slab of size   16M
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.352][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[2760.352][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[2760.352][d][vo/gpu-next/libplacebo] Spent 0.108 ms allocating slab
[2760.353][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[2760.353][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[2760.353][d][vo/gpu-next/libplacebo] Spent 0.116 ms allocating slab
[2760.354][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2760.354][d][vo/gpu-next/libplacebo] Spent 0.140 ms allocating slab
[2760.378][v][cplayer] first video frame after restart shown
[2760.379][v][auto_profiles] Re-evaluating auto profile fps-fix
[2760.379][v][auto_profiles] Re-evaluating auto profile video-sync
[2760.379][d][cplayer] Run command: define-section, flags=64, args=[name="input_simplehistory", contents="", flags="default"]
[2760.379][d][cplayer] Run command: enable-section, flags=64, args=[name="input_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.379][d][cplayer] Run command: define-section, flags=64, args=[name="input_forced_simplehistory", contents="", flags="force"]
[2760.379][d][cplayer] Run command: enable-section, flags=64, args=[name="input_forced_simplehistory", flags="allow-hide-cursor+allow-vo-dragging"]
[2760.379][v][cplayer] audio ready
[2760.379][d][cplayer] starting video playback
[2760.379][v][cplayer] starting audio playback
[2760.379][v][ao/alsa] starting AO
[2760.379][v][cplayer] playback restart complete @ 0.066733, audio=playing, video=playing
[2760.379][d][vd] Allocating new (host-cached) DR image...
[2760.379][v][cplayer] Change display sync audio drift: -1
[2760.380][v][auto_profiles] Re-evaluating auto profile video-sync
[2760.380][d][vd] Allocating new (host-cached) DR image...
[2760.389][v][vo/gpu-next/wayland] Enabling idle inhibitor
[2760.390][d][vo/gpu-next/libplacebo] Allocating 393216 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2760.390][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[2760.402][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[2760.402][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.402][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.424][v][cplayer] Change display sync audio drift: 0
[2760.425][v][auto_profiles] Re-evaluating auto profile video-sync
[2760.430][d][vd] Allocating new (host-cached) DR image...
[2760.521][v][cplayer] Change display sync audio drift: 1
[2760.522][v][auto_profiles] Re-evaluating auto profile video-sync
[2760.534][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 499.500
[2760.539][d][vo/gpu-next/libplacebo] Garbage collected slab of size   12M from pool 3
[2760.539][d][vo/gpu-next/libplacebo] Freeing slab of size   12M
[2760.577][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2760.577][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2760.590][v][vo/gpu-next/libplacebo] Estimated source FPS: 29.970, display FPS: 99.900
[2760.619][v][auto_profiles] Re-evaluating auto profile fps-fix
[2760.682][d][vo/gpu-next/libplacebo] (Re)creating 1908x1080x0 texture with format rgba16hf: src/renderer.c:3491
[2760.682][d][vo/gpu-next/libplacebo] Allocating 17620992 memory of type 0x1 (id 1) in heap 0: src/renderer.c:3491
[2760.683][d][vo/gpu-next/libplacebo] Spent 0.513 ms allocating slab
[2760.702][d][vo/gpu-next/libplacebo] (Re)creating 848x480x0 texture with format r8: ../src/utils/upload.c:245
[2760.702][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.702][d][vo/gpu-next/libplacebo] (Re)creating 424x240x0 texture with format r8: ../src/utils/upload.c:245
[2760.770][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.024][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.170][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.351][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.432][v][auto_profiles] Re-evaluating auto profile fps-fix
[2761.526][v][auto_profiles] Re-evaluating auto profile fps-fix
[2761.526][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.607][v][auto_profiles] Re-evaluating auto profile fps-fix
[2761.623][d][vo/gpu-next/libplacebo] Garbage collected slab of size  384K from pool 3
[2761.623][d][vo/gpu-next/libplacebo] Freeing slab of size  384K
[2761.647][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.702][v][auto_profiles] Re-evaluating auto profile fps-fix
[2761.736][v][auto_profiles] Re-evaluating auto profile video-sync
[2761.827][v][auto_profiles] Re-evaluating auto profile fps-fix
[2761.862][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.015][v][auto_profiles] Re-evaluating auto profile fps-fix
[2762.055][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.174][v][auto_profiles] Re-evaluating auto profile fps-fix
[2762.268][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.413][v][auto_profiles] Re-evaluating auto profile fps-fix
[2762.596][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.701][v][auto_profiles] Re-evaluating auto profile fps-fix
[2762.701][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.793][v][auto_profiles] Re-evaluating auto profile video-sync
[2762.927][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.066][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.163][v][auto_profiles] Re-evaluating auto profile fps-fix
[2763.179][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.304][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.453][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.632][v][auto_profiles] Re-evaluating auto profile video-sync
[2763.741][v][auto_profiles] Re-evaluating auto profile fps-fix
[2767.993][v][cplayer] Change display sync audio drift: 0
[2767.993][v][cplayer] Compensation factor: 0.999477
[2767.993][v][auto_profiles] Re-evaluating auto profile video-sync
[2768.074][v][cplayer] Change display sync audio drift: 1
[2768.074][v][auto_profiles] Re-evaluating auto profile video-sync
[2772.746][v][sub/ass] fontselect: (Noto Sans CJK JP Thin, 400, 0) -> /usr/share/fonts/noto-cjk/NotoSansCJK-Thin.ttc, 0, NotoSansCJKjp-Thin
[2772.748][d][vo/gpu-next/libplacebo] Allocating 761856 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2772.749][d][vo/gpu-next/libplacebo] Spent 0.235 ms allocating slab
[2774.700][v][cplayer] Change display sync audio drift: 0
[2774.700][v][cplayer] Compensation factor: 0.998732
[2774.736][v][cplayer] Change display sync audio drift: 1
[2777.897][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2777.897][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[2778.057][d][vo/gpu-next/libplacebo] Garbage collected slab of size  744K from pool 3
[2778.057][d][vo/gpu-next/libplacebo] Freeing slab of size  744K
[2784.043][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[2784.043][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[2786.339][d][vo/gpu-next/libplacebo] Allocating 1253376 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2786.339][d][vo/gpu-next/libplacebo] Spent 0.225 ms allocating slab
[2787.063][v][cplayer] Change display sync audio drift: 0
[2787.063][v][cplayer] Compensation factor: 0.999615
[2787.064][v][auto_profiles] Re-evaluating auto profile video-sync
[2787.135][v][cplayer] Change display sync audio drift: 1
[2787.135][v][auto_profiles] Re-evaluating auto profile video-sync
[2789.132][v][cplayer] Change display sync audio drift: 0
[2789.132][v][cplayer] Compensation factor: 0.997502
[2789.195][v][cplayer] Change display sync audio drift: 1
[2794.523][v][cplayer] Change display sync audio drift: 0
[2794.523][v][cplayer] Compensation factor: 0.999239
[2794.523][v][auto_profiles] Re-evaluating auto profile video-sync
[2794.557][v][cplayer] Change display sync audio drift: 1
[2794.557][v][auto_profiles] Re-evaluating auto profile video-sync
[2801.149][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1224K from pool 3
[2801.149][d][vo/gpu-next/libplacebo] Freeing slab of size 1224K
[2801.206][d][vo/gpu-next/libplacebo] Allocating 983040 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2801.207][d][vo/gpu-next/libplacebo] Spent 0.695 ms allocating slab
[2803.411][v][cplayer] Change display sync audio drift: 0
[2803.411][v][cplayer] Compensation factor: 0.999618
[2803.411][v][auto_profiles] Re-evaluating auto profile video-sync
[2803.469][v][cplayer] Change display sync audio drift: 1
[2803.469][v][auto_profiles] Re-evaluating auto profile video-sync
[2806.873][d][vo/gpu-next/libplacebo] Garbage collected slab of size  960K from pool 3
[2806.873][d][vo/gpu-next/libplacebo] Freeing slab of size  960K
[2807.058][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2807.058][d][vo/gpu-next/libplacebo] Spent 0.351 ms allocating slab
[2808.211][v][cplayer] Change display sync audio drift: 0
[2808.211][v][cplayer] Compensation factor: 0.998012
[2808.245][v][cplayer] Change display sync audio drift: 1
[2810.077][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2810.077][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2813.463][v][cplayer] Change display sync audio drift: 0
[2813.463][v][cplayer] Compensation factor: 0.996323
[2813.484][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2813.485][d][vo/gpu-next/libplacebo] Spent 0.745 ms allocating slab
[2813.525][v][cplayer] Change display sync audio drift: 1
[2818.614][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2818.614][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2818.693][d][osd] Spent 5.549 ms in osd_render (slow!)
[2818.693][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2818.694][d][vo/gpu-next/libplacebo] Spent 0.671 ms allocating slab
[2820.058][d][auto_save_state] saving state
[2820.058][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2820.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.058][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.058][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.058][i][cplayer] Saving state.
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2820.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2829.097][d][vo/gpu-next/libplacebo] Allocating 1228800 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2829.098][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[2829.246][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[2829.246][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[2836.535][v][cplayer] Change display sync audio drift: 0
[2836.535][v][cplayer] Compensation factor: 0.998568
[2836.580][v][cplayer] Change display sync audio drift: 1
[2837.635][v][cplayer] Change display sync audio drift: 0
[2837.635][v][cplayer] Compensation factor: 0.997618
[2837.681][v][cplayer] Change display sync audio drift: 1
[2840.193][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1200K from pool 3
[2840.193][d][vo/gpu-next/libplacebo] Freeing slab of size 1200K
[2840.226][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2840.227][d][vo/gpu-next/libplacebo] Spent 0.675 ms allocating slab
[2842.024][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2842.024][d][vo/gpu-next/libplacebo] Spent 0.172 ms allocating slab
[2842.228][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2842.228][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2847.600][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2847.600][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2849.782][d][vo/gpu-next/libplacebo] Allocating 245760 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2849.782][d][vo/gpu-next/libplacebo] Spent 0.167 ms allocating slab
[2850.758][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2850.759][d][vo/gpu-next/libplacebo] Spent 0.698 ms allocating slab
[2850.964][d][vo/gpu-next/libplacebo] Garbage collected slab of size  240K from pool 3
[2850.964][d][vo/gpu-next/libplacebo] Freeing slab of size  240K
[2854.414][d][vo/gpu-next/libplacebo] (Re)creating 2046x352x0 texture with format r8: unknown
[2854.414][d][vo/gpu-next/libplacebo] Allocating 1449984 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2854.414][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[2854.414][d][vo/gpu-next/libplacebo] (Re)creating 2046x352x0 texture with format r8: unknown
[2854.505][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2854.505][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2857.300][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1416K from pool 3
[2857.300][d][vo/gpu-next/libplacebo] Freeing slab of size 1416K
[2857.529][d][vo/gpu-next/libplacebo] (Re)creating 2046x362x0 texture with format r8: unknown
[2857.529][d][vo/gpu-next/libplacebo] Allocating 1499136 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2857.529][d][vo/gpu-next/libplacebo] Spent 0.232 ms allocating slab
[2857.563][d][vo/gpu-next/libplacebo] (Re)creating 2046x362x0 texture with format r8: unknown
[2860.932][d][vo/gpu-next/libplacebo] Allocating 270336 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2860.932][d][vo/gpu-next/libplacebo] Spent 0.202 ms allocating slab
[2861.095][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1464K from pool 3
[2861.095][d][vo/gpu-next/libplacebo] Freeing slab of size 1464K
[2862.763][d][vo/gpu-next/libplacebo] Garbage collected slab of size  264K from pool 3
[2862.763][d][vo/gpu-next/libplacebo] Freeing slab of size  264K
[2863.187][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2863.187][d][vo/gpu-next/libplacebo] Spent 0.322 ms allocating slab
[2866.090][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[2866.090][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[2868.180][v][cplayer] Change display sync audio drift: 0
[2868.180][v][cplayer] Compensation factor: 0.998479
[2868.223][v][cplayer] Change display sync audio drift: 1
[2869.816][d][vo/gpu-next/libplacebo] Allocating 761856 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2869.816][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[2874.594][d][vo/gpu-next/libplacebo] Garbage collected slab of size  744K from pool 3
[2874.594][d][vo/gpu-next/libplacebo] Freeing slab of size  744K
[2875.351][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2875.352][d][vo/gpu-next/libplacebo] Spent 0.666 ms allocating slab
[2878.553][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2878.553][d][vo/gpu-next/libplacebo] Spent 0.651 ms allocating slab
[2878.622][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[2878.622][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[2880.059][d][auto_save_state] saving state
[2880.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2880.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.059][i][cplayer] Saving state.
[2880.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2880.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2888.116][v][cplayer] Change display sync audio drift: 0
[2888.116][v][cplayer] Compensation factor: 1.000761
[2888.116][v][auto_profiles] Re-evaluating auto profile video-sync
[2888.185][v][cplayer] Change display sync audio drift: 1
[2888.185][v][auto_profiles] Re-evaluating auto profile video-sync
[2888.995][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2888.995][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2889.098][v][cplayer] Change display sync audio drift: 0
[2889.098][v][cplayer] Compensation factor: 0.997263
[2889.155][v][cplayer] Change display sync audio drift: 1
[2894.172][d][vo/gpu-next/libplacebo] Allocating 466944 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2894.172][d][vo/gpu-next/libplacebo] Spent 0.697 ms allocating slab
[2896.976][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2896.976][d][vo/gpu-next/libplacebo] Spent 0.647 ms allocating slab
[2897.047][d][vo/gpu-next/libplacebo] Garbage collected slab of size  456K from pool 3
[2897.047][d][vo/gpu-next/libplacebo] Freeing slab of size  456K
[2900.728][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[2900.728][d][vo/gpu-next/libplacebo] Spent 0.343 ms allocating slab
[2900.967][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[2900.967][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[2903.059][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2903.059][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2903.639][d][vo/gpu-next/libplacebo] Allocating 270336 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2903.639][d][vo/gpu-next/libplacebo] Spent 0.660 ms allocating slab
[2912.957][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2912.958][d][vo/gpu-next/libplacebo] Spent 0.924 ms allocating slab
[2913.052][d][vo/gpu-next/libplacebo] Garbage collected slab of size  264K from pool 3
[2913.052][d][vo/gpu-next/libplacebo] Freeing slab of size  264K
[2916.854][d][vo/gpu-next/libplacebo] Allocating 983040 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2916.854][d][vo/gpu-next/libplacebo] Spent 0.715 ms allocating slab
[2917.078][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[2917.078][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[2920.994][d][vo/gpu-next/libplacebo] Allocating 1007616 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2920.995][d][vo/gpu-next/libplacebo] Spent 0.638 ms allocating slab
[2921.063][d][vo/gpu-next/libplacebo] Garbage collected slab of size  960K from pool 3
[2921.063][d][vo/gpu-next/libplacebo] Freeing slab of size  960K
[2924.485][v][cplayer] Change display sync audio drift: 0
[2924.485][v][cplayer] Compensation factor: 0.997458
[2924.537][v][cplayer] Change display sync audio drift: 1
[2929.048][v][cplayer] Change display sync audio drift: 0
[2929.048][v][cplayer] Compensation factor: 0.994800
[2929.088][v][cplayer] Change display sync audio drift: 1
[2930.676][d][vo/gpu-next/libplacebo] Garbage collected slab of size  984K from pool 3
[2930.676][d][vo/gpu-next/libplacebo] Freeing slab of size  984K
[2932.852][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2932.853][d][vo/gpu-next/libplacebo] Spent 0.658 ms allocating slab
[2937.065][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2937.065][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2940.059][d][auto_save_state] saving state
[2940.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[2940.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.059][i][cplayer] Saving state.
[2940.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[2940.765][d][vo/gpu-next/libplacebo] Allocating 270336 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2940.765][d][vo/gpu-next/libplacebo] Spent 0.668 ms allocating slab
[2942.064][d][vo/gpu-next/libplacebo] Garbage collected slab of size  264K from pool 3
[2942.064][d][vo/gpu-next/libplacebo] Freeing slab of size  264K
[2944.339][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2944.339][d][vo/gpu-next/libplacebo] Spent 0.682 ms allocating slab
[2947.408][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2947.409][d][vo/gpu-next/libplacebo] Spent 0.347 ms allocating slab
[2947.586][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[2947.586][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[2951.756][v][cplayer] Change display sync audio drift: 0
[2951.756][v][cplayer] Compensation factor: 0.999272
[2951.757][v][auto_profiles] Re-evaluating auto profile video-sync
[2951.861][v][cplayer] Change display sync audio drift: 1
[2951.862][v][auto_profiles] Re-evaluating auto profile video-sync
[2955.333][v][cplayer] Change display sync audio drift: 0
[2955.334][v][cplayer] Compensation factor: 0.996448
[2955.403][v][cplayer] Change display sync audio drift: 1
[2957.007][d][vo/gpu-next/libplacebo] Allocating 983040 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2957.007][d][vo/gpu-next/libplacebo] Spent 0.222 ms allocating slab
[2957.181][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2957.181][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2966.537][v][cplayer] Change display sync audio drift: 0
[2966.537][v][cplayer] Compensation factor: 1.000347
[2966.538][v][auto_profiles] Re-evaluating auto profile video-sync
[2966.581][v][cplayer] Change display sync audio drift: 1
[2966.582][v][auto_profiles] Re-evaluating auto profile video-sync
[2967.196][d][vo/gpu-next/libplacebo] Garbage collected slab of size  960K from pool 3
[2967.196][d][vo/gpu-next/libplacebo] Freeing slab of size  960K
[2968.457][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2968.458][d][vo/gpu-next/libplacebo] Spent 0.195 ms allocating slab
[2969.696][v][cplayer] Change display sync audio drift: 0
[2969.696][v][cplayer] Compensation factor: 0.998953
[2969.696][v][auto_profiles] Re-evaluating auto profile video-sync
[2969.782][v][cplayer] Change display sync audio drift: 1
[2969.782][v][auto_profiles] Re-evaluating auto profile video-sync
[2971.090][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[2971.090][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[2971.408][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2971.409][d][vo/gpu-next/libplacebo] Spent 0.369 ms allocating slab
[2974.277][d][vo/gpu-next/libplacebo] Allocating 774144 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2974.277][d][vo/gpu-next/libplacebo] Spent 0.257 ms allocating slab
[2974.416][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2974.416][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2980.023][v][cplayer] Change display sync audio drift: 0
[2980.023][v][cplayer] Compensation factor: 0.996555
[2980.070][v][cplayer] Change display sync audio drift: 1
[2980.128][d][vo/gpu-next/libplacebo] Garbage collected slab of size  756K from pool 3
[2980.128][d][vo/gpu-next/libplacebo] Freeing slab of size  756K
[2980.282][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2980.283][d][vo/gpu-next/libplacebo] Spent 0.652 ms allocating slab
[2982.207][v][cplayer] Change display sync audio drift: 0
[2982.207][v][cplayer] Compensation factor: 1.000887
[2982.207][v][auto_profiles] Re-evaluating auto profile video-sync
[2982.237][v][cplayer] Change display sync audio drift: 1
[2982.238][v][auto_profiles] Re-evaluating auto profile video-sync
[2983.177][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[2983.177][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[2983.320][d][vo/gpu-next/libplacebo] Allocating 724992 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2983.320][d][vo/gpu-next/libplacebo] Spent 0.200 ms allocating slab
[2987.191][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2987.191][d][vo/gpu-next/libplacebo] Spent 0.694 ms allocating slab
[2987.204][d][vo/gpu-next/libplacebo] Garbage collected slab of size  708K from pool 3
[2987.204][d][vo/gpu-next/libplacebo] Freeing slab of size  708K
[2991.334][v][cplayer] Change display sync audio drift: 0
[2991.334][v][cplayer] Compensation factor: 0.999947
[2991.334][v][auto_profiles] Re-evaluating auto profile video-sync
[2991.392][v][cplayer] Change display sync audio drift: 1
[2991.392][v][auto_profiles] Re-evaluating auto profile video-sync
[2991.572][v][cplayer] Change display sync audio drift: 0
[2991.572][v][cplayer] Compensation factor: 1.001239
[2991.573][v][auto_profiles] Re-evaluating auto profile video-sync
[2991.654][v][cplayer] Change display sync audio drift: 1
[2991.654][v][auto_profiles] Re-evaluating auto profile video-sync
[2993.528][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[2993.528][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[2996.683][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2996.684][d][vo/gpu-next/libplacebo] Spent 0.694 ms allocating slab
[2998.842][d][vo/gpu-next/libplacebo] Allocating 1449984 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[2998.842][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[2998.998][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[2998.998][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[3000.060][d][auto_save_state] saving state
[3000.060][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][i][cplayer] Saving state.
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3000.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3017.618][d][vo/gpu-next/libplacebo] Allocating 270336 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3017.619][d][vo/gpu-next/libplacebo] Spent 0.669 ms allocating slab
[3017.705][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1416K from pool 3
[3017.705][d][vo/gpu-next/libplacebo] Freeing slab of size 1416K
[3018.798][d][vo/gpu-next/libplacebo] Allocating 737280 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3018.799][d][vo/gpu-next/libplacebo] Spent 0.702 ms allocating slab
[3018.985][d][vo/gpu-next/libplacebo] Garbage collected slab of size  264K from pool 3
[3018.985][d][vo/gpu-next/libplacebo] Freeing slab of size  264K
[3022.153][d][vo/gpu-next/libplacebo] Garbage collected slab of size  720K from pool 3
[3022.153][d][vo/gpu-next/libplacebo] Freeing slab of size  720K
[3023.829][d][vo/gpu-next/libplacebo] Allocating 1204224 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3023.829][d][vo/gpu-next/libplacebo] Spent 0.658 ms allocating slab
[3028.237][d][osd] Spent 5.036 ms in osd_render (slow!)
[3033.737][d][vo/gpu-next/libplacebo] Allocating 1462272 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3033.738][d][vo/gpu-next/libplacebo] Spent 0.677 ms allocating slab
[3033.942][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1176K from pool 3
[3033.942][d][vo/gpu-next/libplacebo] Freeing slab of size 1176K
[3053.619][v][cplayer] Change display sync audio drift: 0
[3053.619][v][cplayer] Compensation factor: 0.998218
[3053.678][v][cplayer] Change display sync audio drift: 1
[3060.059][d][auto_save_state] saving state
[3060.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3060.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.059][i][cplayer] Saving state.
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3060.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3065.819][d][vo/gpu-next/libplacebo] Allocating 1511424 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3065.820][d][vo/gpu-next/libplacebo] Spent 0.715 ms allocating slab
[3066.001][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1428K from pool 3
[3066.001][d][vo/gpu-next/libplacebo] Freeing slab of size 1428K
[3072.039][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1476K from pool 3
[3072.039][d][vo/gpu-next/libplacebo] Freeing slab of size 1476K
[3072.080][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3072.080][d][vo/gpu-next/libplacebo] Spent 0.196 ms allocating slab
[3073.701][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3073.702][d][vo/gpu-next/libplacebo] Spent 0.231 ms allocating slab
[3073.855][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3073.855][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3082.711][v][cplayer] Change display sync audio drift: 0
[3082.711][v][cplayer] Compensation factor: 1.000001
[3082.711][v][auto_profiles] Re-evaluating auto profile video-sync
[3082.744][v][cplayer] Change display sync audio drift: 1
[3082.745][v][auto_profiles] Re-evaluating auto profile video-sync
[3085.270][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3085.270][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3085.335][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3085.335][d][vo/gpu-next/libplacebo] Spent 0.671 ms allocating slab
[3087.983][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3087.983][d][vo/gpu-next/libplacebo] Spent 0.201 ms allocating slab
[3088.121][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3088.121][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3090.922][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3090.923][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[3091.016][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3091.016][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3091.038][v][cplayer] Change display sync audio drift: 0
[3091.038][v][cplayer] Compensation factor: 0.994192
[3091.095][v][cplayer] Change display sync audio drift: 1
[3097.475][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3097.475][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3099.166][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3099.166][d][vo/gpu-next/libplacebo] Spent 0.401 ms allocating slab
[3101.230][v][cplayer] Change display sync audio drift: 0
[3101.230][v][cplayer] Compensation factor: 1.000763
[3101.231][v][auto_profiles] Re-evaluating auto profile video-sync
[3101.286][v][cplayer] Change display sync audio drift: 1
[3101.286][v][auto_profiles] Re-evaluating auto profile video-sync
[3101.676][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3101.676][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3101.990][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3101.990][d][vo/gpu-next/libplacebo] Spent 0.296 ms allocating slab
[3104.126][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3104.126][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3110.128][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3110.128][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[3111.836][d][vd] Allocating new (host-cached) DR image...
[3112.861][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3112.862][d][vo/gpu-next/libplacebo] Spent 0.181 ms allocating slab
[3113.190][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3113.190][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3114.104][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3114.104][d][vo/gpu-next/libplacebo] Spent 0.801 ms allocating slab
[3114.362][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3114.362][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3118.503][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3118.503][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3119.067][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3119.068][d][vo/gpu-next/libplacebo] Spent 0.190 ms allocating slab
[3120.059][d][auto_save_state] saving state
[3120.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][i][cplayer] Saving state.
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3120.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3126.910][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3126.910][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3128.828][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3128.828][d][vo/gpu-next/libplacebo] Spent 0.693 ms allocating slab
[3132.848][v][cplayer] Change display sync audio drift: 0
[3132.848][v][cplayer] Compensation factor: 0.999659
[3132.848][v][auto_profiles] Re-evaluating auto profile video-sync
[3132.927][v][cplayer] Change display sync audio drift: 1
[3132.927][v][auto_profiles] Re-evaluating auto profile video-sync
[3133.484][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3133.484][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3135.418][d][vo/gpu-next/libplacebo] Allocating 1081344 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3135.419][d][vo/gpu-next/libplacebo] Spent 0.666 ms allocating slab
[3149.779][v][cplayer] Change display sync audio drift: 0
[3149.779][v][cplayer] Compensation factor: 0.997345
[3149.860][v][cplayer] Change display sync audio drift: 1
[3162.206][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1056K from pool 3
[3162.206][d][vo/gpu-next/libplacebo] Freeing slab of size 1056K
[3162.387][d][vo/gpu-next/libplacebo] Allocating 786432 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3162.388][d][vo/gpu-next/libplacebo] Spent 0.677 ms allocating slab
[3167.170][d][vo/gpu-next/libplacebo] Garbage collected slab of size  768K from pool 3
[3167.170][d][vo/gpu-next/libplacebo] Freeing slab of size  768K
[3167.483][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3167.483][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[3168.649][v][cplayer] Change display sync audio drift: 0
[3168.649][v][cplayer] Compensation factor: 1.002491
[3168.650][v][auto_profiles] Re-evaluating auto profile video-sync
[3168.695][v][cplayer] Change display sync audio drift: 1
[3168.695][v][auto_profiles] Re-evaluating auto profile video-sync
[3170.130][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3170.130][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3173.422][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3173.422][d][vo/gpu-next/libplacebo] Spent 0.208 ms allocating slab
[3175.660][v][cplayer] Change display sync audio drift: 0
[3175.660][v][cplayer] Compensation factor: 1.000076
[3175.660][v][auto_profiles] Re-evaluating auto profile video-sync
[3175.705][v][cplayer] Change display sync audio drift: 1
[3175.705][v][auto_profiles] Re-evaluating auto profile video-sync
[3180.059][d][auto_save_state] saving state
[3180.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][i][cplayer] Saving state.
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3180.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3184.207][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3184.208][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[3184.344][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3184.344][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3197.361][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3197.361][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3198.155][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3198.156][d][vo/gpu-next/libplacebo] Spent 0.217 ms allocating slab
[3202.228][v][cplayer] Change display sync audio drift: 0
[3202.228][v][cplayer] Compensation factor: 0.999965
[3202.228][v][auto_profiles] Re-evaluating auto profile video-sync
[3202.263][v][cplayer] Change display sync audio drift: 1
[3202.263][v][auto_profiles] Re-evaluating auto profile video-sync
[3202.440][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3202.440][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3202.552][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3202.552][d][vo/gpu-next/libplacebo] Spent 0.218 ms allocating slab
[3210.650][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3210.650][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3210.839][v][cplayer] Change display sync audio drift: 0
[3210.839][v][cplayer] Compensation factor: 0.998812
[3210.840][v][auto_profiles] Re-evaluating auto profile video-sync
[3210.878][v][cplayer] Change display sync audio drift: 1
[3210.878][v][auto_profiles] Re-evaluating auto profile video-sync
[3210.971][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3210.971][d][vo/gpu-next/libplacebo] Spent 0.231 ms allocating slab
[3213.832][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3213.832][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3215.747][v][cplayer] Change display sync audio drift: 0
[3215.747][v][cplayer] Compensation factor: 0.998382
[3215.780][v][cplayer] Change display sync audio drift: 1
[3216.641][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3216.642][d][vo/gpu-next/libplacebo] Spent 0.267 ms allocating slab
[3218.202][v][cplayer] Change display sync audio drift: 0
[3218.202][v][cplayer] Compensation factor: 0.999407
[3218.202][v][auto_profiles] Re-evaluating auto profile video-sync
[3218.260][v][cplayer] Change display sync audio drift: 1
[3218.260][v][auto_profiles] Re-evaluating auto profile video-sync
[3219.901][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3219.901][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3220.209][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3220.209][d][vo/gpu-next/libplacebo] Spent 0.181 ms allocating slab
[3220.413][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3220.413][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3221.181][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3221.181][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[3227.265][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3227.265][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3228.162][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3228.162][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[3240.059][d][auto_save_state] saving state
[3240.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3240.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.059][i][cplayer] Saving state.
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3240.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3247.150][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3247.150][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3247.471][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3247.471][d][vo/gpu-next/libplacebo] Spent 0.239 ms allocating slab
[3249.137][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3249.137][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3249.561][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3249.562][d][vo/gpu-next/libplacebo] Spent 0.690 ms allocating slab
[3253.285][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3253.285][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3254.557][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3254.557][d][vo/gpu-next/libplacebo] Spent 0.687 ms allocating slab
[3260.571][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3260.571][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3260.629][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3260.629][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[3262.161][v][cplayer] Change display sync audio drift: 0
[3262.161][v][cplayer] Compensation factor: 0.998163
[3262.241][v][cplayer] Change display sync audio drift: 1
[3266.519][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3266.519][d][vo/gpu-next/libplacebo] Spent 0.222 ms allocating slab
[3266.657][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3266.657][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3275.180][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3275.180][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3276.325][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3276.325][d][vo/gpu-next/libplacebo] Spent 0.678 ms allocating slab
[3278.050][v][cplayer] Change display sync audio drift: 0
[3278.050][v][cplayer] Compensation factor: 0.994661
[3278.138][v][cplayer] Change display sync audio drift: 1
[3280.151][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3280.151][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3280.530][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3280.530][d][vo/gpu-next/libplacebo] Spent 0.217 ms allocating slab
[3287.117][v][cplayer] Change display sync audio drift: 0
[3287.117][v][cplayer] Compensation factor: 0.999241
[3287.117][v][auto_profiles] Re-evaluating auto profile video-sync
[3287.180][v][cplayer] Change display sync audio drift: 1
[3287.180][v][auto_profiles] Re-evaluating auto profile video-sync
[3295.790][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3295.790][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3296.124][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3296.125][d][vo/gpu-next/libplacebo] Spent 0.206 ms allocating slab
[3298.644][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3298.645][d][vo/gpu-next/libplacebo] Spent 0.182 ms allocating slab
[3298.940][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3298.940][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3299.465][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3299.465][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3299.579][d][vo/gpu-next/libplacebo] Allocating 921600 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3299.579][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[3300.059][d][auto_save_state] saving state
[3300.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][i][cplayer] Saving state.
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3300.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3302.889][d][vo/gpu-next/libplacebo] Garbage collected slab of size  900K from pool 3
[3302.889][d][vo/gpu-next/libplacebo] Freeing slab of size  900K
[3304.063][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3304.064][d][vo/gpu-next/libplacebo] Spent 0.221 ms allocating slab
[3307.139][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3307.139][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3307.478][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3307.479][d][vo/gpu-next/libplacebo] Spent 0.194 ms allocating slab
[3312.166][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3312.166][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3312.689][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3312.689][d][vo/gpu-next/libplacebo] Spent 0.188 ms allocating slab
[3317.054][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3317.054][d][vo/gpu-next/libplacebo] Spent 0.705 ms allocating slab
[3317.202][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3317.202][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3319.641][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3319.642][d][vo/gpu-next/libplacebo] Spent 0.662 ms allocating slab
[3319.823][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3319.823][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3324.203][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3324.203][d][vo/gpu-next/libplacebo] Spent 0.717 ms allocating slab
[3324.386][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[3324.386][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[3325.932][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3325.932][d][vo/gpu-next/libplacebo] Spent 0.214 ms allocating slab
[3326.136][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3326.136][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3326.816][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3326.817][d][vo/gpu-next/libplacebo] Spent 0.674 ms allocating slab
[3327.000][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3327.000][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3327.955][v][cplayer] Change display sync audio drift: 0
[3327.955][v][cplayer] Compensation factor: 0.995425
[3328.006][v][cplayer] Change display sync audio drift: 1
[3332.282][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3332.282][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3332.473][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3332.474][d][vo/gpu-next/libplacebo] Spent 0.738 ms allocating slab
[3334.646][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3334.646][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3335.292][v][cplayer] Change display sync audio drift: 0
[3335.292][v][cplayer] Compensation factor: 0.996653
[3335.338][v][cplayer] Change display sync audio drift: 1
[3338.574][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3338.575][d][vo/gpu-next/libplacebo] Spent 0.647 ms allocating slab
[3339.969][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3339.969][d][vo/gpu-next/libplacebo] Spent 0.203 ms allocating slab
[3340.135][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3340.135][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3344.577][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3344.577][d][vo/gpu-next/libplacebo] Spent 0.632 ms allocating slab
[3344.719][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3344.719][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3351.192][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3351.192][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3353.774][d][vo/gpu-next/libplacebo] Allocating 1019904 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3353.775][d][vo/gpu-next/libplacebo] Spent 0.720 ms allocating slab
[3356.285][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3356.286][d][vo/gpu-next/libplacebo] Spent 0.699 ms allocating slab
[3356.470][d][vo/gpu-next/libplacebo] Garbage collected slab of size  996K from pool 3
[3356.470][d][vo/gpu-next/libplacebo] Freeing slab of size  996K
[3360.059][d][auto_save_state] saving state
[3360.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3360.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.059][i][cplayer] Saving state.
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3360.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3364.241][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[3364.241][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[3365.691][d][vo/gpu-next/libplacebo] Allocating 1081344 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3365.692][d][vo/gpu-next/libplacebo] Spent 0.749 ms allocating slab
[3369.187][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1056K from pool 3
[3369.187][d][vo/gpu-next/libplacebo] Freeing slab of size 1056K
[3370.235][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3370.235][d][vo/gpu-next/libplacebo] Spent 0.191 ms allocating slab
[3371.051][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3371.051][d][vo/gpu-next/libplacebo] Spent 0.241 ms allocating slab
[3371.229][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3371.229][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3374.222][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[3374.222][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[3376.063][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3376.064][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[3378.549][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3378.549][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3378.704][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3378.704][d][vo/gpu-next/libplacebo] Spent 0.193 ms allocating slab
[3387.790][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3387.791][d][vo/gpu-next/libplacebo] Spent 0.199 ms allocating slab
[3387.927][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3387.927][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3390.643][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3390.644][d][vo/gpu-next/libplacebo] Spent 0.683 ms allocating slab
[3390.752][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[3390.752][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[3394.340][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3394.340][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3394.386][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3394.386][d][vo/gpu-next/libplacebo] Spent 0.282 ms allocating slab
[3394.993][v][cplayer] Change display sync audio drift: 0
[3394.993][v][cplayer] Compensation factor: 0.999043
[3394.994][v][auto_profiles] Re-evaluating auto profile video-sync
[3395.102][v][cplayer] Change display sync audio drift: 1
[3395.102][v][auto_profiles] Re-evaluating auto profile video-sync
[3396.895][d][vo/gpu-next/libplacebo] (Re)creating 2048x362x0 texture with format r8: unknown
[3396.895][d][vo/gpu-next/libplacebo] Allocating 970752 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3396.896][d][vo/gpu-next/libplacebo] Spent 0.677 ms allocating slab
[3396.937][d][vo/gpu-next/libplacebo] (Re)creating 2048x362x0 texture with format r8: unknown
[3397.052][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3397.052][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3399.741][d][vo/gpu-next/libplacebo] Allocating 1081344 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3399.742][d][vo/gpu-next/libplacebo] Spent 0.658 ms allocating slab
[3399.970][d][vo/gpu-next/libplacebo] Garbage collected slab of size  948K from pool 3
[3399.970][d][vo/gpu-next/libplacebo] Freeing slab of size  948K
[3411.254][v][cplayer] Change display sync audio drift: 0
[3411.254][v][cplayer] Compensation factor: 0.997948
[3411.300][v][cplayer] Change display sync audio drift: 1
[3419.120][d][vo/gpu-next/libplacebo] Allocating 1523712 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3419.120][d][vo/gpu-next/libplacebo] Spent 0.281 ms allocating slab
[3419.268][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1056K from pool 3
[3419.268][d][vo/gpu-next/libplacebo] Freeing slab of size 1056K
[3420.059][d][auto_save_state] saving state
[3420.060][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3420.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.060][i][cplayer] Saving state.
[3420.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.062][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.062][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.062][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3420.062][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3422.693][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3422.693][d][vo/gpu-next/libplacebo] Spent 0.189 ms allocating slab
[3422.918][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3422.918][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3423.935][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1488K from pool 3
[3423.935][d][vo/gpu-next/libplacebo] Freeing slab of size 1488K
[3425.147][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3425.148][d][vo/gpu-next/libplacebo] Spent 0.648 ms allocating slab
[3427.921][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3427.921][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3428.377][v][cplayer] Change display sync audio drift: 0
[3428.377][v][cplayer] Compensation factor: 1.000194
[3428.378][v][auto_profiles] Re-evaluating auto profile video-sync
[3428.459][v][cplayer] Change display sync audio drift: 1
[3428.459][v][auto_profiles] Re-evaluating auto profile video-sync
[3431.050][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3431.051][d][vo/gpu-next/libplacebo] Spent 0.670 ms allocating slab
[3433.227][d][vo/gpu-next/libplacebo] Allocating 1069056 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3433.227][d][vo/gpu-next/libplacebo] Spent 0.212 ms allocating slab
[3433.375][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3433.375][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3440.773][v][cplayer] Change display sync audio drift: 0
[3440.773][v][cplayer] Compensation factor: 1.000228
[3440.774][v][auto_profiles] Re-evaluating auto profile video-sync
[3440.813][v][cplayer] Change display sync audio drift: 1
[3440.813][v][auto_profiles] Re-evaluating auto profile video-sync
[3441.801][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1044K from pool 3
[3441.801][d][vo/gpu-next/libplacebo] Freeing slab of size 1044K
[3444.736][v][cplayer] Change display sync audio drift: 0
[3444.736][v][cplayer] Compensation factor: 0.996964
[3444.814][v][cplayer] Change display sync audio drift: 1
[3446.260][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3446.260][d][vo/gpu-next/libplacebo] Spent 0.211 ms allocating slab
[3453.871][v][cplayer] Change display sync audio drift: 0
[3453.871][v][cplayer] Compensation factor: 0.997875
[3453.951][v][cplayer] Change display sync audio drift: 1
[3455.886][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3455.886][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3456.078][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3456.078][d][vo/gpu-next/libplacebo] Spent 0.236 ms allocating slab
[3458.380][v][cplayer] Change display sync audio drift: 0
[3458.380][v][cplayer] Compensation factor: 1.000487
[3458.380][v][auto_profiles] Re-evaluating auto profile video-sync
[3458.415][v][cplayer] Change display sync audio drift: 1
[3458.415][v][auto_profiles] Re-evaluating auto profile video-sync
[3467.101][v][cplayer] Change display sync audio drift: 0
[3467.101][v][cplayer] Compensation factor: 0.998775
[3467.103][v][auto_profiles] Re-evaluating auto profile video-sync
[3467.139][v][cplayer] Change display sync audio drift: 1
[3467.139][v][auto_profiles] Re-evaluating auto profile video-sync
[3469.088][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3469.088][d][vo/gpu-next/libplacebo] Spent 0.188 ms allocating slab
[3469.248][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[3469.248][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[3474.298][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3474.298][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3474.780][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3474.781][d][vo/gpu-next/libplacebo] Spent 0.690 ms allocating slab
[3475.583][v][cplayer] Change display sync audio drift: 0
[3475.583][v][cplayer] Compensation factor: 0.997306
[3475.617][v][cplayer] Change display sync audio drift: 1
[3477.082][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3477.082][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3478.530][v][cplayer] Change display sync audio drift: 0
[3478.530][v][cplayer] Compensation factor: 0.997503
[3478.606][v][cplayer] Change display sync audio drift: 1
[3479.186][v][cplayer] Change display sync audio drift: 0
[3479.186][v][cplayer] Compensation factor: 0.999688
[3479.186][v][auto_profiles] Re-evaluating auto profile video-sync
[3479.226][v][cplayer] Change display sync audio drift: 1
[3479.227][v][auto_profiles] Re-evaluating auto profile video-sync
[3480.059][d][auto_save_state] saving state
[3480.060][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3480.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][i][cplayer] Saving state.
[3480.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3480.309][v][cplayer] Change display sync audio drift: 0
[3480.309][v][cplayer] Compensation factor: 0.997351
[3480.399][v][cplayer] Change display sync audio drift: 1
[3488.342][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3488.343][d][vo/gpu-next/libplacebo] Spent 0.660 ms allocating slab
[3489.839][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3489.839][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3490.072][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3490.073][d][vo/gpu-next/libplacebo] Spent 0.690 ms allocating slab
[3492.956][v][cplayer] Change display sync audio drift: 0
[3492.956][v][cplayer] Compensation factor: 0.994407
[3493.006][v][cplayer] Change display sync audio drift: 1
[3500.354][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3500.354][d][vo/gpu-next/libplacebo] Spent 0.199 ms allocating slab
[3500.558][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3500.558][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3503.663][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3503.663][d][vo/gpu-next/libplacebo] Spent 0.220 ms allocating slab
[3503.867][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3503.867][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3504.217][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[3504.217][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[3521.600][v][cplayer] Change display sync audio drift: 0
[3521.600][v][cplayer] Compensation factor: 0.996294
[3521.659][v][cplayer] Change display sync audio drift: 1
[3540.059][d][auto_save_state] saving state
[3540.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3540.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.059][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.059][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.059][i][cplayer] Saving state.
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3540.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3541.392][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3541.392][d][vo/gpu-next/libplacebo] Spent 0.273 ms allocating slab
[3548.154][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3548.154][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3550.768][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3550.768][d][vo/gpu-next/libplacebo] Spent 0.209 ms allocating slab
[3553.323][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3553.324][d][vo/gpu-next/libplacebo] Spent 0.705 ms allocating slab
[3553.545][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3553.545][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3557.735][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3557.735][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3557.829][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3557.829][d][vo/gpu-next/libplacebo] Spent 0.705 ms allocating slab
[3559.912][v][cplayer] Change display sync audio drift: 0
[3559.912][v][cplayer] Compensation factor: 0.999664
[3559.912][v][auto_profiles] Re-evaluating auto profile video-sync
[3560.002][v][cplayer] Change display sync audio drift: 1
[3560.003][v][auto_profiles] Re-evaluating auto profile video-sync
[3564.016][d][vo/gpu-next/libplacebo] Allocating 1056768 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3564.017][d][vo/gpu-next/libplacebo] Spent 0.762 ms allocating slab
[3564.216][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3564.216][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3570.411][v][cplayer] Change display sync audio drift: 0
[3570.411][v][cplayer] Compensation factor: 0.997142
[3570.498][v][cplayer] Change display sync audio drift: 1
[3572.318][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1032K from pool 3
[3572.318][d][vo/gpu-next/libplacebo] Freeing slab of size 1032K
[3572.403][d][vo/gpu-next/libplacebo] Allocating 516096 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3572.404][d][vo/gpu-next/libplacebo] Spent 0.688 ms allocating slab
[3575.212][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3575.212][d][vo/gpu-next/libplacebo] Spent 0.205 ms allocating slab
[3575.395][d][vo/gpu-next/libplacebo] Garbage collected slab of size  504K from pool 3
[3575.395][d][vo/gpu-next/libplacebo] Freeing slab of size  504K
[3585.178][d][vo/gpu-next/libplacebo] Allocating 1032192 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3585.179][d][vo/gpu-next/libplacebo] Spent 0.952 ms allocating slab
[3585.364][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3585.364][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
[3587.047][v][cplayer] Change display sync audio drift: 0
[3587.047][v][cplayer] Compensation factor: 0.997908
[3587.147][v][cplayer] Change display sync audio drift: 1
[3595.330][v][cplayer] Change display sync audio drift: 0
[3595.330][v][cplayer] Compensation factor: 0.999524
[3595.330][v][auto_profiles] Re-evaluating auto profile video-sync
[3595.364][v][cplayer] Change display sync audio drift: 1
[3595.365][v][auto_profiles] Re-evaluating auto profile video-sync
[3596.962][d][vo/gpu-next/libplacebo] Allocating 1081344 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3596.963][d][vo/gpu-next/libplacebo] Spent 0.224 ms allocating slab
[3597.144][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1008K from pool 3
[3597.144][d][vo/gpu-next/libplacebo] Freeing slab of size 1008K
[3600.059][d][auto_save_state] saving state
[3600.059][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][i][cplayer] Saving state.
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3600.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3615.968][d][vo/gpu-next/libplacebo] Garbage collected slab of size 1056K from pool 3
[3615.968][d][vo/gpu-next/libplacebo] Freeing slab of size 1056K
[3617.468][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3617.468][d][vo/gpu-next/libplacebo] Spent 0.258 ms allocating slab
[3617.637][v][cplayer] Change display sync audio drift: 0
[3617.637][v][cplayer] Compensation factor: 1.000814
[3617.637][v][auto_profiles] Re-evaluating auto profile video-sync
[3617.675][v][cplayer] Change display sync audio drift: 1
[3617.676][v][auto_profiles] Re-evaluating auto profile video-sync
[3622.412][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3622.412][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3626.911][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3626.912][d][vo/gpu-next/libplacebo] Spent 0.691 ms allocating slab
[3634.448][d][vo/gpu-next/libplacebo] Allocating 258048 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:1173
[3634.448][d][vo/gpu-next/libplacebo] Spent 0.263 ms allocating slab
[3634.654][d][vo/gpu-next/libplacebo] Garbage collected slab of size  252K from pool 2
[3634.654][d][vo/gpu-next/libplacebo] Freeing slab of size  252K
[3650.481][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3650.481][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3650.635][d][vo/gpu-next/libplacebo] Allocating 479232 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3650.636][d][vo/gpu-next/libplacebo] Spent 0.908 ms allocating slab
[3660.060][d][auto_save_state] saving state
[3660.060][d][cplayer] Run command: write-watch-later-config, flags=73, args=[]
[3660.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][i][cplayer] Saving state.
[3660.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.060][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] config path: 'cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3660.061][d][global] user path: '~~/cache/watch_later' -> '/home/zen/.config/mpv/cache/watch_later'
[3670.649][v][cplayer] Change display sync audio drift: 0
[3670.649][v][cplayer] Compensation factor: 0.995806
[3670.748][v][cplayer] Change display sync audio drift: 1
[3671.034][d][vo/gpu-next/libplacebo] Allocating 528384 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3671.035][d][vo/gpu-next/libplacebo] Spent 0.668 ms allocating slab
[3671.218][d][vo/gpu-next/libplacebo] Garbage collected slab of size  468K from pool 3
[3671.218][d][vo/gpu-next/libplacebo] Freeing slab of size  468K
[3672.699][d][vo/gpu-next/libplacebo] Garbage collected slab of size  516K from pool 3
[3672.699][d][vo/gpu-next/libplacebo] Freeing slab of size  516K
[3673.872][d][vo/gpu-next/libplacebo] Allocating 958464 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3673.872][d][vo/gpu-next/libplacebo] Spent 0.657 ms allocating slab
[3679.807][d][vo/gpu-next/libplacebo] Garbage collected slab of size  936K from pool 3
[3679.807][d][vo/gpu-next/libplacebo] Freeing slab of size  936K
[3680.688][d][vo/gpu-next/libplacebo] Allocating 540672 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3680.689][d][vo/gpu-next/libplacebo] Spent 0.724 ms allocating slab
[3683.211][d][vo/gpu-next/libplacebo] Garbage collected slab of size  528K from pool 3
[3683.211][d][vo/gpu-next/libplacebo] Freeing slab of size  528K
[3683.417][d][vo/gpu-next/libplacebo] Allocating 933888 memory of type 0x7 (id 5) in heap 2: ../src/gpu/utils.c:575
[3683.417][d][vo/gpu-next/libplacebo] Spent 0.656 ms allocating slab
[3687.702][d][vo/gpu-next/libplacebo] Garbage collected slab of size  912K from pool 3
[3687.702][d][vo/gpu-next/libplacebo] Freeing slab of size  912K
